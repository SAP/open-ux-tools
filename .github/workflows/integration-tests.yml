name: Integration Tests

on:
    workflow_run:
        workflows: ["CI/CD Pipeline"]
    # workflow_call:
    #     # workflows: ["CI/CD Pipeline"]
    #     secrets:
    #         personal_access_token:
    #             required: true
        
jobs:
    playwright-tests:
        # if: github.repository == 'SAP/open-ux-tools' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        strategy:
            fail-fast: false
            matrix:
                ui5-version: ['1.135.0', '1.134.1', '1.133.1', '1.130.10', '1.120.29', '1.108.42', '1.96.40', '1.84.53', '1.71.75']
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - name: Checkout code repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  run_install: true
            - name: Cache pnpm modules
              uses: actions/cache@v4
              env:
                  cache-name: cache-pnpm-modules
              with:
                  path: ~/.pnpm-store
                  key: ubuntu-latest-build-${{ env.cache-name }}-20.x-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ubuntu-latest-build-build-${{ env.cache-name }}-20.x-
            - name: Use Node.js 20.x
              uses: actions/setup-node@v4
              with:
                  node-version: 20.x
            - name: Install pnpm modules
              run: pnpm install
            - name: Run build
              run: pnpm run build
              env:
                NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
            - name: Cache playwright browsers
              id: cache-playwright-browsers
              uses: actions/cache@v4
              with:
                path: |
                    ~/.cache/ms-playwright
                key: playwright-browsers-os-ubuntu-latest-build-node-version-20.x
            - name: Install playwright chrome browsers
              if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
              run: npx playwright install chrome
            # TODO: cache results using nx
            - name: Run playwright tests
              run: cd packages/preview-middleware && pnpm exec playwright test --project=${{ matrix.ui5-version }} --reporter=blob
              env:
                NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
            - name: Upload blob report to GitHub Actions Artifacts
              if: ${{ !cancelled() }}
              uses: actions/upload-artifact@v4
              with:
                
                name: blob-report-${{ matrix.ui5-version }}
                path: packages/preview-middleware/blob-report
                retention-days: 1