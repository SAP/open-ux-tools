{
    "env": {
        "node": true,
        "es6": true
    },
    "plugins": ["promise", "prettier", "jsdoc", "@typescript-eslint", "import"],
    "extends": ["plugin:jsdoc/recommended"],
    "overrides": [
        {
            "parser": "@typescript-eslint/parser",
            "files": ["**/*.ts"],
            "extends": ["plugin:@typescript-eslint/recommended"],
            "rules": {
                "@typescript-eslint/ban-types": "off",
                "@typescript-eslint/no-explicit-any": "off",
                "@typescript-eslint/no-inferrable-types": "off",
                "@typescript-eslint/no-unused-vars": [
                    "error",
                    { "varsIgnorePattern": "^_", "argsIgnorePattern": "^_" }
                ],
                "jsdoc/require-param-type": 0,
                "jsdoc/require-returns-type": 0,
                "prefer-const": [
                    "error",
                    {
                        "destructuring": "all"
                    }
                ]
            },
            "settings": {
                "jsdoc": {
                    "mode": "typescript"
                }
            }
        },
        {
            "parser": "@typescript-eslint/parser",
            "files": ["packages/*/test/**/*.js", "packages/*/test/**/*.ts"],
            "rules": {
                "jsdoc/require-param": 0,
                "jsdoc/require-param-description": 0,
                "jsdoc/require-param-name": 0,
                "jsdoc/require-param-type": 0,
                "jsdoc/require-returns": 0,
                "jsdoc/require-returns-check": 0,
                "jsdoc/require-returns-description": 0,
                "jsdoc/require-returns-type": 0,
                "jsdoc/require-jsdoc": [
                    0,
                    {
                        "require": {
                            "ClassDeclaration": true,
                            "MethodDefinition": true
                        },
                        "exemptEmptyFunctions": true
                    }
                ],
                "jsdoc/valid-types": 0,
                "jsdoc/check-types": 0,
                "jsdoc/check-tag-names": 0,
                "jsdoc/match-description": 0,
                "promise/param-names": 0,
                "promise/catch-or-return": 0,
                "@typescript-eslint/no-unused-vars": "off"
            }
        }
    ],
    "rules": {
        "comma-dangle": [2, "never"],
        "jsdoc/require-param": 2,
        "jsdoc/require-param-description": 1,
        "jsdoc/require-param-name": 2,
        "jsdoc/require-param-type": 1,
        "jsdoc/require-returns": 2,
        "jsdoc/require-returns-check": 2,
        "jsdoc/require-returns-description": 1,
        "jsdoc/require-returns-type": 2,
        "jsdoc/require-jsdoc": [
            1,
            {
                "require": {
                    "ClassDeclaration": true,
                    "MethodDefinition": true
                },
                "exemptEmptyFunctions": true
            }
        ],
        "jsdoc/valid-types": 2,
        "jsdoc/check-types": 2,
        "jsdoc/check-param-names": 2,
        "jsdoc/check-tag-names": [
            "error",
            {
                "definedTags": ["ui5-restricted", "experimental", "final"]
            }
        ],
        "jsdoc/match-description": 2,
        "promise/always-return": "off",
        "promise/no-return-wrap": "off",
        "promise/param-names": "error",
        "promise/catch-or-return": "error",
        "promise/no-native": "off",
        "promise/no-nesting": "warn",
        "promise/no-promise-in-callback": "warn",
        "promise/no-callback-in-promise": "warn",
        "promise/avoid-new": "off",
        "promise/no-new-statics": "error",
        "promise/no-return-in-finally": "warn",
        "promise/valid-params": "warn",
        "no-cond-assign": 2,
        "no-console": 1,
        "no-constant-condition": 2,
        "no-control-regex": 2,
        "no-debugger": 2,
        "no-dupe-args": 2,
        "no-dupe-keys": 2,
        "no-duplicate-case": 2,
        "no-empty-character-class": 2,
        "no-empty": 2,
        "no-ex-assign": 2,
        "no-extra-boolean-cast": 1,
        "no-extra-parens": [2, "functions"],
        "no-extra-semi": 2,
        "no-func-assign": 2,
        "no-inner-declarations": [2, "functions"],
        "no-invalid-regexp": 2,
        "no-irregular-whitespace": 2,
        "no-negated-in-lhs": 2,
        "no-obj-calls": 2,
        "no-regex-spaces": 2,
        "no-sparse-arrays": 2,
        "no-unreachable": 2,
        "use-isnan": 2,
        "valid-typeof": 2,
        "accessor-pairs": 2,
        "block-scoped-var": 1,
        "consistent-return": 1,
        "curly": [2, "all"],
        "default-case": 1,
        "no-alert": 2,
        "no-caller": 2,
        "no-div-regex": 2,
        "no-eval": 2,
        "no-extend-native": 2,
        "no-extra-bind": 2,
        "no-fallthrough": 2,
        "no-floating-decimal": 2,
        "no-implied-eval": 2,
        "no-iterator": 2,
        "no-labels": 2,
        "no-lone-blocks": 2,
        "no-loop-func": 2,
        "no-native-reassign": 2,
        "no-new-func": 2,
        "no-new-wrappers": 1,
        "no-new": 1,
        "no-octal-escape": 2,
        "no-octal": 2,
        "no-proto": 2,
        "no-redeclare": 1,
        "no-return-assign": 2,
        "no-script-url": 2,
        "no-self-compare": 2,
        "no-sequences": 2,
        "no-unused-expressions": 1,
        "no-void": 2,
        "no-warning-comments": 1,
        "no-with": 2,
        "radix": 2,
        "wrap-iife": [2, "any"],
        "yoda": 2,
        "strict": [2, "function"],
        "no-catch-shadow": 2,
        "no-delete-var": 2,
        "no-label-var": 2,
        "no-shadow-restricted-names": 2,
        "no-undef-init": 2,
        "no-undef": 2,
        "no-unused-vars": [
            2,
            {
                "vars": "all",
                "args": "none"
            }
        ],
        "no-use-before-define": [1, "nofunc"],
        "brace-style": [
            2,
            "1tbs",
            {
                "allowSingleLine": true
            }
        ],
        "camelcase": 1,
        "consistent-this": [1, "that"],
        "max-nested-callbacks": [1, 3],
        "new-cap": 1,
        "new-parens": 2,
        "no-array-constructor": 2,
        "no-lonely-if": 1,
        "no-mixed-spaces-and-tabs": [2, "smart-tabs"],
        "no-nested-ternary": 2,
        "no-new-object": 2,
        "no-spaced-func": 2,
        "quote-props": [
            2,
            "as-needed",
            {
                "keywords": true,
                "unnecessary": false
            }
        ],
        "semi-spacing": [
            1,
            {
                "before": false,
                "after": true
            }
        ],
        "semi": 2,
        "keyword-spacing": [
            2,
            {
                "after": true
            }
        ],
        "space-before-function-paren": [
            2,
            {
                "anonymous": "never",
                "named": "never",
                "asyncArrow": "always"
            }
        ],
        "space-infix-ops": 2,
        "space-unary-ops": [
            2,
            {
                "words": true,
                "nonwords": false
            }
        ],
        //		"sap-no-jquery": 2
        // turn on errors for missing imports
        "import/no-unresolved": "error"
    },
    "settings": {
        "jsdoc": {
            "tagNamePreference": {
                "augments": {
                    "message": "@extends is to be used over @augments as it is more evocative of classes than @augments",
                    "replacement": "extends"
                }
            }
        },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true, // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
                "project": ["./packages/*/tsconfig.json", "./tsconfig.json"]
            }
        }
    }
}
