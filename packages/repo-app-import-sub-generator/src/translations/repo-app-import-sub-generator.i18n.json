{
    "error": {
        "telemetry": "Failed to send telemetry data after downloading the application from the SAPUI5 ABAP Repository. {{- error}}",
        "qfaJsonNotFound": "{{- jsonFileName }} not found in the downloaded application. Check the file exists.",
        "replaceWebappFilesError": "An error occurred when replacing files in the downloaded application: {{- error}}",
        "requiredFieldsMissing": "Required fields are missing for the {{- app }} application. Check if the application is deployed correctly.",
        "applicationListFetchError": "An error occurred when fetching the application list: {{- error}}",
        "metadataFetchError": "An error occurred when fetching metadata: {{- error}}",
        "appConfigGenError": "An occurred when generating the application configuration: {{- error}}",
        "endPhase": "An error occurred in the end phase: {{- error}}",
        "errorProcessingJsonFile": "An error occurred when processing the JSON file: {{- error}}. Check the file is valid.",
        "noAppsDeployed": "No applications deployed to this system can be downloaded.",
        "validationErrors": {
            "invalidMetadataPackage": "Invalid or missing package in the metadata. Check the metadata.",
            "invalidServiceName": "Invalid or missing `serviceName` in `serviceBindingDetails`. Check the `serviceName`.",
            "invalidServiceVersion": "Invalid or missing `serviceVersion` in `serviceBindingDetails`. Check the `serviceVersion`.",
            "invalidMainEntityName": "Invalid or missing `mainEntityName` in `serviceBindingDetails`. Check the `mainEntityName`.",
            "invalidModuleName": "Invalid or missing `moduleName` in serviceBindingDetails. Check the `moduleName`.",
            "invalidRepositoryName": "Invalid or missing `repositoryName` in `serviceBindingDetails`. Check the `repositoryName`."
        },
        "installationErrors": {
            "npmInstall": "An error occurred in the install phase: {{- error}}",
            "skippedInstallation": "`--skipInstall` option was specified. Installation of dependencies will be skipped."
        },
        "appDownloadErrors": {
            "downloadedFileNotBufferError": "Error: The downloaded file is not a buffer. Check the file.",
            "appDownloadFailure": "An error occurred when downloading the application: {{- error}}.",
            "zipExtractionError": "An error occurred when extracting the zip file: {{- error}}"
        },
        "eventHookErrors": {
            "vscodeInstanceMissing": "Error: Missing VS Code instance in event hook.",
            "postGenCommandMissing": "Error: Missing `postGenCommand` in event hook.",
            "commandExecutionFailed": "Error executing `postGenCommand` in event hook: {{- error}}"
        },
        "readManifestErrors": {
            "manifestFileNotFound": "Error: `manifest.json` file not found in the downloaded application. Check the file exists.",
            "readManifestFailed": "Error: Failed to read the `manifest.json` file. Check the file is valid.",
            "sapAppNotDefined": "Error: `sap.app` not defined in the `manifest.json` file. Check `sap.app` is defined.",
            "sourceTemplateNotSupported": "Error: Source template not supported. Use a supported template.",
            "invalidManifestStructureError": "Invalid `manifest.json file` structure: `sap.ui5` or `sap.app` are missing. Check they exist."
        },
        "quickDeployedAppDownloadErrors": {
            "noAppsFound": "No application with id {{ appId }} found in the system. Please check if the application is deployed correctly or select another app"
        }
    },
    "warn": {
        "extractedFileNotFound": "Extracted file not found - {{- extractedFilePath}}."
    },
    "prompts": {
        "appSelection": {
            "message": "Application",
            "hint": "Select the application to download.",
            "breadcrumb": "Application"
        },
        "targetPath": {
            "message": "Project Folder Path",
            "breadcrumb": "Project Path"
        }
    },
    "readMe": {
        "appDescription": "This application was converted from an SAP Fiori application that was deployed from ADT using the ADT Quick Fiori Application generator.",
        "launchText": "To launch the generated application, run the following command from the generated app root folder:\n\n```\n    npm start\n```"
    },
    "info": {
        "repoAppDownloadCompleteMsg": "The selected application has been downloaded and updated to support SAP Fiori tools."
    }
}
