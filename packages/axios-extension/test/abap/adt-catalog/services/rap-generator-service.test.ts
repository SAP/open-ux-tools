import { RapGeneratorService } from '../../../../src';

describe('RapGeneratorService', () => {
    let service: RapGeneratorService;
    const expectedGeneratorConfig = {
        'category': {
            'term': 'ABAP RESTful Application Programming Model',
            'label': 'Services of ABAP RESTful Application Programming Model (RAP).'
        },
        'content': { 'type': 'application/vnd.sap.adt.repository.generator.v1+json', 'src': 'published-x-ui-service' },
        'id': 'published-x-ui-service',
        'link': [
            {
                'href': '/sap/bc/adt/rap/generators/webapi/published-x-ui-service/preview',
                'rel': 'http://www.sap.com/adt/repository/generator/preview',
                'type': 'application/vnd.sap.adt.repository.objects.massoperation.v1+xml'
            },
            {
                'href': '/sap/bc/adt/rap/generators/webapi/published-x-ui-service',
                'rel': 'http://www.sap.com/adt/repository/generator',
                'type': 'application/vnd.sap.adt.repository.generator.v1+json'
            }
        ],
        'published': '2024-06-13T00:00:00Z',
        'summary': 'An OData UI service makes it possible to consume a RAP service with a Fiori Elements UI',
        'title': 'API OData UI Service From Scratch',
        'updated': '2024-06-13T00:00:00Z',
        'referencedObjectTypes': ''
    };

    beforeEach(() => {
        service = new RapGeneratorService({} as any);
    });

    afterEach(() => {
        jest.restoreAllMocks();
    });

    test('should return the generator entry when published-x-ui-service exists (array)', async () => {
        const responseDataXml = `<?xml version="1.0" encoding="utf-8"?>
            <atom:feed xmlns:atom="http://www.w3.org/2005/Atom">
                <atom:entry referencedObjectTypes="">
                    <atom:category term="Sample Generator" label="All generators generated by the example generator are assigned to this category by default"/>
                    <atom:content type="application/vnd.sap.adt.repository.generator.v1+json" src="example-web-api-gen"/>
                    <atom:id>example-web-api-gen</atom:id>
                    <atom:link href="/sap/bc/adt/examplewebapigenerator/webapi/example-web-api-gen" rel="http://www.sap.com/adt/repository/generator" type="application/vnd.sap.adt.repository.generator.v1+json"/>
                    <atom:published>2025-01-08T08:00:00Z</atom:published>
                    <atom:summary>A generator to showcase WebAPI generator aspects</atom:summary>
                    <atom:title>Example Web API Generator</atom:title>
                    <atom:updated>2025-01-29T00:00:00Z</atom:updated>
                </atom:entry>
                <atom:entry referencedObjectTypes="">
                    <atom:category term="ABAP RESTful Application Programming Model" label="Services of ABAP RESTful Application Programming Model (RAP)."/>
                    <atom:content type="application/vnd.sap.adt.repository.generator.v1+json" src="published-x-ui-service"/>
                    <atom:id>published-x-ui-service</atom:id>
                    <atom:link href="/sap/bc/adt/rap/generators/webapi/published-x-ui-service/preview" rel="http://www.sap.com/adt/repository/generator/preview" type="application/vnd.sap.adt.repository.objects.massoperation.v1+xml"/>
                    <atom:link href="/sap/bc/adt/rap/generators/webapi/published-x-ui-service" rel="http://www.sap.com/adt/repository/generator" type="application/vnd.sap.adt.repository.generator.v1+json"/>
                    <atom:published>2024-06-13T00:00:00Z</atom:published>
                    <atom:summary> An OData UI service makes it possible to consume a RAP service with a Fiori Elements UI</atom:summary>
                    <atom:title>API OData UI Service From Scratch</atom:title>
                    <atom:updated>2024-06-13T00:00:00Z</atom:updated>
                </atom:entry>
            </atom:feed>
        `;
        jest.spyOn(service, 'get').mockResolvedValue({ data: responseDataXml } as any);
        const result = await service.getRAPGeneratorConfig();
        expect(result).toEqual(expectedGeneratorConfig);
    });

    test('should throw error when published-x-ui-service does not exist', async () => {
        const responseDataXml = `<?xml version="1.0" encoding="utf-8"?>
            <atom:feed xmlns:atom="http://www.w3.org/2005/Atom">
                <atom:entry referencedObjectTypes="">
                    <atom:category term="Sample Generator" label="All generators generated by the example generator are assigned to this category by default"/>
                    <atom:content type="application/vnd.sap.adt.repository.generator.v1+json" src="example-web-api-gen"/>
                    <atom:id>example-web-api-gen</atom:id>
                    <atom:link href="/sap/bc/adt/examplewebapigenerator/webapi/example-web-api-gen" rel="http://www.sap.com/adt/repository/generator" type="application/vnd.sap.adt.repository.generator.v1+json"/>
                    <atom:published>2025-01-08T08:00:00Z</atom:published>
                    <atom:summary>A generator to showcase WebAPI generator aspects</atom:summary>
                    <atom:title>Example Web API Generator</atom:title>
                    <atom:updated>2025-01-29T00:00:00Z</atom:updated>
                </atom:entry>
            </atom:feed>
        `;
        jest.spyOn(service, 'get').mockResolvedValue({ data: responseDataXml } as any);
        await expect(service.getRAPGeneratorConfig()).rejects.toThrow('OData Service Generator not found');
    });
});
