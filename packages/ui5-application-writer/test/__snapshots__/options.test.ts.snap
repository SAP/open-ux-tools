// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UI5 templates generates options: \`codeAssist, eslint, sapux\` 1`] = `
Object {
  ".eslintrc": Object {
    "contents": "{
  \\"root\\": true,
  \\"plugins\\": [
    \\"@sap/ui5-jsdocs\\"
  ],
  \\"extends\\": \\"plugin:@sap-ux/eslint-plugin-fiori-tools/defaultJS\\"
}
",
    "state": "modified",
  },
  ".gitignore": Object {
    "contents": "node_modules/
dist/
.scp/
.env
Makefile*.mta
mta_archives
mta-*
resources
archive.zip
.*_mta_build_tmp",
    "state": "modified",
  },
  "package.json": Object {
    "contents": "{
  \\"name\\": \\"testpackagename\\",
  \\"version\\": \\"0.0.1\\",
  \\"private\\": true,
  \\"description\\": \\"Test App Description\\",
  \\"keywords\\": [
    \\"ui5\\",
    \\"openui5\\",
    \\"sapui5\\"
  ],
  \\"main\\": \\"webapp/index.html\\",
  \\"dependencies\\": {},
  \\"devDependencies\\": {
    \\"@ui5/cli\\": \\"^3.0.0\\",
    \\"@sap/ux-ui5-tooling\\": \\"1\\",
    \\"@sap/ux-specification\\": \\"latest\\",
    \\"eslint\\": \\"7.32.0\\",
    \\"@sap/eslint-plugin-ui5-jsdocs\\": \\"2.0.5\\",
    \\"@sapui5/ts-types\\": \\"1.71.15\\",
    \\"@sap-ux/eslint-plugin-fiori-tools\\": \\"^0.1.0\\",
    \\"eslint-plugin-fiori-custom\\": \\"2.6.7\\",
    \\"@babel/eslint-parser\\": \\"7.14.7\\"
  },
  \\"scripts\\": {
    \\"start\\": \\"ui5 serve --config=ui5.yaml --open index.html\\",
    \\"start-local\\": \\"ui5 serve --config=ui5-local.yaml --open index.html\\",
    \\"build\\": \\"ui5 build --config=ui5.yaml --clean-dest --dest dist\\",
    \\"lint\\": \\"eslint ./\\"
  },
  \\"sapux\\": true
}
",
    "state": "modified",
  },
  "tsconfig.json": Object {
    "contents": "{
    \\"compilerOptions\\": {
        \\"module\\": \\"none\\",
        \\"noEmit\\": true,
        \\"checkJs\\": true,
        \\"allowJs\\": true,
        \\"types\\": [
            \\"@sapui5/ts-types\\"
        ]
    }
}",
    "state": "modified",
  },
  "ui5-local.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.6\\"
metadata:
  name: app.with.namespace
type: application
framework:
  name: SAPUI5
  version: 1.95.0
  libraries:
    - name: sap.m
    - name: sap.ui.core
    - name: themelib_sap_fiori_3
server:
  customMiddleware:
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
",
    "state": "modified",
  },
  "ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.6\\"
metadata:
  name: app.with.namespace
type: application
server:
  customMiddleware:
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        ui5:
          path:
            - /resources
            - /test-resources
          url: https://ui5.sap.com
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
",
    "state": "modified",
  },
  "webapp/Component.js": Object {
    "contents": "sap.ui.define(
    [\\"sap/ui/core/UIComponent\\"],
    function (UIComponent) {
        \\"use strict\\";

        return UIComponent.extend(\\"app.with.namespace.Component\\", {
            metadata: {
                manifest: \\"json\\"
            },

            /**
             * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.
             * @public
             * @override
             */
            init: function () {
                // call the base component's init function
                UIComponent.prototype.init.apply(this, arguments);

                // enable routing
                this.getRouter().initialize();
            }
        });
    }
);",
    "state": "modified",
  },
  "webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for app.with.namespace

#Texts for manifest.json

#XTIT: Application name
appTitle=Test App Title

#YDES: Application description
appDescription=Test App Description",
    "state": "modified",
  },
  "webapp/index.html": Object {
    "contents": "<!DOCTYPE html>
<html lang=\\"en\\">
<head>
    <meta charset=\\"UTF-8\\">
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">
    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
    <title>Test App Title</title>
    <style>
        html, body, body > div, #container, #container-uiarea {
            height: 100%;
        }
    </style>
    <script
        id=\\"sap-ui-bootstrap\\"
        src=\\"resources/sap-ui-core.js\\"
        data-sap-ui-theme=\\"sap_fiori_3\\"
        data-sap-ui-resourceroots='{
            \\"app.with.namespace\\": \\"./\\"
        }'
        data-sap-ui-oninit=\\"module:sap/ui/core/ComponentSupport\\"
        data-sap-ui-compatVersion=\\"edge\\"
        data-sap-ui-async=\\"true\\"
        data-sap-ui-frameOptions=\\"trusted\\"
    ></script>
</head>
<body class=\\"sapUiBody sapUiSizeCompact\\" id=\\"content\\">
    <div
        data-sap-ui-component
        data-name=\\"app.with.namespace\\"
        data-id=\\"container\\"
        data-settings='{\\"id\\" : \\"app.with.namespace\\"}'
        data-handle-validation=\\"true\\"
    ></div>
</body>
</html>",
    "state": "modified",
  },
  "webapp/manifest.json": Object {
    "contents": "{
    \\"_version\\": \\"1.12.0\\",
    \\"sap.app\\": {
        \\"id\\": \\"app.with.namespace\\",
      \\"type\\": \\"application\\",
      \\"i18n\\": \\"i18n/i18n.properties\\",
      \\"applicationVersion\\": {
        \\"version\\": \\"0.0.1\\"
      },
      \\"title\\": \\"{{appTitle}}\\",
      \\"description\\": \\"{{appDescription}}\\",
      \\"resources\\": \\"resources.json\\",
      \\"sourceTemplate\\": {
          \\"id\\": \\"\\",
          \\"version\\": \\"\\"
      }
    },
    \\"sap.ui\\": {
      \\"technology\\": \\"UI5\\",
      \\"icons\\": {
        \\"icon\\": \\"\\",
        \\"favIcon\\": \\"\\",
        \\"phone\\": \\"\\",
        \\"phone@2\\": \\"\\",
        \\"tablet\\": \\"\\",
        \\"tablet@2\\": \\"\\"
      },
      \\"deviceTypes\\": {
        \\"desktop\\": true,
        \\"tablet\\": true,
        \\"phone\\": true
      }
    },
    \\"sap.ui5\\": {
      \\"flexEnabled\\": true,
      \\"dependencies\\": {
        \\"minUI5Version\\": \\"1.60.0\\",
        \\"libs\\": {
          \\"sap.m\\": {},
          \\"sap.ui.core\\": {}
        }
      },
      \\"contentDensities\\": {
        \\"compact\\": true,
        \\"cozy\\": true
      },
      \\"models\\": {
        \\"i18n\\": {
          \\"type\\": \\"sap.ui.model.resource.ResourceModel\\",
          \\"settings\\": {
            \\"bundleName\\": \\"app.with.namespace.i18n.i18n\\"
          }
        }
      },
      \\"resources\\": {
        \\"css\\": []
      },
      \\"routing\\": {
        \\"config\\": {},
        \\"routes\\": [],
        \\"targets\\": {}
      }
    }
  }
",
    "state": "modified",
  },
}
`;

exports[`UI5 templates generates options: \`sapux\` with specific version 1`] = `
Object {
  ".gitignore": Object {
    "contents": "node_modules/
dist/
.scp/
.env
Makefile*.mta
mta_archives
mta-*
resources
archive.zip
.*_mta_build_tmp",
    "state": "modified",
  },
  "package.json": Object {
    "contents": "{
  \\"name\\": \\"testpackagename\\",
  \\"version\\": \\"0.0.1\\",
  \\"private\\": true,
  \\"description\\": \\"Test App Description\\",
  \\"keywords\\": [
    \\"ui5\\",
    \\"openui5\\",
    \\"sapui5\\"
  ],
  \\"main\\": \\"webapp/index.html\\",
  \\"dependencies\\": {},
  \\"devDependencies\\": {
    \\"@ui5/cli\\": \\"^3.0.0\\",
    \\"@sap/ux-ui5-tooling\\": \\"1\\",
    \\"@sap/ux-specification\\": \\"UI5-1.92\\"
  },
  \\"scripts\\": {
    \\"start\\": \\"ui5 serve --config=ui5.yaml --open index.html\\",
    \\"start-local\\": \\"ui5 serve --config=ui5-local.yaml --open index.html\\",
    \\"build\\": \\"ui5 build --config=ui5.yaml --clean-dest --dest dist\\"
  },
  \\"sapux\\": true
}
",
    "state": "modified",
  },
  "ui5-local.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.6\\"
metadata:
  name: app.with.namespace
type: application
framework:
  name: SAPUI5
  version: 1.92.1
  libraries:
    - name: sap.m
    - name: sap.ui.core
    - name: themelib_sap_fiori_3
server:
  customMiddleware:
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
",
    "state": "modified",
  },
  "ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.6\\"
metadata:
  name: app.with.namespace
type: application
server:
  customMiddleware:
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        ui5:
          path:
            - /resources
            - /test-resources
          url: https://ui5.sap.com
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
",
    "state": "modified",
  },
  "webapp/Component.js": Object {
    "contents": "sap.ui.define(
    [\\"sap/ui/core/UIComponent\\"],
    function (UIComponent) {
        \\"use strict\\";

        return UIComponent.extend(\\"app.with.namespace.Component\\", {
            metadata: {
                manifest: \\"json\\"
            },

            /**
             * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.
             * @public
             * @override
             */
            init: function () {
                // call the base component's init function
                UIComponent.prototype.init.apply(this, arguments);

                // enable routing
                this.getRouter().initialize();
            }
        });
    }
);",
    "state": "modified",
  },
  "webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for app.with.namespace

#Texts for manifest.json

#XTIT: Application name
appTitle=Test App Title

#YDES: Application description
appDescription=Test App Description",
    "state": "modified",
  },
  "webapp/index.html": Object {
    "contents": "<!DOCTYPE html>
<html lang=\\"en\\">
<head>
    <meta charset=\\"UTF-8\\">
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">
    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
    <title>Test App Title</title>
    <style>
        html, body, body > div, #container, #container-uiarea {
            height: 100%;
        }
    </style>
    <script
        id=\\"sap-ui-bootstrap\\"
        src=\\"resources/sap-ui-core.js\\"
        data-sap-ui-theme=\\"sap_fiori_3\\"
        data-sap-ui-resourceroots='{
            \\"app.with.namespace\\": \\"./\\"
        }'
        data-sap-ui-oninit=\\"module:sap/ui/core/ComponentSupport\\"
        data-sap-ui-compatVersion=\\"edge\\"
        data-sap-ui-async=\\"true\\"
        data-sap-ui-frameOptions=\\"trusted\\"
    ></script>
</head>
<body class=\\"sapUiBody sapUiSizeCompact\\" id=\\"content\\">
    <div
        data-sap-ui-component
        data-name=\\"app.with.namespace\\"
        data-id=\\"container\\"
        data-settings='{\\"id\\" : \\"app.with.namespace\\"}'
        data-handle-validation=\\"true\\"
    ></div>
</body>
</html>",
    "state": "modified",
  },
  "webapp/manifest.json": Object {
    "contents": "{
    \\"_version\\": \\"1.34.0\\",
    \\"sap.app\\": {
        \\"id\\": \\"app.with.namespace\\",
      \\"type\\": \\"application\\",
      \\"i18n\\": \\"i18n/i18n.properties\\",
      \\"applicationVersion\\": {
        \\"version\\": \\"0.0.1\\"
      },
      \\"title\\": \\"{{appTitle}}\\",
      \\"description\\": \\"{{appDescription}}\\",
      \\"resources\\": \\"resources.json\\",
      \\"sourceTemplate\\": {
          \\"id\\": \\"\\",
          \\"version\\": \\"\\"
      }
    },
    \\"sap.ui\\": {
      \\"technology\\": \\"UI5\\",
      \\"icons\\": {
        \\"icon\\": \\"\\",
        \\"favIcon\\": \\"\\",
        \\"phone\\": \\"\\",
        \\"phone@2\\": \\"\\",
        \\"tablet\\": \\"\\",
        \\"tablet@2\\": \\"\\"
      },
      \\"deviceTypes\\": {
        \\"desktop\\": true,
        \\"tablet\\": true,
        \\"phone\\": true
      }
    },
    \\"sap.ui5\\": {
      \\"flexEnabled\\": true,
      \\"dependencies\\": {
        \\"minUI5Version\\": \\"1.92.1\\",
        \\"libs\\": {
          \\"sap.m\\": {},
          \\"sap.ui.core\\": {}
        }
      },
      \\"contentDensities\\": {
        \\"compact\\": true,
        \\"cozy\\": true
      },
      \\"models\\": {
        \\"i18n\\": {
          \\"type\\": \\"sap.ui.model.resource.ResourceModel\\",
          \\"settings\\": {
            \\"bundleName\\": \\"app.with.namespace.i18n.i18n\\"
          }
        }
      },
      \\"resources\\": {
        \\"css\\": []
      },
      \\"routing\\": {
        \\"config\\": {},
        \\"routes\\": [],
        \\"targets\\": {}
      }
    }
  }
",
    "state": "modified",
  },
}
`;

exports[`UI5 templates option: \`loadReuseLibs\` 1`] = `
Object {
  ".gitignore": Object {
    "contents": "node_modules/
dist/
.scp/
.env
Makefile*.mta
mta_archives
mta-*
resources
archive.zip
.*_mta_build_tmp",
    "state": "modified",
  },
  "package.json": Object {
    "contents": "{
    \\"name\\": \\"testpackagename\\",
    \\"version\\": \\"0.0.1\\",
    \\"private\\": true,
    \\"description\\": \\"Test App Description\\",
    \\"keywords\\": [
        \\"ui5\\",
        \\"openui5\\",
        \\"sapui5\\"
    ],
    \\"main\\": \\"webapp/index.html\\",
    \\"dependencies\\": {},
    \\"devDependencies\\": {
        \\"@ui5/cli\\": \\"^3.0.0\\",
        \\"@sap/ux-ui5-tooling\\": \\"1\\"
},
    \\"scripts\\": {
    \\"start\\": \\"ui5 serve --config=ui5.yaml --open index.html\\",
    \\"start-local\\": \\"ui5 serve --config=ui5-local.yaml --open index.html\\",
    \\"build\\": \\"ui5 build --config=ui5.yaml --clean-dest --dest dist\\"
}}
",
    "state": "modified",
  },
  "ui5-local.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.6\\"
metadata:
  name: app.with.namespace
type: application
framework:
  name: SAPUI5
  version: 1.95.0
  libraries:
    - name: sap.m
    - name: sap.ui.core
    - name: themelib_sap_fiori_3
server:
  customMiddleware:
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
",
    "state": "modified",
  },
  "ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.6\\"
metadata:
  name: app.with.namespace
type: application
server:
  customMiddleware:
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        ui5:
          path:
            - /resources
            - /test-resources
          url: https://ui5.sap.com
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
",
    "state": "modified",
  },
  "webapp/Component.js": Object {
    "contents": "sap.ui.define(
    [\\"sap/ui/core/UIComponent\\"],
    function (UIComponent) {
        \\"use strict\\";

        return UIComponent.extend(\\"app.with.namespace.Component\\", {
            metadata: {
                manifest: \\"json\\"
            },

            /**
             * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.
             * @public
             * @override
             */
            init: function () {
                // call the base component's init function
                UIComponent.prototype.init.apply(this, arguments);

                // enable routing
                this.getRouter().initialize();
            }
        });
    }
);",
    "state": "modified",
  },
  "webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for app.with.namespace

#Texts for manifest.json

#XTIT: Application name
appTitle=Test App Title

#YDES: Application description
appDescription=Test App Description",
    "state": "modified",
  },
  "webapp/index.html": Object {
    "contents": "<!DOCTYPE html>
<html lang=\\"en\\">
<head>
    <meta charset=\\"UTF-8\\">
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">
    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
    <title>Test App Title</title>
    <style>
        html, body, body > div, #container, #container-uiarea {
            height: 100%;
        }
    </style>
    <script
        id=\\"sap-ui-bootstrap\\"
        src=\\"resources/sap-ui-core.js\\"
        data-sap-ui-theme=\\"sap_fiori_3\\"
        data-sap-ui-resourceroots='{
            \\"app.with.namespace\\": \\"./\\"
        }'
        data-sap-ui-oninit=\\"module:sap/ui/core/ComponentSupport\\"
        data-sap-ui-compatVersion=\\"edge\\"
        data-sap-ui-async=\\"true\\"
        data-sap-ui-frameOptions=\\"trusted\\"
    ></script>
</head>
<body class=\\"sapUiBody sapUiSizeCompact\\" id=\\"content\\">
    <div
        data-sap-ui-component
        data-name=\\"app.with.namespace\\"
        data-id=\\"container\\"
        data-settings='{\\"id\\" : \\"app.with.namespace\\"}'
        data-handle-validation=\\"true\\"
    ></div>
</body>
</html>",
    "state": "modified",
  },
  "webapp/manifest.json": Object {
    "contents": "{
    \\"_version\\": \\"1.12.0\\",
    \\"sap.app\\": {
        \\"id\\": \\"app.with.namespace\\",
      \\"type\\": \\"application\\",
      \\"i18n\\": \\"i18n/i18n.properties\\",
      \\"applicationVersion\\": {
        \\"version\\": \\"0.0.1\\"
      },
      \\"title\\": \\"{{appTitle}}\\",
      \\"description\\": \\"{{appDescription}}\\",
      \\"resources\\": \\"resources.json\\",
      \\"sourceTemplate\\": {
          \\"id\\": \\"\\",
          \\"version\\": \\"\\"
      }
    },
    \\"sap.ui\\": {
      \\"technology\\": \\"UI5\\",
      \\"icons\\": {
        \\"icon\\": \\"\\",
        \\"favIcon\\": \\"\\",
        \\"phone\\": \\"\\",
        \\"phone@2\\": \\"\\",
        \\"tablet\\": \\"\\",
        \\"tablet@2\\": \\"\\"
      },
      \\"deviceTypes\\": {
        \\"desktop\\": true,
        \\"tablet\\": true,
        \\"phone\\": true
      }
    },
    \\"sap.ui5\\": {
      \\"flexEnabled\\": true,
      \\"dependencies\\": {
        \\"minUI5Version\\": \\"1.60.0\\",
        \\"libs\\": {
          \\"sap.m\\": {},
          \\"sap.ui.core\\": {}
        }
      },
      \\"contentDensities\\": {
        \\"compact\\": true,
        \\"cozy\\": true
      },
      \\"models\\": {
        \\"i18n\\": {
          \\"type\\": \\"sap.ui.model.resource.ResourceModel\\",
          \\"settings\\": {
            \\"bundleName\\": \\"app.with.namespace.i18n.i18n\\"
          }
        }
      },
      \\"resources\\": {
        \\"css\\": []
      },
      \\"routing\\": {
        \\"config\\": {},
        \\"routes\\": [],
        \\"targets\\": {}
      }
    }
  }
",
    "state": "modified",
  },
  "webapp/test/locate-reuse-libs.js": Object {
    "contents": "(function (sap) {
    var fioriToolsGetManifestLibs = function (manifestPath) {
        var url = manifestPath;
        var result = \\"\\";
        // SAPUI5 delivered namespaces from https://ui5.sap.com/#/api/sap
        var ui5Libs = [
            \\"sap.apf\\",
            \\"sap.base\\",
            \\"sap.chart\\",
            \\"sap.collaboration\\",
            \\"sap.f\\",
            \\"sap.fe\\",
            \\"sap.fileviewer\\",
            \\"sap.gantt\\",
            \\"sap.landvisz\\",
            \\"sap.m\\",
            \\"sap.ndc\\",
            \\"sap.ovp\\",
            \\"sap.rules\\",
            \\"sap.suite\\",
            \\"sap.tnt\\",
            \\"sap.ui\\",
            \\"sap.uiext\\",
            \\"sap.ushell\\",
            \\"sap.uxap\\",
            \\"sap.viz\\",
            \\"sap.webanalytics\\",
            \\"sap.zen\\"
        ];
        function getKeys(libOrComp, libOrCompKeysString) {
            var libOrCompKeysStringTmp = libOrCompKeysString;
            Object.keys(libOrComp).forEach(function (libOrCompKey) {
                // ignore libs or Components that start with SAPUI5 delivered namespaces
                if (!ui5Libs.some(function (substring) { return libOrCompKey === substring || libOrCompKey.startsWith(substring + \\".\\"); })) {
                    if (libOrCompKeysStringTmp.length > 0) {
                        libOrCompKeysStringTmp = libOrCompKeysStringTmp + \\",\\" + libOrCompKey;
                    } else {
                        libOrCompKeysStringTmp = libOrCompKey;
                    }
                }
            });
            return libOrCompKeysStringTmp;
        }
        return new Promise(function (resolve, reject) {
            $.ajax(url)
                .done(function (manifest) {
                    if (manifest) {
                        if (
                            manifest[\\"sap.ui5\\"] &&
                            manifest[\\"sap.ui5\\"].dependencies
                        ) {
                            if (manifest[\\"sap.ui5\\"].dependencies.libs) {
                                result = getKeys(manifest[\\"sap.ui5\\"].dependencies.libs, result);
                            }
                            if (manifest[\\"sap.ui5\\"].dependencies.components) {
                                result = getKeys(manifest[\\"sap.ui5\\"].dependencies.components, result);
                            }
                        }
                        if (
                            manifest[\\"sap.ui5\\"] &&
                            manifest[\\"sap.ui5\\"].componentUsages
                        ) {
                            result = getKeys(manifest[\\"sap.ui5\\"].componentUsages, result);
                        }
                    }
                    resolve(result);
                })
                .fail(function () {
                    reject(new Error(\\"Could not fetch manifest at '\\" + manifestPath));
                });
        });
    };
    function registerModules(dataFromAppIndex) {
        Object.keys(dataFromAppIndex).forEach(function (moduleDefinitionKey) {
            var moduleDefinition = dataFromAppIndex[moduleDefinitionKey];
            if (moduleDefinition && moduleDefinition.dependencies) {
                moduleDefinition.dependencies.forEach(function (dependency) {
                    if (dependency.url && dependency.url.length > 0 && dependency.type === \\"UI5LIB\\") {
                        sap.ui.require([\\"sap/base/Log\\"], function (Log) {
                            Log.info(\\"Registering Library \\" +
                                dependency.componentId +
                                \\" from server \\" +
                                dependency.url);
                        });
                        var compId = dependency.componentId.replace(/\\\\./g, \\"/\\");
                        var config = {
                            paths: {
                            }
                        };
                        config.paths[compId] = dependency.url;
                        sap.ui.loader.config(config);
                    }
                });
            }
        });
    }
    /**
     * Registers the module paths for dependencies of the given component.
     * @param {string} manifestPath The the path to the app manifest path
     * for which the dependencies should be registered.
     * @returns {Promise} A promise which is resolved when the ajax request for
     * the app-index was successful and the module paths were registered.
     */
    sap.registerComponentDependencyPaths = function (manifestPath) {

        return fioriToolsGetManifestLibs(manifestPath).then(function (libs) {
            if (libs && libs.length > 0) {
                var url = \\"/sap/bc/ui2/app_index/ui5_app_info?id=\\" + libs;
                var sapClient = \\"\\";

                return new Promise(
                    function (resolve) {
                        sap.ui.require([\\"sap/base/util/UriParameters\\"], function (UriParameters) {
                            sapClient = UriParameters.fromQuery(window.location.search).get(\\"sap-client\\");
                            if (sapClient && sapClient.length === 3) {
                                url = url + \\"&sap-client=\\" + sapClient;
                            }
                            resolve(url);
                        });
                    }).then(function (url2) {
                        return $.ajax(url2).done(function (data) {
                            if (data) {
                                registerModules(data);
                            }
                        });
                    });
            } else {
                return undefined;
            }
        });
    };
})(sap);

/*eslint-disable fiori-custom/sap-browser-api-warning, fiori-custom/sap-no-dom-access*/
var currentScript = document.getElementById(\\"locate-reuse-libs\\");
if (!currentScript) {
    currentScript = document.currentScript;
}
var manifestUri = currentScript.getAttribute(\\"data-sap-ui-manifest-uri\\");
var componentName = currentScript.getAttribute(\\"data-sap-ui-componentName\\");
var useMockserver = currentScript.getAttribute(\\"data-sap-ui-use-mockserver\\");

sap.registerComponentDependencyPaths(manifestUri)
    .catch(function (error) {
        sap.ui.require([\\"sap/base/Log\\"], function (Log) {
            Log.error(error);
        });
    })
    .finally(function () {

        // setting the app title with internationalization 
        sap.ui.getCore().attachInit(function () {
            var sLocale = sap.ui.getCore().getConfiguration().getLanguage();
            sap.ui.require([\\"sap/base/i18n/ResourceBundle\\"], function (ResourceBundle) {
                var oResourceBundle = ResourceBundle.create({
                    url: \\"i18n/i18n.properties\\",
                    locale: sLocale
                });
                document.title = oResourceBundle.getText(\\"appTitle\\");
            });
        });

        if (componentName && componentName.length > 0) {
            if (useMockserver && useMockserver === \\"true\\") {
                sap.ui.getCore().attachInit(function () {
                    sap.ui.require([componentName.replace(/\\\\./g, \\"/\\") + \\"/localService/mockserver\\"], function (server) {
                        // set up test service for local testing
                        server.init();
                        // initialize the ushell sandbox component
                        sap.ushell.Container.createRenderer().placeAt(\\"content\\");
                    });
                });
            } else {
                // Requiring the ComponentSupport module automatically executes the component initialisation for all declaratively defined components
                sap.ui.require([\\"sap/ui/core/ComponentSupport\\"]);

                // setting the app title with the i18n text 
                sap.ui.getCore().attachInit(function () {
                    var sLocale = sap.ui.getCore().getConfiguration().getLanguage();
                    sap.ui.require([\\"sap/base/i18n/ResourceBundle\\"], function (ResourceBundle) {
                        var oResourceBundle = ResourceBundle.create({
                            url: \\"i18n/i18n.properties\\",
                            locale: sLocale
                        });
                        document.title = oResourceBundle.getText(\\"appTitle\\");
                    });
                });
            }
        } else {
            sap.ui.getCore().attachInit(function () {
                // initialize the ushell sandbox component
                sap.ushell.Container.createRenderer().placeAt(\\"content\\");
            });
        }
    });",
    "state": "modified",
  },
}
`;

exports[`UI5 templates option: \`typescript and code assist\` to check for conflicts 1`] = `
"{
  \\"name\\": \\"testpackagename\\",
  \\"version\\": \\"0.0.1\\",
  \\"private\\": true,
  \\"description\\": \\"Test App Description\\",
  \\"keywords\\": [
    \\"ui5\\",
    \\"openui5\\",
    \\"sapui5\\"
  ],
  \\"main\\": \\"webapp/index.html\\",
  \\"dependencies\\": {},
  \\"devDependencies\\": {
    \\"@ui5/cli\\": \\"^3.0.0\\",
    \\"@sap/ux-ui5-tooling\\": \\"1\\",
    \\"@sap/ux-specification\\": \\"latest\\",
    \\"@sapui5/ts-types-esm\\": \\"~1.94.0\\",
    \\"ui5-tooling-transpile\\": \\"^0.7.10\\",
    \\"typescript\\": \\"^4.6.3\\",
    \\"@typescript-eslint/eslint-plugin\\": \\"^5.59.0\\",
    \\"@typescript-eslint/parser\\": \\"^5.59.0\\",
    \\"@sap-ux/eslint-plugin-fiori-tools\\": \\"^0.1.0\\"
  },
  \\"scripts\\": {
    \\"start\\": \\"ui5 serve --config=ui5.yaml --open index.html\\",
    \\"start-local\\": \\"ui5 serve --config=ui5-local.yaml --open index.html\\",
    \\"build\\": \\"ui5 build --config=ui5.yaml --clean-dest --dest dist\\",
    \\"lint\\": \\"eslint ./\\",
    \\"ts-typecheck\\": \\"tsc --noEmit\\",
    \\"prestart\\": \\"npm run ts-typecheck\\",
    \\"prebuild\\": \\"npm run ts-typecheck\\"
  }
}
"
`;

exports[`UI5 templates option: \`typescript and code assist\` to check for conflicts 2`] = `
"{
    \\"compilerOptions\\": {
        \\"target\\": \\"es2022\\",
        \\"module\\": \\"es2022\\",
        \\"skipLibCheck\\": true,
        \\"allowJs\\": true,
        \\"strict\\": true,
        \\"strictPropertyInitialization\\": false,
        \\"moduleResolution\\": \\"node\\",
        \\"rootDir\\": \\"./webapp\\",
        \\"baseUrl\\": \\"./\\",
        \\"paths\\": {
            \\"app/with/namespace/*\\": [
                \\"./webapp/*\\"
            ]
        },
        \\"types\\": [
            \\"@sapui5/ts-types-esm\\"
        ]
    },
    \\"include\\": [
        \\"./webapp/**/*\\"
    ]
}"
`;

exports[`UI5 templates option: \`typescript and code assist\` to check for conflicts 3`] = `
"{
    \\"extends\\": \\"plugin:@sap-ux/eslint-plugin-fiori-tools/defaultTS\\",
    \\"root\\": true
}
"
`;

exports[`UI5 templates option: \`typescript, npm modules and Fiori tools\` 1`] = `
Object {
  ".babelrc.json": Object {
    "contents": "{
    \\"ignore\\": [
        \\"**/*.d.ts\\"
    ],
    \\"presets\\": [
        \\"@babel/preset-env\\",
        [
            \\"transform-ui5\\",
            {
                \\"overridesToOverride\\": true
            }
        ],
        \\"@babel/preset-typescript\\"
    ],
    \\"plugins\\": [
        \\"transform-remove-console\\",
        [
            \\"transform-async-to-promises\\",
            {
                \\"inlineHelpers\\": true
            }
        ]
    ],
    \\"sourceMaps\\": true
}",
    "state": "modified",
  },
  ".eslintrc": Object {
    "contents": "{
    \\"extends\\": \\"plugin:@sap-ux/eslint-plugin-fiori-tools/defaultTS\\",
    \\"root\\": true
}
",
    "state": "modified",
  },
  ".gitignore": Object {
    "contents": "node_modules/
dist/
.scp/
.env
Makefile*.mta
mta_archives
mta-*
resources
archive.zip
.*_mta_build_tmp",
    "state": "modified",
  },
  "package.json": Object {
    "contents": "{
  \\"name\\": \\"testpackagename\\",
  \\"version\\": \\"0.0.1\\",
  \\"private\\": true,
  \\"description\\": \\"Test App Description\\",
  \\"keywords\\": [
    \\"ui5\\",
    \\"openui5\\",
    \\"sapui5\\"
  ],
  \\"main\\": \\"webapp/index.html\\",
  \\"dependencies\\": {},
  \\"devDependencies\\": {
    \\"@ui5/cli\\": \\"^3.0.0\\",
    \\"@sap/ux-ui5-tooling\\": \\"1\\",
    \\"@sap/ux-specification\\": \\"latest\\",
    \\"@sapui5/ts-types-esm\\": \\"~1.94.0\\",
    \\"ui5-tooling-transpile\\": \\"^0.7.10\\",
    \\"typescript\\": \\"^4.6.3\\",
    \\"@typescript-eslint/eslint-plugin\\": \\"^5.59.0\\",
    \\"@typescript-eslint/parser\\": \\"^5.59.0\\",
    \\"@sap-ux/eslint-plugin-fiori-tools\\": \\"^0.1.0\\",
    \\"ui5-tooling-modules\\": \\"^0.6.0\\"
  },
  \\"scripts\\": {
    \\"start\\": \\"ui5 serve --config=ui5.yaml --open index.html\\",
    \\"start-local\\": \\"ui5 serve --config=ui5-local.yaml --open index.html\\",
    \\"build\\": \\"ui5 build --config=ui5.yaml --clean-dest --dest dist\\",
    \\"lint\\": \\"eslint ./\\",
    \\"ts-typecheck\\": \\"tsc --noEmit\\",
    \\"prestart\\": \\"npm run ts-typecheck\\",
    \\"prebuild\\": \\"npm run ts-typecheck\\"
  },
  \\"sapux\\": true
}
",
    "state": "modified",
  },
  "tsconfig.json": Object {
    "contents": "{
    \\"compilerOptions\\": {
        \\"target\\": \\"es2022\\",
        \\"module\\": \\"es2022\\",
        \\"skipLibCheck\\": true,
        \\"allowJs\\": true,
        \\"strict\\": true,
        \\"strictPropertyInitialization\\": false,
        \\"moduleResolution\\": \\"node\\",
        \\"rootDir\\": \\"./webapp\\",
        \\"baseUrl\\": \\"./\\",
        \\"paths\\": {
            \\"app/with/namespace/*\\": [
                \\"./webapp/*\\"
            ]
        },
        \\"types\\": [
            \\"@sapui5/ts-types-esm\\"
        ]
    },
    \\"include\\": [
        \\"./webapp/**/*\\"
    ]
}",
    "state": "modified",
  },
  "ui5-local.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.6\\"
metadata:
  name: app.with.namespace
type: application
framework:
  name: SAPUI5
  version: 1.95.0
  libraries:
    - name: sap.m
    - name: sap.ui.core
    - name: themelib_sap_fiori_3
server:
  customMiddleware:
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
    - name: ui5-tooling-transpile-middleware
      afterMiddleware: compression
      configuration:
        debug: true
        excludePatterns:
          - /Component-preload.js
    - name: ui5-tooling-modules-middleware
      afterMiddleware: compression
      configuration: {}
builder:
  customTasks:
    - name: ui5-tooling-transpile-task
      afterTask: replaceVersion
      configuration:
        debug: true
    - name: ui5-tooling-modules-task
      afterTask: replaceVersion
      configuration: {}
",
    "state": "modified",
  },
  "ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.6\\"
metadata:
  name: app.with.namespace
type: application
server:
  customMiddleware:
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        ui5:
          path:
            - /resources
            - /test-resources
          url: https://ui5.sap.com
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
    - name: ui5-tooling-transpile-middleware
      afterMiddleware: compression
      configuration:
        debug: true
        excludePatterns:
          - /Component-preload.js
    - name: ui5-tooling-modules-middleware
      afterMiddleware: compression
      configuration: {}
builder:
  customTasks:
    - name: ui5-tooling-transpile-task
      afterTask: replaceVersion
      configuration:
        debug: true
    - name: ui5-tooling-modules-task
      afterTask: replaceVersion
      configuration: {}
",
    "state": "modified",
  },
  "webapp/Component.ts": Object {
    "contents": "import UIComponent from \\"sap/ui/core/UIComponent\\";

/**
 * @namespace app.with.namespace
 */
export default class Component extends UIComponent {

	public static metadata = {
		manifest: \\"json\\"
	};

    /**
     * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.
     * @public
     * @override
     */
	public init() : void {
		// call the base component's init function
		super.init();

        // enable routing
        this.getRouter().initialize();
	}
}",
    "state": "modified",
  },
  "webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for app.with.namespace

#Texts for manifest.json

#XTIT: Application name
appTitle=Test App Title

#YDES: Application description
appDescription=Test App Description",
    "state": "modified",
  },
  "webapp/index.html": Object {
    "contents": "<!DOCTYPE html>
<html lang=\\"en\\">
<head>
    <meta charset=\\"UTF-8\\">
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">
    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
    <title>Test App Title</title>
    <style>
        html, body, body > div, #container, #container-uiarea {
            height: 100%;
        }
    </style>
    <script
        id=\\"sap-ui-bootstrap\\"
        src=\\"resources/sap-ui-core.js\\"
        data-sap-ui-theme=\\"sap_fiori_3\\"
        data-sap-ui-resourceroots='{
            \\"app.with.namespace\\": \\"./\\"
        }'
        data-sap-ui-oninit=\\"module:sap/ui/core/ComponentSupport\\"
        data-sap-ui-compatVersion=\\"edge\\"
        data-sap-ui-async=\\"true\\"
        data-sap-ui-frameOptions=\\"trusted\\"
    ></script>
</head>
<body class=\\"sapUiBody sapUiSizeCompact\\" id=\\"content\\">
    <div
        data-sap-ui-component
        data-name=\\"app.with.namespace\\"
        data-id=\\"container\\"
        data-settings='{\\"id\\" : \\"app.with.namespace\\"}'
        data-handle-validation=\\"true\\"
    ></div>
</body>
</html>",
    "state": "modified",
  },
  "webapp/manifest.json": Object {
    "contents": "{
    \\"_version\\": \\"1.12.0\\",
    \\"sap.app\\": {
        \\"id\\": \\"app.with.namespace\\",
      \\"type\\": \\"application\\",
      \\"i18n\\": \\"i18n/i18n.properties\\",
      \\"applicationVersion\\": {
        \\"version\\": \\"0.0.1\\"
      },
      \\"title\\": \\"{{appTitle}}\\",
      \\"description\\": \\"{{appDescription}}\\",
      \\"resources\\": \\"resources.json\\",
      \\"sourceTemplate\\": {
          \\"id\\": \\"\\",
          \\"version\\": \\"\\"
      }
    },
    \\"sap.ui\\": {
      \\"technology\\": \\"UI5\\",
      \\"icons\\": {
        \\"icon\\": \\"\\",
        \\"favIcon\\": \\"\\",
        \\"phone\\": \\"\\",
        \\"phone@2\\": \\"\\",
        \\"tablet\\": \\"\\",
        \\"tablet@2\\": \\"\\"
      },
      \\"deviceTypes\\": {
        \\"desktop\\": true,
        \\"tablet\\": true,
        \\"phone\\": true
      }
    },
    \\"sap.ui5\\": {
      \\"flexEnabled\\": true,
      \\"dependencies\\": {
        \\"minUI5Version\\": \\"1.60.0\\",
        \\"libs\\": {
          \\"sap.m\\": {},
          \\"sap.ui.core\\": {}
        }
      },
      \\"contentDensities\\": {
        \\"compact\\": true,
        \\"cozy\\": true
      },
      \\"models\\": {
        \\"i18n\\": {
          \\"type\\": \\"sap.ui.model.resource.ResourceModel\\",
          \\"settings\\": {
            \\"bundleName\\": \\"app.with.namespace.i18n.i18n\\"
          }
        }
      },
      \\"resources\\": {
        \\"css\\": []
      },
      \\"routing\\": {
        \\"config\\": {},
        \\"routes\\": [],
        \\"targets\\": {}
      }
    }
  }
",
    "state": "modified",
  },
}
`;
