{
    "debug": {
        "logError": "{{method}} error found: {{ error }}",
        "mtaLoaded": "MTA {{ type }} loaded. The size is: {{ size }}.",
        "ui5YamlDoesNotExist": "The ui5.yaml file does not exist in the project. Please create one.",
        "capMtaCreated": "CAP MTA configuration created.",
        "capMtaUpdated": "CAP MTA configuration updated.",
        "capGenerationCompleted": "CAP generation completed.",
        "mtaCreated": "MTA configuration created: {{- mtaPath}}.",
        "mtaSaved": "MTA configuration has been saved.",
        "mtaSavedFailed": "Saving the MTA configuration failed with the error: {{- error }}.",
        "addingRouter": "Adding {{routerType}} app router...",
        "addMissingModules": "Adding missing modules to MTA configuration...",
        "cleanupModules": "Cleanup modules",
        "creatingMta": "Creating MTA using {{- cdsParams }}",
        "html5AppAdded": "HTML5 Application added to MTA configuration {{- appName}}",
        "addXsuaaService": "Adding XSUAA service to MTA configuration"
    },
    "error": {
        "unableToLoadMTA": "Unable to load mta.yaml configuration {{- mtaDir }}, error thrown {{- error }}.",
        "updatingMTAExtensionFailed": "Unable to add mta extension configuration to file: {{mtaExtFilePath}}.",
        "cannotFindBinary": "Cannot find the \"{{bin}}\" executable. Please add it to the path or use \"npm i -g {{- pkg}}\" to install it.",
        "mtaExtensionFailed": "Unable to create or update the mta extension file for Api Hub Enterprise destination configuration: {{error}}.",
        "serviceKeyFailed": "Failed to fetch service key.",
        "missingMtaParameters": "Missing required parameters, MTA path, MTA ID or router type is missing.",
        "invalidMtaIdWithChars": "The MTA ID can only contain letters, numbers, dashes, periods, underscores.",
        "invalidMtaId": "The MTA ID must start with a letter or underscore and be less than 128 characters long.",
        "missingABAPServiceBindingDetails": "Missing ABAP service details for direct service binding.",
        "mtaFolderAlreadyExists": "A folder with same name already exists in the target directory.",
        "mtaAlreadyExists": "An mta.yaml already exists in the target directory.",
        "cannotUpdateRouterXSApp": "Unable to update router xs-app.json welcome location.",
        "targetFolderDoesNotExist": "Target folder does not exist, {{targetFolder}}.",
        "doesNotContainACapApp": "Target folder does not contain a Node.js CAP project.",
        "errorInstallingNodeModules": "Something went wrong installing node modules!",
        "errorGeneratingMtaYaml": "Something went wrong creating mta.yaml!"
    },
    "info":{
        "existingMTAExtensionNotFound": "Cannot find a valid existing mta extension file, a new one will be created.",
        "existingDestinationNotFound": "A destination service resource cannot be found in the mta.yaml. An mta extension destination instance cannot be added.",
        "mtaExtensionCreated": "Created file: {{mtaExtFile}} to extend mta module {{appMtaId}} with destination configuration.",
        "mtaExtensionUpdated": "Updated file: {{mtaExtFile}} with module destination configuration."
    }
}
