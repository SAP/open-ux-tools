{
    "debug": {
        "logError": "{{method}} error found: {{ error }}",
        "mtaLoaded": "MTA {{ type }} loaded. The size is: {{ size }}.",
        "ui5YamlDoesNotExist": "The `ui5.yaml` file does not exist in the project. Create one. Error thrown: {{- error }}",
        "capMtaCreated": "CAP MTA configuration created.",
        "capMtaUpdated": "CAP MTA configuration updated.",
        "capGenerationCompleted": "CAP generation completed.",
        "mtaCreated": "The MTA configuration created: {{- mtaPath}}.",
        "mtaSaved": "The MTA configuration has been saved.",
        "mtaSavedFailed": "Saving the MTA configuration failed with the error: {{- error }}.",
        "addingRouter": "Adding {{routerType}} app router...",
        "addMissingModules": "Adding missing modules to MTA configuration...",
        "cleanupModules": "Cleanup modules.",
        "creatingMta": "Creating MTA using {{- cdsParams }}...",
        "html5AppAdded": "HTML5 application added to MTA configuration: {{- appName}}",
        "html5AlreadyExists": "HTML5 application {{- appName}} already exists in the MTA configuration.",
        "addXsuaaService": "Adding XSUAA service to MTA configuration.",
        "mtaReadWithPrefix": "Read `mta.yaml` with prefix {{- prefix }}.",
        "errorReadingMta": "An error occurred when reading the `mta.yaml` file: {{- error }}. Please check the file.",
        "unableToReadPackageJson": "Unable to read the `package.json` file: {{- error }}.",
        "processHTML5App": "Processing HTML5 app: {{- appName }}."
    },
    "error": {
        "unableToLoadMTA": "Unable to load the `mta.yaml` configuration: {{- mtaDir }}. Error thrown: {{- error }}.",
        "updatingMTAExtensionFailed": "Unable to add the MTA extension configuration to the file: {{mtaExtFilePath}}.",
        "cannotFindBinary": "Cannot find the \"{{bin}}\" executable. Please add it to the path or use \"npm i -g {{- pkg}}\" to install it.",
        "mtaExtensionFailed": "Unable to create or update the MTA extension file for the API Hub Enterprise destination configuration: {{error}}.",
        "serviceKeyFailed": "Failed to fetch the service key.",
        "missingMtaParameters": "Missing required parameters, MTA Path, MTA ID, or the Router type is missing.",
        "invalidMtaIdWithChars": "The MTA ID can only contain letters, numbers, dashes, periods, and underscores.",
        "invalidMtaId": "The MTA ID must start with a letter or underscore and be less than 128 characters.",
        "missingABAPServiceBindingDetails": "Missing ABAP service details for direct service binding.",
        "mtaFolderAlreadyExists": "A folder with same name already exists in the target directory.",
        "mtaAlreadyExists": "An `mta.yaml` file already exists in the target directory.",
        "cannotUpdateRouterXSApp": "Unable to update the router `xs-app.json` welcome location.",
        "targetFolderDoesNotExist": "The target folder does not exist: {{targetFolder}}. Check the folder has the correct permissions.",
        "doesNotContainACapApp": "The target folder does not contain a Node.js CAP project. Please ensure the folder contains a Node.js CAP project.",
        "errorInstallingNodeModules": "An error occurred when installing node modules. Please check the logs.",
        "errorGeneratingMtaYaml": "An error occurred when creating the mta.yaml file. Please check the logs."
    },
    "info":{
        "existingMTAExtensionNotFound": "Cannot find a valid existing MTA extension file. A new one will be created. Error: {{- error}}.",
        "existingDestinationNotFound": "A destination service resource cannot be found in the `mta.yaml` file. An MTA extension destination instance cannot be added.",
        "mtaExtensionCreated": "Created file: {{mtaExtFile}} to extend the MTA module: {{appMtaId}} with the destination configuration.",
        "mtaExtensionUpdated": "Updated file: {{mtaExtFile}} with the module destination configuration."
    }
}
