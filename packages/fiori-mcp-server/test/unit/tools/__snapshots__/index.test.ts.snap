// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Tools schemas execute_functionality: Input schema for "execute_functionality" 1`] = `
Object {
  "additionalProperties": false,
  "description": "Input object for executing a functionality. Only three top-level properties are allowed: \\"functionalityId\\", \\"parameters\\", and \\"appPath\\". All other dynamic or functionality-specific inputs must be included inside the \\"parameters\\" object. Do not place any additional fields at the root level.",
  "properties": Object {
    "appPath": Object {
      "description": "Path to the Fiori application. Path should be an absolute path.",
      "type": "string",
    },
    "functionalityId": Object {
      "anyOf": Array [
        Object {
          "type": "string",
        },
        Object {
          "items": Object {
            "anyOf": Array [
              Object {
                "type": "string",
              },
              Object {
                "type": "number",
              },
            ],
          },
          "type": "array",
        },
      ],
      "description": "The ID of the functionality to execute",
    },
    "parameters": Object {
      "additionalProperties": Object {},
      "description": "Parameters for the functionality execution",
      "propertyNames": Object {
        "type": "string",
      },
      "type": "object",
    },
  },
  "required": Array [
    "functionalityId",
    "parameters",
    "appPath",
  ],
  "type": "object",
}
`;

exports[`Tools schemas execute_functionality: Output schema for "execute_functionality" 1`] = `
Object {
  "additionalProperties": false,
  "properties": Object {
    "appPath": Object {
      "type": "string",
    },
    "changes": Object {
      "items": Object {
        "type": "string",
      },
      "type": "array",
    },
    "functionalityId": Object {
      "anyOf": Array [
        Object {
          "type": "string",
        },
        Object {
          "items": Object {
            "anyOf": Array [
              Object {
                "type": "string",
              },
              Object {
                "type": "number",
              },
            ],
          },
          "type": "array",
        },
      ],
    },
    "message": Object {
      "type": "string",
    },
    "parameters": Object {},
    "status": Object {
      "type": "string",
    },
    "timestamp": Object {
      "type": "string",
    },
  },
  "required": Array [
    "functionalityId",
    "status",
    "message",
    "parameters",
    "appPath",
    "changes",
    "timestamp",
  ],
  "type": "object",
}
`;

exports[`Tools schemas get_functionality_details: Input schema for "get_functionality_details" 1`] = `
Object {
  "additionalProperties": false,
  "properties": Object {
    "appPath": Object {
      "description": "Path to the Fiori application. Path should be an absolute path.",
      "type": "string",
    },
    "functionalityId": Object {
      "anyOf": Array [
        Object {
          "type": "string",
        },
        Object {
          "items": Object {
            "anyOf": Array [
              Object {
                "type": "string",
              },
              Object {
                "type": "number",
              },
            ],
          },
          "type": "array",
        },
      ],
      "description": "The ID of the functionality to get details for",
    },
  },
  "required": Array [
    "appPath",
    "functionalityId",
  ],
  "type": "object",
}
`;

exports[`Tools schemas get_functionality_details: Output schema for "get_functionality_details" 1`] = `
Object {
  "additionalProperties": false,
  "properties": Object {
    "description": Object {
      "type": "string",
    },
    "examples": Object {
      "items": Object {
        "type": "string",
      },
      "type": "array",
    },
    "functionalityId": Object {
      "anyOf": Array [
        Object {
          "type": "string",
        },
        Object {
          "items": Object {
            "anyOf": Array [
              Object {
                "type": "string",
              },
              Object {
                "type": "number",
              },
            ],
          },
          "type": "array",
        },
      ],
      "description": "Identifier to pass as the \`functionalityId\` parameter when calling \`get_functionality_details\` or \`execute_functionality\`",
    },
    "impact": Object {
      "type": "string",
    },
    "name": Object {
      "type": "string",
    },
    "pageName": Object {
      "type": "string",
    },
    "parameters": Object {
      "additionalProperties": Object {},
      "properties": Object {
        "description": Object {
          "type": "string",
        },
        "properties": Object {
          "additionalProperties": Object {
            "anyOf": Array [
              Object {
                "additionalProperties": Object {},
                "properties": Object {
                  "description": Object {
                    "type": "string",
                  },
                  "properties": Object {},
                  "type": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          "object",
                          "array",
                          "string",
                          "number",
                          "boolean",
                          "null",
                          "integer",
                          "any",
                        ],
                        "type": "string",
                      },
                      Object {
                        "items": Object {
                          "enum": Array [
                            "object",
                            "array",
                            "string",
                            "number",
                            "boolean",
                            "null",
                            "integer",
                            "any",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                      },
                    ],
                  },
                },
                "type": "object",
              },
              Object {
                "type": "boolean",
              },
            ],
          },
          "propertyNames": Object {
            "type": "string",
          },
          "type": "object",
        },
        "type": Object {
          "anyOf": Array [
            Object {
              "enum": Array [
                "object",
                "array",
                "string",
                "number",
                "boolean",
                "null",
                "integer",
                "any",
              ],
              "type": "string",
            },
            Object {
              "items": Object {
                "enum": Array [
                  "object",
                  "array",
                  "string",
                  "number",
                  "boolean",
                  "null",
                  "integer",
                  "any",
                ],
                "type": "string",
              },
              "type": "array",
            },
          ],
        },
      },
      "type": "object",
    },
    "prerequisites": Object {
      "items": Object {
        "type": "string",
      },
      "type": "array",
    },
    "technicalDescription": Object {
      "type": "string",
    },
  },
  "required": Array [
    "functionalityId",
    "name",
    "description",
    "parameters",
  ],
  "type": "object",
}
`;

exports[`Tools schemas list_fiori_apps: Input schema for "list_fiori_apps" 1`] = `
Object {
  "additionalProperties": false,
  "properties": Object {
    "searchPath": Object {
      "description": "Path to search for Fiori applications (defaults to current directory). If VSCode - list of VS Code workspace folder paths(\`workspace.workspaceFolders\`)",
      "items": Object {
        "type": "string",
      },
      "type": "array",
    },
  },
  "required": Array [
    "searchPath",
  ],
  "type": "object",
}
`;

exports[`Tools schemas list_fiori_apps: Output schema for "list_fiori_apps" 1`] = `
Object {
  "additionalProperties": false,
  "properties": Object {
    "applications": Object {
      "items": Object {
        "additionalProperties": false,
        "properties": Object {
          "appPath": Object {
            "description": "Absolute path to the Fiori application's root directory.",
            "type": "string",
          },
          "name": Object {
            "description": "Name of the Fiori application. Usually derived from the \`sap.app/id\` field in the application's manifest.json.",
            "type": "string",
          },
          "odataVersion": Object {
            "description": "OData protocol version used by the application's main service.",
            "type": "string",
          },
          "projectPath": Object {
            "description": "Absolute path to the root directory of the project containing this Fiori application. For EDMXBackend (standalone) projects, this is the same as \`appPath\`. For CAP projects, this points to the CAP project root, which may contain multiple Fiori applications.",
            "type": "string",
          },
          "projectType": Object {
            "description": "Type of project the application belongs to.",
            "enum": Array [
              "EDMXBackend",
              "CAPJava",
              "CAPNodejs",
            ],
            "type": "string",
          },
        },
        "required": Array [
          "name",
          "appPath",
          "projectPath",
          "projectType",
          "odataVersion",
        ],
        "type": "object",
      },
      "type": "array",
    },
  },
  "required": Array [
    "applications",
  ],
  "type": "object",
}
`;

exports[`Tools schemas list_functionality: Input schema for "list_functionality" 1`] = `
Object {
  "additionalProperties": false,
  "properties": Object {
    "appPath": Object {
      "description": "Path to the root folder of the Fiori application (where package.json and ui5.yaml reside). Path should be an absolute path.",
      "type": "string",
    },
  },
  "required": Array [
    "appPath",
  ],
  "type": "object",
}
`;

exports[`Tools schemas list_functionality: Output schema for "list_functionality" 1`] = `
Object {
  "additionalProperties": false,
  "properties": Object {
    "applicationPath": Object {
      "type": "string",
    },
    "functionalities": Object {
      "items": Object {
        "additionalProperties": false,
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "functionalityId": Object {
            "anyOf": Array [
              Object {
                "type": "string",
              },
              Object {
                "items": Object {
                  "anyOf": Array [
                    Object {
                      "type": "string",
                    },
                    Object {
                      "type": "number",
                    },
                  ],
                },
                "type": "array",
              },
            ],
            "description": "Identifier to pass as the \`functionalityId\` parameter when calling \`get_functionality_details\` or \`execute_functionality\`",
          },
        },
        "required": Array [
          "functionalityId",
          "description",
        ],
        "type": "object",
      },
      "type": "array",
    },
  },
  "required": Array [
    "applicationPath",
    "functionalities",
  ],
  "type": "object",
}
`;
