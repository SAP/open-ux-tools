// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`listFunctionalities call with valid app and data 1`] = `
Array [
  Object {
    "description": "Create new fiori elements page like ListReport, ObjectPage, CustomPage",
    "id": "add-page",
  },
  Object {
    "description": "Creates (generates) a new SAP Fiori UI application within an existing CAP project.
                Crucially, you must first construct the appGenConfig JSON argument.
                To do this, you **MUST** use the ***CDS MCP*** to search the model for service definitions, entities, associations, and UI annotations.
                As a fallback, only if no such tool is available, you should manually read and parse all .cds files in the projectPath to extract this information.
                The data obtained from either method must then be formatted into a JSON object and passed as the appGenConfig parameter.",
    "id": "generate-fiori-ui-app",
  },
  Object {
    "description": "Remove existing fiori elements page from the application",
    "id": "delete-page",
  },
  Object {
    "description": "Add new controller extension by creating javascript or typescript file and updates manifest.json with entry. Controller extensions allow users to extensiate default behaviour with custom controllers code.",
    "id": "create-controller-extension",
  },
  Object {
    "description": "Represents a prefix that is prepended in front of the viewName",
    "id": Array [
      "settings",
      "path",
    ],
  },
  Object {
    "description": "standard view type of views",
    "id": Array [
      "settings",
      "viewType",
    ],
  },
  Object {
    "description": "Defines the title for the application.",
    "id": Array [
      "settings",
      "title",
    ],
  },
  Object {
    "description": "Defines the description for the application.",
    "id": Array [
      "settings",
      "description",
    ],
  },
  Object {
    "description": "Enables key user adaptation for an application.",
    "id": Array [
      "settings",
      "flexEnabled",
    ],
  },
  Object {
    "description": "Represents the release status for the developer adaptation in the cloud (relevant for SAP internal only). The supported types are released, deprecated, obsolete, no value means not released.",
    "id": Array [
      "settings",
      "cloudDevAdaptationStatus",
    ],
  },
  Object {
    "description": "The flexible column layout allows users to see more details on the page, and to expand and collapse the screen areas.",
    "id": Array [
      "settings",
      "flexibleColumnLayout",
    ],
  },
  Object {
    "description": "Determines whether the Flexible Column Layout is limited to two columns. If set to true, the third level will be displayed in full screen mode rather than a third column.",
    "id": Array [
      "settings",
      "flexibleColumnLayout",
      "limitFCLToTwoColumns",
    ],
  },
  Object {
    "description": "Default Two Column Layout Type",
    "id": Array [
      "settings",
      "flexibleColumnLayout",
      "defaultTwoColumnLayoutType",
    ],
  },
  Object {
    "description": "Default Three Column Layout Type",
    "id": Array [
      "settings",
      "flexibleColumnLayout",
      "defaultThreeColumnLayoutType",
    ],
  },
  Object {
    "description": "Controller extensions allow users to extensiate default behaviour with custom controllers code.",
    "id": Array [
      "settings",
      "controllerExtensions",
    ],
  },
  Object {
    "description": "Hidden draft features.",
    "id": Array [
      "settings",
      "hideDraft",
    ],
  },
  Object {
    "description": "All features related to draft handling can be hidden from the UI while the draft functionality remains active in the background. To achieve this, enable the 'Hide Draft' property.",
    "id": Array [
      "settings",
      "hideDraft",
      "enabled",
    ],
  },
  Object {
    "description": "Determines whether to stay on the current page after saving an object.
To ensure a consistent experience, set this and 'Stay On Current Page After Cancel' to the same value.",
    "id": Array [
      "settings",
      "hideDraft",
      "stayOnCurrentPageAfterSave",
    ],
  },
  Object {
    "description": "Determines whether to stay on the current page after canceling an object.
To ensure a consistent experience, set this and 'Stay On Current Page After Save' to the same value.",
    "id": Array [
      "settings",
      "hideDraft",
      "stayOnCurrentPageAfterCancel",
    ],
  },
  Object {
    "description": "Controls the visibility of the 'Create Next' button.",
    "id": Array [
      "settings",
      "hideDraft",
      "hideCreateNext",
    ],
  },
  Object {
    "description": "variantManagement defines how the variant management of page personalizations is controlled.
- None - No variant management by default.
- Control - Individual personalizations for each control.",
    "id": Array [
      "TravelList",
      "variantManagement",
    ],
  },
  Object {
    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
    "id": Array [
      "TravelList",
      "header",
      "actions",
      "TestHeaderAction",
      "text",
    ],
  },
  Object {
    "description": "Relevant for extension actions; allows the definition of a target action handler.",
    "id": Array [
      "TravelList",
      "header",
      "actions",
      "TestHeaderAction",
      "press",
    ],
  },
  Object {
    "description": "Defines if the action button is visible.",
    "id": Array [
      "TravelList",
      "header",
      "actions",
      "TestHeaderAction",
      "visible",
    ],
  },
  Object {
    "description": "Defines if the action is enabled. The default value is true.",
    "id": Array [
      "TravelList",
      "header",
      "actions",
      "TestHeaderAction",
      "enabled",
    ],
  },
  Object {
    "description": "Defines the position of the action relative to other actions.",
    "id": Array [
      "TravelList",
      "header",
      "actions",
      "TestHeaderAction",
      "position",
    ],
  },
  Object {
    "description": "The key of another action to be used as placement anchor.",
    "id": Array [
      "header",
      "actions",
      "TestHeaderAction",
      "position",
      "anchor",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor action.",
    "id": Array [
      "header",
      "actions",
      "TestHeaderAction",
      "position",
      "placement",
    ],
  },
  Object {
    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
    "id": Array [
      "TravelList",
      "header",
      "actions",
      "TestHeaderAction2",
      "text",
    ],
  },
  Object {
    "description": "Relevant for extension actions; allows the definition of a target action handler.",
    "id": Array [
      "TravelList",
      "header",
      "actions",
      "TestHeaderAction2",
      "press",
    ],
  },
  Object {
    "description": "Defines if the action button is visible.",
    "id": Array [
      "TravelList",
      "header",
      "actions",
      "TestHeaderAction2",
      "visible",
    ],
  },
  Object {
    "description": "Defines if the action is enabled. The default value is true.",
    "id": Array [
      "TravelList",
      "header",
      "actions",
      "TestHeaderAction2",
      "enabled",
    ],
  },
  Object {
    "description": "Defines the position of the action relative to other actions.",
    "id": Array [
      "TravelList",
      "header",
      "actions",
      "TestHeaderAction2",
      "position",
    ],
  },
  Object {
    "description": "The key of another action to be used as placement anchor.",
    "id": Array [
      "header",
      "actions",
      "TestHeaderAction2",
      "position",
      "anchor",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor action.",
    "id": Array [
      "header",
      "actions",
      "TestHeaderAction2",
      "position",
      "placement",
    ],
  },
  Object {
    "description": "Allows you to hide the filter bar.",
    "id": Array [
      "TravelList",
      "filterBar",
      "hideFilterBar",
    ],
  },
  Object {
    "description": "A static or i18n binding string.",
    "id": Array [
      "TravelList",
      "filterBar",
      "selectionFields",
      "CustomFilterField",
      "label",
    ],
  },
  Object {
    "description": "The full path to the property to be filtered.",
    "id": Array [
      "TravelList",
      "filterBar",
      "selectionFields",
      "CustomFilterField",
      "property",
    ],
  },
  Object {
    "description": "The path to the XML template containing the filter control.",
    "id": Array [
      "TravelList",
      "filterBar",
      "selectionFields",
      "CustomFilterField",
      "template",
    ],
  },
  Object {
    "description": "Determines whether the filter field requires a value.",
    "id": Array [
      "TravelList",
      "filterBar",
      "selectionFields",
      "CustomFilterField",
      "required",
    ],
  },
  Object {
    "description": "Defines the position of the filter field relative to another filter field.",
    "id": Array [
      "TravelList",
      "filterBar",
      "selectionFields",
      "CustomFilterField",
      "position",
    ],
  },
  Object {
    "description": "The key of another filter field is to be used as a placement anchor.",
    "id": Array [
      "filterBar",
      "selectionFields",
      "CustomFilterField",
      "position",
      "anchor",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor filter field.",
    "id": Array [
      "filterBar",
      "selectionFields",
      "CustomFilterField",
      "position",
      "placement",
    ],
  },
  Object {
    "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically, as defined by the standard variant
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
    "id": Array [
      "TravelList",
      "table",
      "initialLoad",
    ],
  },
  Object {
    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
    "id": Array [
      "TravelList",
      "table",
      "type",
    ],
  },
  Object {
    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
    "id": Array [
      "TravelList",
      "table",
      "selectionMode",
    ],
  },
  Object {
    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
    "id": Array [
      "TravelList",
      "table",
      "selectAll",
    ],
  },
  Object {
    "description": "You can define how many items can be selected at a time using the selectionLimit.",
    "id": Array [
      "TravelList",
      "table",
      "selectionLimit",
    ],
  },
  Object {
    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
    "id": Array [
      "TravelList",
      "table",
      "enableExport",
    ],
  },
  Object {
    "description": "Determines whether the content density for ui.table is condensed.",
    "id": Array [
      "TravelList",
      "table",
      "condensedTableLayout",
    ],
  },
  Object {
    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
    "id": Array [
      "TravelList",
      "table",
      "hierarchyQualifier",
    ],
  },
  Object {
    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
    "id": Array [
      "TravelList",
      "table",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
    "id": Array [
      "TravelList",
      "table",
      "disableCopyToClipboard",
    ],
  },
  Object {
    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
    "id": Array [
      "TravelList",
      "table",
      "enableMassEdit",
    ],
  },
  Object {
    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
    "id": Array [
      "TravelList",
      "table",
      "personalization",
    ],
  },
  Object {
    "description": "Defines whether the user can add and remove columns to a given table.",
    "id": Array [
      "table",
      "personalization",
      "column",
    ],
  },
  Object {
    "description": "Defines whether the user can sort a given table.",
    "id": Array [
      "table",
      "personalization",
      "sort",
    ],
  },
  Object {
    "description": "Defines whether the user can filter data of a given table.",
    "id": Array [
      "table",
      "personalization",
      "filter",
    ],
  },
  Object {
    "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
    "id": Array [
      "TravelList",
      "table",
      "quickVariantSelection",
    ],
  },
  Object {
    "description": "Determines whether the table title is hidden and the tab titles are displayed.",
    "id": Array [
      "table",
      "quickVariantSelection",
      "hideTableTitle",
    ],
  },
  Object {
    "description": "Determines whether the entry view counts are shown.",
    "id": Array [
      "table",
      "quickVariantSelection",
      "showCounts",
    ],
  },
  Object {
    "description": "List of annotation paths referring to SelectionVariant annotations.",
    "id": Array [
      "table",
      "quickVariantSelection",
      "paths",
    ],
  },
  Object {
    "description": "0",
    "id": Array [
      "table",
      "quickVariantSelection",
      "paths",
      0,
    ],
  },
  Object {
    "description": "Annotation Path",
    "id": Array [
      "table",
      "quickVariantSelection",
      "paths",
      0,
      "annotationPath",
    ],
  },
  Object {
    "description": "1",
    "id": Array [
      "table",
      "quickVariantSelection",
      "paths",
      1,
    ],
  },
  Object {
    "description": "Annotation Path",
    "id": Array [
      "table",
      "quickVariantSelection",
      "paths",
      1,
      "annotationPath",
    ],
  },
  Object {
    "description": "enableMassEdit",
    "id": Array [
      "TravelList",
      "table",
      "enableMassEdit",
    ],
  },
  Object {
    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
    "id": Array [
      "table",
      "enableMassEdit",
      "visibleFields",
    ],
  },
  Object {
    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
    "id": Array [
      "table",
      "enableMassEdit",
      "ignoredFields",
    ],
  },
  Object {
    "description": "Enables single selection for a bound action.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "enableOnSelect",
    ],
  },
  Object {
    "description": "Settings that control the behavior after creating a new entry.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
    ],
  },
  Object {
    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "navigateToInstance",
    ],
  },
  Object {
    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "enableAutoScroll",
    ],
  },
  Object {
    "description": "Enables single selection for a bound action.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "enableOnSelect",
    ],
  },
  Object {
    "description": "Settings that control the behavior after creating a new entry.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
    ],
  },
  Object {
    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "navigateToInstance",
    ],
  },
  Object {
    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "enableAutoScroll",
    ],
  },
  Object {
    "description": "Enables single selection for a bound action.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "enableOnSelect",
    ],
  },
  Object {
    "description": "Settings that control the behavior after creating a new entry.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
    ],
  },
  Object {
    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "navigateToInstance",
    ],
  },
  Object {
    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "enableAutoScroll",
    ],
  },
  Object {
    "description": "Indicates whether the action requires a selection of items.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "TableAction",
      "requiresSelection",
    ],
  },
  Object {
    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "TableAction",
      "text",
    ],
  },
  Object {
    "description": "Relevant for extension actions; allows the definition of a target action handler.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "TableAction",
      "press",
    ],
  },
  Object {
    "description": "Defines if the action button is visible.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "TableAction",
      "visible",
    ],
  },
  Object {
    "description": "Defines if the action is enabled. The default value is true.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "TableAction",
      "enabled",
    ],
  },
  Object {
    "description": "Defines the position of the action relative to other actions.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "TableAction",
      "position",
    ],
  },
  Object {
    "description": "The key of another action to be used as placement anchor.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "TableAction",
      "position",
      "anchor",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "TableAction",
      "position",
      "placement",
    ],
  },
  Object {
    "description": "Enables single selection for a bound action.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "enableOnSelect",
    ],
  },
  Object {
    "description": "Settings that control the behavior after creating a new entry.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
    ],
  },
  Object {
    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "navigateToInstance",
    ],
  },
  Object {
    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "enableAutoScroll",
    ],
  },
  Object {
    "description": "Enables single selection for a bound action.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "enableOnSelect",
    ],
  },
  Object {
    "description": "Settings that control the behavior after creating a new entry.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
    ],
  },
  Object {
    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "navigateToInstance",
    ],
  },
  Object {
    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "enableAutoScroll",
    ],
  },
  Object {
    "description": "Enables single selection for a bound action.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "enableOnSelect",
    ],
  },
  Object {
    "description": "Settings that control the behavior after creating a new entry.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
    ],
  },
  Object {
    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "navigateToInstance",
    ],
  },
  Object {
    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "enableAutoScroll",
    ],
  },
  Object {
    "description": "Enables single selection for a bound action.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "enableOnSelect",
    ],
  },
  Object {
    "description": "Settings that control the behavior after creating a new entry.",
    "id": Array [
      "TravelList",
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
    ],
  },
  Object {
    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "navigateToInstance",
    ],
  },
  Object {
    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
    "id": Array [
      "table",
      "toolBar",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "enableAutoScroll",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::TravelID",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::TravelID",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::TravelID",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::AgencyID",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::AgencyID",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::AgencyID",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "TestCustomColumn",
      "header",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "TestCustomColumn",
      "width",
    ],
  },
  Object {
    "description": "Defines a target fragment.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "TestCustomColumn",
      "template",
    ],
  },
  Object {
    "description": "Aligns the header as well as the content horizontally.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "TestCustomColumn",
      "horizontalAlign",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
- Default: it will be shown by default in the table.
- Adaptation: it will initially not be shown in the table but be available via end user adaptation
- Hidden: the column is neither available in the table nor in adaptation",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "TestCustomColumn",
      "availability",
    ],
  },
  Object {
    "description": "Defines the position of the column relative to other columns.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "TestCustomColumn",
      "position",
    ],
  },
  Object {
    "description": "The key of another column to be used as placement anchor.",
    "id": Array [
      "table",
      "columns",
      "TestCustomColumn",
      "position",
      "anchor",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor column.",
    "id": Array [
      "table",
      "columns",
      "TestCustomColumn",
      "position",
      "placement",
    ],
  },
  Object {
    "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.
Once clicked, a list of properties that can be sorted by are displayed.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "TestCustomColumn",
      "properties",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::CustomerID",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::CustomerID",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::CustomerID",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::BeginDate",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::BeginDate",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::BeginDate",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::EndDate",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::EndDate",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::EndDate",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::TotalPrice",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::TotalPrice",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::TotalPrice",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::Memo",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::Memo",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::Memo",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::Status",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::Status",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelList",
      "table",
      "columns",
      "DataField::Status",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "Determines whether variant management is enabled for tables:
- None (default): Variant management is disabled.
- Control: Variant management can be enabled individually for each control using personalization.",
    "id": Array [
      "TravelObjectPage",
      "variantManagement",
    ],
  },
  Object {
    "description": "Set editableHeaderContent to true to make the header fields editable.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "editableHeaderContent",
    ],
  },
  Object {
    "description": "Set visible to true to make the header visible.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "visible",
    ],
  },
  Object {
    "description": "Determines whether the anchor bar is displayed.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "anchorBarVisible",
    ],
  },
  Object {
    "description": "Settings that control the behavior after creating a new entry.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
    ],
  },
  Object {
    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
    "id": Array [
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "navigateToInstance",
    ],
  },
  Object {
    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
    "id": Array [
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "enableAutoScroll",
    ],
  },
  Object {
    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
    "id": Array [
      "TravelObjectPage",
      "header",
      "actions",
      "HeaderAction",
      "text",
    ],
  },
  Object {
    "description": "Relevant for extension actions; allows the definition of a target action handler.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "actions",
      "HeaderAction",
      "press",
    ],
  },
  Object {
    "description": "Defines if the action button is visible.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "actions",
      "HeaderAction",
      "visible",
    ],
  },
  Object {
    "description": "Defines if the action is enabled. The default value is true.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "actions",
      "HeaderAction",
      "enabled",
    ],
  },
  Object {
    "description": "Defines the position of the action relative to the anchor action.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "actions",
      "HeaderAction",
      "position",
    ],
  },
  Object {
    "description": "The key of another action to be used as placement anchor.",
    "id": Array [
      "header",
      "actions",
      "HeaderAction",
      "position",
      "anchor",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor action.",
    "id": Array [
      "header",
      "actions",
      "HeaderAction",
      "position",
      "placement",
    ],
  },
  Object {
    "description": "Settings that control the behavior after creating a new entry.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
    ],
  },
  Object {
    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
    "id": Array [
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "navigateToInstance",
    ],
  },
  Object {
    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
    "id": Array [
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "enableAutoScroll",
    ],
  },
  Object {
    "description": "Settings that control the behavior after creating a new entry.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
    ],
  },
  Object {
    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
    "id": Array [
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "navigateToInstance",
    ],
  },
  Object {
    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
    "id": Array [
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "enableAutoScroll",
    ],
  },
  Object {
    "description": "Settings that control the behavior after creating a new entry.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
    ],
  },
  Object {
    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
    "id": Array [
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "navigateToInstance",
    ],
  },
  Object {
    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
    "id": Array [
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "enableAutoScroll",
    ],
  },
  Object {
    "description": "Settings that control the behavior after creating a new entry.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
    ],
  },
  Object {
    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
    "id": Array [
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "navigateToInstance",
    ],
  },
  Object {
    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
    "id": Array [
      "header",
      "actions",
      "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
      "afterExecution",
      "enableAutoScroll",
    ],
  },
  Object {
    "description": "Set showRelatedApps to true to show the navigation button for related apps.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "actions",
      "RelatedApps",
      "showRelatedApps",
    ],
  },
  Object {
    "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "sections",
      "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection",
      "stashed",
    ],
  },
  Object {
    "description": "Defines the key user adaptation behavior of the header facet.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "sections",
      "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection",
      "flexSettings",
    ],
  },
  Object {
    "description": "Defines which settings are available for key user adaptation at design time.",
    "id": Array [
      "header",
      "sections",
      "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection",
      "flexSettings",
      "designtime",
    ],
  },
  Object {
    "description": "Subtitle of header section.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "sections",
      "HeaderCustomSection",
      "subTitle",
    ],
  },
  Object {
    "description": "The fragment for the editable version of the header facet.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "sections",
      "HeaderCustomSection",
      "templateEdit",
    ],
  },
  Object {
    "description": "Defines the loading behavior of the Object Page header.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "sections",
      "HeaderCustomSection",
      "requestGroupId",
    ],
  },
  Object {
    "description": "Defines if the header facet is displayed in the header area.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "sections",
      "HeaderCustomSection",
      "visible",
    ],
  },
  Object {
    "description": "The path to the XML template containing the section control.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "sections",
      "HeaderCustomSection",
      "fragmentName",
    ],
  },
  Object {
    "description": "Use the key of another section as a placement anchor.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "sections",
      "HeaderCustomSection",
      "relatedFacet",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor section.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "sections",
      "HeaderCustomSection",
      "relativePosition",
    ],
  },
  Object {
    "description": "The label of a custom section, preferably as an i18n key.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "sections",
      "HeaderCustomSection",
      "title",
    ],
  },
  Object {
    "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "sections",
      "HeaderCustomSection",
      "stashed",
    ],
  },
  Object {
    "description": "Defines the key user adaptation behavior of the header facet.",
    "id": Array [
      "TravelObjectPage",
      "header",
      "sections",
      "HeaderCustomSection",
      "flexSettings",
    ],
  },
  Object {
    "description": "Defines which settings are available for key user adaptation at design time.",
    "id": Array [
      "header",
      "sections",
      "HeaderCustomSection",
      "flexSettings",
      "designtime",
    ],
  },
  Object {
    "description": "Defines the layout of the sections.
- Page (default): In this mode, all the sections and subsections are added to the same page.
- Tabs: In this mode, the sections are represented as tabs under the header facet.",
    "id": Array [
      "TravelObjectPage",
      "layout",
      "sectionLayout",
    ],
  },
  Object {
    "description": "The path to the XML template containing the section control.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "fragmentName",
    ],
  },
  Object {
    "description": "Use the key of another section as a placement anchor.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "relatedFacet",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor section.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "relativePosition",
    ],
  },
  Object {
    "description": "The label of a custom section, preferably as an i18n key.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "title",
    ],
  },
  Object {
    "description": "Defines the path of the context used in the current page or block.
This setting is defined by the framework.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "controls",
      "FilterBar",
      "contextPath",
    ],
  },
  Object {
    "description": "If true, the search is triggered automatically when a filter value is changed.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "controls",
      "FilterBar",
      "liveMode",
    ],
  },
  Object {
    "description": "Defines the relative path of the property in the metamodel, based on the current contextPath.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "controls",
      "FilterBar",
      "metaPath",
    ],
  },
  Object {
    "description": "Handles the visibility of the 'Clear' button on the FilterBar.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "controls",
      "FilterBar",
      "showClearButton",
    ],
  },
  Object {
    "description": "Displays possible errors during the search in a message box",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "controls",
      "FilterBar",
      "showMessages",
    ],
  },
  Object {
    "description": "Parameter which sets the visibility of the FilterBar building block",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "controls",
      "FilterBar",
      "visible",
    ],
  },
  Object {
    "description": "Unique id of control",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "controls",
      "FilterBar",
      "id",
    ],
  },
  Object {
    "description": "This event is fired when the 'Clear' button is pressed. This is only possible when the 'Clear' button is enabled.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "controls",
      "FilterBar",
      "afterClear",
    ],
  },
  Object {
    "description": "This event is fired after either a filter value or the visibility of a filter item has been changed. The event contains conditions that will be used as filters.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "controls",
      "FilterBar",
      "filterChanged",
    ],
  },
  Object {
    "description": "This event is fired when the 'Go' button is pressed or after a condition change.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "controls",
      "FilterBar",
      "search",
    ],
  },
  Object {
    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "actions",
      "CustomSectionAction",
      "text",
    ],
  },
  Object {
    "description": "Relevant for extension actions; allows the definition of a target action handler.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "actions",
      "CustomSectionAction",
      "press",
    ],
  },
  Object {
    "description": "Defines if the action button is visible.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "actions",
      "CustomSectionAction",
      "visible",
    ],
  },
  Object {
    "description": "Defines if the action is enabled. The default value is true.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "actions",
      "CustomSectionAction",
      "enabled",
    ],
  },
  Object {
    "description": "Defines the position of the action relative to the anchor action.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "CustomSection",
      "actions",
      "CustomSectionAction",
      "position",
    ],
  },
  Object {
    "description": "The key of another action to be used as placement anchor.",
    "id": Array [
      "sections",
      "CustomSection",
      "actions",
      "CustomSectionAction",
      "position",
      "anchor",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor action.",
    "id": Array [
      "sections",
      "CustomSection",
      "actions",
      "CustomSectionAction",
      "position",
      "placement",
    ],
  },
  Object {
    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "type",
    ],
  },
  Object {
    "description": "Enables full screen mode for this table. This adds a button to the table toolbar which opens the table in a full screen dialog.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "enableFullScreen",
    ],
  },
  Object {
    "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "enablePaste",
    ],
  },
  Object {
    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "enableMassEdit",
    ],
  },
  Object {
    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "selectionMode",
    ],
  },
  Object {
    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "selectAll",
    ],
  },
  Object {
    "description": "You can define how many items can be selected at a time using the selectionLimit.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "selectionLimit",
    ],
  },
  Object {
    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "enableExport",
    ],
  },
  Object {
    "description": "Determines whether the content density for ui.table is condensed.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "condensedTableLayout",
    ],
  },
  Object {
    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "hierarchyQualifier",
    ],
  },
  Object {
    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "disableCopyToClipboard",
    ],
  },
  Object {
    "description": "Defines how the table handles the visible rows. Does not apply to responsive tables. Allowed values are Auto and Fixed.
 - Fixed: The table always has as many rows as defined in the rowCount property.
 - Auto (default): The number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the rowCount property.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "rowCountMode",
    ],
  },
  Object {
    "description": "Number of rows to be displayed in the table.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "rowCount",
    ],
  },
  Object {
    "description": "Defines the page behavior when a new record is created.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "creationMode",
    ],
  },
  Object {
    "description": "The name property of TableCreationMode defines the creation mode; possible values are:
- NewPage: The create action leads to a new page.
- InlineCreationRows: No create button will be rendered, an empty row is directly given.
- Inline: The create action leads to a new row at the table (not recommended, use InlineCreationRows instead).
The default is \\"NewPage\\".",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "creationMode",
      "name",
    ],
  },
  Object {
    "description": "In case of inline creation mode you can decide if the new row will be created at the end of the table, or direcly after the currently selected table. The default value is \\"true\\".",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "creationMode",
      "createAtEnd",
    ],
  },
  Object {
    "description": "Supported starting SAPUI5 version 1.111.0, If set to 'true', the empty rows will be hidden when editing an existing object. Selecting the table's Create button will display the empty rows. The default value is \\"true\\".",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "creationMode",
      "inlineCreationRowsHiddenInEditMode",
    ],
  },
  Object {
    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "personalization",
    ],
  },
  Object {
    "description": "Defines whether the user can add and remove columns to a given table.",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "personalization",
      "column",
    ],
  },
  Object {
    "description": "Defines whether the user can sort a given table.",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "personalization",
      "sort",
    ],
  },
  Object {
    "description": "Defines whether the user can filter data of a given table.",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "personalization",
      "filter",
    ],
  },
  Object {
    "description": "With quickVariantSelection, you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "quickVariantSelection",
    ],
  },
  Object {
    "description": "You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "quickVariantSelection",
      "hideTableTitle",
    ],
  },
  Object {
    "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "quickVariantSelection",
      "showCounts",
    ],
  },
  Object {
    "description": "List of annotation paths referring to SelectionVariant annotations.",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "quickVariantSelection",
      "paths",
    ],
  },
  Object {
    "description": "enableMassEdit",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "enableMassEdit",
    ],
  },
  Object {
    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "enableMassEdit",
      "visibleFields",
    ],
  },
  Object {
    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "enableMassEdit",
      "ignoredFields",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::BookingID",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::BookingID",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::BookingID",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::BookingDate",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::BookingDate",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::BookingDate",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "CustomColumns",
      "header",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "CustomColumns",
      "width",
    ],
  },
  Object {
    "description": "Defines a target fragment.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "CustomColumns",
      "template",
    ],
  },
  Object {
    "description": "Aligns the header as well as the content horizontally.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "CustomColumns",
      "horizontalAlign",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
- Default: it will be shown by default in the table.
- Adaptation: it will initially not be shown in the table but be available via end user adaptation
- Hidden: the column is neither available in the table nor in adaptation",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "CustomColumns",
      "availability",
    ],
  },
  Object {
    "description": "Defines the position of the column relative to the anchor column.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "CustomColumns",
      "position",
    ],
  },
  Object {
    "description": "The key of another column to be used as placement anchor.",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "CustomColumns",
      "position",
      "anchor",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor column.",
    "id": Array [
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "CustomColumns",
      "position",
      "placement",
    ],
  },
  Object {
    "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.
Once clicked, a list of properties that can be sorted by are displayed.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "CustomColumns",
      "properties",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::CustomerID",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::CustomerID",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::CustomerID",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::AirlineID",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::AirlineID",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::AirlineID",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::ConnectionID",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::ConnectionID",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::ConnectionID",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::FlightDate",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::FlightDate",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::FlightDate",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::FlightPrice",
      "width",
    ],
  },
  Object {
    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::FlightPrice",
      "availability",
    ],
  },
  Object {
    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
      "table",
      "columns",
      "DataField::FlightPrice",
      "widthIncludingColumnHeader",
    ],
  },
  Object {
    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "GroupSection",
      "subsections",
      "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
      "form",
      "actions",
      "SubSectionActipon",
      "text",
    ],
  },
  Object {
    "description": "Relevant for extension actions; allows the definition of a target action handler.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "GroupSection",
      "subsections",
      "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
      "form",
      "actions",
      "SubSectionActipon",
      "press",
    ],
  },
  Object {
    "description": "Defines if the action button is visible.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "GroupSection",
      "subsections",
      "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
      "form",
      "actions",
      "SubSectionActipon",
      "visible",
    ],
  },
  Object {
    "description": "Defines if the action is enabled. The default value is true.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "GroupSection",
      "subsections",
      "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
      "form",
      "actions",
      "SubSectionActipon",
      "enabled",
    ],
  },
  Object {
    "description": "Defines the position of the action relative to the anchor action.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "GroupSection",
      "subsections",
      "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
      "form",
      "actions",
      "SubSectionActipon",
      "position",
    ],
  },
  Object {
    "description": "The key of another action to be used as placement anchor.",
    "id": Array [
      "sections",
      "GroupSection",
      "subsections",
      "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
      "form",
      "actions",
      "SubSectionActipon",
      "position",
      "anchor",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor action.",
    "id": Array [
      "sections",
      "GroupSection",
      "subsections",
      "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
      "form",
      "actions",
      "SubSectionActipon",
      "position",
      "placement",
    ],
  },
  Object {
    "description": "The path to the XML template containing the section control.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "GroupSection",
      "subsections",
      "CustomSubSection",
      "fragmentName",
    ],
  },
  Object {
    "description": "Use the key of another section as a placement anchor.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "GroupSection",
      "subsections",
      "CustomSubSection",
      "relatedFacet",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor section.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "GroupSection",
      "subsections",
      "CustomSubSection",
      "relativePosition",
    ],
  },
  Object {
    "description": "The label of a custom section, preferably as an i18n key.",
    "id": Array [
      "TravelObjectPage",
      "sections",
      "GroupSection",
      "subsections",
      "CustomSubSection",
      "title",
    ],
  },
  Object {
    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
    "id": Array [
      "TravelObjectPage",
      "footer",
      "actions",
      "CustomFooterAction",
      "text",
    ],
  },
  Object {
    "description": "Relevant for extension actions; allows the definition of a target action handler.",
    "id": Array [
      "TravelObjectPage",
      "footer",
      "actions",
      "CustomFooterAction",
      "press",
    ],
  },
  Object {
    "description": "Defines if the action button is visible.",
    "id": Array [
      "TravelObjectPage",
      "footer",
      "actions",
      "CustomFooterAction",
      "visible",
    ],
  },
  Object {
    "description": "Defines if the action is enabled. The default value is true.",
    "id": Array [
      "TravelObjectPage",
      "footer",
      "actions",
      "CustomFooterAction",
      "enabled",
    ],
  },
  Object {
    "description": "Defines the position of the action relative to the anchor action.",
    "id": Array [
      "TravelObjectPage",
      "footer",
      "actions",
      "CustomFooterAction",
      "position",
    ],
  },
  Object {
    "description": "The key of another action to be used as placement anchor.",
    "id": Array [
      "footer",
      "actions",
      "CustomFooterAction",
      "position",
      "anchor",
    ],
  },
  Object {
    "description": "Define the placement, either before or after the anchor action.",
    "id": Array [
      "footer",
      "actions",
      "CustomFooterAction",
      "position",
      "placement",
    ],
  },
]
`;
