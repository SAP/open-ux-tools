{
    "type": "object",
    "properties": {
        "header": {
            "$ref": "#/definitions/ObjectPageHeader",
            "propertyIndex": 0
        },
        "layout": {
            "$ref": "#/definitions/ObjectPageLayout",
            "propertyIndex": 1
        },
        "variantManagement": {
            "$ref": "#/definitions/VariantManagementTypeObjectPage",
            "description": "Determines whether variant management is enabled for tables:\n- None (default): Variant management is disabled.\n- Control: Variant management can be enabled individually for each control using personalization.",
            "artifactType": "Manifest",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f26d42bea11c4deda82c7a2e00c9bc05"
        },
        "sections": {
            "$ref": "#/definitions/Sections",
            "propertyIndex": 2
        },
        "footer": {
            "$ref": "#/definitions/ObjectPageFooter",
            "propertyIndex": 3
        },
        "$schema": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "definitions": {
        "ObjectPageHeader": {
            "description": "Header",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "editableHeaderContent": {
                    "description": "Set editableHeaderContent to true to make the header fields editable.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "visible": {
                    "description": "Set visible to true to make the header visible.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "anchorBarVisible": {
                    "description": "Determines whether the anchor bar is displayed.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "actions": {
                    "$ref": "#/definitions/ObjectPageHeaderActions"
                },
                "sections": {
                    "$ref": "#/definitions/HeaderSections"
                }
            },
            "additionalProperties": false,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.HeaderInfo"
        },
        "ObjectPageHeaderActions": {
            "type": "object",
            "properties": {
                "EditAction": {
                    "$ref": "#/definitions/ObjectPageHeaderAction<EditAction>",
                    "propertyIndex": 0
                },
                "DeleteAction": {
                    "$ref": "#/definitions/ObjectPageHeaderAction<DeleteAction>",
                    "propertyIndex": 1
                },
                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": {
                    "$ref": "#/definitions/ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                    "propertyIndex": 2
                },
                "HeaderAction": {
                    "$ref": "#/definitions/CustomHeaderActionOP",
                    "description": "HeaderAction",
                    "keys": [
                        {
                            "name": "Key",
                            "value": "HeaderAction"
                        }
                    ],
                    "actionType": "Custom",
                    "propertyIndex": 3
                },
                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": {
                    "$ref": "#/definitions/ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                    "propertyIndex": 4
                },
                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": {
                    "$ref": "#/definitions/ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                    "propertyIndex": 5
                },
                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": {
                    "$ref": "#/definitions/ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                    "propertyIndex": 6
                },
                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": {
                    "$ref": "#/definitions/ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                    "propertyIndex": 7
                },
                "RelatedApps": {
                    "$ref": "#/definitions/RelatedApps",
                    "description": "Related Apps",
                    "propertyIndex": 8,
                    "artifactType": "Manifest",
                    "actionType": "Standard",
                    "isViewNode": true,
                    "keys": [
                        {
                            "name": "Action",
                            "value": "RelatedApps"
                        }
                    ]
                }
            },
            "description": "Actions",
            "additionalProperties": {
                "$ref": "#/definitions/CustomHeaderActionOP"
            },
            "isViewNode": true,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification"
        },
        "CustomHeaderActionOP": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/CustomHeaderActionPositionOP",
                    "description": "Defines the position of the action relative to the anchor action.",
                    "artifactType": "Manifest"
                },
                "text": {
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "press": {
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "visible": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action button is visible.",
                    "artifactType": "Manifest"
                },
                "enabled": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action is enabled. The default value is true.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "press",
                "text"
            ],
            "isViewNode": true,
            "description": "Custom Action"
        },
        "CustomHeaderActionPositionOP": {
            "type": "object",
            "properties": {
                "anchor": {
                    "description": "The key of another action to be used as placement anchor.",
                    "artifactType": "Manifest",
                    "type": "string",
                    "oneOf": [
                        {
                            "const": "EditAction",
                            "description": "Edit"
                        },
                        {
                            "const": "DeleteAction",
                            "description": "Delete"
                        },
                        {
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Set To Booked"
                        },
                        {
                            "const": "HeaderAction",
                            "description": "HeaderAction",
                            "custom": true
                        },
                        {
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Set To New"
                        },
                        {
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Check Travel"
                        },
                        {
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Create new Booking"
                        },
                        {
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Deduct Discount"
                        }
                    ]
                },
                "placement": {
                    "$ref": "#/definitions/ActionPlacement",
                    "description": "Define the placement, either before or after the anchor action.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "placement"
            ]
        },
        "ActionPlacement": {
            "enum": [
                "After",
                "Before"
            ],
            "type": "string"
        },
        "ObjectPageHeaderAction": {
            "type": "object",
            "properties": {
                "afterExecution": {
                    "$ref": "#/definitions/ActionAfterExecutionConfigurationObjectPageHeader",
                    "description": "Settings that control the behavior after creating a new entry.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false
        },
        "ActionAfterExecutionConfigurationObjectPageHeader": {
            "type": "object",
            "properties": {
                "navigateToInstance": {
                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d"
                },
                "enableAutoScroll": {
                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false
        },
        "RelatedApps": {
            "type": "object",
            "properties": {
                "showRelatedApps": {
                    "description": "Set showRelatedApps to true to show the navigation button for related apps.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "additionalSemanticObjects": {
                    "$ref": "#/definitions/AdditionalSemanticObjects",
                    "description": "Additional Semantic Objects.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "additionalSemanticObjects"
            ]
        },
        "AdditionalSemanticObjects": {
            "description": "Adds additional links under the Related Apps button by specifying semantic objects.",
            "isViewNode": true,
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/AdditionalSemanticObject"
            }
        },
        "AdditionalSemanticObject": {
            "isViewNode": true,
            "type": "object",
            "properties": {
                "allowedActions": {
                    "description": "Define the list of semantic object links displayed under the Related Apps button.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/8dcfe2e4555f49db8859cb6eb838692e"
                },
                "unavailableActions": {
                    "description": "Determines the navigation actions of the semantic object that are hidden from under the Related Apps button.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/8dcfe2e4555f49db8859cb6eb838692e"
                },
                "mapping": {
                    "$ref": "#/definitions/SemanticObjectPropertyMapping",
                    "description": "Mapping, defined for a semantic object, consists of key value pairs. The key defines the way in which the source application (object page) passes the context. The value represents the term used for the same entity in the target app.",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/8dcfe2e4555f49db8859cb6eb838692e"
                }
            },
            "additionalProperties": false
        },
        "SemanticObjectPropertyMapping": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "ObjectPageHeaderActionGroup": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/ObjectPageHeaderAction"
            }
        },
        "HeaderSections": {
            "description": "Header Sections",
            "isViewNode": true,
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/ObjectPageCustomHeaderSectionFragment"
            },
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.HeaderFacets",
            "properties": {
                "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection": {
                    "$ref": "#/definitions/ObjectPageHeaderSectionForm<@com.sap.vocabularies.UI.v1.FieldGroup::HeaderFormSection>",
                    "propertyIndex": 0
                },
                "HeaderCustomSection": {
                    "$ref": "#/definitions/ObjectPageCustomHeaderSectionFragment",
                    "description": "HeaderCustomSection",
                    "keys": [
                        {
                            "name": "Key",
                            "value": "HeaderCustomSection"
                        }
                    ],
                    "actionType": "Custom",
                    "propertyIndex": 1
                }
            }
        },
        "FlexSettings": {
            "type": "object",
            "properties": {
                "designtime": {
                    "$ref": "#/definitions/DesignTime",
                    "description": "Defines which settings are available for key user adaptation at design time.",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/ccd45ba3f0b446a0901b2c9d42b8ad53"
                }
            },
            "additionalProperties": false
        },
        "DesignTime": {
            "enum": [
                "Default",
                "not-adaptable",
                "not-adaptable-tree",
                "not-adaptable-visibility",
                "not-removable"
            ],
            "type": "string"
        },
        "ObjectPageCustomHeaderSectionFragment": {
            "description": "Custom Section fragment",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "subTitle": {
                    "description": "Subtitle of header section.",
                    "i18nClassification": "TIT: Custom header section subtitle",
                    "type": "string",
                    "artifactType": "Manifest"
                },
                "templateEdit": {
                    "description": "The fragment for the editable version of the header facet.",
                    "type": "string",
                    "artifactType": "Manifest"
                },
                "requestGroupId": {
                    "$ref": "#/definitions/RequestGroupId",
                    "description": "Defines the loading behavior of the Object Page header.",
                    "artifactType": "Manifest"
                },
                "flexSettings": {
                    "$ref": "#/definitions/ObjectPageCustomHeaderSectionFlexSettings",
                    "description": "Defines the key user adaptation behavior of the header facet.",
                    "artifactType": "Manifest"
                },
                "visible": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the header facet is displayed in the header area.",
                    "artifactType": "Manifest"
                },
                "fragmentName": {
                    "description": "The path to the XML template containing the section control.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "relatedFacet": {
                    "description": "Use the key of another section as a placement anchor.",
                    "artifactType": "Manifest",
                    "displayName": "Anchor",
                    "type": "string",
                    "oneOf": [
                        {
                            "const": "HeaderFormSection",
                            "description": "HeaderFormSection"
                        },
                        {
                            "const": "HeaderCustomSection",
                            "description": "HeaderCustomSection",
                            "custom": true
                        }
                    ]
                },
                "relativePosition": {
                    "$ref": "#/definitions/SectionPosition",
                    "description": "Define the placement, either before or after the anchor section.",
                    "artifactType": "Manifest"
                },
                "title": {
                    "description": "The label of a custom section, preferably as an i18n key.",
                    "artifactType": "Manifest",
                    "i18nClassification": "TIT: Custom section title",
                    "type": "string"
                },
                "stashed": {
                    "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "fragmentName",
                "title"
            ]
        },
        "RequestGroupId": {
            "enum": [
                "Decoration",
                "Heroes",
                "LongRunners",
                "Workers"
            ],
            "type": "string"
        },
        "ObjectPageCustomHeaderSectionFlexSettings": {
            "type": "object",
            "properties": {
                "designtime": {
                    "$ref": "#/definitions/DesignTime",
                    "description": "Defines which settings are available for key user adaptation at design time.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false
        },
        "SectionPosition": {
            "displayName": "Placement",
            "enum": [
                "After",
                "Before"
            ],
            "type": "string"
        },
        "ObjectPageLayout": {
            "description": "Page Layout",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "sectionLayout": {
                    "$ref": "#/definitions/SectionLayoutType",
                    "description": "Defines the layout of the sections.\n- Page (default): In this mode, all the sections and subsections are added to the same page.\n- Tabs: In this mode, the sections are represented as tabs under the header facet.",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/facfea09018d4376acaceddb7e3f03b6"
                }
            },
            "additionalProperties": false
        },
        "SectionLayoutType": {
            "enum": [
                "Page",
                "Tabs"
            ],
            "type": "string"
        },
        "VariantManagementTypeObjectPage": {
            "enum": [
                "Control",
                "None"
            ],
            "type": "string"
        },
        "ObjectPageAnalyticalTableV4": {
            "description": "Table",
            "isViewNode": true,
            "controlProperty": "type",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                    "type": "string",
                    "const": "AnalyticalTable",
                    "artifactType": "Manifest"
                },
                "enableFullScreen": {
                    "description": "Enables full screen mode for this table. This adds a button to the table toolbar which opens the table in a full screen dialog.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "enablePaste": {
                    "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "toolBar": {
                    "$ref": "#/definitions/ObjectPageToolBar",
                    "description": "Tool Bar"
                },
                "creationMode": {
                    "$ref": "#/definitions/TableCreationModeOP",
                    "description": "Defines the page behavior when a new record is created.",
                    "artifactType": "Manifest"
                },
                "personalization": {
                    "$ref": "#/definitions/PersonalizationTypeOP",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                    "artifactType": "Manifest"
                },
                "quickVariantSelection": {
                    "$ref": "#/definitions/QuickVariantSelectionV4OP",
                    "description": "With quickVariantSelection, you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                    "artifactType": "Manifest"
                },
                "columns": {
                    "$ref": "#/definitions/GenericColumnsOP"
                },
                "enableMassEdit": {
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                    "anyOf": [
                        {
                            "type": "object",
                            "properties": {
                                "visibleFields": {
                                    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "ignoredFields": {
                                    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "additionalProperties": false
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "selectionMode": {
                    "$ref": "#/definitions/SelectionMode",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.\n- Auto: This type is deprecated. Choose any of the following modes:\n- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.\n- Single: This type allows single table selection if relevant actions are available in the toolbar.\n- None: No table selection is possible in display mode.",
                    "artifactType": "Manifest"
                },
                "selectAll": {
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "selectionLimit": {
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                    "artifactType": "Manifest"
                },
                "enableExport": {
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd"
                },
                "condensedTableLayout": {
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c"
                },
                "hierarchyQualifier": {
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "type": "string",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec"
                },
                "widthIncludingColumnHeader": {
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "disableCopyToClipboard": {
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "rowCountMode": {
                    "$ref": "#/definitions/RowCountMode",
                    "description": "Defines how the table handles the visible rows. Does not apply to responsive tables. Allowed values are Auto and Fixed.\n - Fixed: The table always has as many rows as defined in the rowCount property.\n - Auto (default): The number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the rowCount property.",
                    "artifactType": "Manifest"
                },
                "rowCount": {
                    "description": "Number of rows to be displayed in the table.",
                    "minimum": 0,
                    "type": "number",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false
        },
        "SelectType": {
            "enum": [
                "multi",
                "single"
            ],
            "type": "string"
        },
        "CustomTableActionOP": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/CustomActionPositionOP",
                    "description": "Defines the position of the action relative to the anchor action.",
                    "artifactType": "Manifest"
                },
                "requiresSelection": {
                    "description": "Indicates whether the action requires a selection of items.",
                    "artifactType": "Manifest",
                    "type": "boolean"
                },
                "text": {
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "press": {
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "visible": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action button is visible.",
                    "artifactType": "Manifest"
                },
                "enabled": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action is enabled. The default value is true.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "press",
                "text"
            ]
        },
        "CustomActionPositionOP": {
            "type": "object",
            "properties": {
                "anchor": {
                    "description": "The key of another action to be used as placement anchor.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "placement": {
                    "$ref": "#/definitions/ActionPlacement",
                    "description": "Define the placement, either before or after the anchor action.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "placement"
            ]
        },
        "ObjectPageToolBarActionGroup": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/ObjectPageToolBarAction"
            }
        },
        "TableCreationModeOP": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TableCreationModeType",
                    "description": "The name property of TableCreationMode defines the creation mode; possible values are:\n- NewPage: The create action leads to a new page.\n- InlineCreationRows: No create button will be rendered, an empty row is directly given.\n- Inline: The create action leads to a new row at the table (not recommended, use InlineCreationRows instead).\nThe default is \"NewPage\".",
                    "artifactType": "Manifest"
                },
                "createAtEnd": {
                    "description": "In case of inline creation mode you can decide if the new row will be created at the end of the table, or direcly after the currently selected table. The default value is \"true\".",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "inlineCreationRowsHiddenInEditMode": {
                    "description": "Supported starting SAPUI5 version 1.111.0, If set to 'true', the empty rows will be hidden when editing an existing object. Selecting the table's Create button will display the empty rows. The default value is \"true\".",
                    "type": "boolean",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false
        },
        "TableCreationModeType": {
            "enum": [
                "Inline",
                "InlineCreationRows",
                "NewPage"
            ],
            "type": "string"
        },
        "PersonalizationTypeOP": {
            "type": "object",
            "properties": {
                "column": {
                    "description": "Defines whether the user can add and remove columns to a given table.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "sort": {
                    "description": "Defines whether the user can sort a given table.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "filter": {
                    "description": "Defines whether the user can filter data of a given table.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false
        },
        "AnnotationPathAsObject": {
            "type": "object",
            "properties": {
                "annotationPath": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "required": [
                "annotationPath"
            ]
        },
        "ObjectPageTableColumn": {
            "description": "Table Column",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "width": {
                    "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize"
                },
                "availability": {
                    "$ref": "#/definitions/Availability",
                    "description": "Defines where the column should be shown.\nDefault: it will be shown by default in the table.\nAdaptation: it will initially not be shown in the table but be available via end user adaptation.\nHidden: the column is neither available in the table nor in adaptation.",
                    "artifactType": "Manifest"
                },
                "widthIncludingColumnHeader": {
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                }
            },
            "additionalProperties": false
        },
        "Availability": {
            "enum": [
                "Adaptation",
                "Default",
                "Hidden"
            ],
            "type": "string"
        },
        "ObjectPageTableColumnAction": {
            "description": "Inline Action for Object Page",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "width": {
                    "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize"
                },
                "availability": {
                    "$ref": "#/definitions/Availability",
                    "description": "Defines where the column should be shown.\nDefault: it will be shown by default in the table.\nAdaptation: it will initially not be shown in the table but be available via end user adaptation.\nHidden: the column is neither available in the table nor in adaptation.",
                    "artifactType": "Manifest"
                },
                "widthIncludingColumnHeader": {
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                }
            },
            "additionalProperties": false
        },
        "TableCustomColumnOP": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/PositionOP",
                    "description": "Defines the position of the column relative to the anchor column.",
                    "artifactType": "Manifest"
                },
                "header": {
                    "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
                    "i18nClassification": "COL: Custom column header text",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "width": {
                    "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "artifactType": "Manifest",
                    "type": "string",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize"
                },
                "template": {
                    "description": "Defines a target fragment.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "horizontalAlign": {
                    "$ref": "#/definitions/HorizontalAlign",
                    "description": "Aligns the header as well as the content horizontally.",
                    "artifactType": "Manifest"
                },
                "availability": {
                    "$ref": "#/definitions/Availability",
                    "description": "Defines where the column should be shown.\n- Default: it will be shown by default in the table.\n- Adaptation: it will initially not be shown in the table but be available via end user adaptation\n- Hidden: the column is neither available in the table nor in adaptation",
                    "artifactType": "Manifest"
                },
                "properties": {
                    "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.\nOnce clicked, a list of properties that can be sorted by are displayed.",
                    "artifactType": "Manifest",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "additionalProperties": false,
            "required": [
                "header",
                "template"
            ]
        },
        "PositionOP": {
            "type": "object",
            "properties": {
                "anchor": {
                    "description": "The key of another column to be used as placement anchor.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "placement": {
                    "$ref": "#/definitions/Placement",
                    "description": "Define the placement, either before or after the anchor column.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "placement"
            ]
        },
        "Placement": {
            "enum": [
                "After",
                "Before"
            ],
            "type": "string"
        },
        "HorizontalAlign": {
            "enum": [
                "Begin",
                "Center",
                "End"
            ],
            "type": "string"
        },
        "SelectionMode": {
            "enum": [
                "Auto",
                "Multi",
                "None",
                "Single"
            ],
            "type": "string"
        },
        "RowCountMode": {
            "enum": [
                "Auto",
                "Fixed"
            ],
            "type": "string"
        },
        "ObjectPageGridTableV4": {
            "description": "Table",
            "isViewNode": true,
            "controlProperty": "type",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                    "type": "string",
                    "const": "GridTable",
                    "artifactType": "Manifest"
                },
                "enableFullScreen": {
                    "description": "Enables full screen mode for this table. This adds a button to the table toolbar which opens the table in a full screen dialog.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "enablePaste": {
                    "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "toolBar": {
                    "$ref": "#/definitions/ObjectPageToolBar",
                    "description": "Tool Bar"
                },
                "creationMode": {
                    "$ref": "#/definitions/TableCreationModeOP",
                    "description": "Defines the page behavior when a new record is created.",
                    "artifactType": "Manifest"
                },
                "personalization": {
                    "$ref": "#/definitions/PersonalizationTypeOP",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                    "artifactType": "Manifest"
                },
                "quickVariantSelection": {
                    "$ref": "#/definitions/QuickVariantSelectionV4OP",
                    "description": "With quickVariantSelection, you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                    "artifactType": "Manifest"
                },
                "columns": {
                    "$ref": "#/definitions/GenericColumnsOP"
                },
                "enableMassEdit": {
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                    "anyOf": [
                        {
                            "type": "object",
                            "properties": {
                                "visibleFields": {
                                    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "ignoredFields": {
                                    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "additionalProperties": false
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "selectionMode": {
                    "$ref": "#/definitions/SelectionMode",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.\n- Auto: This type is deprecated. Choose any of the following modes:\n- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.\n- Single: This type allows single table selection if relevant actions are available in the toolbar.\n- None: No table selection is possible in display mode.",
                    "artifactType": "Manifest"
                },
                "selectAll": {
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "selectionLimit": {
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                    "artifactType": "Manifest"
                },
                "enableExport": {
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd"
                },
                "condensedTableLayout": {
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c"
                },
                "hierarchyQualifier": {
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "type": "string",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec"
                },
                "widthIncludingColumnHeader": {
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "disableCopyToClipboard": {
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "rowCountMode": {
                    "$ref": "#/definitions/RowCountMode",
                    "description": "Defines how the table handles the visible rows. Does not apply to responsive tables. Allowed values are Auto and Fixed.\n - Fixed: The table always has as many rows as defined in the rowCount property.\n - Auto (default): The number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the rowCount property.",
                    "artifactType": "Manifest"
                },
                "rowCount": {
                    "description": "Number of rows to be displayed in the table.",
                    "minimum": 0,
                    "type": "number",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false
        },
        "ObjectPageResponsiveTableV4": {
            "description": "Table",
            "isViewNode": true,
            "controlProperty": "type",
            "defaultControlProperty": true,
            "type": "object",
            "properties": {
                "type": {
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                    "type": "string",
                    "const": "ResponsiveTable",
                    "artifactType": "Manifest"
                },
                "enableFullScreen": {
                    "description": "Enables full screen mode for this table. This adds a button to the table toolbar which opens the table in a full screen dialog.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "enablePaste": {
                    "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "toolBar": {
                    "$ref": "#/definitions/ObjectPageToolBar",
                    "description": "Tool Bar"
                },
                "creationMode": {
                    "$ref": "#/definitions/TableCreationModeOP",
                    "description": "Defines the page behavior when a new record is created.",
                    "artifactType": "Manifest"
                },
                "personalization": {
                    "$ref": "#/definitions/PersonalizationTypeOP",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                    "artifactType": "Manifest"
                },
                "quickVariantSelection": {
                    "$ref": "#/definitions/QuickVariantSelectionV4OP",
                    "description": "With quickVariantSelection, you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                    "artifactType": "Manifest"
                },
                "columns": {
                    "$ref": "#/definitions/GenericColumnsOP"
                },
                "enableMassEdit": {
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                    "anyOf": [
                        {
                            "type": "object",
                            "properties": {
                                "visibleFields": {
                                    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "ignoredFields": {
                                    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "additionalProperties": false
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "selectionMode": {
                    "$ref": "#/definitions/SelectionMode",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.\n- Auto: This type is deprecated. Choose any of the following modes:\n- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.\n- Single: This type allows single table selection if relevant actions are available in the toolbar.\n- None: No table selection is possible in display mode.",
                    "artifactType": "Manifest"
                },
                "selectAll": {
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "selectionLimit": {
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                    "artifactType": "Manifest"
                },
                "enableExport": {
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd"
                },
                "condensedTableLayout": {
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c"
                },
                "hierarchyQualifier": {
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "type": "string",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec"
                },
                "widthIncludingColumnHeader": {
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "disableCopyToClipboard": {
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                }
            },
            "additionalProperties": false
        },
        "ObjectPageTreeTableV4": {
            "description": "Table",
            "isViewNode": true,
            "controlProperty": "type",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                    "type": "string",
                    "const": "TreeTable",
                    "artifactType": "Manifest"
                },
                "enableFullScreen": {
                    "description": "Enables full screen mode for this table. This adds a button to the table toolbar which opens the table in a full screen dialog.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "enablePaste": {
                    "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "toolBar": {
                    "$ref": "#/definitions/ObjectPageToolBar",
                    "description": "Tool Bar"
                },
                "creationMode": {
                    "$ref": "#/definitions/TableCreationModeOP",
                    "description": "Defines the page behavior when a new record is created.",
                    "artifactType": "Manifest"
                },
                "personalization": {
                    "$ref": "#/definitions/PersonalizationTypeOP",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                    "artifactType": "Manifest"
                },
                "quickVariantSelection": {
                    "$ref": "#/definitions/QuickVariantSelectionV4OP",
                    "description": "With quickVariantSelection, you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                    "artifactType": "Manifest"
                },
                "columns": {
                    "$ref": "#/definitions/GenericColumnsOP"
                },
                "enableMassEdit": {
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                    "anyOf": [
                        {
                            "type": "object",
                            "properties": {
                                "visibleFields": {
                                    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "ignoredFields": {
                                    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "additionalProperties": false
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "selectionMode": {
                    "$ref": "#/definitions/SelectionMode",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.\n- Auto: This type is deprecated. Choose any of the following modes:\n- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.\n- Single: This type allows single table selection if relevant actions are available in the toolbar.\n- None: No table selection is possible in display mode.",
                    "artifactType": "Manifest"
                },
                "selectAll": {
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "selectionLimit": {
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                    "artifactType": "Manifest"
                },
                "enableExport": {
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd"
                },
                "condensedTableLayout": {
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c"
                },
                "hierarchyQualifier": {
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "type": "string",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec"
                },
                "widthIncludingColumnHeader": {
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "disableCopyToClipboard": {
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "rowCountMode": {
                    "$ref": "#/definitions/RowCountMode",
                    "description": "Defines how the table handles the visible rows. Does not apply to responsive tables. Allowed values are Auto and Fixed.\n - Fixed: The table always has as many rows as defined in the rowCount property.\n - Auto (default): The number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the rowCount property.",
                    "artifactType": "Manifest"
                },
                "rowCount": {
                    "description": "Number of rows to be displayed in the table.",
                    "minimum": 0,
                    "type": "number",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false
        },
        "ObjectPageForm": {
            "description": "Object Page Form",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "fields": {
                    "$ref": "#/definitions/ObjectPageFormFields"
                },
                "actions": {
                    "$ref": "#/definitions/ObjectPageFormActions"
                }
            },
            "additionalProperties": false
        },
        "ObjectPageFormFields": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "properties": {},
                "additionalProperties": true
            }
        },
        "ObjectPageFormActions": {
            "type": "object",
            "additionalProperties": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/CustomFormActionOP"
                    },
                    {
                        "$ref": "#/definitions/FormAction"
                    },
                    {
                        "$ref": "#/definitions/ObjectPageFormActionGroup"
                    }
                ]
            }
        },
        "CustomFormActionOP": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/CustomActionPositionOP",
                    "description": "Defines the position of the action relative to the anchor action.",
                    "artifactType": "Manifest"
                },
                "text": {
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "press": {
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "visible": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action button is visible.",
                    "artifactType": "Manifest"
                },
                "enabled": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action is enabled. The default value is true.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "press",
                "text"
            ]
        },
        "FormAction": {
            "type": "object",
            "properties": {
                "afterExecution": {
                    "$ref": "#/definitions/ActionAfterExecutionConfigurationForm",
                    "description": "Settings that control the behavior after creating a new entry.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false
        },
        "ActionAfterExecutionConfigurationForm": {
            "type": "object",
            "properties": {
                "navigateToInstance": {
                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d"
                },
                "enableAutoScroll": {
                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false
        },
        "ObjectPageFormActionGroup": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/FormAction"
            }
        },
        "ObjectPageCustomSubSectionFragment": {
            "description": "Custom Sub Section",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "fragmentName": {
                    "description": "The path to the XML template containing the section control.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "relatedFacet": {
                    "description": "Use the key of another section as a placement anchor.",
                    "artifactType": "Manifest",
                    "displayName": "Anchor",
                    "type": "string"
                },
                "relativePosition": {
                    "$ref": "#/definitions/SectionPosition",
                    "description": "Define the placement, either before or after the anchor section.",
                    "artifactType": "Manifest"
                },
                "title": {
                    "description": "The label of a custom section, preferably as an i18n key.",
                    "artifactType": "Manifest",
                    "i18nClassification": "TIT: Custom section title",
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "required": [
                "fragmentName",
                "title"
            ]
        },
        "CustomSections": {
            "description": "Custom Sections",
            "isViewNode": true,
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/ObjectPageCustomSectionFragment"
            }
        },
        "ObjectPageCustomSectionFragment": {
            "description": "Fragment",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "fragmentName": {
                    "description": "The path to the XML template containing the section control.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "actions": {
                    "$ref": "#/definitions/ObjectPageCustomSectionActions"
                },
                "relatedFacet": {
                    "description": "Use the key of another section as a placement anchor.",
                    "artifactType": "Manifest",
                    "displayName": "Anchor",
                    "type": "string",
                    "oneOf": [
                        {
                            "const": "Travel",
                            "description": "Travel - Managed with Semantic Key"
                        },
                        {
                            "const": "CustomSection",
                            "description": "CustomSection",
                            "custom": true
                        },
                        {
                            "const": "Booking",
                            "description": "Booking"
                        },
                        {
                            "const": "GroupSection",
                            "description": "Group Section"
                        }
                    ]
                },
                "relativePosition": {
                    "$ref": "#/definitions/SectionPosition",
                    "description": "Define the placement, either before or after the anchor section.",
                    "artifactType": "Manifest"
                },
                "title": {
                    "description": "The label of a custom section, preferably as an i18n key.",
                    "artifactType": "Manifest",
                    "i18nClassification": "TIT: Custom section title",
                    "type": "string"
                },
                "controls": {
                    "type": "object"
                }
            },
            "additionalProperties": false,
            "required": [
                "fragmentName",
                "title"
            ]
        },
        "ObjectPageCustomSectionActions": {
            "description": "Actions",
            "isViewNode": true,
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/CustomSectionActionOP"
            },
            "properties": {}
        },
        "CustomSectionActionOP": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/CustomSectionActionPositionOP",
                    "description": "Defines the position of the action relative to the anchor action.",
                    "artifactType": "Manifest"
                },
                "text": {
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "press": {
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "visible": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action button is visible.",
                    "artifactType": "Manifest"
                },
                "enabled": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action is enabled. The default value is true.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "press",
                "text"
            ]
        },
        "CustomSectionActionPositionOP": {
            "type": "object",
            "properties": {
                "anchor": {
                    "description": "The key of another action to be used as placement anchor.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "placement": {
                    "$ref": "#/definitions/ActionPlacement",
                    "description": "Define the placement, either before or after the anchor action.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "placement"
            ]
        },
        "CustomFooterActionOP": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/CustomFooterActionPositionOP",
                    "description": "Defines the position of the action relative to the anchor action.",
                    "artifactType": "Manifest"
                },
                "text": {
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "press": {
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "visible": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action button is visible.",
                    "artifactType": "Manifest"
                },
                "enabled": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action is enabled. The default value is true.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "press",
                "text"
            ],
            "isViewNode": true,
            "description": "Custom Action"
        },
        "CustomFooterActionPositionOP": {
            "type": "object",
            "properties": {
                "anchor": {
                    "description": "The key of another action to be used as placement anchor.",
                    "artifactType": "Manifest",
                    "type": "string",
                    "oneOf": [
                        {
                            "const": "CustomFooterAction",
                            "description": "CustomFooterAction",
                            "custom": true
                        }
                    ]
                },
                "placement": {
                    "$ref": "#/definitions/ActionPlacement",
                    "description": "Define the placement, either before or after the anchor action.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "placement"
            ]
        },
        "FooterActionV4": {
            "type": "object",
            "properties": {
                "afterExecution": {
                    "$ref": "#/definitions/ActionAfterExecutionConfigurationFooter",
                    "description": "Settings that control the behavior after creating a new entry.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false
        },
        "ActionAfterExecutionConfigurationFooter": {
            "type": "object",
            "properties": {
                "navigateToInstance": {
                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d"
                },
                "enableAutoScroll": {
                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false
        },
        "Sections": {
            "type": "object",
            "properties": {
                "@com.sap.vocabularies.UI.v1.Identification": {
                    "$ref": "#/definitions/ObjectPageSectionForm<@com.sap.vocabularies.UI.v1.Identification>",
                    "propertyIndex": 0
                },
                "CustomSection": {
                    "$ref": "#/definitions/ObjectPageCustomSectionFragment<CustomSection>",
                    "description": "CustomSection",
                    "keys": [
                        {
                            "name": "Key",
                            "value": "CustomSection"
                        }
                    ],
                    "actionType": "Custom",
                    "propertyIndex": 1
                },
                "_Booking::@com.sap.vocabularies.UI.v1.LineItem": {
                    "$ref": "#/definitions/ObjectPageSectionTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "propertyIndex": 2
                },
                "GroupSection": {
                    "type": "object",
                    "properties": {
                        "subsections": {
                            "additionalProperties": {
                                "$ref": "#/definitions/ObjectPageCustomSubSectionFragment<GroupSection>"
                            },
                            "type": "object",
                            "properties": {
                                "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1": {
                                    "$ref": "#/definitions/ObjectPageSectionForm<@com.sap.vocabularies.UI.v1.FieldGroup::SubSection1>",
                                    "propertyIndex": 0
                                },
                                "CustomSubSection": {
                                    "$ref": "#/definitions/ObjectPageCustomSubSectionFragment<GroupSection>",
                                    "description": "Custom Sub Section",
                                    "keys": [
                                        {
                                            "name": "Key",
                                            "value": "CustomSubSection"
                                        }
                                    ],
                                    "actionType": "Custom",
                                    "propertyIndex": 1
                                }
                            },
                            "description": "Subsections",
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/2",
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "keys": [
                                {
                                    "name": "ID",
                                    "value": "GroupSection"
                                }
                            ],
                            "isViewNode": true
                        }
                    },
                    "additionalProperties": false,
                    "isViewNode": true,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/2",
                    "title": "Facet ID: GroupSection",
                    "keys": [
                        {
                            "name": "ID",
                            "value": "GroupSection"
                        }
                    ],
                    "description": "Group Section",
                    "propertyIndex": 3
                }
            },
            "additionalProperties": {
                "$ref": "#/definitions/ObjectPageCustomSectionFragment"
            },
            "description": "Sections",
            "isViewNode": true,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets"
        },
        "ObjectPageHeaderAction<EditAction>": {
            "type": "object",
            "description": "Edit",
            "additionalProperties": true,
            "isViewNode": true,
            "propertyIndex": 0,
            "keys": [
                {
                    "name": "Action",
                    "value": "Edit"
                }
            ],
            "actionType": "Standard",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Container/Travel/@com.sap.vocabularies.UI.v1.UpdateHidden"
        },
        "ObjectPageHeaderAction<DeleteAction>": {
            "type": "object",
            "description": "Delete",
            "additionalProperties": true,
            "isViewNode": true,
            "propertyIndex": 1,
            "keys": [
                {
                    "name": "Action",
                    "value": "Delete"
                }
            ],
            "actionType": "Standard",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Container/Travel/@com.sap.vocabularies.UI.v1.DeleteHidden"
        },
        "ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>": {
            "type": "object",
            "$ref": "#/definitions/ObjectPageHeaderAction",
            "description": "Set To Booked",
            "isViewNode": true,
            "dataType": "DataFieldForAction",
            "propertyIndex": 2,
            "keys": [
                {
                    "name": "Action",
                    "value": "setToBooked"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
            "actionType": "Annotation",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/5"
        },
        "ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>": {
            "type": "object",
            "$ref": "#/definitions/ObjectPageHeaderAction",
            "description": "Set To New",
            "isViewNode": true,
            "dataType": "DataFieldForAction",
            "propertyIndex": 3,
            "keys": [
                {
                    "name": "Action",
                    "value": "setToNew"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
            "actionType": "Annotation",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/6"
        },
        "ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>": {
            "type": "object",
            "$ref": "#/definitions/ObjectPageHeaderAction",
            "description": "Check Travel",
            "isViewNode": true,
            "dataType": "DataFieldForAction",
            "propertyIndex": 4,
            "keys": [
                {
                    "name": "Action",
                    "value": "Check"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
            "actionType": "Annotation",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/7"
        },
        "ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>": {
            "type": "object",
            "$ref": "#/definitions/ObjectPageHeaderAction",
            "description": "Create new Booking",
            "isViewNode": true,
            "dataType": "DataFieldForAction",
            "propertyIndex": 5,
            "keys": [
                {
                    "name": "Action",
                    "value": "createBookingDraft"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
            "actionType": "Annotation",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/8"
        },
        "ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>": {
            "type": "object",
            "$ref": "#/definitions/ObjectPageHeaderAction",
            "description": "Deduct Discount",
            "isViewNode": true,
            "dataType": "DataFieldForAction",
            "propertyIndex": 6,
            "keys": [
                {
                    "name": "Action",
                    "value": "deductDiscount"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
            "actionType": "Annotation",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/9"
        },
        "ObjectPageHeaderSectionForm<@com.sap.vocabularies.UI.v1.FieldGroup::HeaderFormSection>": {
            "type": "object",
            "properties": {
                "form": {
                    "$ref": "#/definitions/HeaderSectionForm<TravelType::Form::HeaderFormSection>"
                },
                "stashed": {
                    "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "flexSettings": {
                    "$ref": "#/definitions/FlexSettings",
                    "description": "Defines the key user adaptation behavior of the header facet.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "title": "Facet ID: HeaderFormSection",
            "keys": [
                {
                    "name": "ID",
                    "value": "HeaderFormSection"
                }
            ],
            "description": "HeaderFormSection",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.HeaderFacets/0",
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "isViewNode": true
        },
        "HeaderSectionForm<TravelType::Form::HeaderFormSection>": {
            "type": "object",
            "properties": {
                "fields": {
                    "$ref": "#/definitions/HeaderSectionFields<TravelType::Form::HeaderFormSection>"
                }
            },
            "description": "Form",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Target",
                    "value": "FieldGroup#HeaderFormSection"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "isViewNode": true,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection"
        },
        "HeaderSectionFields<TravelType::Form::HeaderFormSection>": {
            "type": "object",
            "properties": {},
            "description": "Fields",
            "additionalProperties": false,
            "isViewNode": true
        },
        "CustomFormActionOP<TravelType::Form::HeaderFormSection>": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/CustomActionPositionOP<TravelType::Form::HeaderFormSection>",
                    "description": "Defines the position of the action relative to the anchor action.",
                    "artifactType": "Manifest"
                },
                "text": {
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "press": {
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "visible": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action button is visible.",
                    "artifactType": "Manifest"
                },
                "enabled": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action is enabled. The default value is true.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "press",
                "text"
            ],
            "isViewNode": true,
            "description": "Custom Action"
        },
        "CustomActionPositionOP<TravelType::Form::HeaderFormSection>": {
            "type": "object",
            "properties": {
                "anchor": {
                    "description": "The key of another action to be used as placement anchor.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "placement": {
                    "$ref": "#/definitions/ActionPlacement",
                    "description": "Define the placement, either before or after the anchor action.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "placement"
            ]
        },
        "CustomExtensionFragment<project1.ext.fragment.CustomSection>": {
            "additionalProperties": false,
            "description": "Custom Extension Fragment",
            "metadata": {
                "filePath": "ext\\fragment\\CustomSection.fragment.xml"
            },
            "properties": {
                "$filePath": {
                    "type": "string",
                    "hidden": true
                },
                "$schema": {
                    "type": "string",
                    "hidden": true
                },
                "FilterBar": {
                    "description": "FilterBar #FilterBar",
                    "propertyIndex": 1,
                    "metadata": {
                        "path": [
                            {
                                "name": "VBox",
                                "index": 0
                            },
                            {
                                "name": "macros:FilterBar",
                                "index": 1
                            }
                        ],
                        "type": "Control",
                        "position": {
                            "startOffset": 153,
                            "startLine": 4,
                            "startColumn": 9,
                            "endOffset": 265,
                            "endLine": 4,
                            "endColumn": 121
                        },
                        "controlName": "sap.fe.macros.FilterBar",
                        "internalId": "8f180c2b-a8fb-45e2-841d-5e949596a988"
                    },
                    "properties": {
                        "contextPath": {
                            "type": "string",
                            "description": "Defines the path of the context used in the current page or block.\nThis setting is defined by the framework.",
                            "artifactType": "XMLProperty",
                            "metadata": {
                                "type": "Property"
                            }
                        },
                        "liveMode": {
                            "type": "boolean",
                            "description": "If true, the search is triggered automatically when a filter value is changed.",
                            "artifactType": "XMLProperty",
                            "metadata": {
                                "type": "Property"
                            }
                        },
                        "metaPath": {
                            "type": "string",
                            "description": "Defines the relative path of the property in the metamodel, based on the current contextPath.",
                            "artifactType": "XMLProperty",
                            "metadata": {
                                "type": "Property",
                                "position": {
                                    "startOffset": 186,
                                    "startLine": 4,
                                    "startColumn": 42,
                                    "endOffset": 263,
                                    "endLine": 4,
                                    "endColumn": 119
                                }
                            }
                        },
                        "showClearButton": {
                            "type": "boolean",
                            "description": "Handles the visibility of the 'Clear' button on the FilterBar.",
                            "artifactType": "XMLProperty",
                            "metadata": {
                                "type": "Property"
                            }
                        },
                        "showMessages": {
                            "type": "boolean",
                            "description": "Displays possible errors during the search in a message box",
                            "artifactType": "XMLProperty",
                            "metadata": {
                                "type": "Property"
                            }
                        },
                        "visible": {
                            "type": "boolean",
                            "description": "Parameter which sets the visibility of the FilterBar building block",
                            "artifactType": "XMLProperty",
                            "metadata": {
                                "type": "Property"
                            }
                        },
                        "id": {
                            "type": "string",
                            "description": "Unique id of control",
                            "artifactType": "XMLProperty",
                            "metadata": {
                                "type": "Property",
                                "position": {
                                    "startOffset": 171,
                                    "startLine": 4,
                                    "startColumn": 27,
                                    "endOffset": 184,
                                    "endLine": 4,
                                    "endColumn": 40
                                }
                            }
                        },
                        "filterFields": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/sap.fe.macros.filterBar.FilterField"
                            },
                            "isViewNode": true,
                            "metadata": {
                                "path": [],
                                "type": "Aggregation"
                            },
                            "properties": {},
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.SelectionFields#filterBarMacro"
                        },
                        "afterClear": {
                            "type": "string",
                            "description": "This event is fired when the 'Clear' button is pressed. This is only possible when the 'Clear' button is enabled.",
                            "artifactType": "XMLProperty",
                            "metadata": {
                                "type": "Event"
                            }
                        },
                        "filterChanged": {
                            "type": "string",
                            "description": "This event is fired after either a filter value or the visibility of a filter item has been changed. The event contains conditions that will be used as filters.",
                            "artifactType": "XMLProperty",
                            "metadata": {
                                "type": "Event"
                            }
                        },
                        "search": {
                            "type": "string",
                            "description": "This event is fired when the 'Go' button is pressed or after a condition change.",
                            "artifactType": "XMLProperty",
                            "metadata": {
                                "type": "Event"
                            }
                        }
                    },
                    "type": "object",
                    "isViewNode": true
                }
            }
        },
        "sap.fe.macros.FilterBar": {
            "description": "Building block for creating a FilterBar based on the metadata provided by OData V4.\nOverview of Building Blocks\n\t\t\t\n\nUsually, a SelectionFields annotation is expected.\nUsage example:\n\n&lt;macros:FilterBar id=\"MyFilterBar\" metaPath=\"@com.sap.vocabularies.UI.v1.SelectionFields\" /&gt;\n\n",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "contextPath": {
                    "type": "string",
                    "description": "Defines the path of the context used in the current page or block.\nThis setting is defined by the framework.",
                    "artifactType": "XMLProperty",
                    "metadata": {
                        "type": "Property"
                    }
                },
                "liveMode": {
                    "type": "boolean",
                    "description": "If true, the search is triggered automatically when a filter value is changed.",
                    "artifactType": "XMLProperty",
                    "metadata": {
                        "type": "Property"
                    }
                },
                "metaPath": {
                    "type": "string",
                    "description": "Defines the relative path of the property in the metamodel, based on the current contextPath.",
                    "artifactType": "XMLProperty",
                    "metadata": {
                        "type": "Property"
                    }
                },
                "showClearButton": {
                    "type": "boolean",
                    "description": "Handles the visibility of the 'Clear' button on the FilterBar.",
                    "artifactType": "XMLProperty",
                    "metadata": {
                        "type": "Property"
                    }
                },
                "showMessages": {
                    "type": "boolean",
                    "description": "Displays possible errors during the search in a message box",
                    "artifactType": "XMLProperty",
                    "metadata": {
                        "type": "Property"
                    }
                },
                "visible": {
                    "type": "boolean",
                    "description": "Parameter which sets the visibility of the FilterBar building block",
                    "artifactType": "XMLProperty",
                    "metadata": {
                        "type": "Property"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Unique id of control",
                    "artifactType": "XMLProperty",
                    "metadata": {
                        "type": "Property"
                    }
                },
                "filterFields": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/sap.fe.macros.filterBar.FilterField"
                    },
                    "isViewNode": true,
                    "metadata": {
                        "path": [],
                        "type": "Aggregation"
                    }
                },
                "afterClear": {
                    "type": "string",
                    "description": "This event is fired when the 'Clear' button is pressed. This is only possible when the 'Clear' button is enabled.",
                    "artifactType": "XMLProperty",
                    "metadata": {
                        "type": "Event"
                    }
                },
                "filterChanged": {
                    "type": "string",
                    "description": "This event is fired after either a filter value or the visibility of a filter item has been changed. The event contains conditions that will be used as filters.",
                    "artifactType": "XMLProperty",
                    "metadata": {
                        "type": "Event"
                    }
                },
                "search": {
                    "type": "string",
                    "description": "This event is fired when the 'Go' button is pressed or after a condition change.",
                    "artifactType": "XMLProperty",
                    "metadata": {
                        "type": "Event"
                    }
                }
            },
            "additionalProperties": false,
            "metadata": {
                "path": [],
                "type": "Control"
            }
        },
        "CustomExtensionFragment<project1.ext.fragment.CustomSubSection>": {
            "additionalProperties": false,
            "description": "Custom Extension Fragment",
            "metadata": {
                "filePath": "ext\\fragment\\CustomSubSection.fragment.xml"
            },
            "properties": {
                "$filePath": {
                    "type": "string",
                    "hidden": true
                },
                "$schema": {
                    "type": "string",
                    "hidden": true
                }
            }
        },
        "ObjectPageSectionForm<@com.sap.vocabularies.UI.v1.Identification>": {
            "type": "object",
            "properties": {
                "form": {
                    "$ref": "#/definitions/SectionForm<TravelType::Identification>"
                }
            },
            "additionalProperties": false,
            "title": "Facet ID: Travel",
            "keys": [
                {
                    "name": "ID",
                    "value": "Travel"
                }
            ],
            "description": "Travel - Managed with Semantic Key",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/0",
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "isViewNode": true
        },
        "SectionForm<TravelType::Identification>": {
            "type": "object",
            "properties": {
                "fields": {
                    "$ref": "#/definitions/SectionFields<TravelType::Identification>"
                }
            },
            "description": "Form",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Target",
                    "value": "Identification"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "isViewNode": true,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification"
        },
        "SectionFields<TravelType::Identification>": {
            "type": "object",
            "properties": {
                "DataField::TravelID": {
                    "$ref": "#/definitions/TravelType::Identification::DataField::TravelID",
                    "propertyIndex": 0
                },
                "DataField::BookingFee": {
                    "$ref": "#/definitions/TravelType::Identification::DataField::BookingFee",
                    "propertyIndex": 1
                },
                "DataField::TotalPrice": {
                    "$ref": "#/definitions/TravelType::Identification::DataField::TotalPrice",
                    "propertyIndex": 2
                },
                "DataField::Memo": {
                    "$ref": "#/definitions/TravelType::Identification::DataField::Memo",
                    "propertyIndex": 3
                },
                "DataField::Status": {
                    "$ref": "#/definitions/TravelType::Identification::DataField::Status",
                    "propertyIndex": 4
                },
                "DataFieldForAnnotation::ConnectedFields::connected": {
                    "$ref": "#/definitions/TravelType::Identification::DataFieldForAnnotation::ConnectedFields::connected",
                    "propertyIndex": 10
                },
                "DataFieldForAnnotation::Contact::contact": {
                    "$ref": "#/definitions/TravelType::Identification::DataFieldForAnnotation::Contact::contact",
                    "propertyIndex": 11
                },
                "DataFieldForAnnotation::ConnectedFields::connected1": {
                    "$ref": "#/definitions/TravelType::Identification::DataFieldForAnnotation::ConnectedFields::connected1",
                    "propertyIndex": 12
                }
            },
            "description": "Fields",
            "additionalProperties": false,
            "isViewNode": true
        },
        "TravelType::Identification::DataField::TravelID": {
            "type": "object",
            "properties": {},
            "description": "TravelID",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Value",
                    "value": "TravelID"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/0",
            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
            "isViewNode": true,
            "dataType": "String"
        },
        "TravelType::Identification::DataField::BookingFee": {
            "type": "object",
            "properties": {},
            "description": "BookingFee",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Value",
                    "value": "BookingFee"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/1",
            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
            "isViewNode": true,
            "dataType": "Decimal"
        },
        "TravelType::Identification::DataField::TotalPrice": {
            "type": "object",
            "properties": {},
            "description": "TotalPrice",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Value",
                    "value": "TotalPrice"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/2",
            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
            "isViewNode": true,
            "dataType": "Decimal"
        },
        "TravelType::Identification::DataField::Memo": {
            "type": "object",
            "properties": {},
            "description": "Comment",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Value",
                    "value": "Memo"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/3",
            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
            "isViewNode": true,
            "dataType": "String"
        },
        "TravelType::Identification::DataField::Status": {
            "type": "object",
            "properties": {},
            "description": "Status",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Value",
                    "value": "Status"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/4",
            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
            "isViewNode": true,
            "dataType": "String"
        },
        "TravelType::Identification::DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": {
            "type": "object",
            "description": "Set To Booked",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Action",
                    "value": "TravelType)"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked(com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/5",
            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
            "isViewNode": true,
            "dataType": "DataFieldForAction",
            "$ref": "#/definitions/FormAction"
        },
        "TravelType::Identification::DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": {
            "type": "object",
            "description": "Set To New",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Action",
                    "value": "TravelType)"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew(com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/6",
            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
            "isViewNode": true,
            "dataType": "DataFieldForAction",
            "$ref": "#/definitions/FormAction"
        },
        "TravelType::Identification::DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": {
            "type": "object",
            "description": "Check Travel",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Action",
                    "value": "TravelType)"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check(com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/7",
            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
            "isViewNode": true,
            "dataType": "DataFieldForAction",
            "$ref": "#/definitions/FormAction"
        },
        "TravelType::Identification::DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": {
            "type": "object",
            "description": "Create new Booking",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Action",
                    "value": "TravelType)"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft(com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/8",
            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
            "isViewNode": true,
            "dataType": "DataFieldForAction",
            "$ref": "#/definitions/FormAction"
        },
        "TravelType::Identification::DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": {
            "type": "object",
            "description": "Deduct Discount",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Action",
                    "value": "TravelType)"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount(com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/9",
            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
            "isViewNode": true,
            "dataType": "DataFieldForAction",
            "$ref": "#/definitions/FormAction"
        },
        "ConnectedFields::connected::DataField::AgencyName": {
            "type": "object",
            "properties": {},
            "description": "AgencyName",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Value",
                    "value": "AgencyName"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.ConnectedFields#connected/Data/AgencyName",
            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
            "isViewNode": true,
            "dataType": "String"
        },
        "ConnectedFields::connected::DataField::CurrencyCode": {
            "type": "object",
            "properties": {},
            "description": "CurrencyCode",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Value",
                    "value": "CurrencyCode"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.ConnectedFields#connected/Data/CurrencyCode",
            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
            "isViewNode": true,
            "dataType": "String"
        },
        "TravelType::Identification::DataFieldForAnnotation::ConnectedFields::connected": {
            "type": "object",
            "properties": {
                "DataField::AgencyName": {
                    "$ref": "#/definitions/ConnectedFields::connected::DataField::AgencyName",
                    "propertyIndex": 0
                },
                "DataField::CurrencyCode": {
                    "$ref": "#/definitions/ConnectedFields::connected::DataField::CurrencyCode",
                    "propertyIndex": 1
                }
            },
            "description": "connected field",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Target",
                    "value": "@UI.ConnectedFields#connected"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/10",
            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAnnotation",
            "isViewNode": true,
            "dataType": "ConnectedFields"
        },
        "TravelType::Identification::DataFieldForAnnotation::Contact::contact": {
            "type": "object",
            "properties": {},
            "description": "Contact Name",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Target",
                    "value": "@Communication.Contact#contact"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/11",
            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAnnotation",
            "isViewNode": true,
            "dataType": "Contact"
        },
        "ConnectedFields::connected1::DataField::BeginDate": {
            "type": "object",
            "properties": {},
            "description": "BeginDate",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Value",
                    "value": "BeginDate"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.ConnectedFields#connected1/Data/BeginDate",
            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
            "isViewNode": true,
            "dataType": "Date"
        },
        "ConnectedFields::connected1::DataField::LastChangedAtTravel": {
            "type": "object",
            "properties": {},
            "description": "Zeitstempel",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Value",
                    "value": "LastChangedAtTravel"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.ConnectedFields#connected1/Data/LastChangedAtTravel",
            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
            "isViewNode": true,
            "dataType": "DateTimeOffset"
        },
        "TravelType::Identification::DataFieldForAnnotation::ConnectedFields::connected1": {
            "type": "object",
            "properties": {
                "DataField::BeginDate": {
                    "$ref": "#/definitions/ConnectedFields::connected1::DataField::BeginDate",
                    "propertyIndex": 0
                },
                "DataField::LastChangedAtTravel": {
                    "$ref": "#/definitions/ConnectedFields::connected1::DataField::LastChangedAtTravel",
                    "propertyIndex": 1
                }
            },
            "description": "connected field 2",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Target",
                    "value": "@UI.ConnectedFields#connected1"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/12",
            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAnnotation",
            "isViewNode": true,
            "dataType": "ConnectedFields"
        },
        "ObjectPageSectionTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "description": "Booking",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "table": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ObjectPageAnalyticalTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>"
                        },
                        {
                            "$ref": "#/definitions/ObjectPageGridTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>"
                        },
                        {
                            "$ref": "#/definitions/ObjectPageResponsiveTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>"
                        },
                        {
                            "$ref": "#/definitions/ObjectPageTreeTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "title": "Facet ID: Booking",
            "keys": [
                {
                    "name": "ID",
                    "value": "Booking"
                }
            ],
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/1",
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType"
        },
        "ObjectPageResponsiveTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "description": "Table",
            "isViewNode": true,
            "controlProperty": "type",
            "defaultControlProperty": true,
            "type": "object",
            "properties": {
                "type": {
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                    "type": "string",
                    "const": "ResponsiveTable",
                    "artifactType": "Manifest"
                },
                "enableFullScreen": {
                    "description": "Enables full screen mode for this table. This adds a button to the table toolbar which opens the table in a full screen dialog.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "enablePaste": {
                    "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "toolBar": {
                    "$ref": "#/definitions/ObjectPageToolBar<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "description": "Tool Bar"
                },
                "creationMode": {
                    "$ref": "#/definitions/TableCreationModeOP",
                    "description": "Defines the page behavior when a new record is created.",
                    "artifactType": "Manifest"
                },
                "personalization": {
                    "$ref": "#/definitions/PersonalizationTypeOP",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                    "artifactType": "Manifest"
                },
                "quickVariantSelection": {
                    "$ref": "#/definitions/QuickVariantSelectionV4OP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "description": "With quickVariantSelection, you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                    "artifactType": "Manifest"
                },
                "columns": {
                    "$ref": "#/definitions/_Booking::@com.sap.vocabularies.UI.v1.LineItem"
                },
                "enableMassEdit": {
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                    "anyOf": [
                        {
                            "type": "object",
                            "properties": {
                                "visibleFields": {
                                    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "BookingID",
                                            "BookingDate",
                                            "CustomerID",
                                            "AirlineID",
                                            "ConnectionID",
                                            "FlightDate",
                                            "FlightPrice"
                                        ]
                                    },
                                    "uniqueItems": true
                                },
                                "ignoredFields": {
                                    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "BookingID",
                                            "BookingDate",
                                            "CustomerID",
                                            "AirlineID",
                                            "ConnectionID",
                                            "FlightDate",
                                            "FlightPrice"
                                        ]
                                    },
                                    "uniqueItems": true
                                }
                            },
                            "additionalProperties": false
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "selectionMode": {
                    "$ref": "#/definitions/SelectionMode",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.\n- Auto: This type is deprecated. Choose any of the following modes:\n- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.\n- Single: This type allows single table selection if relevant actions are available in the toolbar.\n- None: No table selection is possible in display mode.",
                    "artifactType": "Manifest"
                },
                "selectAll": {
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "selectionLimit": {
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                    "artifactType": "Manifest"
                },
                "enableExport": {
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd"
                },
                "condensedTableLayout": {
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c"
                },
                "hierarchyQualifier": {
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "type": "string",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec"
                },
                "widthIncludingColumnHeader": {
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "disableCopyToClipboard": {
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                }
            },
            "additionalProperties": false,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem",
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType"
        },
        "ObjectPageAnalyticalTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "description": "Table",
            "isViewNode": true,
            "controlProperty": "type",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                    "type": "string",
                    "const": "AnalyticalTable",
                    "artifactType": "Manifest"
                },
                "enableFullScreen": {
                    "description": "Enables full screen mode for this table. This adds a button to the table toolbar which opens the table in a full screen dialog.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "enablePaste": {
                    "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "toolBar": {
                    "$ref": "#/definitions/ObjectPageToolBar<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "description": "Tool Bar"
                },
                "creationMode": {
                    "$ref": "#/definitions/TableCreationModeOP",
                    "description": "Defines the page behavior when a new record is created.",
                    "artifactType": "Manifest"
                },
                "personalization": {
                    "$ref": "#/definitions/PersonalizationTypeOP",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                    "artifactType": "Manifest"
                },
                "quickVariantSelection": {
                    "$ref": "#/definitions/QuickVariantSelectionV4OP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "description": "With quickVariantSelection, you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                    "artifactType": "Manifest"
                },
                "columns": {
                    "$ref": "#/definitions/_Booking::@com.sap.vocabularies.UI.v1.LineItem"
                },
                "enableMassEdit": {
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                    "anyOf": [
                        {
                            "type": "object",
                            "properties": {
                                "visibleFields": {
                                    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "BookingID",
                                            "BookingDate",
                                            "CustomerID",
                                            "AirlineID",
                                            "ConnectionID",
                                            "FlightDate",
                                            "FlightPrice"
                                        ]
                                    },
                                    "uniqueItems": true
                                },
                                "ignoredFields": {
                                    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "BookingID",
                                            "BookingDate",
                                            "CustomerID",
                                            "AirlineID",
                                            "ConnectionID",
                                            "FlightDate",
                                            "FlightPrice"
                                        ]
                                    },
                                    "uniqueItems": true
                                }
                            },
                            "additionalProperties": false
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "selectionMode": {
                    "$ref": "#/definitions/SelectionMode",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.\n- Auto: This type is deprecated. Choose any of the following modes:\n- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.\n- Single: This type allows single table selection if relevant actions are available in the toolbar.\n- None: No table selection is possible in display mode.",
                    "artifactType": "Manifest"
                },
                "selectAll": {
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "selectionLimit": {
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                    "artifactType": "Manifest"
                },
                "enableExport": {
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd"
                },
                "condensedTableLayout": {
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c"
                },
                "hierarchyQualifier": {
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "type": "string",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec"
                },
                "widthIncludingColumnHeader": {
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "disableCopyToClipboard": {
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "rowCountMode": {
                    "$ref": "#/definitions/RowCountMode",
                    "description": "Defines how the table handles the visible rows. Does not apply to responsive tables. Allowed values are Auto and Fixed.\n - Fixed: The table always has as many rows as defined in the rowCount property.\n - Auto (default): The number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the rowCount property.",
                    "artifactType": "Manifest"
                },
                "rowCount": {
                    "description": "Number of rows to be displayed in the table.",
                    "minimum": 0,
                    "type": "number",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem",
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType"
        },
        "ObjectPageGridTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "description": "Table",
            "isViewNode": true,
            "controlProperty": "type",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                    "type": "string",
                    "const": "GridTable",
                    "artifactType": "Manifest"
                },
                "enableFullScreen": {
                    "description": "Enables full screen mode for this table. This adds a button to the table toolbar which opens the table in a full screen dialog.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "enablePaste": {
                    "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "toolBar": {
                    "$ref": "#/definitions/ObjectPageToolBar<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "description": "Tool Bar"
                },
                "creationMode": {
                    "$ref": "#/definitions/TableCreationModeOP",
                    "description": "Defines the page behavior when a new record is created.",
                    "artifactType": "Manifest"
                },
                "personalization": {
                    "$ref": "#/definitions/PersonalizationTypeOP",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                    "artifactType": "Manifest"
                },
                "quickVariantSelection": {
                    "$ref": "#/definitions/QuickVariantSelectionV4OP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "description": "With quickVariantSelection, you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                    "artifactType": "Manifest"
                },
                "columns": {
                    "$ref": "#/definitions/_Booking::@com.sap.vocabularies.UI.v1.LineItem"
                },
                "enableMassEdit": {
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                    "anyOf": [
                        {
                            "type": "object",
                            "properties": {
                                "visibleFields": {
                                    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "BookingID",
                                            "BookingDate",
                                            "CustomerID",
                                            "AirlineID",
                                            "ConnectionID",
                                            "FlightDate",
                                            "FlightPrice"
                                        ]
                                    },
                                    "uniqueItems": true
                                },
                                "ignoredFields": {
                                    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "BookingID",
                                            "BookingDate",
                                            "CustomerID",
                                            "AirlineID",
                                            "ConnectionID",
                                            "FlightDate",
                                            "FlightPrice"
                                        ]
                                    },
                                    "uniqueItems": true
                                }
                            },
                            "additionalProperties": false
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "selectionMode": {
                    "$ref": "#/definitions/SelectionMode",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.\n- Auto: This type is deprecated. Choose any of the following modes:\n- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.\n- Single: This type allows single table selection if relevant actions are available in the toolbar.\n- None: No table selection is possible in display mode.",
                    "artifactType": "Manifest"
                },
                "selectAll": {
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "selectionLimit": {
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                    "artifactType": "Manifest"
                },
                "enableExport": {
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd"
                },
                "condensedTableLayout": {
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c"
                },
                "hierarchyQualifier": {
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "type": "string",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec"
                },
                "widthIncludingColumnHeader": {
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "disableCopyToClipboard": {
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "rowCountMode": {
                    "$ref": "#/definitions/RowCountMode",
                    "description": "Defines how the table handles the visible rows. Does not apply to responsive tables. Allowed values are Auto and Fixed.\n - Fixed: The table always has as many rows as defined in the rowCount property.\n - Auto (default): The number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the rowCount property.",
                    "artifactType": "Manifest"
                },
                "rowCount": {
                    "description": "Number of rows to be displayed in the table.",
                    "minimum": 0,
                    "type": "number",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem",
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType"
        },
        "ObjectPageTreeTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "description": "Table",
            "isViewNode": true,
            "controlProperty": "type",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                    "type": "string",
                    "const": "TreeTable",
                    "artifactType": "Manifest"
                },
                "enableFullScreen": {
                    "description": "Enables full screen mode for this table. This adds a button to the table toolbar which opens the table in a full screen dialog.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "enablePaste": {
                    "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "toolBar": {
                    "$ref": "#/definitions/ObjectPageToolBar<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "description": "Tool Bar"
                },
                "creationMode": {
                    "$ref": "#/definitions/TableCreationModeOP",
                    "description": "Defines the page behavior when a new record is created.",
                    "artifactType": "Manifest"
                },
                "personalization": {
                    "$ref": "#/definitions/PersonalizationTypeOP",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                    "artifactType": "Manifest"
                },
                "quickVariantSelection": {
                    "$ref": "#/definitions/QuickVariantSelectionV4OP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "description": "With quickVariantSelection, you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                    "artifactType": "Manifest"
                },
                "columns": {
                    "$ref": "#/definitions/_Booking::@com.sap.vocabularies.UI.v1.LineItem"
                },
                "enableMassEdit": {
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                    "anyOf": [
                        {
                            "type": "object",
                            "properties": {
                                "visibleFields": {
                                    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "BookingID",
                                            "BookingDate",
                                            "CustomerID",
                                            "AirlineID",
                                            "ConnectionID",
                                            "FlightDate",
                                            "FlightPrice"
                                        ]
                                    },
                                    "uniqueItems": true
                                },
                                "ignoredFields": {
                                    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                                    "artifactType": "Manifest",
                                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "BookingID",
                                            "BookingDate",
                                            "CustomerID",
                                            "AirlineID",
                                            "ConnectionID",
                                            "FlightDate",
                                            "FlightPrice"
                                        ]
                                    },
                                    "uniqueItems": true
                                }
                            },
                            "additionalProperties": false
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "selectionMode": {
                    "$ref": "#/definitions/SelectionMode",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.\n- Auto: This type is deprecated. Choose any of the following modes:\n- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.\n- Single: This type allows single table selection if relevant actions are available in the toolbar.\n- None: No table selection is possible in display mode.",
                    "artifactType": "Manifest"
                },
                "selectAll": {
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "selectionLimit": {
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                    "artifactType": "Manifest"
                },
                "enableExport": {
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd"
                },
                "condensedTableLayout": {
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c"
                },
                "hierarchyQualifier": {
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "type": "string",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec"
                },
                "widthIncludingColumnHeader": {
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "disableCopyToClipboard": {
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "type": "boolean",
                    "artifactType": "Manifest",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412"
                },
                "rowCountMode": {
                    "$ref": "#/definitions/RowCountMode",
                    "description": "Defines how the table handles the visible rows. Does not apply to responsive tables. Allowed values are Auto and Fixed.\n - Fixed: The table always has as many rows as defined in the rowCount property.\n - Auto (default): The number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the rowCount property.",
                    "artifactType": "Manifest"
                },
                "rowCount": {
                    "description": "Number of rows to be displayed in the table.",
                    "minimum": 0,
                    "type": "number",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem",
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType"
        },
        "QuickVariantSelectionV4OP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "type": "object",
            "properties": {
                "paths": {
                    "description": "List of annotation paths referring to SelectionVariant annotations.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnnotationPathAsObject<_Booking::@com.sap.vocabularies.UI.v1.LineItem>"
                    },
                    "artifactType": "Manifest"
                },
                "hideTableTitle": {
                    "description": "You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                },
                "showCounts": {
                    "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
                    "type": "boolean",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "paths"
            ]
        },
        "AnnotationPathAsObject<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "type": "object",
            "properties": {
                "annotationPath": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "required": [
                "annotationPath"
            ]
        },
        "_Booking::@com.sap.vocabularies.UI.v1.LineItem": {
            "type": "object",
            "properties": {
                "DataField::BookingID": {
                    "description": "BookingID",
                    "$ref": "#/definitions/ObjectPageTableColumn",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/0",
                    "propertyIndex": 0,
                    "dataType": "String",
                    "keys": [
                        {
                            "name": "Value",
                            "value": "BookingID"
                        }
                    ]
                },
                "DataField::BookingDate": {
                    "description": "BookingDate",
                    "$ref": "#/definitions/ObjectPageTableColumn",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/1",
                    "propertyIndex": 1,
                    "dataType": "Date",
                    "keys": [
                        {
                            "name": "Value",
                            "value": "BookingDate"
                        }
                    ]
                },
                "CustomColumns": {
                    "$ref": "#/definitions/TableCustomColumnOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "description": "CustomColumns",
                    "keys": [
                        {
                            "name": "Key",
                            "value": "CustomColumns"
                        }
                    ],
                    "actionType": "Custom",
                    "propertyIndex": 2
                },
                "DataField::CustomerID": {
                    "description": "Kunden ID",
                    "$ref": "#/definitions/ObjectPageTableColumn",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/2",
                    "propertyIndex": 3,
                    "dataType": "String",
                    "keys": [
                        {
                            "name": "Value",
                            "value": "CustomerID"
                        }
                    ]
                },
                "DataField::AirlineID": {
                    "description": "AirlineID",
                    "$ref": "#/definitions/ObjectPageTableColumn",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/3",
                    "propertyIndex": 4,
                    "dataType": "String",
                    "keys": [
                        {
                            "name": "Value",
                            "value": "AirlineID"
                        }
                    ]
                },
                "DataField::ConnectionID": {
                    "description": "ConnectionID",
                    "$ref": "#/definitions/ObjectPageTableColumn",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/4",
                    "propertyIndex": 5,
                    "dataType": "String",
                    "keys": [
                        {
                            "name": "Value",
                            "value": "ConnectionID"
                        }
                    ]
                },
                "DataField::FlightDate": {
                    "description": "FlightDate",
                    "$ref": "#/definitions/ObjectPageTableColumn",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/5",
                    "propertyIndex": 6,
                    "dataType": "Date",
                    "keys": [
                        {
                            "name": "Value",
                            "value": "FlightDate"
                        }
                    ]
                },
                "DataField::FlightPrice": {
                    "description": "FlightPrice",
                    "$ref": "#/definitions/ObjectPageTableColumn",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/6",
                    "propertyIndex": 7,
                    "dataType": "Decimal",
                    "keys": [
                        {
                            "name": "Value",
                            "value": "FlightPrice"
                        }
                    ]
                }
            },
            "description": "Columns",
            "isViewNode": true,
            "additionalProperties": {
                "$ref": "#/definitions/TableCustomColumnOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>"
            }
        },
        "TableCustomColumnOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/PositionOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "description": "Defines the position of the column relative to the anchor column.",
                    "artifactType": "Manifest"
                },
                "header": {
                    "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
                    "i18nClassification": "COL: Custom column header text",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "width": {
                    "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "artifactType": "Manifest",
                    "type": "string",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize"
                },
                "template": {
                    "description": "Defines a target fragment.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "horizontalAlign": {
                    "$ref": "#/definitions/HorizontalAlign",
                    "description": "Aligns the header as well as the content horizontally.",
                    "artifactType": "Manifest"
                },
                "availability": {
                    "$ref": "#/definitions/Availability",
                    "description": "Defines where the column should be shown.\n- Default: it will be shown by default in the table.\n- Adaptation: it will initially not be shown in the table but be available via end user adaptation\n- Hidden: the column is neither available in the table nor in adaptation",
                    "artifactType": "Manifest"
                },
                "properties": {
                    "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.\nOnce clicked, a list of properties that can be sorted by are displayed.",
                    "artifactType": "Manifest",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "BookingID",
                            "BookingDate",
                            "CustomerID",
                            "AirlineID",
                            "ConnectionID",
                            "FlightDate",
                            "FlightPrice"
                        ]
                    }
                }
            },
            "additionalProperties": false,
            "required": [
                "header",
                "template"
            ],
            "isViewNode": true,
            "description": "Custom Column"
        },
        "ObjectPageToolBar<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "description": "Toolbar",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "actions": {
                    "$ref": "#/definitions/Actions<_Booking::@com.sap.vocabularies.UI.v1.LineItem>"
                }
            },
            "additionalProperties": false,
            "required": [
                "actions"
            ],
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem"
        },
        "Actions<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "description": "Actions",
            "isViewNode": true,
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/CustomTableActionOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>"
            },
            "properties": {}
        },
        "CustomTableActionOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/CustomActionPositionOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "description": "Defines the position of the action relative to the anchor action.",
                    "artifactType": "Manifest"
                },
                "requiresSelection": {
                    "description": "Indicates whether the action requires a selection of items.",
                    "artifactType": "Manifest",
                    "type": "boolean"
                },
                "text": {
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "press": {
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "visible": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action button is visible.",
                    "artifactType": "Manifest"
                },
                "enabled": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action is enabled. The default value is true.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "press",
                "text"
            ],
            "isViewNode": true,
            "description": "Custom Action"
        },
        "PositionOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "type": "object",
            "properties": {
                "anchor": {
                    "description": "The key of another column to be used as placement anchor.",
                    "artifactType": "Manifest",
                    "type": "string",
                    "enum": [
                        "DataField::BookingID",
                        "DataField::BookingDate",
                        "CustomColumns",
                        "DataField::CustomerID",
                        "DataField::AirlineID",
                        "DataField::ConnectionID",
                        "DataField::FlightDate",
                        "DataField::FlightPrice"
                    ]
                },
                "placement": {
                    "$ref": "#/definitions/Placement",
                    "description": "Define the placement, either before or after the anchor column.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "placement"
            ]
        },
        "CustomActionPositionOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>": {
            "type": "object",
            "properties": {
                "anchor": {
                    "description": "The key of another action to be used as placement anchor.",
                    "artifactType": "Manifest",
                    "type": "string",
                    "oneOf": []
                },
                "placement": {
                    "$ref": "#/definitions/ActionPlacement",
                    "description": "Define the placement, either before or after the anchor action.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "placement"
            ]
        },
        "ObjectPageSectionForm<@com.sap.vocabularies.UI.v1.FieldGroup::SubSection1>": {
            "type": "object",
            "properties": {
                "form": {
                    "$ref": "#/definitions/SectionForm<TravelType::Form::SubSection1>"
                }
            },
            "additionalProperties": false,
            "title": "Facet ID: SubSection1",
            "keys": [
                {
                    "name": "ID",
                    "value": "SubSection1"
                }
            ],
            "description": "Sub Section 1",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/2/Facets/0",
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "isViewNode": true
        },
        "SectionForm<TravelType::Form::SubSection1>": {
            "type": "object",
            "properties": {
                "actions": {
                    "$ref": "#/definitions/SectionActions<TravelType::Form::SubSection1>"
                },
                "fields": {
                    "$ref": "#/definitions/SectionFields<TravelType::Form::SubSection1>"
                }
            },
            "description": "Form",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Target",
                    "value": "FieldGroup#SubSection1"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "isViewNode": true,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1"
        },
        "SectionActions<TravelType::Form::SubSection1>": {
            "type": "object",
            "properties": {
                "SubSectionActipon": {
                    "$ref": "#/definitions/CustomFormActionOP<TravelType::Form::SubSection1>",
                    "description": "SubSectionActipon",
                    "keys": [
                        {
                            "name": "Key",
                            "value": "SubSectionActipon"
                        }
                    ],
                    "actionType": "Custom",
                    "propertyIndex": 0
                }
            },
            "description": "Actions",
            "additionalProperties": {
                "$ref": "#/definitions/CustomFormActionOP<TravelType::Form::SubSection1>"
            },
            "isViewNode": true
        },
        "SectionFields<TravelType::Form::SubSection1>": {
            "type": "object",
            "properties": {
                "DataField::AgencyName": {
                    "$ref": "#/definitions/TravelType::Form::SubSection1::DataField::AgencyName",
                    "propertyIndex": 0
                }
            },
            "description": "Fields",
            "additionalProperties": false,
            "isViewNode": true
        },
        "TravelType::Form::SubSection1::DataField::AgencyName": {
            "type": "object",
            "properties": {},
            "description": "AgencyName",
            "additionalProperties": false,
            "keys": [
                {
                    "name": "Value",
                    "value": "AgencyName"
                }
            ],
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1/Data/0",
            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
            "isViewNode": true,
            "dataType": "String"
        },
        "CustomFormActionOP<TravelType::Form::SubSection1>": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/CustomActionPositionOP<TravelType::Form::SubSection1>",
                    "description": "Defines the position of the action relative to the anchor action.",
                    "artifactType": "Manifest"
                },
                "text": {
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "press": {
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "visible": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action button is visible.",
                    "artifactType": "Manifest"
                },
                "enabled": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action is enabled. The default value is true.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "press",
                "text"
            ],
            "isViewNode": true,
            "description": "Custom Action"
        },
        "CustomActionPositionOP<TravelType::Form::SubSection1>": {
            "type": "object",
            "properties": {
                "anchor": {
                    "description": "The key of another action to be used as placement anchor.",
                    "artifactType": "Manifest",
                    "type": "string",
                    "oneOf": [
                        {
                            "const": "SubSectionActipon",
                            "description": "SubSectionActipon",
                            "custom": true
                        }
                    ]
                },
                "placement": {
                    "$ref": "#/definitions/ActionPlacement",
                    "description": "Define the placement, either before or after the anchor action.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "placement"
            ]
        },
        "ObjectPageCustomSubSectionFragment<GroupSection>": {
            "description": "Custom Sub Section",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "fragmentName": {
                    "description": "The path to the XML template containing the section control.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "relatedFacet": {
                    "description": "Use the key of another section as a placement anchor.",
                    "artifactType": "Manifest",
                    "displayName": "Anchor",
                    "type": "string",
                    "oneOf": [
                        {
                            "const": "SubSection1",
                            "description": "Sub Section 1",
                            "hidden": true
                        },
                        {
                            "const": "CustomSubSection",
                            "description": "Custom Sub Section",
                            "custom": true
                        }
                    ]
                },
                "relativePosition": {
                    "$ref": "#/definitions/SectionPosition",
                    "description": "Define the placement, either before or after the anchor section.",
                    "artifactType": "Manifest"
                },
                "title": {
                    "description": "The label of a custom section, preferably as an i18n key.",
                    "artifactType": "Manifest",
                    "i18nClassification": "TIT: Custom section title",
                    "type": "string"
                },
                "controls": {
                    "type": "object"
                }
            },
            "additionalProperties": false,
            "required": [
                "fragmentName",
                "title"
            ]
        },
        "ObjectPageCustomSectionFragment<CustomSection>": {
            "description": "Fragment",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "fragmentName": {
                    "description": "The path to the XML template containing the section control.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "actions": {
                    "$ref": "#/definitions/ObjectPageCustomSectionActions<CustomSection>"
                },
                "relatedFacet": {
                    "description": "Use the key of another section as a placement anchor.",
                    "artifactType": "Manifest",
                    "displayName": "Anchor",
                    "type": "string",
                    "oneOf": [
                        {
                            "const": "Travel",
                            "description": "Travel - Managed with Semantic Key"
                        },
                        {
                            "const": "CustomSection",
                            "description": "CustomSection",
                            "custom": true
                        },
                        {
                            "const": "Booking",
                            "description": "Booking"
                        },
                        {
                            "const": "GroupSection",
                            "description": "Group Section"
                        }
                    ]
                },
                "relativePosition": {
                    "$ref": "#/definitions/SectionPosition",
                    "description": "Define the placement, either before or after the anchor section.",
                    "artifactType": "Manifest"
                },
                "title": {
                    "description": "The label of a custom section, preferably as an i18n key.",
                    "artifactType": "Manifest",
                    "i18nClassification": "TIT: Custom section title",
                    "type": "string"
                },
                "controls": {
                    "type": "object"
                }
            },
            "additionalProperties": false,
            "required": [
                "fragmentName",
                "title"
            ]
        },
        "ObjectPageCustomSectionActions<CustomSection>": {
            "description": "Actions",
            "isViewNode": true,
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/CustomSectionActionOP<CustomSection>"
            },
            "properties": {
                "CustomSectionAction": {
                    "$ref": "#/definitions/CustomSectionActionOP<CustomSection>",
                    "description": "CustomSectionAction",
                    "keys": [
                        {
                            "name": "Key",
                            "value": "CustomSectionAction"
                        }
                    ],
                    "actionType": "Custom",
                    "propertyIndex": 0
                }
            }
        },
        "CustomSectionActionOP<CustomSection>": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/CustomSectionActionPositionOP<CustomSection>",
                    "description": "Defines the position of the action relative to the anchor action.",
                    "artifactType": "Manifest"
                },
                "text": {
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "press": {
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "visible": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action button is visible.",
                    "artifactType": "Manifest"
                },
                "enabled": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action is enabled. The default value is true.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "press",
                "text"
            ],
            "isViewNode": true
        },
        "CustomSectionActionPositionOP<CustomSection>": {
            "type": "object",
            "properties": {
                "anchor": {
                    "description": "The key of another action to be used as placement anchor.",
                    "artifactType": "Manifest",
                    "type": "string",
                    "oneOf": [
                        {
                            "const": "CustomSectionAction",
                            "description": "CustomSectionAction",
                            "custom": true
                        }
                    ]
                },
                "placement": {
                    "$ref": "#/definitions/ActionPlacement",
                    "description": "Define the placement, either before or after the anchor action.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "placement"
            ]
        },
        "ObjectPageCustomSectionFragment<GroupSection>": {
            "description": "Fragment",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "fragmentName": {
                    "description": "The path to the XML template containing the section control.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "actions": {
                    "$ref": "#/definitions/ObjectPageCustomSectionActions<GroupSection>"
                },
                "relatedFacet": {
                    "description": "Use the key of another section as a placement anchor.",
                    "artifactType": "Manifest",
                    "displayName": "Anchor",
                    "type": "string",
                    "oneOf": [
                        {
                            "const": "Travel",
                            "description": "Travel - Managed with Semantic Key"
                        },
                        {
                            "const": "CustomSection",
                            "description": "CustomSection",
                            "custom": true
                        },
                        {
                            "const": "Booking",
                            "description": "Booking"
                        },
                        {
                            "const": "GroupSection",
                            "description": "Group Section"
                        }
                    ]
                },
                "relativePosition": {
                    "$ref": "#/definitions/SectionPosition",
                    "description": "Define the placement, either before or after the anchor section.",
                    "artifactType": "Manifest"
                },
                "title": {
                    "description": "The label of a custom section, preferably as an i18n key.",
                    "artifactType": "Manifest",
                    "i18nClassification": "TIT: Custom section title",
                    "type": "string"
                },
                "controls": {
                    "type": "object"
                }
            },
            "additionalProperties": false,
            "required": [
                "fragmentName",
                "title"
            ]
        },
        "ObjectPageCustomSectionActions<GroupSection>": {
            "description": "Actions",
            "isViewNode": true,
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/CustomSectionActionOP<GroupSection>"
            },
            "properties": {}
        },
        "CustomSectionActionOP<GroupSection>": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/CustomSectionActionPositionOP<GroupSection>",
                    "description": "Defines the position of the action relative to the anchor action.",
                    "artifactType": "Manifest"
                },
                "text": {
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "press": {
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "artifactType": "Manifest",
                    "type": "string"
                },
                "visible": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action button is visible.",
                    "artifactType": "Manifest"
                },
                "enabled": {
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
                    "anyOf": [
                        {
                            "enum": [
                                false,
                                true,
                                "{ui>/isEditable}",
                                "{= !${ui>/isEditable}}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Defines if the action is enabled. The default value is true.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "press",
                "text"
            ],
            "isViewNode": true
        },
        "CustomSectionActionPositionOP<GroupSection>": {
            "type": "object",
            "properties": {
                "anchor": {
                    "description": "The key of another action to be used as placement anchor.",
                    "artifactType": "Manifest",
                    "type": "string",
                    "oneOf": []
                },
                "placement": {
                    "$ref": "#/definitions/ActionPlacement",
                    "description": "Define the placement, either before or after the anchor action.",
                    "artifactType": "Manifest"
                }
            },
            "additionalProperties": false,
            "required": [
                "placement"
            ]
        },
        "ObjectPageFooter": {
            "description": "Footer",
            "isViewNode": true,
            "type": "object",
            "properties": {
                "actions": {
                    "$ref": "#/definitions/FooterActions"
                }
            },
            "additionalProperties": false
        },
        "FooterActions": {
            "type": "object",
            "properties": {
                "CustomFooterAction": {
                    "$ref": "#/definitions/CustomFooterActionOP",
                    "description": "CustomFooterAction",
                    "keys": [
                        {
                            "name": "Key",
                            "value": "CustomFooterAction"
                        }
                    ],
                    "actionType": "Custom",
                    "propertyIndex": 0
                }
            },
            "description": "Actions",
            "additionalProperties": {
                "$ref": "#/definitions/CustomFooterActionOP"
            },
            "isViewNode": true,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification"
        }
    },
    "$schema": "http://json-schema.org/draft-07/schema#"
}