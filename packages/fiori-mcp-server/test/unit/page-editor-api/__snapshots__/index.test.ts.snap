// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`getTree getTree - Application 1`] = `
Object {
  "additionalText": undefined,
  "annotationNodeId": Array [],
  "children": Array [],
  "id": "outline-noderoot-node",
  "moveProps": undefined,
  "path": Array [],
  "properties": Array [
    Object {
      "artifactType": undefined,
      "description": "",
      "displayName": "Id",
      "name": "id",
      "schema": Object {
        "type": "string",
      },
      "schemaPath": Array [
        "id",
      ],
      "type": "string",
      "value": "project1",
    },
    Object {
      "artifactType": undefined,
      "description": "",
      "displayName": "Home",
      "name": "home",
      "schema": Object {
        "type": "string",
      },
      "schemaPath": Array [
        "home",
      ],
      "type": "string",
      "value": "TravelList",
    },
    Object {
      "artifactType": undefined,
      "description": "",
      "displayName": "settings",
      "name": "settings",
      "properties": Array [
        Object {
          "artifactType": undefined,
          "description": "Represents a prefix that is prepended in front of the viewName",
          "displayName": "Path",
          "name": "path",
          "schema": Object {
            "description": "Represents a prefix that is prepended in front of the viewName",
            "type": "string",
          },
          "schemaPath": Array [
            "settings",
            "path",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": undefined,
          "description": "standard view type of views",
          "displayName": "View Type",
          "name": "viewType",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "HTML",
              "text": "HTML",
            },
            Object {
              "key": "JSON",
              "text": "JSON",
            },
            Object {
              "key": "XML",
              "text": "XML",
            },
          ],
          "schema": Object {
            "description": "standard view type of views",
            "enum": Array [
              "HTML",
              "JSON",
              "XML",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "settings",
            "viewType",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": undefined,
          "description": "Defines the title for the application.",
          "displayName": "Title",
          "name": "title",
          "schema": Object {
            "description": "Defines the title for the application.",
            "i18nClassification": "TIT: Title of the application",
            "type": "string",
          },
          "schemaPath": Array [
            "settings",
            "title",
          ],
          "type": "string",
          "value": "{{appTitle}}",
        },
        Object {
          "artifactType": undefined,
          "description": "Defines the description for the application.",
          "displayName": "Description",
          "name": "description",
          "schema": Object {
            "description": "Defines the description for the application.",
            "i18nClassification": "TIT: Description of the application",
            "type": "string",
          },
          "schemaPath": Array [
            "settings",
            "description",
          ],
          "type": "string",
          "value": "{{appDescription}}",
        },
        Object {
          "artifactType": undefined,
          "description": "Enables key user adaptation for an application.",
          "displayName": "Flex Enabled",
          "name": "flexEnabled",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "description": "Enables key user adaptation for an application.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/ccd45ba3f0b446a0901b2c9d42b8ad53",
            "type": "boolean",
          },
          "schemaPath": Array [
            "settings",
            "flexEnabled",
          ],
          "type": "boolean",
          "value": true,
        },
        Object {
          "artifactType": undefined,
          "description": "Represents the release status for the developer adaptation in the cloud (relevant for SAP internal only). The supported types are released, deprecated, obsolete, no value means not released.",
          "displayName": "Cloud Dev Adaptation Status",
          "name": "cloudDevAdaptationStatus",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "deprecated",
              "text": "deprecated",
            },
            Object {
              "key": "obsolete",
              "text": "obsolete",
            },
            Object {
              "key": "released",
              "text": "released",
            },
          ],
          "schema": Object {
            "description": "Represents the release status for the developer adaptation in the cloud (relevant for SAP internal only). The supported types are released, deprecated, obsolete, no value means not released.",
            "enum": Array [
              "deprecated",
              "obsolete",
              "released",
            ],
            "internal": true,
            "type": "string",
          },
          "schemaPath": Array [
            "settings",
            "cloudDevAdaptationStatus",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": undefined,
          "description": "The flexible column layout allows users to see more details on the page, and to expand and collapse the screen areas.",
          "displayName": "flexibleColumnLayout",
          "name": "flexibleColumnLayout",
          "properties": Array [
            Object {
              "artifactType": undefined,
              "description": "Determines whether the Flexible Column Layout is limited to two columns. If set to true, the third level will be displayed in full screen mode rather than a third column.",
              "displayName": "Limit FCL To Two Columns",
              "name": "limitFCLToTwoColumns",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "description": "Determines whether the Flexible Column Layout is limited to two columns. If set to true, the third level will be displayed in full screen mode rather than a third column.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "settings",
                "flexibleColumnLayout",
                "limitFCLToTwoColumns",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Default Two Column Layout Type",
              "name": "defaultTwoColumnLayoutType",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "EndColumnFullScreen",
                  "text": "EndColumnFullScreen",
                },
                Object {
                  "key": "MidColumnFullScreen",
                  "text": "MidColumnFullScreen",
                },
                Object {
                  "key": "OneColumn",
                  "text": "OneColumn",
                },
                Object {
                  "key": "ThreeColumnsBeginExpandedEndHidden",
                  "text": "ThreeColumnsBeginExpandedEndHidden",
                },
                Object {
                  "key": "ThreeColumnsEndExpanded",
                  "text": "ThreeColumnsEndExpanded",
                },
                Object {
                  "key": "ThreeColumnsMidExpanded",
                  "text": "ThreeColumnsMidExpanded",
                },
                Object {
                  "key": "ThreeColumnsMidExpandedEndHidden",
                  "text": "ThreeColumnsMidExpandedEndHidden",
                },
                Object {
                  "key": "TwoColumnsBeginExpanded",
                  "text": "TwoColumnsBeginExpanded",
                },
                Object {
                  "key": "TwoColumnsMidExpanded",
                  "text": "TwoColumnsMidExpanded",
                },
              ],
              "schema": Object {
                "enum": Array [
                  "EndColumnFullScreen",
                  "MidColumnFullScreen",
                  "OneColumn",
                  "ThreeColumnsBeginExpandedEndHidden",
                  "ThreeColumnsEndExpanded",
                  "ThreeColumnsMidExpanded",
                  "ThreeColumnsMidExpandedEndHidden",
                  "TwoColumnsBeginExpanded",
                  "TwoColumnsMidExpanded",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "settings",
                "flexibleColumnLayout",
                "defaultTwoColumnLayoutType",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Default Three Column Layout Type",
              "name": "defaultThreeColumnLayoutType",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "EndColumnFullScreen",
                  "text": "EndColumnFullScreen",
                },
                Object {
                  "key": "MidColumnFullScreen",
                  "text": "MidColumnFullScreen",
                },
                Object {
                  "key": "OneColumn",
                  "text": "OneColumn",
                },
                Object {
                  "key": "ThreeColumnsBeginExpandedEndHidden",
                  "text": "ThreeColumnsBeginExpandedEndHidden",
                },
                Object {
                  "key": "ThreeColumnsEndExpanded",
                  "text": "ThreeColumnsEndExpanded",
                },
                Object {
                  "key": "ThreeColumnsMidExpanded",
                  "text": "ThreeColumnsMidExpanded",
                },
                Object {
                  "key": "ThreeColumnsMidExpandedEndHidden",
                  "text": "ThreeColumnsMidExpandedEndHidden",
                },
                Object {
                  "key": "TwoColumnsBeginExpanded",
                  "text": "TwoColumnsBeginExpanded",
                },
                Object {
                  "key": "TwoColumnsMidExpanded",
                  "text": "TwoColumnsMidExpanded",
                },
              ],
              "schema": Object {
                "enum": Array [
                  "EndColumnFullScreen",
                  "MidColumnFullScreen",
                  "OneColumn",
                  "ThreeColumnsBeginExpandedEndHidden",
                  "ThreeColumnsEndExpanded",
                  "ThreeColumnsMidExpanded",
                  "ThreeColumnsMidExpandedEndHidden",
                  "TwoColumnsBeginExpanded",
                  "TwoColumnsMidExpanded",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "settings",
                "flexibleColumnLayout",
                "defaultThreeColumnLayoutType",
              ],
              "type": "string",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "description": "The flexible column layout allows users to see more details on the page, and to expand and collapse the screen areas.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/e762257125b34513b0859faa1610b09e",
            "properties": Object {
              "defaultThreeColumnLayoutType": Object {
                "$ref": "#/definitions/FlexibleColumnLayoutType",
              },
              "defaultTwoColumnLayoutType": Object {
                "$ref": "#/definitions/FlexibleColumnLayoutType",
              },
              "limitFCLToTwoColumns": Object {
                "description": "Determines whether the Flexible Column Layout is limited to two columns. If set to true, the third level will be displayed in full screen mode rather than a third column.",
                "type": "boolean",
              },
            },
            "type": "object",
          },
          "schemaPath": Array [
            "settings",
            "flexibleColumnLayout",
          ],
          "type": "object",
          "value": undefined,
        },
        Object {
          "artifactType": undefined,
          "description": "Controller extensions allow users to extensiate default behaviour with custom controllers code.",
          "displayName": "controllerExtensions",
          "name": "controllerExtensions",
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/SapUi5ControllerExtensionV4",
            },
            "description": "Controller extensions allow users to extensiate default behaviour with custom controllers code.",
            "type": "object",
          },
          "schemaPath": Array [
            "settings",
            "controllerExtensions",
          ],
          "type": "object",
          "value": undefined,
        },
        Object {
          "artifactType": undefined,
          "description": "Dependencies of the application.",
          "displayName": "dependencies",
          "name": "dependencies",
          "properties": Array [
            Object {
              "artifactType": undefined,
              "description": "Represents the minimum version of SAP UI5 that your component requires. It is either a specific version or an array of versions where each major version can only be included once. If array contains more than one version and if version 1 is included it must be at least 1.120.x.",
              "displayName": "Min UI5Version",
              "name": "minUI5Version",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "settings",
                "dependencies",
                "minUI5Version",
              ],
              "type": "string",
              "value": "1.138.1",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "minUI5Version",
              "name": "minUI5Version",
              "schema": Object {
                "items": Object {
                  "type": "string",
                },
                "type": "array",
              },
              "schemaPath": Array [
                "settings",
                "dependencies",
                "minUI5Version",
              ],
              "type": "object",
              "value": "1.138.1",
            },
            Object {
              "artifactType": undefined,
              "description": "Represents the id (namespace) of the libraries that should be loaded by UI5 Core to be used in your component",
              "displayName": "libs",
              "name": "libs",
              "properties": Array [
                Object {
                  "artifactType": undefined,
                  "description": "Represents sapui5 library name

This interface was referenced by \`undefined\`'s JSON-Schema definition
via the \`patternProperty\` \\"^([a-z][a-z0-9]{0,39})(\\\\.[a-z][a-z0-9]{0,39})*$\\".",
                  "displayName": "sap.m",
                  "name": "sap.m",
                  "properties": Array [
                    Object {
                      "artifactType": undefined,
                      "description": "Represents minimal version of ui5 library",
                      "displayName": "Min Version",
                      "name": "minVersion",
                      "schema": Object {
                        "description": "Represents minimal version of ui5 library",
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "settings",
                        "dependencies",
                        "libs",
                        "sap.m",
                        "minVersion",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": undefined,
                      "description": "Represents Indicator to lazy loading lib",
                      "displayName": "Lazy",
                      "name": "lazy",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "description": "Represents Indicator to lazy loading lib",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "settings",
                        "dependencies",
                        "libs",
                        "sap.m",
                        "lazy",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": Object {},
                    "description": "Represents sapui5 library name

This interface was referenced by \`undefined\`'s JSON-Schema definition
via the \`patternProperty\` \\"^([a-z][a-z0-9]{0,39})(\\\\.[a-z][a-z0-9]{0,39})*$\\".",
                    "properties": Object {
                      "lazy": Object {
                        "description": "Represents Indicator to lazy loading lib",
                        "type": "boolean",
                      },
                      "minVersion": Object {
                        "description": "Represents minimal version of ui5 library",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "settings",
                    "dependencies",
                    "libs",
                    "sap.m",
                  ],
                  "type": "object",
                  "value": Object {},
                },
                Object {
                  "artifactType": undefined,
                  "description": "Represents sapui5 library name

This interface was referenced by \`undefined\`'s JSON-Schema definition
via the \`patternProperty\` \\"^([a-z][a-z0-9]{0,39})(\\\\.[a-z][a-z0-9]{0,39})*$\\".",
                  "displayName": "sap.ui.core",
                  "name": "sap.ui.core",
                  "properties": Array [
                    Object {
                      "artifactType": undefined,
                      "description": "Represents minimal version of ui5 library",
                      "displayName": "Min Version",
                      "name": "minVersion",
                      "schema": Object {
                        "description": "Represents minimal version of ui5 library",
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "settings",
                        "dependencies",
                        "libs",
                        "sap.ui.core",
                        "minVersion",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": undefined,
                      "description": "Represents Indicator to lazy loading lib",
                      "displayName": "Lazy",
                      "name": "lazy",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "description": "Represents Indicator to lazy loading lib",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "settings",
                        "dependencies",
                        "libs",
                        "sap.ui.core",
                        "lazy",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": Object {},
                    "description": "Represents sapui5 library name

This interface was referenced by \`undefined\`'s JSON-Schema definition
via the \`patternProperty\` \\"^([a-z][a-z0-9]{0,39})(\\\\.[a-z][a-z0-9]{0,39})*$\\".",
                    "properties": Object {
                      "lazy": Object {
                        "description": "Represents Indicator to lazy loading lib",
                        "type": "boolean",
                      },
                      "minVersion": Object {
                        "description": "Represents minimal version of ui5 library",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "settings",
                    "dependencies",
                    "libs",
                    "sap.ui.core",
                  ],
                  "type": "object",
                  "value": Object {},
                },
                Object {
                  "artifactType": undefined,
                  "description": "Represents sapui5 library name

This interface was referenced by \`undefined\`'s JSON-Schema definition
via the \`patternProperty\` \\"^([a-z][a-z0-9]{0,39})(\\\\.[a-z][a-z0-9]{0,39})*$\\".",
                  "displayName": "sap.fe.templates",
                  "name": "sap.fe.templates",
                  "properties": Array [
                    Object {
                      "artifactType": undefined,
                      "description": "Represents minimal version of ui5 library",
                      "displayName": "Min Version",
                      "name": "minVersion",
                      "schema": Object {
                        "description": "Represents minimal version of ui5 library",
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "settings",
                        "dependencies",
                        "libs",
                        "sap.fe.templates",
                        "minVersion",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": undefined,
                      "description": "Represents Indicator to lazy loading lib",
                      "displayName": "Lazy",
                      "name": "lazy",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "description": "Represents Indicator to lazy loading lib",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "settings",
                        "dependencies",
                        "libs",
                        "sap.fe.templates",
                        "lazy",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": Object {},
                    "description": "Represents sapui5 library name

This interface was referenced by \`undefined\`'s JSON-Schema definition
via the \`patternProperty\` \\"^([a-z][a-z0-9]{0,39})(\\\\.[a-z][a-z0-9]{0,39})*$\\".",
                    "properties": Object {
                      "lazy": Object {
                        "description": "Represents Indicator to lazy loading lib",
                        "type": "boolean",
                      },
                      "minVersion": Object {
                        "description": "Represents minimal version of ui5 library",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "settings",
                    "dependencies",
                    "libs",
                    "sap.fe.templates",
                  ],
                  "type": "object",
                  "value": Object {},
                },
              ],
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/Lib",
                },
                "description": "Represents the id (namespace) of the libraries that should be loaded by UI5 Core to be used in your component",
                "type": "object",
              },
              "schemaPath": Array [
                "settings",
                "dependencies",
                "libs",
              ],
              "type": "object",
              "value": Object {
                "sap.fe.templates": Object {},
                "sap.m": Object {},
                "sap.ui.core": Object {},
              },
            },
            Object {
              "artifactType": undefined,
              "description": "Represents the id (namespace) of the components that should be loaded by UI5 Core to be used in your component",
              "displayName": "components",
              "name": "components",
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/Component",
                },
                "description": "Represents the id (namespace) of the components that should be loaded by UI5 Core to be used in your component",
                "type": "object",
              },
              "schemaPath": Array [
                "settings",
                "dependencies",
                "components",
              ],
              "type": "object",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "description": "Dependencies of the application.",
            "properties": Object {
              "components": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/Component",
                },
                "description": "Represents the id (namespace) of the components that should be loaded by UI5 Core to be used in your component",
                "type": "object",
              },
              "libs": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/Lib",
                },
                "description": "Represents the id (namespace) of the libraries that should be loaded by UI5 Core to be used in your component",
                "type": "object",
              },
              "minUI5Version": Object {
                "anyOf": Array [
                  Object {
                    "items": Object {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  Object {
                    "type": "string",
                  },
                ],
                "description": "Represents the minimum version of SAP UI5 that your component requires. It is either a specific version or an array of versions where each major version can only be included once. If array contains more than one version and if version 1 is included it must be at least 1.120.x.",
              },
            },
            "required": Array [
              "minUI5Version",
            ],
            "type": "object",
          },
          "schemaPath": Array [
            "settings",
            "dependencies",
          ],
          "type": "object",
          "value": Object {
            "libs": Object {
              "sap.fe.templates": Object {},
              "sap.m": Object {},
              "sap.ui.core": Object {},
            },
            "minUI5Version": "1.138.1",
          },
        },
        Object {
          "artifactType": undefined,
          "description": "Hidden draft features.",
          "displayName": "hideDraft",
          "name": "hideDraft",
          "properties": Array [
            Object {
              "artifactType": undefined,
              "description": "All features related to draft handling can be hidden from the UI while the draft functionality remains active in the background. To achieve this, enable the 'Hide Draft' property.",
              "displayName": "Enabled",
              "name": "enabled",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "const": true,
                "description": "All features related to draft handling can be hidden from the UI while the draft functionality remains active in the background. To achieve this, enable the 'Hide Draft' property.",
                "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                "enum": Array [
                  true,
                ],
                "type": "boolean",
              },
              "schemaPath": Array [
                "settings",
                "hideDraft",
                "enabled",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "Determines whether to stay on the current page after saving an object.
To ensure a consistent experience, set this and 'Stay On Current Page After Cancel' to the same value.",
              "displayName": "Stay On Current Page After Save",
              "name": "stayOnCurrentPageAfterSave",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "description": "Determines whether to stay on the current page after saving an object.
To ensure a consistent experience, set this and 'Stay On Current Page After Cancel' to the same value.",
                "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                "type": "boolean",
              },
              "schemaPath": Array [
                "settings",
                "hideDraft",
                "stayOnCurrentPageAfterSave",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "Determines whether to stay on the current page after canceling an object.
To ensure a consistent experience, set this and 'Stay On Current Page After Save' to the same value.",
              "displayName": "Stay On Current Page After Cancel",
              "name": "stayOnCurrentPageAfterCancel",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "description": "Determines whether to stay on the current page after canceling an object.
To ensure a consistent experience, set this and 'Stay On Current Page After Save' to the same value.",
                "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                "type": "boolean",
              },
              "schemaPath": Array [
                "settings",
                "hideDraft",
                "stayOnCurrentPageAfterCancel",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "Controls the visibility of the 'Create Next' button.",
              "displayName": "Hide Create Next",
              "name": "hideCreateNext",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "description": "Controls the visibility of the 'Create Next' button.",
                "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                "type": "boolean",
              },
              "schemaPath": Array [
                "settings",
                "hideDraft",
                "hideCreateNext",
              ],
              "type": "boolean",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "properties": Object {
              "enabled": Object {
                "const": true,
                "description": "All features related to draft handling can be hidden from the UI while the draft functionality remains active in the background. To achieve this, enable the 'Hide Draft' property.",
                "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                "enum": Array [
                  true,
                ],
                "type": "boolean",
              },
              "hideCreateNext": Object {
                "description": "Controls the visibility of the 'Create Next' button.",
                "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                "type": "boolean",
              },
              "stayOnCurrentPageAfterCancel": Object {
                "description": "Determines whether to stay on the current page after canceling an object.
To ensure a consistent experience, set this and 'Stay On Current Page After Save' to the same value.",
                "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                "type": "boolean",
              },
              "stayOnCurrentPageAfterSave": Object {
                "description": "Determines whether to stay on the current page after saving an object.
To ensure a consistent experience, set this and 'Stay On Current Page After Cancel' to the same value.",
                "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                "type": "boolean",
              },
            },
            "required": Array [
              "enabled",
            ],
            "type": "object",
          },
          "schemaPath": Array [
            "settings",
            "hideDraft",
          ],
          "type": "object",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "properties": Object {
          "cloudDevAdaptationStatus": Object {
            "$ref": "#/definitions/CloudDevAdaptationStatus",
            "description": "Represents the release status for the developer adaptation in the cloud (relevant for SAP internal only). The supported types are released, deprecated, obsolete, no value means not released.",
          },
          "controllerExtensions": Object {
            "$ref": "#/definitions/ControllerExtensions",
            "description": "Controller extensions allow users to extensiate default behaviour with custom controllers code.",
          },
          "dependencies": Object {
            "$ref": "#/definitions/Dependencies",
            "description": "Dependencies of the application.",
          },
          "description": Object {
            "description": "Defines the description for the application.",
            "i18nClassification": "TIT: Description of the application",
            "type": "string",
          },
          "flexEnabled": Object {
            "description": "Enables key user adaptation for an application.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/ccd45ba3f0b446a0901b2c9d42b8ad53",
            "type": "boolean",
          },
          "flexibleColumnLayout": Object {
            "$ref": "#/definitions/FlexibleColumnLayoutV4",
            "description": "The flexible column layout allows users to see more details on the page, and to expand and collapse the screen areas.",
          },
          "hideDraft": Object {
            "anyOf": Array [
              Object {
                "additionalProperties": false,
                "properties": Object {
                  "enabled": Object {
                    "const": true,
                    "description": "All features related to draft handling can be hidden from the UI while the draft functionality remains active in the background. To achieve this, enable the 'Hide Draft' property.",
                    "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                    "enum": Array [
                      true,
                    ],
                    "type": "boolean",
                  },
                  "hideCreateNext": Object {
                    "description": "Controls the visibility of the 'Create Next' button.",
                    "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                    "type": "boolean",
                  },
                  "stayOnCurrentPageAfterCancel": Object {
                    "description": "Determines whether to stay on the current page after canceling an object.
To ensure a consistent experience, set this and 'Stay On Current Page After Save' to the same value.",
                    "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                    "type": "boolean",
                  },
                  "stayOnCurrentPageAfterSave": Object {
                    "description": "Determines whether to stay on the current page after saving an object.
To ensure a consistent experience, set this and 'Stay On Current Page After Cancel' to the same value.",
                    "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                    "type": "boolean",
                  },
                },
                "required": Array [
                  "enabled",
                ],
                "type": "object",
              },
              Object {
                "additionalProperties": false,
                "properties": Object {
                  "enabled": Object {
                    "const": false,
                    "description": "All features related to draft handling can be hidden from the UI while the draft functionality remains active in the background. To achieve this, enable the 'Hide Draft' property.",
                    "descriptionSrcURL": "https://sapui5.hana.ondemand.com/#/topic/ed9aa41c563a44b18701529c8327db4d",
                    "type": "boolean",
                  },
                },
                "type": "object",
              },
            ],
            "description": "Hidden draft features.",
          },
          "path": Object {
            "description": "Represents a prefix that is prepended in front of the viewName",
            "type": "string",
          },
          "title": Object {
            "description": "Defines the title for the application.",
            "i18nClassification": "TIT: Title of the application",
            "type": "string",
          },
          "viewType": Object {
            "$ref": "#/definitions/ViewTypes",
            "description": "standard view type of views",
          },
        },
        "type": "object",
      },
      "schemaPath": Array [
        "settings",
      ],
      "type": "object",
      "value": Object {
        "dependencies": Object {
          "libs": Object {
            "sap.fe.templates": Object {},
            "sap.m": Object {},
            "sap.ui.core": Object {},
          },
          "minUI5Version": "1.138.1",
        },
        "description": "{{appDescription}}",
        "flexEnabled": true,
        "title": "{{appTitle}}",
      },
    },
    Object {
      "artifactType": undefined,
      "description": "",
      "displayName": "pages",
      "name": "pages",
      "properties": Array [
        Object {
          "artifactType": undefined,
          "description": "",
          "displayName": "TravelList",
          "name": "TravelList",
          "properties": Array [
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Control Aggregation",
              "name": "controlAggregation",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "beginColumnPages",
                  "text": "beginColumnPages",
                },
                Object {
                  "key": "endColumnPages",
                  "text": "endColumnPages",
                },
                Object {
                  "key": "midColumnPages",
                  "text": "midColumnPages",
                },
              ],
              "schema": Object {
                "enum": Array [
                  "beginColumnPages",
                  "endColumnPages",
                  "midColumnPages",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "controlAggregation",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Page Type",
              "name": "pageType",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "AnalyticalListPage",
                  "text": "AnalyticalListPage",
                },
                Object {
                  "key": "CustomPage",
                  "text": "CustomPage",
                },
                Object {
                  "key": "FPMCustomPage",
                  "text": "FPMCustomPage",
                },
                Object {
                  "key": "ListReport",
                  "text": "ListReport",
                },
                Object {
                  "key": "ObjectPage",
                  "text": "ObjectPage",
                },
              ],
              "schema": Object {
                "enum": Array [
                  "AnalyticalListPage",
                  "CustomPage",
                  "FPMCustomPage",
                  "ListReport",
                  "ObjectPage",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "pageType",
              ],
              "type": "string",
              "value": "ListReport",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Route Pattern",
              "name": "routePattern",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "routePattern",
              ],
              "type": "string",
              "value": ":?query:",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Context Path",
              "name": "contextPath",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "contextPath",
              ],
              "type": "string",
              "value": "/Travel",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Entity Type",
              "name": "entityType",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "entityType",
              ],
              "type": "string",
              "value": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            },
            Object {
              "artifactType": undefined,
              "description": "Full template name from \`manifest.json\`.",
              "displayName": "Template",
              "name": "template",
              "schema": Object {
                "description": "Full template name from \`manifest.json\`.",
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "template",
              ],
              "type": "string",
              "value": "sap.fe.templates.ListReport",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Name",
              "name": "name",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "name",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Entity Set",
              "name": "entitySet",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "entitySet",
              ],
              "type": "string",
              "value": "Travel",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Navigation Property",
              "name": "navigationProperty",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "navigationProperty",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Variant Management",
              "name": "variantManagement",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "variantManagement",
              ],
              "type": "string",
              "value": "Page",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Default Layout Type",
              "name": "defaultLayoutType",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "EndColumnFullScreen",
                  "text": "EndColumnFullScreen",
                },
                Object {
                  "key": "MidColumnFullScreen",
                  "text": "MidColumnFullScreen",
                },
                Object {
                  "key": "OneColumn",
                  "text": "OneColumn",
                },
                Object {
                  "key": "ThreeColumnsBeginExpandedEndHidden",
                  "text": "ThreeColumnsBeginExpandedEndHidden",
                },
                Object {
                  "key": "ThreeColumnsEndExpanded",
                  "text": "ThreeColumnsEndExpanded",
                },
                Object {
                  "key": "ThreeColumnsMidExpanded",
                  "text": "ThreeColumnsMidExpanded",
                },
                Object {
                  "key": "ThreeColumnsMidExpandedEndHidden",
                  "text": "ThreeColumnsMidExpandedEndHidden",
                },
                Object {
                  "key": "TwoColumnsBeginExpanded",
                  "text": "TwoColumnsBeginExpanded",
                },
                Object {
                  "key": "TwoColumnsMidExpanded",
                  "text": "TwoColumnsMidExpanded",
                },
              ],
              "schema": Object {
                "enum": Array [
                  "EndColumnFullScreen",
                  "MidColumnFullScreen",
                  "OneColumn",
                  "ThreeColumnsBeginExpandedEndHidden",
                  "ThreeColumnsEndExpanded",
                  "ThreeColumnsMidExpanded",
                  "ThreeColumnsMidExpandedEndHidden",
                  "TwoColumnsBeginExpanded",
                  "TwoColumnsMidExpanded",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "defaultLayoutType",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "view",
              "name": "view",
              "properties": Array [
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "Id",
                  "name": "id",
                  "schema": Object {
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "pages",
                    "TravelList",
                    "view",
                    "id",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "Name",
                  "name": "name",
                  "schema": Object {
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "pages",
                    "TravelList",
                    "view",
                    "name",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "Path",
                  "name": "path",
                  "schema": Object {
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "pages",
                    "TravelList",
                    "view",
                    "path",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "View Type",
                  "name": "viewType",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "HTML",
                      "text": "HTML",
                    },
                    Object {
                      "key": "JSON",
                      "text": "JSON",
                    },
                    Object {
                      "key": "XML",
                      "text": "XML",
                    },
                  ],
                  "schema": Object {
                    "enum": Array [
                      "HTML",
                      "JSON",
                      "XML",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "pages",
                    "TravelList",
                    "view",
                    "viewType",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "Template",
                  "name": "template",
                  "schema": Object {
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "pages",
                    "TravelList",
                    "view",
                    "template",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "properties": Object {
                  "id": Object {
                    "type": "string",
                  },
                  "name": Object {
                    "type": "string",
                  },
                  "path": Object {
                    "type": "string",
                  },
                  "template": Object {
                    "type": "string",
                  },
                  "viewType": Object {
                    "$ref": "#/definitions/ViewTypes",
                  },
                },
                "required": Array [
                  "id",
                ],
                "type": "object",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "view",
              ],
              "type": "object",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "config",
              "name": "config",
              "schema": Object {
                "additionalProperties": false,
                "properties": Object {
                  "$schema": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "config",
              ],
              "type": "object",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "navigation",
              "name": "navigation",
              "properties": Array [
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "Travel",
                  "name": "Travel",
                  "schema": Object {
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "pages",
                    "TravelList",
                    "navigation",
                    "Travel",
                  ],
                  "type": "string",
                  "value": Object {
                    "route": "TravelObjectPage",
                  },
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "Travel",
                  "name": "Travel",
                  "schema": Object {
                    "additionalProperties": true,
                    "properties": Object {},
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "pages",
                    "TravelList",
                    "navigation",
                    "Travel",
                  ],
                  "type": "object",
                  "value": Object {
                    "route": "TravelObjectPage",
                  },
                },
              ],
              "schema": Object {
                "additionalProperties": Object {
                  "anyOf": Array [
                    Object {
                      "additionalProperties": true,
                      "properties": Object {},
                      "type": "object",
                    },
                    Object {
                      "type": "string",
                    },
                  ],
                },
                "type": "object",
              },
              "schemaPath": Array [
                "pages",
                "TravelList",
                "navigation",
              ],
              "type": "object",
              "value": Object {
                "Travel": Object {
                  "route": "TravelObjectPage",
                },
              },
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "properties": Object {
              "config": Object {
                "$ref": "#/definitions/PageConfig",
              },
              "contextPath": Object {
                "type": "string",
              },
              "controlAggregation": Object {
                "$ref": "#/definitions/FlexibleColumnLayoutAggregations",
              },
              "defaultLayoutType": Object {
                "$ref": "#/definitions/FlexibleColumnLayoutType",
              },
              "entitySet": Object {
                "type": "string",
              },
              "entityType": Object {
                "type": "string",
              },
              "name": Object {
                "type": "string",
              },
              "navigation": Object {
                "additionalProperties": Object {
                  "anyOf": Array [
                    Object {
                      "additionalProperties": true,
                      "properties": Object {},
                      "type": "object",
                    },
                    Object {
                      "type": "string",
                    },
                  ],
                },
                "type": "object",
              },
              "navigationProperty": Object {
                "type": "string",
              },
              "pageType": Object {
                "$ref": "#/definitions/PageTypeV4",
              },
              "routePattern": Object {
                "type": "string",
              },
              "template": Object {
                "description": "Full template name from \`manifest.json\`.",
                "type": "string",
              },
              "variantManagement": Object {
                "type": "string",
              },
              "view": Object {
                "$ref": "#/definitions/PageView",
              },
            },
            "type": "object",
          },
          "schemaPath": Array [
            "pages",
            "TravelList",
          ],
          "type": "object",
          "value": Object {
            "contextPath": "/Travel",
            "entitySet": "Travel",
            "entityType": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "navigation": Object {
              "Travel": Object {
                "route": "TravelObjectPage",
              },
            },
            "pageType": "ListReport",
            "routePattern": ":?query:",
            "template": "sap.fe.templates.ListReport",
            "variantManagement": "Page",
          },
        },
        Object {
          "artifactType": undefined,
          "description": "",
          "displayName": "TravelObjectPage",
          "name": "TravelObjectPage",
          "properties": Array [
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Control Aggregation",
              "name": "controlAggregation",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "beginColumnPages",
                  "text": "beginColumnPages",
                },
                Object {
                  "key": "endColumnPages",
                  "text": "endColumnPages",
                },
                Object {
                  "key": "midColumnPages",
                  "text": "midColumnPages",
                },
              ],
              "schema": Object {
                "enum": Array [
                  "beginColumnPages",
                  "endColumnPages",
                  "midColumnPages",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "controlAggregation",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Page Type",
              "name": "pageType",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "AnalyticalListPage",
                  "text": "AnalyticalListPage",
                },
                Object {
                  "key": "CustomPage",
                  "text": "CustomPage",
                },
                Object {
                  "key": "FPMCustomPage",
                  "text": "FPMCustomPage",
                },
                Object {
                  "key": "ListReport",
                  "text": "ListReport",
                },
                Object {
                  "key": "ObjectPage",
                  "text": "ObjectPage",
                },
              ],
              "schema": Object {
                "enum": Array [
                  "AnalyticalListPage",
                  "CustomPage",
                  "FPMCustomPage",
                  "ListReport",
                  "ObjectPage",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "pageType",
              ],
              "type": "string",
              "value": "ObjectPage",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Route Pattern",
              "name": "routePattern",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "routePattern",
              ],
              "type": "string",
              "value": "Travel({key}):?query:",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Context Path",
              "name": "contextPath",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "contextPath",
              ],
              "type": "string",
              "value": "/Travel",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Entity Type",
              "name": "entityType",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "entityType",
              ],
              "type": "string",
              "value": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            },
            Object {
              "artifactType": undefined,
              "description": "Full template name from \`manifest.json\`.",
              "displayName": "Template",
              "name": "template",
              "schema": Object {
                "description": "Full template name from \`manifest.json\`.",
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "template",
              ],
              "type": "string",
              "value": "sap.fe.templates.ObjectPage",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Name",
              "name": "name",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "name",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Entity Set",
              "name": "entitySet",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "entitySet",
              ],
              "type": "string",
              "value": "Travel",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Navigation Property",
              "name": "navigationProperty",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "navigationProperty",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Variant Management",
              "name": "variantManagement",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "variantManagement",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Default Layout Type",
              "name": "defaultLayoutType",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "EndColumnFullScreen",
                  "text": "EndColumnFullScreen",
                },
                Object {
                  "key": "MidColumnFullScreen",
                  "text": "MidColumnFullScreen",
                },
                Object {
                  "key": "OneColumn",
                  "text": "OneColumn",
                },
                Object {
                  "key": "ThreeColumnsBeginExpandedEndHidden",
                  "text": "ThreeColumnsBeginExpandedEndHidden",
                },
                Object {
                  "key": "ThreeColumnsEndExpanded",
                  "text": "ThreeColumnsEndExpanded",
                },
                Object {
                  "key": "ThreeColumnsMidExpanded",
                  "text": "ThreeColumnsMidExpanded",
                },
                Object {
                  "key": "ThreeColumnsMidExpandedEndHidden",
                  "text": "ThreeColumnsMidExpandedEndHidden",
                },
                Object {
                  "key": "TwoColumnsBeginExpanded",
                  "text": "TwoColumnsBeginExpanded",
                },
                Object {
                  "key": "TwoColumnsMidExpanded",
                  "text": "TwoColumnsMidExpanded",
                },
              ],
              "schema": Object {
                "enum": Array [
                  "EndColumnFullScreen",
                  "MidColumnFullScreen",
                  "OneColumn",
                  "ThreeColumnsBeginExpandedEndHidden",
                  "ThreeColumnsEndExpanded",
                  "ThreeColumnsMidExpanded",
                  "ThreeColumnsMidExpandedEndHidden",
                  "TwoColumnsBeginExpanded",
                  "TwoColumnsMidExpanded",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "defaultLayoutType",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "view",
              "name": "view",
              "properties": Array [
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "Id",
                  "name": "id",
                  "schema": Object {
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "pages",
                    "TravelObjectPage",
                    "view",
                    "id",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "Name",
                  "name": "name",
                  "schema": Object {
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "pages",
                    "TravelObjectPage",
                    "view",
                    "name",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "Path",
                  "name": "path",
                  "schema": Object {
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "pages",
                    "TravelObjectPage",
                    "view",
                    "path",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "View Type",
                  "name": "viewType",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "HTML",
                      "text": "HTML",
                    },
                    Object {
                      "key": "JSON",
                      "text": "JSON",
                    },
                    Object {
                      "key": "XML",
                      "text": "XML",
                    },
                  ],
                  "schema": Object {
                    "enum": Array [
                      "HTML",
                      "JSON",
                      "XML",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "pages",
                    "TravelObjectPage",
                    "view",
                    "viewType",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "Template",
                  "name": "template",
                  "schema": Object {
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "pages",
                    "TravelObjectPage",
                    "view",
                    "template",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "properties": Object {
                  "id": Object {
                    "type": "string",
                  },
                  "name": Object {
                    "type": "string",
                  },
                  "path": Object {
                    "type": "string",
                  },
                  "template": Object {
                    "type": "string",
                  },
                  "viewType": Object {
                    "$ref": "#/definitions/ViewTypes",
                  },
                },
                "required": Array [
                  "id",
                ],
                "type": "object",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "view",
              ],
              "type": "object",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "config",
              "name": "config",
              "schema": Object {
                "additionalProperties": false,
                "properties": Object {
                  "$schema": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "config",
              ],
              "type": "object",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "navigation",
              "name": "navigation",
              "schema": Object {
                "additionalProperties": Object {
                  "anyOf": Array [
                    Object {
                      "additionalProperties": true,
                      "properties": Object {},
                      "type": "object",
                    },
                    Object {
                      "type": "string",
                    },
                  ],
                },
                "type": "object",
              },
              "schemaPath": Array [
                "pages",
                "TravelObjectPage",
                "navigation",
              ],
              "type": "object",
              "value": Object {},
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "properties": Object {
              "config": Object {
                "$ref": "#/definitions/PageConfig",
              },
              "contextPath": Object {
                "type": "string",
              },
              "controlAggregation": Object {
                "$ref": "#/definitions/FlexibleColumnLayoutAggregations",
              },
              "defaultLayoutType": Object {
                "$ref": "#/definitions/FlexibleColumnLayoutType",
              },
              "entitySet": Object {
                "type": "string",
              },
              "entityType": Object {
                "type": "string",
              },
              "name": Object {
                "type": "string",
              },
              "navigation": Object {
                "additionalProperties": Object {
                  "anyOf": Array [
                    Object {
                      "additionalProperties": true,
                      "properties": Object {},
                      "type": "object",
                    },
                    Object {
                      "type": "string",
                    },
                  ],
                },
                "type": "object",
              },
              "navigationProperty": Object {
                "type": "string",
              },
              "pageType": Object {
                "$ref": "#/definitions/PageTypeV4",
              },
              "routePattern": Object {
                "type": "string",
              },
              "template": Object {
                "description": "Full template name from \`manifest.json\`.",
                "type": "string",
              },
              "variantManagement": Object {
                "type": "string",
              },
              "view": Object {
                "$ref": "#/definitions/PageView",
              },
            },
            "type": "object",
          },
          "schemaPath": Array [
            "pages",
            "TravelObjectPage",
          ],
          "type": "object",
          "value": Object {
            "contextPath": "/Travel",
            "entitySet": "Travel",
            "entityType": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "navigation": Object {},
            "pageType": "ObjectPage",
            "routePattern": "Travel({key}):?query:",
            "template": "sap.fe.templates.ObjectPage",
          },
        },
      ],
      "schema": Object {
        "additionalProperties": Object {
          "$ref": "#/definitions/PageV4",
        },
        "type": "object",
      },
      "schemaPath": Array [
        "pages",
      ],
      "type": "object",
      "value": Object {
        "TravelList": Object {
          "contextPath": "/Travel",
          "entitySet": "Travel",
          "entityType": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
          "navigation": Object {
            "Travel": Object {
              "route": "TravelObjectPage",
            },
          },
          "pageType": "ListReport",
          "routePattern": ":?query:",
          "template": "sap.fe.templates.ListReport",
          "variantManagement": "Page",
        },
        "TravelObjectPage": Object {
          "contextPath": "/Travel",
          "entitySet": "Travel",
          "entityType": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
          "navigation": Object {},
          "pageType": "ObjectPage",
          "routePattern": "Travel({key}):?query:",
          "template": "sap.fe.templates.ObjectPage",
        },
      },
    },
    Object {
      "artifactType": undefined,
      "description": "",
      "displayName": "target",
      "name": "target",
      "properties": Array [
        Object {
          "artifactType": undefined,
          "description": "",
          "displayName": "Fiori Elements",
          "name": "fioriElements",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "v2",
              "text": "v2",
            },
            Object {
              "key": "v4",
              "text": "v4",
            },
          ],
          "schema": Object {
            "enum": Array [
              "v2",
              "v4",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "target",
            "fioriElements",
          ],
          "type": "string",
          "value": "v4",
        },
        Object {
          "artifactType": undefined,
          "description": "",
          "displayName": "Odata",
          "name": "odata",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "v2",
              "text": "v2",
            },
            Object {
              "key": "v4",
              "text": "v4",
            },
          ],
          "schema": Object {
            "enum": Array [
              "v2",
              "v4",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "target",
            "odata",
          ],
          "type": "string",
          "value": "v4",
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "properties": Object {
          "fioriElements": Object {
            "$ref": "#/definitions/FioriElementsVersion",
          },
          "odata": Object {
            "$ref": "#/definitions/OdataVersion",
          },
        },
        "type": "object",
      },
      "schemaPath": Array [
        "target",
      ],
      "type": "object",
      "value": Object {
        "fioriElements": "v4",
        "odata": "v4",
      },
    },
  ],
  "root": true,
  "schema": undefined,
  "text": "Root",
  "title": undefined,
  "type": "rootNode",
  "value": undefined,
}
`;

exports[`getTree getTree - CustomPage 1`] = `
Object {
  "additionalText": undefined,
  "annotationNodeId": Array [],
  "children": Array [
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-FilterBar-filterFields-FilterField-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": Array [],
                    "movable": true,
                    "type": undefined,
                  },
                  "path": Array [
                    "FilterBar",
                    "filterFields",
                    "FilterField",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Reference to the key of another filter already displayed in the table to properly place this one",
                      "displayName": "Anchor",
                      "name": "anchor",
                      "options": Array [
                        Object {
                          "key": "",
                          "reset": true,
                          "text": "",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Reference to the key of another filter already displayed in the table to properly place this one",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "oneOf": Array [],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "FilterBar",
                        "filterFields",
                        "FilterField",
                        "anchor",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "The property name of the FilterField",
                      "displayName": "Key",
                      "name": "key",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "The property name of the FilterField",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "FilterBar",
                        "filterFields",
                        "FilterField",
                        "key",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "The text that will be displayed for this FilterField",
                      "displayName": "Label",
                      "name": "label",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "The text that will be displayed for this FilterField",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "FilterBar",
                        "filterFields",
                        "FilterField",
                        "label",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Defines where this filter should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                      "displayName": "Placement",
                      "name": "placement",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "After",
                          "text": "After",
                        },
                        Object {
                          "key": "Before",
                          "text": "Before",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines where this filter should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "FilterBar",
                        "filterFields",
                        "FilterField",
                        "placement",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Defines which property will be influenced by the FilterField.
This must be a valid property of the entity as this can be used for SAP Companion integration
",
                      "displayName": "Property",
                      "name": "property",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines which property will be influenced by the FilterField.
This must be a valid property of the entity as this can be used for SAP Companion integration
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "FilterBar",
                        "filterFields",
                        "FilterField",
                        "property",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "If set, the FilterField will be marked as a mandatory field.",
                      "displayName": "Required",
                      "name": "required",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "If set, the FilterField will be marked as a mandatory field.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "FilterBar",
                        "filterFields",
                        "FilterField",
                        "required",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "This property is not required at filter field level. To achieve the desired behavior, specify the showMessages property in the FilterBar building block.",
                      "displayName": "Show Messages",
                      "name": "showMessages",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "This property is not required at filter field level. To achieve the desired behavior, specify the showMessages property in the FilterBar building block.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "FilterBar",
                        "filterFields",
                        "FilterField",
                        "showMessages",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Unique id of control",
                      "displayName": "Id",
                      "name": "id",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "FilterBar",
                        "filterFields",
                        "FilterField",
                        "id",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "description": "FilterField",
                    "isViewNode": true,
                    "metadata": Object {
                      "controlName": "sap.fe.macros.filterBar.FilterField",
                      "internalId": "3b6bec27-b30c-4ad8-8538-25184c6405c3",
                      "path": Array [
                        Object {
                          "index": 0,
                          "name": "Page",
                        },
                        Object {
                          "index": 0,
                          "name": "content",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:FilterBar",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:filterFields",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:FilterField",
                        },
                      ],
                      "position": Object {
                        "endColumn": 55,
                        "endLine": 6,
                        "endOffset": 477,
                        "startColumn": 21,
                        "startLine": 6,
                        "startOffset": 443,
                      },
                      "type": "Control",
                    },
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "XMLProperty",
                        "description": "Reference to the key of another filter already displayed in the table to properly place this one",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "oneOf": Array [],
                        "type": "string",
                      },
                      "id": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "key": Object {
                        "artifactType": "XMLProperty",
                        "description": "The property name of the FilterField",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "label": Object {
                        "artifactType": "XMLProperty",
                        "description": "The text that will be displayed for this FilterField",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "placement": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines where this filter should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "property": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines which property will be influenced by the FilterField.
This must be a valid property of the entity as this can be used for SAP Companion integration
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "required": Object {
                        "artifactType": "XMLProperty",
                        "description": "If set, the FilterField will be marked as a mandatory field.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "showMessages": Object {
                        "artifactType": "XMLProperty",
                        "description": "This property is not required at filter field level. To achieve the desired behavior, specify the showMessages property in the FilterBar building block.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                    },
                    "propertyIndex": 0,
                    "type": "object",
                  },
                  "text": "FilterField",
                  "title": "FilterField",
                  "type": "customFilterField",
                  "value": Object {},
                },
              ],
              "id": "outline-node-FilterBar-filterFields-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "FilterBar",
                "filterFields",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/sap.fe.macros.filterBar.FilterField",
                },
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.SelectionFields#filterBarMacro1",
                "isViewNode": true,
                "metadata": Object {
                  "path": Array [
                    Object {
                      "index": 0,
                      "name": "Page",
                    },
                    Object {
                      "index": 0,
                      "name": "content",
                    },
                    Object {
                      "index": 0,
                      "name": "macros:FilterBar",
                    },
                    Object {
                      "index": 0,
                      "name": "macros:filterFields",
                    },
                  ],
                  "position": Object {
                    "endColumn": 38,
                    "endLine": 7,
                    "endOffset": 516,
                    "startColumn": 17,
                    "startLine": 5,
                    "startOffset": 401,
                  },
                  "type": "Aggregation",
                },
                "properties": Object {
                  "FilterField": Object {
                    "description": "FilterField",
                    "isViewNode": true,
                    "metadata": Object {
                      "controlName": "sap.fe.macros.filterBar.FilterField",
                      "internalId": "3b6bec27-b30c-4ad8-8538-25184c6405c3",
                      "path": Array [
                        Object {
                          "index": 0,
                          "name": "Page",
                        },
                        Object {
                          "index": 0,
                          "name": "content",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:FilterBar",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:filterFields",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:FilterField",
                        },
                      ],
                      "position": Object {
                        "endColumn": 55,
                        "endLine": 6,
                        "endOffset": 477,
                        "startColumn": 21,
                        "startLine": 6,
                        "startOffset": 443,
                      },
                      "type": "Control",
                    },
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "XMLProperty",
                        "description": "Reference to the key of another filter already displayed in the table to properly place this one",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "oneOf": Array [],
                        "type": "string",
                      },
                      "id": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "key": Object {
                        "artifactType": "XMLProperty",
                        "description": "The property name of the FilterField",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "label": Object {
                        "artifactType": "XMLProperty",
                        "description": "The text that will be displayed for this FilterField",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "placement": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines where this filter should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "property": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines which property will be influenced by the FilterField.
This must be a valid property of the entity as this can be used for SAP Companion integration
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "required": Object {
                        "artifactType": "XMLProperty",
                        "description": "If set, the FilterField will be marked as a mandatory field.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "showMessages": Object {
                        "artifactType": "XMLProperty",
                        "description": "This property is not required at filter field level. To achieve the desired behavior, specify the showMessages property in the FilterBar building block.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                    },
                    "propertyIndex": 0,
                    "type": "object",
                  },
                },
                "type": "object",
              },
              "text": "Filter Fields",
              "title": undefined,
              "type": undefined,
              "value": Object {
                "FilterField": Object {},
              },
            },
          ],
          "id": "outline-node-FilterBar-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "FilterBar",
          ],
          "properties": Array [
            Object {
              "artifactType": "XMLProperty",
              "description": "Defines the path of the context used in the current page or block.
This setting is defined by the framework.",
              "displayName": "Context Path",
              "name": "contextPath",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Defines the path of the context used in the current page or block.
This setting is defined by the framework.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "FilterBar",
                "contextPath",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "If true, the search is triggered automatically when a filter value is changed.",
              "displayName": "Live Mode",
              "name": "liveMode",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "If true, the search is triggered automatically when a filter value is changed.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "FilterBar",
                "liveMode",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Defines the relative path of the property in the metamodel, based on the current contextPath.",
              "displayName": "Meta Path",
              "name": "metaPath",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Defines the relative path of the property in the metamodel, based on the current contextPath.",
                "metadata": Object {
                  "position": Object {
                    "endColumn": 124,
                    "endLine": 4,
                    "endOffset": 382,
                    "startColumn": 46,
                    "startLine": 4,
                    "startOffset": 304,
                  },
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "FilterBar",
                "metaPath",
              ],
              "type": "string",
              "value": "/Booking/@com.sap.vocabularies.UI.v1.SelectionFields#filterBarMacro1",
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Handles the visibility of the 'Clear' button on the FilterBar.",
              "displayName": "Show Clear Button",
              "name": "showClearButton",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Handles the visibility of the 'Clear' button on the FilterBar.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "FilterBar",
                "showClearButton",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Displays possible errors during the search in a message box",
              "displayName": "Show Messages",
              "name": "showMessages",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Displays possible errors during the search in a message box",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "FilterBar",
                "showMessages",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Parameter which sets the visibility of the FilterBar building block",
              "displayName": "Visible",
              "name": "visible",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Parameter which sets the visibility of the FilterBar building block",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "FilterBar",
                "visible",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Unique id of control",
              "displayName": "Id",
              "name": "id",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Unique id of control",
                "metadata": Object {
                  "position": Object {
                    "endColumn": 44,
                    "endLine": 4,
                    "endOffset": 302,
                    "startColumn": 31,
                    "startLine": 4,
                    "startOffset": 289,
                  },
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "FilterBar",
                "id",
              ],
              "type": "string",
              "value": "FilterBar",
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "This event is fired when the 'Clear' button is pressed. This is only possible when the 'Clear' button is enabled.",
              "displayName": "After Clear",
              "name": "afterClear",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "This event is fired when the 'Clear' button is pressed. This is only possible when the 'Clear' button is enabled.",
                "metadata": Object {
                  "type": "Event",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "FilterBar",
                "afterClear",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "This event is fired after either a filter value or the visibility of a filter item has been changed. The event contains conditions that will be used as filters.",
              "displayName": "Filter Changed",
              "name": "filterChanged",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "This event is fired after either a filter value or the visibility of a filter item has been changed. The event contains conditions that will be used as filters.",
                "metadata": Object {
                  "type": "Event",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "FilterBar",
                "filterChanged",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "This event is fired when the 'Go' button is pressed or after a condition change.",
              "displayName": "Search",
              "name": "search",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "This event is fired when the 'Go' button is pressed or after a condition change.",
                "metadata": Object {
                  "type": "Event",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "FilterBar",
                "search",
              ],
              "type": "string",
              "value": undefined,
            },
          ],
          "schema": Object {
            "description": "FilterBar #FilterBar",
            "isViewNode": true,
            "metadata": Object {
              "controlName": "sap.fe.macros.FilterBar",
              "internalId": "78dd9bc4-c2f4-4c5f-b6b5-e78ef90fc953",
              "path": Array [
                Object {
                  "index": 0,
                  "name": "Page",
                },
                Object {
                  "index": 0,
                  "name": "content",
                },
                Object {
                  "index": 0,
                  "name": "macros:FilterBar",
                },
              ],
              "position": Object {
                "endColumn": 31,
                "endLine": 8,
                "endOffset": 548,
                "startColumn": 13,
                "startLine": 4,
                "startOffset": 271,
              },
              "type": "Control",
            },
            "properties": Object {
              "afterClear": Object {
                "artifactType": "XMLProperty",
                "description": "This event is fired when the 'Clear' button is pressed. This is only possible when the 'Clear' button is enabled.",
                "metadata": Object {
                  "type": "Event",
                },
                "type": "string",
              },
              "contextPath": Object {
                "artifactType": "XMLProperty",
                "description": "Defines the path of the context used in the current page or block.
This setting is defined by the framework.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "filterChanged": Object {
                "artifactType": "XMLProperty",
                "description": "This event is fired after either a filter value or the visibility of a filter item has been changed. The event contains conditions that will be used as filters.",
                "metadata": Object {
                  "type": "Event",
                },
                "type": "string",
              },
              "filterFields": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/sap.fe.macros.filterBar.FilterField",
                },
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.SelectionFields#filterBarMacro1",
                "isViewNode": true,
                "metadata": Object {
                  "path": Array [
                    Object {
                      "index": 0,
                      "name": "Page",
                    },
                    Object {
                      "index": 0,
                      "name": "content",
                    },
                    Object {
                      "index": 0,
                      "name": "macros:FilterBar",
                    },
                    Object {
                      "index": 0,
                      "name": "macros:filterFields",
                    },
                  ],
                  "position": Object {
                    "endColumn": 38,
                    "endLine": 7,
                    "endOffset": 516,
                    "startColumn": 17,
                    "startLine": 5,
                    "startOffset": 401,
                  },
                  "type": "Aggregation",
                },
                "properties": Object {
                  "FilterField": Object {
                    "description": "FilterField",
                    "isViewNode": true,
                    "metadata": Object {
                      "controlName": "sap.fe.macros.filterBar.FilterField",
                      "internalId": "3b6bec27-b30c-4ad8-8538-25184c6405c3",
                      "path": Array [
                        Object {
                          "index": 0,
                          "name": "Page",
                        },
                        Object {
                          "index": 0,
                          "name": "content",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:FilterBar",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:filterFields",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:FilterField",
                        },
                      ],
                      "position": Object {
                        "endColumn": 55,
                        "endLine": 6,
                        "endOffset": 477,
                        "startColumn": 21,
                        "startLine": 6,
                        "startOffset": 443,
                      },
                      "type": "Control",
                    },
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "XMLProperty",
                        "description": "Reference to the key of another filter already displayed in the table to properly place this one",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "oneOf": Array [],
                        "type": "string",
                      },
                      "id": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "key": Object {
                        "artifactType": "XMLProperty",
                        "description": "The property name of the FilterField",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "label": Object {
                        "artifactType": "XMLProperty",
                        "description": "The text that will be displayed for this FilterField",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "placement": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines where this filter should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "property": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines which property will be influenced by the FilterField.
This must be a valid property of the entity as this can be used for SAP Companion integration
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "required": Object {
                        "artifactType": "XMLProperty",
                        "description": "If set, the FilterField will be marked as a mandatory field.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "showMessages": Object {
                        "artifactType": "XMLProperty",
                        "description": "This property is not required at filter field level. To achieve the desired behavior, specify the showMessages property in the FilterBar building block.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                    },
                    "propertyIndex": 0,
                    "type": "object",
                  },
                },
                "type": "object",
              },
              "id": Object {
                "artifactType": "XMLProperty",
                "description": "Unique id of control",
                "metadata": Object {
                  "position": Object {
                    "endColumn": 44,
                    "endLine": 4,
                    "endOffset": 302,
                    "startColumn": 31,
                    "startLine": 4,
                    "startOffset": 289,
                  },
                  "type": "Property",
                },
                "type": "string",
              },
              "liveMode": Object {
                "artifactType": "XMLProperty",
                "description": "If true, the search is triggered automatically when a filter value is changed.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "metaPath": Object {
                "artifactType": "XMLProperty",
                "description": "Defines the relative path of the property in the metamodel, based on the current contextPath.",
                "metadata": Object {
                  "position": Object {
                    "endColumn": 124,
                    "endLine": 4,
                    "endOffset": 382,
                    "startColumn": 46,
                    "startLine": 4,
                    "startOffset": 304,
                  },
                  "type": "Property",
                },
                "type": "string",
              },
              "search": Object {
                "artifactType": "XMLProperty",
                "description": "This event is fired when the 'Go' button is pressed or after a condition change.",
                "metadata": Object {
                  "type": "Event",
                },
                "type": "string",
              },
              "showClearButton": Object {
                "artifactType": "XMLProperty",
                "description": "Handles the visibility of the 'Clear' button on the FilterBar.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "showMessages": Object {
                "artifactType": "XMLProperty",
                "description": "Displays possible errors during the search in a message box",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "visible": Object {
                "artifactType": "XMLProperty",
                "description": "Parameter which sets the visibility of the FilterBar building block",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
            },
            "propertyIndex": 0,
            "type": "object",
          },
          "text": "FilterBar #FilterBar",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "filterFields": Object {
              "FilterField": Object {},
            },
            "id": "FilterBar",
            "metaPath": "/Booking/@com.sap.vocabularies.UI.v1.SelectionFields#filterBarMacro1",
          },
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-Table-creationMode-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "Table",
                "creationMode",
              ],
              "properties": Array [
                Object {
                  "artifactType": "XMLProperty",
                  "description": "Specifies if the new entry should be created at the top or bottom of a table in case of creationMode 'Inline'
The default value is 'false'
",
                  "displayName": "Create At End",
                  "name": "createAtEnd",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "XMLProperty",
                    "description": "Specifies if the new entry should be created at the top or bottom of a table in case of creationMode 'Inline'
The default value is 'false'
",
                    "metadata": Object {
                      "type": "Property",
                    },
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "Table",
                    "creationMode",
                    "createAtEnd",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "XMLProperty",
                  "description": "Defines the list of properties that will be displayed in the creation dialog, when the creation mode is set to 'CreationDialog'.
The value is a comma-separated list of property names.
",
                  "displayName": "Creation Fields",
                  "name": "creationFields",
                  "schema": Object {
                    "artifactType": "XMLProperty",
                    "description": "Defines the list of properties that will be displayed in the creation dialog, when the creation mode is set to 'CreationDialog'.
The value is a comma-separated list of property names.
",
                    "metadata": Object {
                      "type": "Property",
                    },
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "Table",
                    "creationMode",
                    "creationFields",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "XMLProperty",
                  "description": "Specifies if the new entry should be hidden in case of creationMode 'InlineCreationRows'. This only applies to responsive tables.
The default value is 'false'
",
                  "displayName": "Inline Creation Rows Hidden In Edit Mode",
                  "name": "inlineCreationRowsHiddenInEditMode",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "XMLProperty",
                    "description": "Specifies if the new entry should be hidden in case of creationMode 'InlineCreationRows'. This only applies to responsive tables.
The default value is 'false'
",
                    "metadata": Object {
                      "type": "Property",
                    },
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "Table",
                    "creationMode",
                    "inlineCreationRowsHiddenInEditMode",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "XMLProperty",
                  "description": "Defines the creation mode to be used by the table.
Allowed values are \`NewPage\`, \`Inline\`, \`InlineCreationsRows\`, \`External\` or \`CreationDialog\`.

NewPage - the created document is shown in a new page, depending on whether metadata 'Sync', 'Async' or 'Deferred' is used
Inline - The creation is done inline
InlineCreationsRows - The creation is done inline with an empty row
External - The creation is done in a different application specified via the parameter 'outbound'
CreationDialog - the creation is done in the table, with a dialog allowing to specify some initial property values (the properties are listed in \`creationFields\`).

If not set with any value:
if navigation is defined, the default value is 'NewPage'. Otherwise it is 'Inline'.
",
                  "displayName": "Name",
                  "name": "name",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "CreationDialog",
                      "text": "CreationDialog",
                    },
                    Object {
                      "key": "External",
                      "text": "External",
                    },
                    Object {
                      "key": "Inline",
                      "text": "Inline",
                    },
                    Object {
                      "key": "InlineCreationRows",
                      "text": "InlineCreationRows",
                    },
                    Object {
                      "key": "NewPage",
                      "text": "NewPage",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "XMLProperty",
                    "description": "Defines the creation mode to be used by the table.
Allowed values are \`NewPage\`, \`Inline\`, \`InlineCreationsRows\`, \`External\` or \`CreationDialog\`.

NewPage - the created document is shown in a new page, depending on whether metadata 'Sync', 'Async' or 'Deferred' is used
Inline - The creation is done inline
InlineCreationsRows - The creation is done inline with an empty row
External - The creation is done in a different application specified via the parameter 'outbound'
CreationDialog - the creation is done in the table, with a dialog allowing to specify some initial property values (the properties are listed in \`creationFields\`).

If not set with any value:
if navigation is defined, the default value is 'NewPage'. Otherwise it is 'Inline'.
",
                    "enum": Array [
                      "CreationDialog",
                      "External",
                      "Inline",
                      "InlineCreationRows",
                      "NewPage",
                    ],
                    "metadata": Object {
                      "type": "Property",
                    },
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "Table",
                    "creationMode",
                    "name",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "XMLProperty",
                  "description": "The navigation target where the document is created in case of creationMode 'External'
",
                  "displayName": "Outbound",
                  "name": "outbound",
                  "schema": Object {
                    "artifactType": "XMLProperty",
                    "description": "The navigation target where the document is created in case of creationMode 'External'
",
                    "metadata": Object {
                      "type": "Property",
                    },
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "Table",
                    "creationMode",
                    "outbound",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "XMLProperty",
                  "description": "Unique id of control",
                  "displayName": "Id",
                  "name": "id",
                  "schema": Object {
                    "artifactType": "XMLProperty",
                    "description": "Unique id of control",
                    "metadata": Object {
                      "type": "Property",
                    },
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "Table",
                    "creationMode",
                    "id",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "artifactType": "XMLProperty",
                "description": "creationMode",
                "isViewNode": true,
                "metadata": Object {
                  "type": "Property",
                },
                "properties": Object {
                  "createAtEnd": Object {
                    "artifactType": "XMLProperty",
                    "description": "Specifies if the new entry should be created at the top or bottom of a table in case of creationMode 'Inline'
The default value is 'false'
",
                    "metadata": Object {
                      "type": "Property",
                    },
                    "type": "boolean",
                  },
                  "creationFields": Object {
                    "artifactType": "XMLProperty",
                    "description": "Defines the list of properties that will be displayed in the creation dialog, when the creation mode is set to 'CreationDialog'.
The value is a comma-separated list of property names.
",
                    "metadata": Object {
                      "type": "Property",
                    },
                    "type": "string",
                  },
                  "id": Object {
                    "artifactType": "XMLProperty",
                    "description": "Unique id of control",
                    "metadata": Object {
                      "type": "Property",
                    },
                    "type": "string",
                  },
                  "inlineCreationRowsHiddenInEditMode": Object {
                    "artifactType": "XMLProperty",
                    "description": "Specifies if the new entry should be hidden in case of creationMode 'InlineCreationRows'. This only applies to responsive tables.
The default value is 'false'
",
                    "metadata": Object {
                      "type": "Property",
                    },
                    "type": "boolean",
                  },
                  "name": Object {
                    "artifactType": "XMLProperty",
                    "description": "Defines the creation mode to be used by the table.
Allowed values are \`NewPage\`, \`Inline\`, \`InlineCreationsRows\`, \`External\` or \`CreationDialog\`.

NewPage - the created document is shown in a new page, depending on whether metadata 'Sync', 'Async' or 'Deferred' is used
Inline - The creation is done inline
InlineCreationsRows - The creation is done inline with an empty row
External - The creation is done in a different application specified via the parameter 'outbound'
CreationDialog - the creation is done in the table, with a dialog allowing to specify some initial property values (the properties are listed in \`creationFields\`).

If not set with any value:
if navigation is defined, the default value is 'NewPage'. Otherwise it is 'Inline'.
",
                    "enum": Array [
                      "CreationDialog",
                      "External",
                      "Inline",
                      "InlineCreationRows",
                      "NewPage",
                    ],
                    "metadata": Object {
                      "type": "Property",
                    },
                    "type": "string",
                  },
                  "outbound": Object {
                    "artifactType": "XMLProperty",
                    "description": "The navigation target where the document is created in case of creationMode 'External'
",
                    "metadata": Object {
                      "type": "Property",
                    },
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "text": "creationMode",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-Table-actions-Action-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": Array [],
                    "movable": true,
                    "type": "actions",
                  },
                  "path": Array [
                    "Table",
                    "actions",
                    "Action",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Reference to the key of another action already displayed in the toolbar to properly place this one",
                      "displayName": "Anchor",
                      "name": "anchor",
                      "options": Array [
                        Object {
                          "key": "",
                          "reset": true,
                          "text": "",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Reference to the key of another action already displayed in the toolbar to properly place this one",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 50,
                            "endLine": 11,
                            "endOffset": 774,
                            "startColumn": 36,
                            "startLine": 11,
                            "startOffset": 760,
                          },
                          "type": "Property",
                        },
                        "oneOf": Array [],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "actions",
                        "Action",
                        "anchor",
                      ],
                      "type": "string",
                      "value": "dummy2",
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Determines the shortcut combination to trigger the action",
                      "displayName": "Command",
                      "name": "command",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines the shortcut combination to trigger the action",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "actions",
                        "Action",
                        "command",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Determines whether the action requires selecting one item or multiple items.
Allowed values are \`single\` and \`multi\`",
                      "displayName": "Enable On Select",
                      "name": "enableOnSelect",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "multi",
                          "text": "multi",
                        },
                        Object {
                          "key": "single",
                          "text": "single",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines whether the action requires selecting one item or multiple items.
Allowed values are \`single\` and \`multi\`",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "actions",
                        "Action",
                        "enableOnSelect",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Enables or disables the action",
                      "displayName": "Enabled",
                      "name": "enabled",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Enables or disables the action",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "Table",
                        "actions",
                        "Action",
                        "enabled",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Unique identifier of the action",
                      "displayName": "Key",
                      "name": "key",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique identifier of the action",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "actions",
                        "Action",
                        "key",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Defines where this action should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                      "displayName": "Placement",
                      "name": "placement",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "After",
                          "text": "After",
                        },
                        Object {
                          "key": "Before",
                          "text": "Before",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines where this action should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 68,
                            "endLine": 11,
                            "endOffset": 792,
                            "startColumn": 52,
                            "startLine": 11,
                            "startOffset": 776,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "actions",
                        "Action",
                        "placement",
                      ],
                      "type": "string",
                      "value": "After",
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Defines if the action requires a selection.",
                      "displayName": "Requires Selection",
                      "name": "requiresSelection",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines if the action requires a selection.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "Table",
                        "actions",
                        "Action",
                        "requiresSelection",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "The text that will be displayed for this action",
                      "displayName": "Text",
                      "name": "text",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "The text that will be displayed for this action",
                        "i18nClassification": "BUT: Text of the action button",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "actions",
                        "Action",
                        "text",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Determines whether the action is visible.",
                      "displayName": "Visible",
                      "name": "visible",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines whether the action is visible.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "Table",
                        "actions",
                        "Action",
                        "visible",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Unique id of control",
                      "displayName": "Id",
                      "name": "id",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "actions",
                        "Action",
                        "id",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Event handler to be called when the user chooses the action",
                      "displayName": "Press",
                      "name": "press",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Event handler to be called when the user chooses the action",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "actions",
                        "Action",
                        "press",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "description": "Action",
                    "isViewNode": true,
                    "metadata": Object {
                      "controlName": "sap.fe.macros.table.Action",
                      "internalId": "f8f08a5c-5d74-4d86-8433-24a77b3f1b62",
                      "path": Array [
                        Object {
                          "index": 0,
                          "name": "Page",
                        },
                        Object {
                          "index": 0,
                          "name": "content",
                        },
                        Object {
                          "index": 1,
                          "name": "macros:Table",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:actions",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:Action",
                        },
                      ],
                      "position": Object {
                        "endColumn": 70,
                        "endLine": 11,
                        "endOffset": 794,
                        "startColumn": 21,
                        "startLine": 11,
                        "startOffset": 745,
                      },
                      "type": "Control",
                    },
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "XMLProperty",
                        "description": "Reference to the key of another action already displayed in the toolbar to properly place this one",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 50,
                            "endLine": 11,
                            "endOffset": 774,
                            "startColumn": 36,
                            "startLine": 11,
                            "startOffset": 760,
                          },
                          "type": "Property",
                        },
                        "oneOf": Array [],
                        "type": "string",
                      },
                      "command": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines the shortcut combination to trigger the action",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "enableOnSelect": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines whether the action requires selecting one item or multiple items.
Allowed values are \`single\` and \`multi\`",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "enabled": Object {
                        "artifactType": "XMLProperty",
                        "description": "Enables or disables the action",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "id": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "key": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique identifier of the action",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "placement": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines where this action should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 68,
                            "endLine": 11,
                            "endOffset": 792,
                            "startColumn": 52,
                            "startLine": 11,
                            "startOffset": 776,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "press": Object {
                        "artifactType": "XMLProperty",
                        "description": "Event handler to be called when the user chooses the action",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "requiresSelection": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines if the action requires a selection.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "text": Object {
                        "artifactType": "XMLProperty",
                        "description": "The text that will be displayed for this action",
                        "i18nClassification": "BUT: Text of the action button",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "visible": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines whether the action is visible.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                    },
                    "propertyIndex": 0,
                    "type": "object",
                  },
                  "text": "Action",
                  "title": "Action",
                  "type": "customAction",
                  "value": Object {
                    "anchor": "dummy2",
                    "placement": "After",
                  },
                },
              ],
              "id": "outline-node-Table-actions-node",
              "moveProps": Object {
                "allowedChildTypes": Array [
                  "actions",
                ],
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "Table",
                "actions",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/sap.fe.macros.table.Action",
                },
                "isViewNode": true,
                "metadata": Object {
                  "path": Array [
                    Object {
                      "index": 0,
                      "name": "Page",
                    },
                    Object {
                      "index": 0,
                      "name": "content",
                    },
                    Object {
                      "index": 1,
                      "name": "macros:Table",
                    },
                    Object {
                      "index": 0,
                      "name": "macros:actions",
                    },
                  ],
                  "position": Object {
                    "endColumn": 33,
                    "endLine": 12,
                    "endOffset": 828,
                    "startColumn": 17,
                    "startLine": 10,
                    "startOffset": 708,
                  },
                  "type": "Aggregation",
                },
                "properties": Object {
                  "Action": Object {
                    "description": "Action",
                    "isViewNode": true,
                    "metadata": Object {
                      "controlName": "sap.fe.macros.table.Action",
                      "internalId": "f8f08a5c-5d74-4d86-8433-24a77b3f1b62",
                      "path": Array [
                        Object {
                          "index": 0,
                          "name": "Page",
                        },
                        Object {
                          "index": 0,
                          "name": "content",
                        },
                        Object {
                          "index": 1,
                          "name": "macros:Table",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:actions",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:Action",
                        },
                      ],
                      "position": Object {
                        "endColumn": 70,
                        "endLine": 11,
                        "endOffset": 794,
                        "startColumn": 21,
                        "startLine": 11,
                        "startOffset": 745,
                      },
                      "type": "Control",
                    },
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "XMLProperty",
                        "description": "Reference to the key of another action already displayed in the toolbar to properly place this one",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 50,
                            "endLine": 11,
                            "endOffset": 774,
                            "startColumn": 36,
                            "startLine": 11,
                            "startOffset": 760,
                          },
                          "type": "Property",
                        },
                        "oneOf": Array [],
                        "type": "string",
                      },
                      "command": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines the shortcut combination to trigger the action",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "enableOnSelect": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines whether the action requires selecting one item or multiple items.
Allowed values are \`single\` and \`multi\`",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "enabled": Object {
                        "artifactType": "XMLProperty",
                        "description": "Enables or disables the action",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "id": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "key": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique identifier of the action",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "placement": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines where this action should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 68,
                            "endLine": 11,
                            "endOffset": 792,
                            "startColumn": 52,
                            "startLine": 11,
                            "startOffset": 776,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "press": Object {
                        "artifactType": "XMLProperty",
                        "description": "Event handler to be called when the user chooses the action",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "requiresSelection": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines if the action requires a selection.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "text": Object {
                        "artifactType": "XMLProperty",
                        "description": "The text that will be displayed for this action",
                        "i18nClassification": "BUT: Text of the action button",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "visible": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines whether the action is visible.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                    },
                    "propertyIndex": 0,
                    "type": "object",
                  },
                },
                "type": "object",
              },
              "text": "Actions",
              "title": undefined,
              "type": undefined,
              "value": Object {
                "Action": Object {
                  "anchor": "dummy2",
                  "placement": "After",
                },
              },
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-Table-analyticalConfiguration-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "Table",
                "analyticalConfiguration",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/sap.fe.macros.table.AnalyticalConfiguration",
                },
                "isViewNode": true,
                "metadata": Object {
                  "path": Array [],
                  "type": "Aggregation",
                },
                "type": "object",
              },
              "text": "Analytical Configuration",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-Table-columns-DataField::BookingDate-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": undefined,
                  },
                  "path": Array [
                    "Table",
                    "columns",
                    "DataField::BookingDate",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableMacro/0",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "dataType": "Date",
                    "description": "BookingDate",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Value",
                        "value": "BookingDate",
                      },
                    ],
                    "properties": Object {},
                    "propertyIndex": 0,
                    "type": "object",
                  },
                  "text": "BookingDate",
                  "title": "BookingDate",
                  "type": undefined,
                  "value": undefined,
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-Table-columns-Column-exportSettings-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "Table",
                        "columns",
                        "Column",
                        "exportSettings",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": Object {
                          "$ref": "#/definitions/sap.fe.macros.table.ColumnExportSettings",
                        },
                        "isViewNode": true,
                        "metadata": Object {
                          "path": Array [],
                          "type": "Aggregation",
                        },
                        "type": "object",
                      },
                      "text": "Export Settings",
                      "title": undefined,
                      "type": undefined,
                      "value": undefined,
                    },
                  ],
                  "id": "outline-node-Table-columns-Column-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": Array [],
                    "movable": true,
                    "type": undefined,
                  },
                  "path": Array [
                    "Table",
                    "columns",
                    "Column",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Reference to the key of another column already displayed in the table to properly place this one",
                      "displayName": "Anchor",
                      "name": "anchor",
                      "options": Array [
                        Object {
                          "key": "",
                          "reset": true,
                          "text": "",
                        },
                        Object {
                          "key": "DataField::BookingDate",
                          "text": "DataField::BookingDate",
                        },
                        Object {
                          "key": "DataField::AirlineName",
                          "text": "DataField::AirlineName",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Reference to the key of another column already displayed in the table to properly place this one",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 66,
                            "endLine": 14,
                            "endOffset": 929,
                            "startColumn": 36,
                            "startLine": 14,
                            "startOffset": 899,
                          },
                          "type": "Property",
                        },
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "DataField::BookingDate",
                            "description": "BookingDate",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataField::AirlineName",
                            "description": "AirlineName",
                          },
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "anchor",
                      ],
                      "type": "string",
                      "value": "DataField::BookingDate",
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "The column availability
Allowed values are \`Default\`, \`Adaptation\`, \`Hidden\`
",
                      "displayName": "Availability",
                      "name": "availability",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "The column availability
Allowed values are \`Default\`, \`Adaptation\`, \`Hidden\`
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "availability",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "The text that will be displayed for this column header",
                      "displayName": "Header",
                      "name": "header",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "The text that will be displayed for this column header",
                        "i18nClassification": "COL: Header of the column",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "header",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Aligns the header as well as the content horizontally",
                      "displayName": "Horizontal Align",
                      "name": "horizontalAlign",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Aligns the header as well as the content horizontally",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "horizontalAlign",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Defines the column importance.
You can define which columns should be automatically moved to the pop-in area based on their importance
",
                      "displayName": "Importance",
                      "name": "importance",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines the column importance.
You can define which columns should be automatically moved to the pop-in area based on their importance
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "importance",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Unique identifier of the column",
                      "displayName": "Key",
                      "name": "key",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique identifier of the column",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "key",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Determines where this column should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                      "displayName": "Placement",
                      "name": "placement",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "After",
                          "text": "After",
                        },
                        Object {
                          "key": "Before",
                          "text": "Before",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines where this column should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 84,
                            "endLine": 14,
                            "endOffset": 947,
                            "startColumn": 68,
                            "startLine": 14,
                            "startOffset": 931,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "placement",
                      ],
                      "type": "string",
                      "value": "After",
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "properties",
                      "displayName": "Properties",
                      "name": "properties",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "properties",
                        "isViewNode": true,
                        "metadata": Object {
                          "type": "Property",
                        },
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "properties",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Determines if the information in the column is required.",
                      "displayName": "Required",
                      "name": "required",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines if the information in the column is required.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "required",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Determines the text displayed for the column tooltip",
                      "displayName": "Tooltip",
                      "name": "tooltip",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines the text displayed for the column tooltip",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "tooltip",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Determines the column's width.
Allowed values are 'auto', 'value', and 'inherit', according to sap.ui.core.CSSSize
",
                      "displayName": "Width",
                      "name": "width",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines the column's width.
Allowed values are 'auto', 'value', and 'inherit', according to sap.ui.core.CSSSize
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "width",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Indicates if the column header should be a part of the width calculation.",
                      "displayName": "Width Including Column Header",
                      "name": "widthIncludingColumnHeader",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Indicates if the column header should be a part of the width calculation.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "widthIncludingColumnHeader",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Unique id of control",
                      "displayName": "Id",
                      "name": "id",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "Table",
                        "columns",
                        "Column",
                        "id",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "description": "Column",
                    "isViewNode": true,
                    "metadata": Object {
                      "controlName": "sap.fe.macros.table.Column",
                      "internalId": "aaa56bce-55f8-41fc-90d5-a9f3ef3b5b8f",
                      "path": Array [
                        Object {
                          "index": 0,
                          "name": "Page",
                        },
                        Object {
                          "index": 0,
                          "name": "content",
                        },
                        Object {
                          "index": 1,
                          "name": "macros:Table",
                        },
                        Object {
                          "index": 1,
                          "name": "macros:columns",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:Column",
                        },
                      ],
                      "position": Object {
                        "endColumn": 86,
                        "endLine": 14,
                        "endOffset": 949,
                        "startColumn": 21,
                        "startLine": 14,
                        "startOffset": 884,
                      },
                      "type": "Control",
                    },
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "XMLProperty",
                        "description": "Reference to the key of another column already displayed in the table to properly place this one",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 66,
                            "endLine": 14,
                            "endOffset": 929,
                            "startColumn": 36,
                            "startLine": 14,
                            "startOffset": 899,
                          },
                          "type": "Property",
                        },
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "DataField::BookingDate",
                            "description": "BookingDate",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataField::AirlineName",
                            "description": "AirlineName",
                          },
                        ],
                        "type": "string",
                      },
                      "availability": Object {
                        "artifactType": "XMLProperty",
                        "description": "The column availability
Allowed values are \`Default\`, \`Adaptation\`, \`Hidden\`
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "exportSettings": Object {
                        "additionalProperties": Object {
                          "$ref": "#/definitions/sap.fe.macros.table.ColumnExportSettings",
                        },
                        "isViewNode": true,
                        "metadata": Object {
                          "path": Array [],
                          "type": "Aggregation",
                        },
                        "type": "object",
                      },
                      "header": Object {
                        "artifactType": "XMLProperty",
                        "description": "The text that will be displayed for this column header",
                        "i18nClassification": "COL: Header of the column",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "horizontalAlign": Object {
                        "artifactType": "XMLProperty",
                        "description": "Aligns the header as well as the content horizontally",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "id": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "importance": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines the column importance.
You can define which columns should be automatically moved to the pop-in area based on their importance
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "key": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique identifier of the column",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "placement": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines where this column should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 84,
                            "endLine": 14,
                            "endOffset": 947,
                            "startColumn": 68,
                            "startLine": 14,
                            "startOffset": 931,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "properties": Object {
                        "$ref": "#/definitions/string[]",
                        "artifactType": "XMLProperty",
                        "description": "properties",
                        "isViewNode": true,
                        "metadata": Object {
                          "type": "Property",
                        },
                      },
                      "required": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines if the information in the column is required.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "tooltip": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines the text displayed for the column tooltip",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "width": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines the column's width.
Allowed values are 'auto', 'value', and 'inherit', according to sap.ui.core.CSSSize
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "widthIncludingColumnHeader": Object {
                        "artifactType": "XMLProperty",
                        "description": "Indicates if the column header should be a part of the width calculation.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                    },
                    "propertyIndex": 1,
                    "type": "object",
                  },
                  "text": "Column",
                  "title": "Column",
                  "type": "customColumn",
                  "value": Object {
                    "anchor": "DataField::BookingDate",
                    "placement": "After",
                  },
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-Table-columns-DataField::AirlineName-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": undefined,
                  },
                  "path": Array [
                    "Table",
                    "columns",
                    "DataField::AirlineName",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableMacro/1",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "dataType": "String",
                    "description": "AirlineName",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Value",
                        "value": "AirlineName",
                      },
                    ],
                    "properties": Object {},
                    "propertyIndex": 2,
                    "type": "object",
                  },
                  "text": "AirlineName",
                  "title": "AirlineName",
                  "type": undefined,
                  "value": undefined,
                },
              ],
              "id": "outline-node-Table-columns-node",
              "moveProps": Object {
                "allowedChildTypes": Array [
                  "actions",
                ],
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "Table",
                "columns",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/sap.fe.macros.table.Column",
                },
                "isViewNode": true,
                "metadata": Object {
                  "path": Array [
                    Object {
                      "index": 0,
                      "name": "Page",
                    },
                    Object {
                      "index": 0,
                      "name": "content",
                    },
                    Object {
                      "index": 1,
                      "name": "macros:Table",
                    },
                    Object {
                      "index": 1,
                      "name": "macros:columns",
                    },
                  ],
                  "position": Object {
                    "endColumn": 33,
                    "endLine": 15,
                    "endOffset": 983,
                    "startColumn": 17,
                    "startLine": 13,
                    "startOffset": 846,
                  },
                  "type": "Aggregation",
                },
                "properties": Object {
                  "Column": Object {
                    "description": "Column",
                    "isViewNode": true,
                    "metadata": Object {
                      "controlName": "sap.fe.macros.table.Column",
                      "internalId": "aaa56bce-55f8-41fc-90d5-a9f3ef3b5b8f",
                      "path": Array [
                        Object {
                          "index": 0,
                          "name": "Page",
                        },
                        Object {
                          "index": 0,
                          "name": "content",
                        },
                        Object {
                          "index": 1,
                          "name": "macros:Table",
                        },
                        Object {
                          "index": 1,
                          "name": "macros:columns",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:Column",
                        },
                      ],
                      "position": Object {
                        "endColumn": 86,
                        "endLine": 14,
                        "endOffset": 949,
                        "startColumn": 21,
                        "startLine": 14,
                        "startOffset": 884,
                      },
                      "type": "Control",
                    },
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "XMLProperty",
                        "description": "Reference to the key of another column already displayed in the table to properly place this one",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 66,
                            "endLine": 14,
                            "endOffset": 929,
                            "startColumn": 36,
                            "startLine": 14,
                            "startOffset": 899,
                          },
                          "type": "Property",
                        },
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "DataField::BookingDate",
                            "description": "BookingDate",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataField::AirlineName",
                            "description": "AirlineName",
                          },
                        ],
                        "type": "string",
                      },
                      "availability": Object {
                        "artifactType": "XMLProperty",
                        "description": "The column availability
Allowed values are \`Default\`, \`Adaptation\`, \`Hidden\`
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "exportSettings": Object {
                        "additionalProperties": Object {
                          "$ref": "#/definitions/sap.fe.macros.table.ColumnExportSettings",
                        },
                        "isViewNode": true,
                        "metadata": Object {
                          "path": Array [],
                          "type": "Aggregation",
                        },
                        "type": "object",
                      },
                      "header": Object {
                        "artifactType": "XMLProperty",
                        "description": "The text that will be displayed for this column header",
                        "i18nClassification": "COL: Header of the column",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "horizontalAlign": Object {
                        "artifactType": "XMLProperty",
                        "description": "Aligns the header as well as the content horizontally",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "id": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "importance": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines the column importance.
You can define which columns should be automatically moved to the pop-in area based on their importance
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "key": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique identifier of the column",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "placement": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines where this column should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 84,
                            "endLine": 14,
                            "endOffset": 947,
                            "startColumn": 68,
                            "startLine": 14,
                            "startOffset": 931,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "properties": Object {
                        "$ref": "#/definitions/string[]",
                        "artifactType": "XMLProperty",
                        "description": "properties",
                        "isViewNode": true,
                        "metadata": Object {
                          "type": "Property",
                        },
                      },
                      "required": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines if the information in the column is required.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "tooltip": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines the text displayed for the column tooltip",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "width": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines the column's width.
Allowed values are 'auto', 'value', and 'inherit', according to sap.ui.core.CSSSize
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "widthIncludingColumnHeader": Object {
                        "artifactType": "XMLProperty",
                        "description": "Indicates if the column header should be a part of the width calculation.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                    },
                    "propertyIndex": 1,
                    "type": "object",
                  },
                  "DataField::AirlineName": Object {
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableMacro/1",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "dataType": "String",
                    "description": "AirlineName",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Value",
                        "value": "AirlineName",
                      },
                    ],
                    "properties": Object {},
                    "propertyIndex": 2,
                    "type": "object",
                  },
                  "DataField::BookingDate": Object {
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableMacro/0",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "dataType": "Date",
                    "description": "BookingDate",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Value",
                        "value": "BookingDate",
                      },
                    ],
                    "properties": Object {},
                    "propertyIndex": 0,
                    "type": "object",
                  },
                },
                "type": "object",
              },
              "text": "Columns",
              "title": undefined,
              "type": undefined,
              "value": Object {
                "Column": Object {
                  "anchor": "DataField::BookingDate",
                  "placement": "After",
                },
              },
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-Table-massEdit-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "Table",
                "massEdit",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/sap.fe.macros.table.MassEdit",
                },
                "isViewNode": true,
                "metadata": Object {
                  "path": Array [],
                  "type": "Aggregation",
                },
                "type": "object",
              },
              "text": "Mass Edit",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-Table-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "Table",
          ],
          "properties": Array [
            Object {
              "artifactType": "XMLProperty",
              "description": "An expression that allows you to control the 'busy' state of the table.",
              "displayName": "Busy",
              "name": "busy",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "An expression that allows you to control the 'busy' state of the table.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "busy",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Determines whether the table adapts to the condensed layout.",
              "displayName": "Condensed Table Layout",
              "name": "condensedTableLayout",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Determines whether the table adapts to the condensed layout.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "condensedTableLayout",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Defines the path of the context used in the current page or block.
This setting is defined by the framework.",
              "displayName": "Context Path",
              "name": "contextPath",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Defines the path of the context used in the current page or block.
This setting is defined by the framework.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "contextPath",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Controls if the copy functionality of the table is disabled or not.",
              "displayName": "Disable Copy To Clipboard",
              "name": "disableCopyToClipboard",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Controls if the copy functionality of the table is disabled or not.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "disableCopyToClipboard",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Specifies if the column width is automatically calculated.",
              "displayName": "Enable Auto Column Width",
              "name": "enableAutoColumnWidth",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Specifies if the column width is automatically calculated.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "enableAutoColumnWidth",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Controls if the export functionality of the table is enabled or not.",
              "displayName": "Enable Export",
              "name": "enableExport",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Controls if the export functionality of the table is enabled or not.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "enableExport",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Controls whether the table can be opened in fullscreen mode or not.",
              "displayName": "Enable Full Screen",
              "name": "enableFullScreen",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Controls whether the table can be opened in fullscreen mode or not.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "enableFullScreen",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Controls if the paste functionality of the table is enabled or not.",
              "displayName": "Enable Paste",
              "name": "enablePaste",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Controls if the paste functionality of the table is enabled or not.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "enablePaste",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Determine whether the data copied to the computed columns is sent to the back end.",
              "displayName": "Enable Pasting Of Computed Properties",
              "name": "enablePastingOfComputedProperties",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Determine whether the data copied to the computed columns is sent to the back end.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "enablePastingOfComputedProperties",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Determines whether the Clear All button is enabled by default.
To enable the Clear All button by default, you must set this property to false.",
              "displayName": "Enable Select All",
              "name": "enableSelectAll",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Determines whether the Clear All button is enabled by default.
To enable the Clear All button by default, you must set this property to false.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "enableSelectAll",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "exportRequestSize",
              "displayName": "Export Request Size",
              "name": "exportRequestSize",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "exportRequestSize",
                "isViewNode": true,
                "metadata": Object {
                  "type": "Property",
                },
              },
              "schemaPath": Array [
                "Table",
                "exportRequestSize",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "ID of the FilterBar building block associated with the table.",
              "displayName": "Filter Bar",
              "name": "filterBar",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "ID of the FilterBar building block associated with the table.",
                "metadata": Object {
                  "position": Object {
                    "endColumn": 126,
                    "endLine": 9,
                    "endOffset": 675,
                    "startColumn": 106,
                    "startLine": 9,
                    "startOffset": 655,
                  },
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "filterBar",
              ],
              "type": "string",
              "value": "FilterBar",
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "frozenColumnCount",
              "displayName": "Frozen Column Count",
              "name": "frozenColumnCount",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "frozenColumnCount",
                "isViewNode": true,
                "metadata": Object {
                  "type": "Property",
                },
              },
              "schemaPath": Array [
                "Table",
                "frozenColumnCount",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Specifies the header text that is shown in the table.",
              "displayName": "Header",
              "name": "header",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Specifies the header text that is shown in the table.",
                "i18nClassification": "TIT: Header of the table",
                "metadata": Object {
                  "position": Object {
                    "endColumn": 140,
                    "endLine": 9,
                    "endOffset": 689,
                    "startColumn": 128,
                    "startLine": 9,
                    "startOffset": 677,
                  },
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "header",
              ],
              "type": "string",
              "value": "Test",
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Controls if the header text should be shown or not.",
              "displayName": "Header Visible",
              "name": "headerVisible",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Controls if the header text should be shown or not.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "headerVisible",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Comma-separated value of fields that must be ignored in the OData metadata by the Table building block.
The table building block is not going to create built-in columns or offer table personalization for comma-separated value of fields that are provided in the ignoredfields.
Any column referencing an ignored field is to be removed.",
              "displayName": "Ignored Fields",
              "name": "ignoredFields",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Comma-separated value of fields that must be ignored in the OData metadata by the Table building block.
The table building block is not going to create built-in columns or offer table personalization for comma-separated value of fields that are provided in the ignoredfields.
Any column referencing an ignored field is to be removed.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "ignoredFields",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Defines whether to display the search action.",
              "displayName": "Is Searchable",
              "name": "isSearchable",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Defines whether to display the search action.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "isSearchable",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Defines the relative path to a LineItem, PresentationVariant or SelectionPresentationVariant in the metamodel, based on the current contextPath.",
              "displayName": "Meta Path",
              "name": "metaPath",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Defines the relative path to a LineItem, PresentationVariant or SelectionPresentationVariant in the metamodel, based on the current contextPath.",
                "metadata": Object {
                  "position": Object {
                    "endColumn": 104,
                    "endLine": 9,
                    "endOffset": 653,
                    "startColumn": 38,
                    "startLine": 9,
                    "startOffset": 587,
                  },
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "metaPath",
              ],
              "type": "string",
              "value": "/Booking/@com.sap.vocabularies.UI.v1.LineItem#tableMacro",
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Changes the size of the IllustratedMessage in the table, or removes it completely.
Allowed values are \`illustratedMessage-Auto\`, \`illustratedMessage-Base\`, \`illustratedMessage-Dialog\`, \`illustratedMessage-Dot\`, \`illustratedMessage-Scene\`, \`illustratedMessage-Spot\` or \`text\`.",
              "displayName": "Mode For No Data Message",
              "name": "modeForNoDataMessage",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "illustratedMessage-Auto",
                  "text": "illustratedMessage-Auto",
                },
                Object {
                  "key": "illustratedMessage-Base",
                  "text": "illustratedMessage-Base",
                },
                Object {
                  "key": "illustratedMessage-Medium",
                  "text": "illustratedMessage-Medium",
                },
                Object {
                  "key": "illustratedMessage-Dot",
                  "text": "illustratedMessage-Dot",
                },
                Object {
                  "key": "illustratedMessage-ExtraSmall",
                  "text": "illustratedMessage-ExtraSmall",
                },
                Object {
                  "key": "illustratedMessage-Scene",
                  "text": "illustratedMessage-Scene",
                },
                Object {
                  "key": "illustratedMessage-Large",
                  "text": "illustratedMessage-Large",
                },
                Object {
                  "key": "illustratedMessage-Spot",
                  "text": "illustratedMessage-Spot",
                },
                Object {
                  "key": "illustratedMessage-Small",
                  "text": "illustratedMessage-Small",
                },
                Object {
                  "key": "text",
                  "text": "text",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Changes the size of the IllustratedMessage in the table, or removes it completely.
Allowed values are \`illustratedMessage-Auto\`, \`illustratedMessage-Base\`, \`illustratedMessage-Dialog\`, \`illustratedMessage-Dot\`, \`illustratedMessage-Scene\`, \`illustratedMessage-Spot\` or \`text\`.",
                "enum": Array [
                  "illustratedMessage-Auto",
                  "illustratedMessage-Base",
                  "illustratedMessage-Medium",
                  "illustratedMessage-Dot",
                  "illustratedMessage-ExtraSmall",
                  "illustratedMessage-Scene",
                  "illustratedMessage-Large",
                  "illustratedMessage-Spot",
                  "illustratedMessage-Small",
                  "text",
                ],
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "modeForNoDataMessage",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Controls which options should be enabled for the table personalization dialog.
If it is set to \`true\`, all possible options for this kind of table are enabled.
If it is set to \`false\`, personalization is disabled.

You can also provide a more granular control for the personalization by providing a comma-separated list with the options you want to be available.
Available options are:
- Sort
- Column
- Filter
- Group

The Group option is only applicable to analytical tables and responsive tables.
",
              "displayName": "Personalization",
              "name": "personalization",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Controls which options should be enabled for the table personalization dialog.
If it is set to \`true\`, all possible options for this kind of table are enabled.
If it is set to \`false\`, personalization is disabled.

You can also provide a more granular control for the personalization by providing a comma-separated list with the options you want to be available.
Available options are:
- Sort
- Column
- Filter
- Group

The Group option is only applicable to analytical tables and responsive tables.
",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "personalization",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "An expression that allows you to control the 'read-only' state of the table.
If you do not set any expression, SAP Fiori elements hooks into the standard lifecycle to determine the current state.
",
              "displayName": "Read Only",
              "name": "readOnly",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "An expression that allows you to control the 'read-only' state of the table.
If you do not set any expression, SAP Fiori elements hooks into the standard lifecycle to determine the current state.
",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "readOnly",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "rowCount",
              "displayName": "Row Count",
              "name": "rowCount",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "rowCount",
                "isViewNode": true,
                "metadata": Object {
                  "type": "Property",
                },
              },
              "schemaPath": Array [
                "Table",
                "rowCount",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Defines how the table handles the visible rows. Does not apply to Responsive tables.
Allowed values are \`Auto\`, \`Fixed\`, and \`Interactive\`.
- If set to \`Fixed\`, the table always has as many rows as defined in the rowCount property.
- If set to \`Auto\`, the number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the \`rowCount\` property.
- If set to \`Interactive\` the table can have as many rows as defined in the rowCount property. This number of rows can be modified by dragging the resizer available in this mode.
",
              "displayName": "Row Count Mode",
              "name": "rowCountMode",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "Auto",
                  "text": "Auto",
                },
                Object {
                  "key": "Fixed",
                  "text": "Fixed",
                },
                Object {
                  "key": "Interactive",
                  "text": "Interactive",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Defines how the table handles the visible rows. Does not apply to Responsive tables.
Allowed values are \`Auto\`, \`Fixed\`, and \`Interactive\`.
- If set to \`Fixed\`, the table always has as many rows as defined in the rowCount property.
- If set to \`Auto\`, the number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the \`rowCount\` property.
- If set to \`Interactive\` the table can have as many rows as defined in the rowCount property. This number of rows can be modified by dragging the resizer available in this mode.
",
                "enum": Array [
                  "Auto",
                  "Fixed",
                  "Interactive",
                ],
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "rowCountMode",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "scrollThreshold",
              "displayName": "Scroll Threshold",
              "name": "scrollThreshold",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "scrollThreshold",
                "isViewNode": true,
                "metadata": Object {
                  "type": "Property",
                },
              },
              "schemaPath": Array [
                "Table",
                "scrollThreshold",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "selectionLimit",
              "displayName": "Selection Limit",
              "name": "selectionLimit",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "selectionLimit",
                "isViewNode": true,
                "metadata": Object {
                  "type": "Property",
                },
              },
              "schemaPath": Array [
                "Table",
                "selectionLimit",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Defines the selection mode to be used by the table.
Allowed values are \`None\`, \`Single\`, \`ForceSingle\`, \`Multi\`, \`ForceMulti\` or \`Auto\`.
If set to 'Single', 'Multi' or 'Auto', SAP Fiori elements hooks into the standard lifecycle to determine the consistent selection mode.
If set to 'ForceSingle' or 'ForceMulti' your choice will be respected but this might not respect the Fiori guidelines.
",
              "displayName": "Selection Mode",
              "name": "selectionMode",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "None",
                  "text": "None",
                },
                Object {
                  "key": "Single",
                  "text": "Single",
                },
                Object {
                  "key": "Multi",
                  "text": "Multi",
                },
                Object {
                  "key": "Auto",
                  "text": "Auto",
                },
                Object {
                  "key": "ForceMulti",
                  "text": "ForceMulti",
                },
                Object {
                  "key": "ForceSingle",
                  "text": "ForceSingle",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Defines the selection mode to be used by the table.
Allowed values are \`None\`, \`Single\`, \`ForceSingle\`, \`Multi\`, \`ForceMulti\` or \`Auto\`.
If set to 'Single', 'Multi' or 'Auto', SAP Fiori elements hooks into the standard lifecycle to determine the consistent selection mode.
If set to 'ForceSingle' or 'ForceMulti' your choice will be respected but this might not respect the Fiori guidelines.
",
                "enum": Array [
                  "None",
                  "Single",
                  "Multi",
                  "Auto",
                  "ForceMulti",
                  "ForceSingle",
                ],
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "selectionMode",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Defines the type of table that will be used by the building block to render the data.
Allowed values are \`GridTable\`, \`ResponsiveTable\` and \`AnalyticalTable\`.
",
              "displayName": "Type",
              "name": "type",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "GridTable",
                  "text": "GridTable",
                },
                Object {
                  "key": "ResponsiveTable",
                  "text": "ResponsiveTable",
                },
                Object {
                  "key": "AnalyticalTable",
                  "text": "AnalyticalTable",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Defines the type of table that will be used by the building block to render the data.
Allowed values are \`GridTable\`, \`ResponsiveTable\` and \`AnalyticalTable\`.
",
                "enum": Array [
                  "GridTable",
                  "ResponsiveTable",
                  "AnalyticalTable",
                ],
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "type",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Controls the kind of variant management that should be enabled for the table.
Allowed value is \`Control\`.
If set with value \`Control\`, a variant management control is seen within the table and the table is linked to this.
If not set with any value, control level variant management is not available for this table.
",
              "displayName": "Variant Management",
              "name": "variantManagement",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "None",
                  "text": "None",
                },
                Object {
                  "key": "Page",
                  "text": "Page",
                },
                Object {
                  "key": "Control",
                  "text": "Control",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Controls the kind of variant management that should be enabled for the table.
Allowed value is \`Control\`.
If set with value \`Control\`, a variant management control is seen within the table and the table is linked to this.
If not set with any value, control level variant management is not available for this table.
",
                "enum": Array [
                  "None",
                  "Page",
                  "Control",
                ],
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "variantManagement",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Indicates if the column header should be a part of the width calculation.",
              "displayName": "Width Including Column Header",
              "name": "widthIncludingColumnHeader",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Indicates if the column header should be a part of the width calculation.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "schemaPath": Array [
                "Table",
                "widthIncludingColumnHeader",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Unique id of control",
              "displayName": "Id",
              "name": "id",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Unique id of control",
                "metadata": Object {
                  "position": Object {
                    "endColumn": 36,
                    "endLine": 9,
                    "endOffset": 585,
                    "startColumn": 27,
                    "startLine": 9,
                    "startOffset": 576,
                  },
                  "type": "Property",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "id",
              ],
              "type": "string",
              "value": "Table",
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "Before a table rebind, an event is triggered that contains information about the binding.
You can use this event to add selects, and add or read the sorters and filters.
",
              "displayName": "Before Rebind Table",
              "name": "beforeRebindTable",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "Before a table rebind, an event is triggered that contains information about the binding.
You can use this event to add selects, and add or read the sorters and filters.
",
                "metadata": Object {
                  "type": "Event",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "beforeRebindTable",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "An event is triggered when the user chooses a row; the event contains information about which row is chosen.
You can set this in order to handle the navigation manually.
",
              "displayName": "Row Press",
              "name": "rowPress",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "An event is triggered when the user chooses a row; the event contains information about which row is chosen.
You can set this in order to handle the navigation manually.
",
                "metadata": Object {
                  "type": "Event",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "rowPress",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "XMLProperty",
              "description": "An event triggered when the selection in the table changes.",
              "displayName": "Selection Change",
              "name": "selectionChange",
              "schema": Object {
                "artifactType": "XMLProperty",
                "description": "An event triggered when the selection in the table changes.",
                "metadata": Object {
                  "type": "Event",
                },
                "type": "string",
              },
              "schemaPath": Array [
                "Table",
                "selectionChange",
              ],
              "type": "string",
              "value": undefined,
            },
          ],
          "schema": Object {
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableMacro",
            "description": "Table #Table",
            "isViewNode": true,
            "metadata": Object {
              "controlName": "sap.fe.macros.Table",
              "defaultAggregation": "columns",
              "internalId": "8c231dc6-d05a-4d0e-9371-2f8402ccb83c",
              "path": Array [
                Object {
                  "index": 0,
                  "name": "Page",
                },
                Object {
                  "index": 0,
                  "name": "content",
                },
                Object {
                  "index": 1,
                  "name": "macros:Table",
                },
              ],
              "position": Object {
                "endColumn": 27,
                "endLine": 16,
                "endOffset": 1011,
                "startColumn": 13,
                "startLine": 9,
                "startOffset": 562,
              },
              "type": "Control",
            },
            "properties": Object {
              "actions": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/sap.fe.macros.table.Action",
                },
                "isViewNode": true,
                "metadata": Object {
                  "path": Array [
                    Object {
                      "index": 0,
                      "name": "Page",
                    },
                    Object {
                      "index": 0,
                      "name": "content",
                    },
                    Object {
                      "index": 1,
                      "name": "macros:Table",
                    },
                    Object {
                      "index": 0,
                      "name": "macros:actions",
                    },
                  ],
                  "position": Object {
                    "endColumn": 33,
                    "endLine": 12,
                    "endOffset": 828,
                    "startColumn": 17,
                    "startLine": 10,
                    "startOffset": 708,
                  },
                  "type": "Aggregation",
                },
                "properties": Object {
                  "Action": Object {
                    "description": "Action",
                    "isViewNode": true,
                    "metadata": Object {
                      "controlName": "sap.fe.macros.table.Action",
                      "internalId": "f8f08a5c-5d74-4d86-8433-24a77b3f1b62",
                      "path": Array [
                        Object {
                          "index": 0,
                          "name": "Page",
                        },
                        Object {
                          "index": 0,
                          "name": "content",
                        },
                        Object {
                          "index": 1,
                          "name": "macros:Table",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:actions",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:Action",
                        },
                      ],
                      "position": Object {
                        "endColumn": 70,
                        "endLine": 11,
                        "endOffset": 794,
                        "startColumn": 21,
                        "startLine": 11,
                        "startOffset": 745,
                      },
                      "type": "Control",
                    },
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "XMLProperty",
                        "description": "Reference to the key of another action already displayed in the toolbar to properly place this one",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 50,
                            "endLine": 11,
                            "endOffset": 774,
                            "startColumn": 36,
                            "startLine": 11,
                            "startOffset": 760,
                          },
                          "type": "Property",
                        },
                        "oneOf": Array [],
                        "type": "string",
                      },
                      "command": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines the shortcut combination to trigger the action",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "enableOnSelect": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines whether the action requires selecting one item or multiple items.
Allowed values are \`single\` and \`multi\`",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "enabled": Object {
                        "artifactType": "XMLProperty",
                        "description": "Enables or disables the action",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "id": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "key": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique identifier of the action",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "placement": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines where this action should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 68,
                            "endLine": 11,
                            "endOffset": 792,
                            "startColumn": 52,
                            "startLine": 11,
                            "startOffset": 776,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "press": Object {
                        "artifactType": "XMLProperty",
                        "description": "Event handler to be called when the user chooses the action",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "requiresSelection": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines if the action requires a selection.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "text": Object {
                        "artifactType": "XMLProperty",
                        "description": "The text that will be displayed for this action",
                        "i18nClassification": "BUT: Text of the action button",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "visible": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines whether the action is visible.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                    },
                    "propertyIndex": 0,
                    "type": "object",
                  },
                },
                "type": "object",
              },
              "analyticalConfiguration": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/sap.fe.macros.table.AnalyticalConfiguration",
                },
                "isViewNode": true,
                "metadata": Object {
                  "path": Array [],
                  "type": "Aggregation",
                },
                "type": "object",
              },
              "beforeRebindTable": Object {
                "artifactType": "XMLProperty",
                "description": "Before a table rebind, an event is triggered that contains information about the binding.
You can use this event to add selects, and add or read the sorters and filters.
",
                "metadata": Object {
                  "type": "Event",
                },
                "type": "string",
              },
              "busy": Object {
                "artifactType": "XMLProperty",
                "description": "An expression that allows you to control the 'busy' state of the table.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "columns": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/sap.fe.macros.table.Column",
                },
                "isViewNode": true,
                "metadata": Object {
                  "path": Array [
                    Object {
                      "index": 0,
                      "name": "Page",
                    },
                    Object {
                      "index": 0,
                      "name": "content",
                    },
                    Object {
                      "index": 1,
                      "name": "macros:Table",
                    },
                    Object {
                      "index": 1,
                      "name": "macros:columns",
                    },
                  ],
                  "position": Object {
                    "endColumn": 33,
                    "endLine": 15,
                    "endOffset": 983,
                    "startColumn": 17,
                    "startLine": 13,
                    "startOffset": 846,
                  },
                  "type": "Aggregation",
                },
                "properties": Object {
                  "Column": Object {
                    "description": "Column",
                    "isViewNode": true,
                    "metadata": Object {
                      "controlName": "sap.fe.macros.table.Column",
                      "internalId": "aaa56bce-55f8-41fc-90d5-a9f3ef3b5b8f",
                      "path": Array [
                        Object {
                          "index": 0,
                          "name": "Page",
                        },
                        Object {
                          "index": 0,
                          "name": "content",
                        },
                        Object {
                          "index": 1,
                          "name": "macros:Table",
                        },
                        Object {
                          "index": 1,
                          "name": "macros:columns",
                        },
                        Object {
                          "index": 0,
                          "name": "macros:Column",
                        },
                      ],
                      "position": Object {
                        "endColumn": 86,
                        "endLine": 14,
                        "endOffset": 949,
                        "startColumn": 21,
                        "startLine": 14,
                        "startOffset": 884,
                      },
                      "type": "Control",
                    },
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "XMLProperty",
                        "description": "Reference to the key of another column already displayed in the table to properly place this one",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 66,
                            "endLine": 14,
                            "endOffset": 929,
                            "startColumn": 36,
                            "startLine": 14,
                            "startOffset": 899,
                          },
                          "type": "Property",
                        },
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "DataField::BookingDate",
                            "description": "BookingDate",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataField::AirlineName",
                            "description": "AirlineName",
                          },
                        ],
                        "type": "string",
                      },
                      "availability": Object {
                        "artifactType": "XMLProperty",
                        "description": "The column availability
Allowed values are \`Default\`, \`Adaptation\`, \`Hidden\`
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "exportSettings": Object {
                        "additionalProperties": Object {
                          "$ref": "#/definitions/sap.fe.macros.table.ColumnExportSettings",
                        },
                        "isViewNode": true,
                        "metadata": Object {
                          "path": Array [],
                          "type": "Aggregation",
                        },
                        "type": "object",
                      },
                      "header": Object {
                        "artifactType": "XMLProperty",
                        "description": "The text that will be displayed for this column header",
                        "i18nClassification": "COL: Header of the column",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "horizontalAlign": Object {
                        "artifactType": "XMLProperty",
                        "description": "Aligns the header as well as the content horizontally",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "id": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "importance": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines the column importance.
You can define which columns should be automatically moved to the pop-in area based on their importance
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "key": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique identifier of the column",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "placement": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines where this column should be placed relative to the defined anchor
Allowed values are \`Before\` and \`After\`
",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 84,
                            "endLine": 14,
                            "endOffset": 947,
                            "startColumn": 68,
                            "startLine": 14,
                            "startOffset": 931,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "properties": Object {
                        "$ref": "#/definitions/string[]",
                        "artifactType": "XMLProperty",
                        "description": "properties",
                        "isViewNode": true,
                        "metadata": Object {
                          "type": "Property",
                        },
                      },
                      "required": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines if the information in the column is required.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "tooltip": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines the text displayed for the column tooltip",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "width": Object {
                        "artifactType": "XMLProperty",
                        "description": "Determines the column's width.
Allowed values are 'auto', 'value', and 'inherit', according to sap.ui.core.CSSSize
",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "widthIncludingColumnHeader": Object {
                        "artifactType": "XMLProperty",
                        "description": "Indicates if the column header should be a part of the width calculation.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                    },
                    "propertyIndex": 1,
                    "type": "object",
                  },
                  "DataField::AirlineName": Object {
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableMacro/1",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "dataType": "String",
                    "description": "AirlineName",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Value",
                        "value": "AirlineName",
                      },
                    ],
                    "properties": Object {},
                    "propertyIndex": 2,
                    "type": "object",
                  },
                  "DataField::BookingDate": Object {
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableMacro/0",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                    "dataType": "Date",
                    "description": "BookingDate",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Value",
                        "value": "BookingDate",
                      },
                    ],
                    "properties": Object {},
                    "propertyIndex": 0,
                    "type": "object",
                  },
                },
                "type": "object",
              },
              "condensedTableLayout": Object {
                "artifactType": "XMLProperty",
                "description": "Determines whether the table adapts to the condensed layout.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "contextPath": Object {
                "artifactType": "XMLProperty",
                "description": "Defines the path of the context used in the current page or block.
This setting is defined by the framework.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "creationMode": Object {
                "$ref": "#/definitions/sap.fe.macros.table.TableCreationOptions",
                "artifactType": "XMLProperty",
                "description": "creationMode",
                "isViewNode": true,
                "metadata": Object {
                  "type": "Property",
                },
              },
              "disableCopyToClipboard": Object {
                "artifactType": "XMLProperty",
                "description": "Controls if the copy functionality of the table is disabled or not.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "enableAutoColumnWidth": Object {
                "artifactType": "XMLProperty",
                "description": "Specifies if the column width is automatically calculated.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "enableExport": Object {
                "artifactType": "XMLProperty",
                "description": "Controls if the export functionality of the table is enabled or not.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "enableFullScreen": Object {
                "artifactType": "XMLProperty",
                "description": "Controls whether the table can be opened in fullscreen mode or not.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "enablePaste": Object {
                "artifactType": "XMLProperty",
                "description": "Controls if the paste functionality of the table is enabled or not.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "enablePastingOfComputedProperties": Object {
                "artifactType": "XMLProperty",
                "description": "Determine whether the data copied to the computed columns is sent to the back end.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "enableSelectAll": Object {
                "artifactType": "XMLProperty",
                "description": "Determines whether the Clear All button is enabled by default.
To enable the Clear All button by default, you must set this property to false.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "exportRequestSize": Object {
                "$ref": "#/definitions/int",
                "artifactType": "XMLProperty",
                "description": "exportRequestSize",
                "isViewNode": true,
                "metadata": Object {
                  "type": "Property",
                },
              },
              "filterBar": Object {
                "artifactType": "XMLProperty",
                "description": "ID of the FilterBar building block associated with the table.",
                "metadata": Object {
                  "position": Object {
                    "endColumn": 126,
                    "endLine": 9,
                    "endOffset": 675,
                    "startColumn": 106,
                    "startLine": 9,
                    "startOffset": 655,
                  },
                  "type": "Property",
                },
                "type": "string",
              },
              "frozenColumnCount": Object {
                "$ref": "#/definitions/int",
                "artifactType": "XMLProperty",
                "description": "frozenColumnCount",
                "isViewNode": true,
                "metadata": Object {
                  "type": "Property",
                },
              },
              "header": Object {
                "artifactType": "XMLProperty",
                "description": "Specifies the header text that is shown in the table.",
                "i18nClassification": "TIT: Header of the table",
                "metadata": Object {
                  "position": Object {
                    "endColumn": 140,
                    "endLine": 9,
                    "endOffset": 689,
                    "startColumn": 128,
                    "startLine": 9,
                    "startOffset": 677,
                  },
                  "type": "Property",
                },
                "type": "string",
              },
              "headerVisible": Object {
                "artifactType": "XMLProperty",
                "description": "Controls if the header text should be shown or not.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "id": Object {
                "artifactType": "XMLProperty",
                "description": "Unique id of control",
                "metadata": Object {
                  "position": Object {
                    "endColumn": 36,
                    "endLine": 9,
                    "endOffset": 585,
                    "startColumn": 27,
                    "startLine": 9,
                    "startOffset": 576,
                  },
                  "type": "Property",
                },
                "type": "string",
              },
              "ignoredFields": Object {
                "artifactType": "XMLProperty",
                "description": "Comma-separated value of fields that must be ignored in the OData metadata by the Table building block.
The table building block is not going to create built-in columns or offer table personalization for comma-separated value of fields that are provided in the ignoredfields.
Any column referencing an ignored field is to be removed.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "isSearchable": Object {
                "artifactType": "XMLProperty",
                "description": "Defines whether to display the search action.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "massEdit": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/sap.fe.macros.table.MassEdit",
                },
                "isViewNode": true,
                "metadata": Object {
                  "path": Array [],
                  "type": "Aggregation",
                },
                "type": "object",
              },
              "metaPath": Object {
                "artifactType": "XMLProperty",
                "description": "Defines the relative path to a LineItem, PresentationVariant or SelectionPresentationVariant in the metamodel, based on the current contextPath.",
                "metadata": Object {
                  "position": Object {
                    "endColumn": 104,
                    "endLine": 9,
                    "endOffset": 653,
                    "startColumn": 38,
                    "startLine": 9,
                    "startOffset": 587,
                  },
                  "type": "Property",
                },
                "type": "string",
              },
              "modeForNoDataMessage": Object {
                "artifactType": "XMLProperty",
                "description": "Changes the size of the IllustratedMessage in the table, or removes it completely.
Allowed values are \`illustratedMessage-Auto\`, \`illustratedMessage-Base\`, \`illustratedMessage-Dialog\`, \`illustratedMessage-Dot\`, \`illustratedMessage-Scene\`, \`illustratedMessage-Spot\` or \`text\`.",
                "enum": Array [
                  "illustratedMessage-Auto",
                  "illustratedMessage-Base",
                  "illustratedMessage-Medium",
                  "illustratedMessage-Dot",
                  "illustratedMessage-ExtraSmall",
                  "illustratedMessage-Scene",
                  "illustratedMessage-Large",
                  "illustratedMessage-Spot",
                  "illustratedMessage-Small",
                  "text",
                ],
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "personalization": Object {
                "artifactType": "XMLProperty",
                "description": "Controls which options should be enabled for the table personalization dialog.
If it is set to \`true\`, all possible options for this kind of table are enabled.
If it is set to \`false\`, personalization is disabled.

You can also provide a more granular control for the personalization by providing a comma-separated list with the options you want to be available.
Available options are:
- Sort
- Column
- Filter
- Group

The Group option is only applicable to analytical tables and responsive tables.
",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "readOnly": Object {
                "artifactType": "XMLProperty",
                "description": "An expression that allows you to control the 'read-only' state of the table.
If you do not set any expression, SAP Fiori elements hooks into the standard lifecycle to determine the current state.
",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
              "rowCount": Object {
                "$ref": "#/definitions/int",
                "artifactType": "XMLProperty",
                "description": "rowCount",
                "isViewNode": true,
                "metadata": Object {
                  "type": "Property",
                },
              },
              "rowCountMode": Object {
                "artifactType": "XMLProperty",
                "description": "Defines how the table handles the visible rows. Does not apply to Responsive tables.
Allowed values are \`Auto\`, \`Fixed\`, and \`Interactive\`.
- If set to \`Fixed\`, the table always has as many rows as defined in the rowCount property.
- If set to \`Auto\`, the number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the \`rowCount\` property.
- If set to \`Interactive\` the table can have as many rows as defined in the rowCount property. This number of rows can be modified by dragging the resizer available in this mode.
",
                "enum": Array [
                  "Auto",
                  "Fixed",
                  "Interactive",
                ],
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "rowPress": Object {
                "artifactType": "XMLProperty",
                "description": "An event is triggered when the user chooses a row; the event contains information about which row is chosen.
You can set this in order to handle the navigation manually.
",
                "metadata": Object {
                  "type": "Event",
                },
                "type": "string",
              },
              "scrollThreshold": Object {
                "$ref": "#/definitions/int",
                "artifactType": "XMLProperty",
                "description": "scrollThreshold",
                "isViewNode": true,
                "metadata": Object {
                  "type": "Property",
                },
              },
              "selectionChange": Object {
                "artifactType": "XMLProperty",
                "description": "An event triggered when the selection in the table changes.",
                "metadata": Object {
                  "type": "Event",
                },
                "type": "string",
              },
              "selectionLimit": Object {
                "$ref": "#/definitions/int",
                "artifactType": "XMLProperty",
                "description": "selectionLimit",
                "isViewNode": true,
                "metadata": Object {
                  "type": "Property",
                },
              },
              "selectionMode": Object {
                "artifactType": "XMLProperty",
                "description": "Defines the selection mode to be used by the table.
Allowed values are \`None\`, \`Single\`, \`ForceSingle\`, \`Multi\`, \`ForceMulti\` or \`Auto\`.
If set to 'Single', 'Multi' or 'Auto', SAP Fiori elements hooks into the standard lifecycle to determine the consistent selection mode.
If set to 'ForceSingle' or 'ForceMulti' your choice will be respected but this might not respect the Fiori guidelines.
",
                "enum": Array [
                  "None",
                  "Single",
                  "Multi",
                  "Auto",
                  "ForceMulti",
                  "ForceSingle",
                ],
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "type": Object {
                "artifactType": "XMLProperty",
                "description": "Defines the type of table that will be used by the building block to render the data.
Allowed values are \`GridTable\`, \`ResponsiveTable\` and \`AnalyticalTable\`.
",
                "enum": Array [
                  "GridTable",
                  "ResponsiveTable",
                  "AnalyticalTable",
                ],
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "variantManagement": Object {
                "artifactType": "XMLProperty",
                "description": "Controls the kind of variant management that should be enabled for the table.
Allowed value is \`Control\`.
If set with value \`Control\`, a variant management control is seen within the table and the table is linked to this.
If not set with any value, control level variant management is not available for this table.
",
                "enum": Array [
                  "None",
                  "Page",
                  "Control",
                ],
                "metadata": Object {
                  "type": "Property",
                },
                "type": "string",
              },
              "widthIncludingColumnHeader": Object {
                "artifactType": "XMLProperty",
                "description": "Indicates if the column header should be a part of the width calculation.",
                "metadata": Object {
                  "type": "Property",
                },
                "type": "boolean",
              },
            },
            "propertyIndex": 1,
            "type": "object",
          },
          "text": "Table #Table",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "actions": Object {
              "Action": Object {
                "anchor": "dummy2",
                "placement": "After",
              },
            },
            "columns": Object {
              "Column": Object {
                "anchor": "DataField::BookingDate",
                "placement": "After",
              },
            },
            "filterBar": "FilterBar",
            "header": "Test",
            "id": "Table",
            "metaPath": "/Booking/@com.sap.vocabularies.UI.v1.LineItem#tableMacro",
          },
        },
      ],
      "id": "outline-node-macros-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "macros",
      ],
      "properties": Array [],
      "schema": Object {},
      "text": undefined,
      "title": undefined,
      "type": undefined,
      "value": undefined,
    },
  ],
  "id": "outline-noderoot-node",
  "moveProps": undefined,
  "path": Array [],
  "properties": Array [],
  "root": true,
  "schema": undefined,
  "text": "Root",
  "title": undefined,
  "type": "rootNode",
  "value": undefined,
}
`;

exports[`getTree getTree - ListReport page 1`] = `
Object {
  "additionalText": undefined,
  "annotationNodeId": Array [],
  "children": Array [
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-TestHeaderAction-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": Array [],
                "movable": true,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "TestHeaderAction",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                  "displayName": "Text",
                  "name": "text",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction",
                    "text",
                  ],
                  "type": "string",
                  "value": "TestHeaderAction",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Relevant for extension actions; allows the definition of a target action handler.",
                  "displayName": "Press",
                  "name": "press",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction",
                    "press",
                  ],
                  "type": "string",
                  "value": "project1.ext.controller.TestHeaderAction.onHeaderAction",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines if the action button is visible.",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction",
                    "visible",
                  ],
                  "type": "string",
                  "value": true,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines if the action is enabled. The default value is true.",
                  "displayName": "Enabled",
                  "name": "enabled",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction",
                    "enabled",
                  ],
                  "type": "string",
                  "value": true,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the position of the action relative to other actions.",
                  "displayName": "position",
                  "name": "position",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The key of another action to be used as placement anchor.",
                      "displayName": "Anchor",
                      "name": "anchor",
                      "options": Array [
                        Object {
                          "key": "",
                          "reset": true,
                          "text": "",
                        },
                        Object {
                          "key": "TestHeaderAction",
                          "text": "TestHeaderAction",
                        },
                        Object {
                          "key": "TestHeaderAction2",
                          "text": "TestHeaderAction2",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another action to be used as placement anchor.",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "TestHeaderAction",
                            "custom": true,
                            "description": "TestHeaderAction",
                            "hidden": true,
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "TestHeaderAction2",
                            "custom": true,
                            "description": "TestHeaderAction2",
                          },
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "TestHeaderAction",
                        "position",
                        "anchor",
                      ],
                      "type": "string",
                      "value": "TestHeaderAction2",
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Define the placement, either before or after the anchor action.",
                      "displayName": "Placement",
                      "name": "placement",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "After",
                          "text": "After",
                        },
                        Object {
                          "key": "Before",
                          "text": "Before",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor action.",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "TestHeaderAction",
                        "position",
                        "placement",
                      ],
                      "type": "string",
                      "value": "Before",
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the position of the action relative to other actions.",
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another action to be used as placement anchor.",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "TestHeaderAction",
                            "custom": true,
                            "description": "TestHeaderAction",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "TestHeaderAction2",
                            "custom": true,
                            "description": "TestHeaderAction2",
                          },
                        ],
                        "type": "string",
                      },
                      "placement": Object {
                        "$ref": "#/definitions/ActionPlacement",
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor action.",
                      },
                    },
                    "required": Array [
                      "placement",
                    ],
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction",
                    "position",
                  ],
                  "type": "object",
                  "value": Object {
                    "anchor": "TestHeaderAction2",
                    "placement": "Before",
                  },
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "description": "TestHeaderAction",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "TestHeaderAction",
                  },
                ],
                "properties": Object {
                  "enabled": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines if the action is enabled. The default value is true.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "position": Object {
                    "$ref": "#/definitions/CustomHeaderActionPosition",
                    "artifactType": "Manifest",
                    "description": "Defines the position of the action relative to other actions.",
                  },
                  "press": Object {
                    "artifactType": "Manifest",
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "type": "string",
                  },
                  "text": Object {
                    "artifactType": "Manifest",
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "type": "string",
                  },
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines if the action button is visible.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                },
                "propertyIndex": 0,
                "required": Array [
                  "press",
                  "text",
                ],
                "type": "object",
              },
              "text": "TestHeaderAction",
              "title": "TestHeaderAction",
              "type": "customAction",
              "value": Object {
                "enabled": true,
                "position": Object {
                  "anchor": "TestHeaderAction2",
                  "placement": "Before",
                },
                "press": "project1.ext.controller.TestHeaderAction.onHeaderAction",
                "text": "TestHeaderAction",
                "visible": true,
              },
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-TestHeaderAction2-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": Array [],
                "movable": true,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "TestHeaderAction2",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                  "displayName": "Text",
                  "name": "text",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction2",
                    "text",
                  ],
                  "type": "string",
                  "value": "TestHeaderAction2",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Relevant for extension actions; allows the definition of a target action handler.",
                  "displayName": "Press",
                  "name": "press",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction2",
                    "press",
                  ],
                  "type": "string",
                  "value": "project1.ext.controller.TestHeaderAction.onHeaderAction2",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines if the action button is visible.",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction2",
                    "visible",
                  ],
                  "type": "string",
                  "value": true,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines if the action is enabled. The default value is true.",
                  "displayName": "Enabled",
                  "name": "enabled",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction2",
                    "enabled",
                  ],
                  "type": "string",
                  "value": true,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the position of the action relative to other actions.",
                  "displayName": "position",
                  "name": "position",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The key of another action to be used as placement anchor.",
                      "displayName": "Anchor",
                      "name": "anchor",
                      "options": Array [
                        Object {
                          "key": "",
                          "reset": true,
                          "text": "",
                        },
                        Object {
                          "key": "TestHeaderAction",
                          "text": "TestHeaderAction",
                        },
                        Object {
                          "key": "TestHeaderAction2",
                          "text": "TestHeaderAction2",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another action to be used as placement anchor.",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "TestHeaderAction",
                            "custom": true,
                            "description": "TestHeaderAction",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "TestHeaderAction2",
                            "custom": true,
                            "description": "TestHeaderAction2",
                            "hidden": true,
                          },
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "TestHeaderAction2",
                        "position",
                        "anchor",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Define the placement, either before or after the anchor action.",
                      "displayName": "Placement",
                      "name": "placement",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "After",
                          "text": "After",
                        },
                        Object {
                          "key": "Before",
                          "text": "Before",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor action.",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "TestHeaderAction2",
                        "position",
                        "placement",
                      ],
                      "type": "string",
                      "value": "After",
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the position of the action relative to other actions.",
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another action to be used as placement anchor.",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "TestHeaderAction",
                            "custom": true,
                            "description": "TestHeaderAction",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "TestHeaderAction2",
                            "custom": true,
                            "description": "TestHeaderAction2",
                          },
                        ],
                        "type": "string",
                      },
                      "placement": Object {
                        "$ref": "#/definitions/ActionPlacement",
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor action.",
                      },
                    },
                    "required": Array [
                      "placement",
                    ],
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction2",
                    "position",
                  ],
                  "type": "object",
                  "value": Object {
                    "placement": "After",
                  },
                },
              ],
              "schema": Object {
                "actionType": "Custom",
                "additionalProperties": false,
                "description": "TestHeaderAction2",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "TestHeaderAction2",
                  },
                ],
                "properties": Object {
                  "enabled": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines if the action is enabled. The default value is true.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "position": Object {
                    "$ref": "#/definitions/CustomHeaderActionPosition",
                    "artifactType": "Manifest",
                    "description": "Defines the position of the action relative to other actions.",
                  },
                  "press": Object {
                    "artifactType": "Manifest",
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "type": "string",
                  },
                  "text": Object {
                    "artifactType": "Manifest",
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "type": "string",
                  },
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines if the action button is visible.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                },
                "propertyIndex": 1,
                "required": Array [
                  "press",
                  "text",
                ],
                "type": "object",
              },
              "text": "TestHeaderAction2",
              "title": "TestHeaderAction2",
              "type": "customAction",
              "value": Object {
                "enabled": true,
                "position": Object {
                  "placement": "After",
                },
                "press": "project1.ext.controller.TestHeaderAction.onHeaderAction2",
                "text": "TestHeaderAction2",
                "visible": true,
              },
            },
          ],
          "id": "outline-node-header-actions-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "header",
            "actions",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/CustomHeaderAction",
            },
            "description": "Actions",
            "isViewNode": true,
            "properties": Object {
              "TestHeaderAction": Object {
                "$ref": "#/definitions/CustomHeaderAction",
                "description": "TestHeaderAction",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "TestHeaderAction",
                  },
                ],
                "propertyIndex": 0,
              },
              "TestHeaderAction2": Object {
                "$ref": "#/definitions/CustomHeaderAction",
                "actionType": "Custom",
                "description": "TestHeaderAction2",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "TestHeaderAction2",
                  },
                ],
                "propertyIndex": 1,
              },
            },
            "type": "object",
          },
          "text": "Actions",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "TestHeaderAction": Object {
              "enabled": true,
              "position": Object {
                "anchor": "TestHeaderAction2",
                "placement": "Before",
              },
              "press": "project1.ext.controller.TestHeaderAction.onHeaderAction",
              "text": "TestHeaderAction",
              "visible": true,
            },
            "TestHeaderAction2": Object {
              "enabled": true,
              "position": Object {
                "placement": "After",
              },
              "press": "project1.ext.controller.TestHeaderAction.onHeaderAction2",
              "text": "TestHeaderAction2",
              "visible": true,
            },
          },
        },
      ],
      "id": "outline-node-header-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "header",
      ],
      "properties": Array [],
      "schema": Object {
        "additionalProperties": false,
        "description": "Header",
        "isViewNode": true,
        "properties": Object {
          "actions": Object {
            "$ref": "#/definitions/HeaderActions",
          },
        },
        "propertyIndex": 0,
        "type": "object",
      },
      "text": "Header",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "actions": Object {
          "TestHeaderAction": Object {
            "enabled": true,
            "position": Object {
              "anchor": "TestHeaderAction2",
              "placement": "Before",
            },
            "press": "project1.ext.controller.TestHeaderAction.onHeaderAction",
            "text": "TestHeaderAction",
            "visible": true,
          },
          "TestHeaderAction2": Object {
            "enabled": true,
            "position": Object {
              "placement": "After",
            },
            "press": "project1.ext.controller.TestHeaderAction.onHeaderAction2",
            "text": "TestHeaderAction2",
            "visible": true,
          },
        },
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::TravelID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::TravelID",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.SelectionFields/0",
                "annotationType": "PropertyPath",
                "dataType": "String",
                "description": "TravelID",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TravelID",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 0,
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "type": "object",
              },
              "text": "TravelID",
              "title": "TravelID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::AgencyID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::AgencyID",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.SelectionFields/1",
                "annotationType": "PropertyPath",
                "dataType": "String",
                "description": "AgencyID",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "AgencyID",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 1,
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "type": "object",
              },
              "text": "AgencyID",
              "title": "AgencyID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-CustomFilterField-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": Array [],
                "movable": true,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "CustomFilterField",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A static or i18n binding string.",
                  "displayName": "Label",
                  "name": "label",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A static or i18n binding string.",
                    "i18nClassification": "COL: Custom filter field label",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "filterBar",
                    "selectionFields",
                    "CustomFilterField",
                    "label",
                  ],
                  "type": "string",
                  "value": "Custom Filter Field",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "The full path to the property to be filtered.",
                  "displayName": "Property",
                  "name": "property",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The full path to the property to be filtered.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "filterBar",
                    "selectionFields",
                    "CustomFilterField",
                    "property",
                  ],
                  "type": "string",
                  "value": "BookingFee",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "The path to the XML template containing the filter control.",
                  "displayName": "Template",
                  "name": "template",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The path to the XML template containing the filter control.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "filterBar",
                    "selectionFields",
                    "CustomFilterField",
                    "template",
                  ],
                  "type": "string",
                  "value": "project1.ext.fragment.CustomFilterField",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Determines whether the filter field requires a value.",
                  "displayName": "Required",
                  "name": "required",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the filter field requires a value.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "filterBar",
                    "selectionFields",
                    "CustomFilterField",
                    "required",
                  ],
                  "type": "boolean",
                  "value": false,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the position of the filter field relative to another filter field.",
                  "displayName": "position",
                  "name": "position",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The key of another filter field is to be used as a placement anchor.",
                      "displayName": "Anchor",
                      "name": "anchor",
                      "options": Array [
                        Object {
                          "key": "",
                          "reset": true,
                          "text": "",
                        },
                        Object {
                          "key": "TravelID",
                          "text": "TravelID",
                        },
                        Object {
                          "key": "AgencyID",
                          "text": "AgencyID",
                        },
                        Object {
                          "key": "CustomFilterField",
                          "text": "CustomFilterField",
                        },
                        Object {
                          "key": "CustomerID",
                          "text": "CustomerID",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another filter field is to be used as a placement anchor.",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "TravelID",
                            "description": "TravelID",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "AgencyID",
                            "description": "AgencyID",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "CustomFilterField",
                            "custom": true,
                            "description": "Custom Filter Field",
                            "hidden": true,
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "CustomerID",
                            "description": "Kunden ID",
                          },
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "filterBar",
                        "selectionFields",
                        "CustomFilterField",
                        "position",
                        "anchor",
                      ],
                      "type": "string",
                      "value": "AgencyID",
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Define the placement, either before or after the anchor filter field.",
                      "displayName": "Placement",
                      "name": "placement",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "After",
                          "text": "After",
                        },
                        Object {
                          "key": "Before",
                          "text": "Before",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor filter field.",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "filterBar",
                        "selectionFields",
                        "CustomFilterField",
                        "position",
                        "placement",
                      ],
                      "type": "string",
                      "value": "After",
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the position of the filter field relative to another filter field.",
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another filter field is to be used as a placement anchor.",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "TravelID",
                            "description": "TravelID",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "AgencyID",
                            "description": "AgencyID",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "CustomFilterField",
                            "custom": true,
                            "description": "Custom Filter Field",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "CustomerID",
                            "description": "Kunden ID",
                          },
                        ],
                        "type": "string",
                      },
                      "placement": Object {
                        "$ref": "#/definitions/FilterFieldPlacement",
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor filter field.",
                      },
                    },
                    "required": Array [
                      "placement",
                    ],
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "filterBar",
                    "selectionFields",
                    "CustomFilterField",
                    "position",
                  ],
                  "type": "object",
                  "value": Object {
                    "anchor": "AgencyID",
                    "placement": "After",
                  },
                },
              ],
              "schema": Object {
                "actionType": "Custom",
                "additionalProperties": false,
                "description": "Custom Filter Field",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "CustomFilterField",
                  },
                ],
                "properties": Object {
                  "label": Object {
                    "artifactType": "Manifest",
                    "description": "A static or i18n binding string.",
                    "i18nClassification": "COL: Custom filter field label",
                    "type": "string",
                  },
                  "position": Object {
                    "$ref": "#/definitions/CustomFilterFieldPosition",
                    "artifactType": "Manifest",
                    "description": "Defines the position of the filter field relative to another filter field.",
                  },
                  "property": Object {
                    "artifactType": "Manifest",
                    "description": "The full path to the property to be filtered.",
                    "type": "string",
                  },
                  "required": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the filter field requires a value.",
                    "type": "boolean",
                  },
                  "template": Object {
                    "artifactType": "Manifest",
                    "description": "The path to the XML template containing the filter control.",
                    "type": "string",
                  },
                },
                "propertyIndex": 2,
                "required": Array [
                  "label",
                  "property",
                  "template",
                ],
                "type": "object",
              },
              "text": "Custom Filter Field",
              "title": "CustomFilterField",
              "type": "customFilterField",
              "value": Object {
                "label": "Custom Filter Field",
                "position": Object {
                  "anchor": "AgencyID",
                  "placement": "After",
                },
                "property": "BookingFee",
                "required": false,
                "template": "project1.ext.fragment.CustomFilterField",
              },
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::CustomerID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::CustomerID",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.SelectionFields/2",
                "annotationType": "PropertyPath",
                "dataType": "String",
                "description": "Kunden ID",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "CustomerID",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 3,
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "type": "object",
              },
              "text": "Kunden ID",
              "title": "CustomerID",
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-filterBar-selectionFields-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "filterBar",
            "selectionFields",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/CustomFilterField",
            },
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.SelectionFields",
            "description": "Filter Fields",
            "isViewNode": true,
            "properties": Object {
              "CustomFilterField": Object {
                "$ref": "#/definitions/CustomFilterField",
                "actionType": "Custom",
                "description": "Custom Filter Field",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "CustomFilterField",
                  },
                ],
                "propertyIndex": 2,
              },
              "SelectionField::AgencyID": Object {
                "$ref": "#/definitions/SelectionField::AgencyID",
                "propertyIndex": 1,
              },
              "SelectionField::CustomerID": Object {
                "$ref": "#/definitions/SelectionField::CustomerID",
                "propertyIndex": 3,
              },
              "SelectionField::TravelID": Object {
                "$ref": "#/definitions/SelectionField::TravelID",
                "propertyIndex": 0,
              },
            },
            "type": "object",
          },
          "text": "Filter Fields",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "CustomFilterField": Object {
              "label": "Custom Filter Field",
              "position": Object {
                "anchor": "AgencyID",
                "placement": "After",
              },
              "property": "BookingFee",
              "required": false,
              "template": "project1.ext.fragment.CustomFilterField",
            },
          },
        },
      ],
      "id": "outline-node-filterBar-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "filterBar",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Allows you to hide the filter bar.",
          "displayName": "Hide Filter Bar",
          "name": "hideFilterBar",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Allows you to hide the filter bar.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bd7590569c74c61a0124c6e370030f6",
            "type": "boolean",
          },
          "schemaPath": Array [
            "filterBar",
            "hideFilterBar",
          ],
          "type": "boolean",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "description": "Filter Bar",
        "isViewNode": true,
        "properties": Object {
          "hideFilterBar": Object {
            "artifactType": "Manifest",
            "description": "Allows you to hide the filter bar.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bd7590569c74c61a0124c6e370030f6",
            "type": "boolean",
          },
          "initialLayout": Object {
            "$ref": "#/definitions/InitialLayoutType",
            "artifactType": "Manifest",
            "description": "Allows you to specify the default filter mode on the initial load.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
            "hidden": true,
          },
          "layout": Object {
            "$ref": "#/definitions/LayoutType",
            "artifactType": "Manifest",
            "description": "Allows you to specify the layout of the filter bar.
- Compact: This setting shows filter fields in compact mode.
- CompactVisual: This setting shows filter fields in both compact and visual modes.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
            "hidden": true,
          },
          "selectionFields": Object {
            "anyOf": Array [
              Object {
                "$ref": "#/definitions/SelectionFields",
              },
              Object {
                "$ref": "#/definitions/CompactFilters",
              },
            ],
            "isViewNode": true,
          },
          "visualFilters": Object {
            "$ref": "#/definitions/VisualFilters",
          },
        },
        "propertyIndex": 1,
        "type": "object",
      },
      "text": "Filter Bar",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "selectionFields": Object {
          "CustomFilterField": Object {
            "label": "Custom Filter Field",
            "position": Object {
              "anchor": "AgencyID",
              "placement": "After",
            },
            "property": "BookingFee",
            "required": false,
            "template": "project1.ext.fragment.CustomFilterField",
          },
        },
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": Array [],
          "children": Array [],
          "id": "outline-node-table-views-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "views",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "views",
          },
          "path": Array [
            "table",
            "views",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "anyOf": Array [
                Object {
                  "$ref": "#/definitions/LRTableView",
                },
                Object {
                  "$ref": "#/definitions/LRChartView",
                },
                Object {
                  "$ref": "#/definitions/TableViewExtension",
                },
                Object {
                  "type": "boolean",
                },
              ],
            },
            "description": "Views",
            "isViewNode": true,
            "properties": Object {},
            "type": "object",
          },
          "text": "Views",
          "title": undefined,
          "type": "views",
          "value": undefined,
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Enables single selection for a bound action.",
                      "displayName": "Enable On Select",
                      "name": "enableOnSelect",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "multi",
                          "text": "multi",
                        },
                        Object {
                          "key": "single",
                          "text": "single",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "enableOnSelect",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Settings that control the behavior after creating a new entry.",
                      "displayName": "afterExecution",
                      "name": "afterExecution",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                          "displayName": "Navigate To Instance",
                          "name": "navigateToInstance",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "navigateToInstance",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                          "displayName": "Enable Auto Scroll",
                          "name": "enableAutoScroll",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "enableAutoScroll",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                        "properties": Object {
                          "enableAutoScroll": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "navigateToInstance": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/8",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Create Draft",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "createTravelDraft",
                      },
                    ],
                    "properties": Object {
                      "afterExecution": Object {
                        "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                      },
                      "enableOnSelect": Object {
                        "$ref": "#/definitions/SelectType",
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                      },
                    },
                    "propertyIndex": 0,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                    "type": "object",
                  },
                  "text": "Create Draft",
                  "title": "createTravelDraft",
                  "type": undefined,
                  "value": undefined,
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Enables single selection for a bound action.",
                      "displayName": "Enable On Select",
                      "name": "enableOnSelect",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "multi",
                          "text": "multi",
                        },
                        Object {
                          "key": "single",
                          "text": "single",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "enableOnSelect",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Settings that control the behavior after creating a new entry.",
                      "displayName": "afterExecution",
                      "name": "afterExecution",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                          "displayName": "Navigate To Instance",
                          "name": "navigateToInstance",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "navigateToInstance",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                          "displayName": "Enable Auto Scroll",
                          "name": "enableAutoScroll",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "enableAutoScroll",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                        "properties": Object {
                          "enableAutoScroll": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "navigateToInstance": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/9",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Check Travel",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "Check",
                      },
                    ],
                    "properties": Object {
                      "afterExecution": Object {
                        "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                      },
                      "enableOnSelect": Object {
                        "$ref": "#/definitions/SelectType",
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                      },
                    },
                    "propertyIndex": 1,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                    "type": "object",
                  },
                  "text": "Check Travel",
                  "title": "Check",
                  "type": undefined,
                  "value": undefined,
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Enables single selection for a bound action.",
                      "displayName": "Enable On Select",
                      "name": "enableOnSelect",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "multi",
                          "text": "multi",
                        },
                        Object {
                          "key": "single",
                          "text": "single",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "enableOnSelect",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Settings that control the behavior after creating a new entry.",
                      "displayName": "afterExecution",
                      "name": "afterExecution",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                          "displayName": "Navigate To Instance",
                          "name": "navigateToInstance",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "navigateToInstance",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                          "displayName": "Enable Auto Scroll",
                          "name": "enableAutoScroll",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "enableAutoScroll",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                        "properties": Object {
                          "enableAutoScroll": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "navigateToInstance": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/10",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Template Draft",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "createDraftTemplate",
                      },
                    ],
                    "properties": Object {
                      "afterExecution": Object {
                        "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                      },
                      "enableOnSelect": Object {
                        "$ref": "#/definitions/SelectType",
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                      },
                    },
                    "propertyIndex": 2,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                    "type": "object",
                  },
                  "text": "Template Draft",
                  "title": "createDraftTemplate",
                  "type": undefined,
                  "value": undefined,
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-TableAction-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": Array [],
                    "movable": true,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "TableAction",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Indicates whether the action requires a selection of items.",
                      "displayName": "Requires Selection",
                      "name": "requiresSelection",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Indicates whether the action requires a selection of items.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "TableAction",
                        "requiresSelection",
                      ],
                      "type": "boolean",
                      "value": false,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                      "displayName": "Text",
                      "name": "text",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                        "i18nClassification": "COL: Custom action text",
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "TableAction",
                        "text",
                      ],
                      "type": "string",
                      "value": "TableAction",
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Relevant for extension actions; allows the definition of a target action handler.",
                      "displayName": "Press",
                      "name": "press",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Relevant for extension actions; allows the definition of a target action handler.",
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "TableAction",
                        "press",
                      ],
                      "type": "string",
                      "value": "project1.ext.controller.TableAction.TableAction",
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines if the action button is visible.",
                      "displayName": "Visible",
                      "name": "visible",
                      "schema": Object {
                        "enum": Array [
                          false,
                          true,
                        ],
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "TableAction",
                        "visible",
                      ],
                      "type": "string",
                      "value": true,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines if the action is enabled. The default value is true.",
                      "displayName": "Enabled",
                      "name": "enabled",
                      "schema": Object {
                        "enum": Array [
                          false,
                          true,
                        ],
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "TableAction",
                        "enabled",
                      ],
                      "type": "string",
                      "value": true,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines the position of the action relative to other actions.",
                      "displayName": "position",
                      "name": "position",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "The key of another action to be used as placement anchor.",
                          "displayName": "Anchor",
                          "name": "anchor",
                          "options": Array [
                            Object {
                              "key": "",
                              "reset": true,
                              "text": "",
                            },
                            Object {
                              "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                              "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            },
                            Object {
                              "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                              "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            },
                            Object {
                              "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                              "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            },
                            Object {
                              "key": "TableAction",
                              "text": "TableAction",
                            },
                            Object {
                              "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                              "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            },
                            Object {
                              "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                              "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            },
                            Object {
                              "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                              "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            },
                            Object {
                              "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                              "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "The key of another action to be used as placement anchor.",
                            "oneOf": Array [
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Create Draft",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Check Travel",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Template Draft",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "TableAction",
                                "custom": true,
                                "description": "TableAction",
                                "hidden": true,
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Template Active",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Deduct Discount",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Set To New",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Set To Booked",
                              },
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "TableAction",
                            "position",
                            "anchor",
                          ],
                          "type": "string",
                          "value": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Define the placement, either before or after the anchor action.",
                          "displayName": "Placement",
                          "name": "placement",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "After",
                              "text": "After",
                            },
                            Object {
                              "key": "Before",
                              "text": "Before",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Define the placement, either before or after the anchor action.",
                            "enum": Array [
                              "After",
                              "Before",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "TableAction",
                            "position",
                            "placement",
                          ],
                          "type": "string",
                          "value": "After",
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Defines the position of the action relative to other actions.",
                        "properties": Object {
                          "anchor": Object {
                            "artifactType": "Manifest",
                            "description": "The key of another action to be used as placement anchor.",
                            "oneOf": Array [
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Create Draft",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Check Travel",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Template Draft",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "TableAction",
                                "custom": true,
                                "description": "TableAction",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Template Active",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Deduct Discount",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Set To New",
                              },
                              Object {
                                "bundle": "ui5",
                                "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "description": "Set To Booked",
                              },
                            ],
                            "type": "string",
                          },
                          "placement": Object {
                            "$ref": "#/definitions/ActionPlacement",
                            "artifactType": "Manifest",
                            "description": "Define the placement, either before or after the anchor action.",
                          },
                        },
                        "required": Array [
                          "placement",
                        ],
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "TableAction",
                        "position",
                      ],
                      "type": "object",
                      "value": Object {
                        "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "placement": "After",
                      },
                    },
                  ],
                  "schema": Object {
                    "actionType": "Custom",
                    "additionalProperties": false,
                    "description": "TableAction",
                    "keys": Array [
                      Object {
                        "name": "Key",
                        "value": "TableAction",
                      },
                    ],
                    "properties": Object {
                      "enabled": Object {
                        "anyOf": Array [
                          Object {
                            "enum": Array [
                              false,
                              true,
                            ],
                          },
                          Object {
                            "type": "string",
                          },
                        ],
                        "artifactType": "Manifest",
                        "description": "Defines if the action is enabled. The default value is true.",
                        "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                      },
                      "position": Object {
                        "$ref": "#/definitions/CustomActionPosition",
                        "artifactType": "Manifest",
                        "description": "Defines the position of the action relative to other actions.",
                      },
                      "press": Object {
                        "artifactType": "Manifest",
                        "description": "Relevant for extension actions; allows the definition of a target action handler.",
                        "type": "string",
                      },
                      "requiresSelection": Object {
                        "artifactType": "Manifest",
                        "description": "Indicates whether the action requires a selection of items.",
                        "type": "boolean",
                      },
                      "text": Object {
                        "artifactType": "Manifest",
                        "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                        "i18nClassification": "COL: Custom action text",
                        "type": "string",
                      },
                      "visible": Object {
                        "anyOf": Array [
                          Object {
                            "enum": Array [
                              false,
                              true,
                            ],
                          },
                          Object {
                            "type": "string",
                          },
                        ],
                        "artifactType": "Manifest",
                        "description": "Defines if the action button is visible.",
                        "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                      },
                    },
                    "propertyIndex": 3,
                    "required": Array [
                      "press",
                      "text",
                    ],
                    "type": "object",
                  },
                  "text": "TableAction",
                  "title": "TableAction",
                  "type": "customAction",
                  "value": Object {
                    "enabled": true,
                    "position": Object {
                      "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                      "placement": "After",
                    },
                    "press": "project1.ext.controller.TableAction.TableAction",
                    "requiresSelection": false,
                    "text": "TableAction",
                    "visible": true,
                  },
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Enables single selection for a bound action.",
                      "displayName": "Enable On Select",
                      "name": "enableOnSelect",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "multi",
                          "text": "multi",
                        },
                        Object {
                          "key": "single",
                          "text": "single",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "enableOnSelect",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Settings that control the behavior after creating a new entry.",
                      "displayName": "afterExecution",
                      "name": "afterExecution",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                          "displayName": "Navigate To Instance",
                          "name": "navigateToInstance",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "navigateToInstance",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                          "displayName": "Enable Auto Scroll",
                          "name": "enableAutoScroll",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "enableAutoScroll",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                        "properties": Object {
                          "enableAutoScroll": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "navigateToInstance": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/11",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Template Active",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "createActiveTemplate",
                      },
                    ],
                    "properties": Object {
                      "afterExecution": Object {
                        "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                      },
                      "enableOnSelect": Object {
                        "$ref": "#/definitions/SelectType",
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                      },
                    },
                    "propertyIndex": 4,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                    "type": "object",
                  },
                  "text": "Template Active",
                  "title": "createActiveTemplate",
                  "type": undefined,
                  "value": undefined,
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Enables single selection for a bound action.",
                      "displayName": "Enable On Select",
                      "name": "enableOnSelect",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "multi",
                          "text": "multi",
                        },
                        Object {
                          "key": "single",
                          "text": "single",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "enableOnSelect",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Settings that control the behavior after creating a new entry.",
                      "displayName": "afterExecution",
                      "name": "afterExecution",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                          "displayName": "Navigate To Instance",
                          "name": "navigateToInstance",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "navigateToInstance",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                          "displayName": "Enable Auto Scroll",
                          "name": "enableAutoScroll",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "enableAutoScroll",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                        "properties": Object {
                          "enableAutoScroll": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "navigateToInstance": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/12",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Deduct Discount",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "deductDiscount",
                      },
                    ],
                    "properties": Object {
                      "afterExecution": Object {
                        "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                      },
                      "enableOnSelect": Object {
                        "$ref": "#/definitions/SelectType",
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                      },
                    },
                    "propertyIndex": 5,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                    "type": "object",
                  },
                  "text": "Deduct Discount",
                  "title": "deductDiscount",
                  "type": undefined,
                  "value": undefined,
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Enables single selection for a bound action.",
                      "displayName": "Enable On Select",
                      "name": "enableOnSelect",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "multi",
                          "text": "multi",
                        },
                        Object {
                          "key": "single",
                          "text": "single",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "enableOnSelect",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Settings that control the behavior after creating a new entry.",
                      "displayName": "afterExecution",
                      "name": "afterExecution",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                          "displayName": "Navigate To Instance",
                          "name": "navigateToInstance",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "navigateToInstance",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                          "displayName": "Enable Auto Scroll",
                          "name": "enableAutoScroll",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "enableAutoScroll",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                        "properties": Object {
                          "enableAutoScroll": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "navigateToInstance": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/13",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Set To New",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "setToNew",
                      },
                    ],
                    "properties": Object {
                      "afterExecution": Object {
                        "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                      },
                      "enableOnSelect": Object {
                        "$ref": "#/definitions/SelectType",
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                      },
                    },
                    "propertyIndex": 6,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                    "type": "object",
                  },
                  "text": "Set To New",
                  "title": "setToNew",
                  "type": undefined,
                  "value": undefined,
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Enables single selection for a bound action.",
                      "displayName": "Enable On Select",
                      "name": "enableOnSelect",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "multi",
                          "text": "multi",
                        },
                        Object {
                          "key": "single",
                          "text": "single",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "enableOnSelect",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Settings that control the behavior after creating a new entry.",
                      "displayName": "afterExecution",
                      "name": "afterExecution",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                          "displayName": "Navigate To Instance",
                          "name": "navigateToInstance",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "navigateToInstance",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                          "displayName": "Enable Auto Scroll",
                          "name": "enableAutoScroll",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "afterExecution",
                            "enableAutoScroll",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                        "properties": Object {
                          "enableAutoScroll": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "navigateToInstance": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/14",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Set To Booked",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "setToBooked",
                      },
                    ],
                    "properties": Object {
                      "afterExecution": Object {
                        "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                      },
                      "enableOnSelect": Object {
                        "$ref": "#/definitions/SelectType",
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                      },
                    },
                    "propertyIndex": 7,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                    "type": "object",
                  },
                  "text": "Set To Booked",
                  "title": "setToBooked",
                  "type": undefined,
                  "value": undefined,
                },
              ],
              "id": "outline-node-table-toolBar-actions-node",
              "moveProps": Object {
                "allowedChildTypes": Array [
                  "actions",
                ],
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "table",
                "toolBar",
                "actions",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/CustomTableAction",
                },
                "description": "Actions",
                "isViewNode": true,
                "properties": Object {
                  "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                    "$ref": "#/definitions/ToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Check Travel",
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "Check",
                      },
                    ],
                    "propertyIndex": 1,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                  },
                  "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                    "$ref": "#/definitions/ToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Template Active",
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "createActiveTemplate",
                      },
                    ],
                    "propertyIndex": 4,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                  },
                  "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                    "$ref": "#/definitions/ToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Template Draft",
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "createDraftTemplate",
                      },
                    ],
                    "propertyIndex": 2,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                  },
                  "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                    "$ref": "#/definitions/ToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Create Draft",
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "createTravelDraft",
                      },
                    ],
                    "propertyIndex": 0,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                  },
                  "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                    "$ref": "#/definitions/ToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Deduct Discount",
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "deductDiscount",
                      },
                    ],
                    "propertyIndex": 5,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                  },
                  "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                    "$ref": "#/definitions/ToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Set To Booked",
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "setToBooked",
                      },
                    ],
                    "propertyIndex": 7,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                  },
                  "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                    "$ref": "#/definitions/ToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "Set To New",
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "setToNew",
                      },
                    ],
                    "propertyIndex": 6,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                  },
                  "TableAction": Object {
                    "$ref": "#/definitions/CustomTableAction",
                    "actionType": "Custom",
                    "description": "TableAction",
                    "keys": Array [
                      Object {
                        "name": "Key",
                        "value": "TableAction",
                      },
                    ],
                    "propertyIndex": 3,
                  },
                },
                "type": "object",
              },
              "text": "Actions",
              "title": undefined,
              "type": undefined,
              "value": Object {
                "TableAction": Object {
                  "enabled": true,
                  "position": Object {
                    "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                    "placement": "After",
                  },
                  "press": "project1.ext.controller.TableAction.TableAction",
                  "requiresSelection": false,
                  "text": "TableAction",
                  "visible": true,
                },
              },
            },
          ],
          "id": "outline-node-table-toolBar-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "table",
            "toolBar",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem",
            "description": "Tool Bar",
            "isViewNode": true,
            "properties": Object {
              "actions": Object {
                "$ref": "#/definitions/Actions<LineItemsOfSPV::LineItem>",
              },
            },
            "required": Array [
              "actions",
            ],
            "type": "object",
          },
          "text": "Tool Bar",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "actions": Object {
              "TableAction": Object {
                "enabled": true,
                "position": Object {
                  "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                  "placement": "After",
                },
                "press": "project1.ext.controller.TableAction.TableAction",
                "requiresSelection": false,
                "text": "TableAction",
                "visible": true,
              },
            },
          },
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::TravelID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::TravelID",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TravelID",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TravelID",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TravelID",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/0",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "TravelID",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TravelID",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 0,
                "type": "object",
              },
              "text": "TravelID",
              "title": "TravelID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::AgencyID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::AgencyID",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::AgencyID",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::AgencyID",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::AgencyID",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/1",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "AgencyID",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "AgencyID",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 1,
                "type": "object",
              },
              "text": "AgencyID",
              "title": "AgencyID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-TestCustomColumn-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": Array [],
                "movable": true,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "TestCustomColumn",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
                  "displayName": "Header",
                  "name": "header",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
                    "i18nClassification": "COL: Custom column header text",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "TestCustomColumn",
                    "header",
                  ],
                  "type": "string",
                  "value": "TestCustomColumn",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "TestCustomColumn",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines a target fragment.",
                  "displayName": "Template",
                  "name": "template",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines a target fragment.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "TestCustomColumn",
                    "template",
                  ],
                  "type": "string",
                  "value": "project1.ext.fragment.TestCustomColumn",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Aligns the header as well as the content horizontally.",
                  "displayName": "Horizontal Align",
                  "name": "horizontalAlign",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Begin",
                      "text": "Begin",
                    },
                    Object {
                      "key": "Center",
                      "text": "Center",
                    },
                    Object {
                      "key": "End",
                      "text": "End",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Aligns the header as well as the content horizontally.",
                    "enum": Array [
                      "Begin",
                      "Center",
                      "End",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "TestCustomColumn",
                    "horizontalAlign",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
- Default: it will be shown by default in the table.
- Adaptation: it will initially not be shown in the table but be available via end user adaptation
- Hidden: the column is neither available in the table nor in adaptation",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
- Default: it will be shown by default in the table.
- Adaptation: it will initially not be shown in the table but be available via end user adaptation
- Hidden: the column is neither available in the table nor in adaptation",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "TestCustomColumn",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the position of the column relative to other columns.",
                  "displayName": "position",
                  "name": "position",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The key of another column to be used as placement anchor.",
                      "displayName": "Anchor",
                      "name": "anchor",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "DataField::TravelID",
                          "text": "DataField::TravelID",
                        },
                        Object {
                          "key": "DataField::AgencyID",
                          "text": "DataField::AgencyID",
                        },
                        Object {
                          "key": "DataField::CustomerID",
                          "text": "DataField::CustomerID",
                        },
                        Object {
                          "key": "DataField::BeginDate",
                          "text": "DataField::BeginDate",
                        },
                        Object {
                          "key": "DataField::EndDate",
                          "text": "DataField::EndDate",
                        },
                        Object {
                          "key": "DataField::TotalPrice",
                          "text": "DataField::TotalPrice",
                        },
                        Object {
                          "key": "DataField::Memo",
                          "text": "DataField::Memo",
                        },
                        Object {
                          "key": "DataField::Status",
                          "text": "DataField::Status",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another column to be used as placement anchor.",
                        "enum": Array [
                          "DataField::TravelID",
                          "DataField::AgencyID",
                          "DataField::CustomerID",
                          "DataField::BeginDate",
                          "DataField::EndDate",
                          "DataField::TotalPrice",
                          "DataField::Memo",
                          "DataField::Status",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "columns",
                        "TestCustomColumn",
                        "position",
                        "anchor",
                      ],
                      "type": "string",
                      "value": "DataField::AgencyID",
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Define the placement, either before or after the anchor column.",
                      "displayName": "Placement",
                      "name": "placement",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "After",
                          "text": "After",
                        },
                        Object {
                          "key": "Before",
                          "text": "Before",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor column.",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "columns",
                        "TestCustomColumn",
                        "position",
                        "placement",
                      ],
                      "type": "string",
                      "value": "After",
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the position of the column relative to other columns.",
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another column to be used as placement anchor.",
                        "enum": Array [
                          "DataField::TravelID",
                          "DataField::AgencyID",
                          "TestCustomColumn",
                          "DataField::CustomerID",
                          "DataField::BeginDate",
                          "DataField::EndDate",
                          "DataField::TotalPrice",
                          "DataField::Memo",
                          "DataField::Status",
                        ],
                        "type": "string",
                      },
                      "placement": Object {
                        "$ref": "#/definitions/Placement",
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor column.",
                      },
                    },
                    "required": Array [
                      "placement",
                    ],
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "TestCustomColumn",
                    "position",
                  ],
                  "type": "object",
                  "value": Object {
                    "anchor": "DataField::AgencyID",
                    "placement": "After",
                  },
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.
Once clicked, a list of properties that can be sorted by are displayed.",
                  "displayName": "properties",
                  "name": "properties",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.
Once clicked, a list of properties that can be sorted by are displayed.",
                    "items": Object {
                      "enum": Array [
                        "TravelID",
                        "AgencyID",
                        "CustomerID",
                        "BeginDate",
                        "EndDate",
                        "TotalPrice",
                        "Memo",
                        "Status",
                      ],
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "TestCustomColumn",
                    "properties",
                  ],
                  "type": "object",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "actionType": "Custom",
                "additionalProperties": false,
                "description": "TestCustomColumn",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "TestCustomColumn",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
- Default: it will be shown by default in the table.
- Adaptation: it will initially not be shown in the table but be available via end user adaptation
- Hidden: the column is neither available in the table nor in adaptation",
                  },
                  "header": Object {
                    "artifactType": "Manifest",
                    "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
                    "i18nClassification": "COL: Custom column header text",
                    "type": "string",
                  },
                  "horizontalAlign": Object {
                    "$ref": "#/definitions/HorizontalAlign",
                    "artifactType": "Manifest",
                    "description": "Aligns the header as well as the content horizontally.",
                  },
                  "position": Object {
                    "$ref": "#/definitions/Position",
                    "artifactType": "Manifest",
                    "description": "Defines the position of the column relative to other columns.",
                  },
                  "properties": Object {
                    "artifactType": "Manifest",
                    "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.
Once clicked, a list of properties that can be sorted by are displayed.",
                    "items": Object {
                      "enum": Array [
                        "TravelID",
                        "AgencyID",
                        "CustomerID",
                        "BeginDate",
                        "EndDate",
                        "TotalPrice",
                        "Memo",
                        "Status",
                      ],
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "template": Object {
                    "artifactType": "Manifest",
                    "description": "Defines a target fragment.",
                    "type": "string",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                },
                "propertyIndex": 2,
                "required": Array [
                  "header",
                  "template",
                ],
                "type": "object",
              },
              "text": "TestCustomColumn",
              "title": "TestCustomColumn",
              "type": "customColumn",
              "value": Object {
                "header": "TestCustomColumn",
                "position": Object {
                  "anchor": "DataField::AgencyID",
                  "placement": "After",
                },
                "template": "project1.ext.fragment.TestCustomColumn",
              },
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::CustomerID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::CustomerID",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::CustomerID",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::CustomerID",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::CustomerID",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/2",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "Kunden ID",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "CustomerID",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 3,
                "type": "object",
              },
              "text": "Kunden ID",
              "title": "CustomerID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::BeginDate-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::BeginDate",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::BeginDate",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::BeginDate",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::BeginDate",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/3",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Date",
                "description": "BeginDate",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "BeginDate",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 4,
                "type": "object",
              },
              "text": "BeginDate",
              "title": "BeginDate",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::EndDate-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::EndDate",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::EndDate",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::EndDate",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::EndDate",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/4",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Date",
                "description": "EndDate",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "EndDate",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 5,
                "type": "object",
              },
              "text": "EndDate",
              "title": "EndDate",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::TotalPrice-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::TotalPrice",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TotalPrice",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TotalPrice",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TotalPrice",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/5",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Decimal",
                "description": "TotalPrice",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TotalPrice",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 6,
                "type": "object",
              },
              "text": "TotalPrice",
              "title": "TotalPrice",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::Memo-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::Memo",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::Memo",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::Memo",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::Memo",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/6",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "Memo",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "Memo",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 7,
                "type": "object",
              },
              "text": "Memo",
              "title": "Memo",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::Status-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::Status",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::Status",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::Status",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::Status",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/7",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "Status",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "Status",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 8,
                "type": "object",
              },
              "text": "Status",
              "title": "Status",
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-table-columns-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "table",
            "columns",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/TableCustomColumn",
            },
            "description": "Columns",
            "isViewNode": true,
            "properties": Object {
              "DataField::AgencyID": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/1",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "AgencyID",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "AgencyID",
                  },
                ],
                "propertyIndex": 1,
              },
              "DataField::BeginDate": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/3",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Date",
                "description": "BeginDate",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "BeginDate",
                  },
                ],
                "propertyIndex": 4,
              },
              "DataField::CustomerID": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/2",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "Kunden ID",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "CustomerID",
                  },
                ],
                "propertyIndex": 3,
              },
              "DataField::EndDate": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/4",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Date",
                "description": "EndDate",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "EndDate",
                  },
                ],
                "propertyIndex": 5,
              },
              "DataField::Memo": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/6",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "Memo",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "Memo",
                  },
                ],
                "propertyIndex": 7,
              },
              "DataField::Status": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/7",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "Status",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "Status",
                  },
                ],
                "propertyIndex": 8,
              },
              "DataField::TotalPrice": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/5",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Decimal",
                "description": "TotalPrice",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TotalPrice",
                  },
                ],
                "propertyIndex": 6,
              },
              "DataField::TravelID": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/0",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "TravelID",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TravelID",
                  },
                ],
                "propertyIndex": 0,
              },
              "TestCustomColumn": Object {
                "$ref": "#/definitions/TableCustomColumn",
                "actionType": "Custom",
                "description": "TestCustomColumn",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "TestCustomColumn",
                  },
                ],
                "propertyIndex": 2,
              },
            },
            "type": "object",
          },
          "text": "Columns",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "TestCustomColumn": Object {
              "header": "TestCustomColumn",
              "position": Object {
                "anchor": "DataField::AgencyID",
                "placement": "After",
              },
              "template": "project1.ext.fragment.TestCustomColumn",
            },
          },
        },
      ],
      "id": "outline-node-table-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "table",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically, as defined by the standard variant
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
          "displayName": "Initial Load",
          "name": "initialLoad",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "Auto",
              "text": "Auto",
            },
            Object {
              "key": "Disabled",
              "text": "Disabled",
            },
            Object {
              "key": "Enabled",
              "text": "Enabled",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically, as defined by the standard variant
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/9f4e1192f1384b85bc160288e17f69c4",
            "enum": Array [
              "Auto",
              "Disabled",
              "Enabled",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "initialLoad",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
          "displayName": "Type",
          "name": "type",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "AnalyticalTable",
              "text": "AnalyticalTable",
            },
            Object {
              "key": "GridTable",
              "text": "GridTable",
            },
            Object {
              "key": "ResponsiveTable",
              "text": "ResponsiveTable",
            },
            Object {
              "key": "TreeTable",
              "text": "TreeTable",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
            "enum": Array [
              "AnalyticalTable",
              "GridTable",
              "ResponsiveTable",
              "TreeTable",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "type",
          ],
          "type": "string",
          "value": "ResponsiveTable",
        },
        Object {
          "artifactType": "Manifest",
          "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
          "displayName": "Selection Mode",
          "name": "selectionMode",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "Auto",
              "text": "Auto",
            },
            Object {
              "key": "Multi",
              "text": "Multi",
            },
            Object {
              "key": "None",
              "text": "None",
            },
            Object {
              "key": "Single",
              "text": "Single",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/116b5d82e8c545e2a56e1b51b8b0a9bd",
            "enum": Array [
              "Auto",
              "Multi",
              "None",
              "Single",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "selectionMode",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
          "displayName": "Select All",
          "name": "selectAll",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "selectAll",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "You can define how many items can be selected at a time using the selectionLimit.",
          "displayName": "Selection Limit",
          "name": "selectionLimit",
          "schema": Object {
            "artifactType": "Manifest",
            "description": "You can define how many items can be selected at a time using the selectionLimit.",
            "type": "number",
          },
          "schemaPath": Array [
            "table",
            "selectionLimit",
          ],
          "type": "number",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
          "displayName": "Enable Export",
          "name": "enableExport",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "enableExport",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines whether the content density for ui.table is condensed.",
          "displayName": "Condensed Table Layout",
          "name": "condensedTableLayout",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the content density for ui.table is condensed.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "condensedTableLayout",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
          "displayName": "Hierarchy Qualifier",
          "name": "hierarchyQualifier",
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "hierarchyQualifier",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
          "displayName": "Width Including Column Header",
          "name": "widthIncludingColumnHeader",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "widthIncludingColumnHeader",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
          "displayName": "Disable Copy To Clipboard",
          "name": "disableCopyToClipboard",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "disableCopyToClipboard",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
          "displayName": "Enable Mass Edit",
          "name": "enableMassEdit",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "enableMassEdit",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
          "displayName": "personalization",
          "name": "personalization",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "Defines whether the user can add and remove columns to a given table.",
              "displayName": "Column",
              "name": "column",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can add and remove columns to a given table.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "personalization",
                "column",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "Defines whether the user can sort a given table.",
              "displayName": "Sort",
              "name": "sort",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can sort a given table.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "personalization",
                "sort",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "Defines whether the user can filter data of a given table.",
              "displayName": "Filter",
              "name": "filter",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can filter data of a given table.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "personalization",
                "filter",
              ],
              "type": "boolean",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
            "properties": Object {
              "column": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can add and remove columns to a given table.",
                "type": "boolean",
              },
              "filter": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can filter data of a given table.",
                "type": "boolean",
              },
              "sort": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can sort a given table.",
                "type": "boolean",
              },
            },
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "personalization",
          ],
          "type": "object",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
          "displayName": "quickVariantSelection",
          "name": "quickVariantSelection",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "Determines whether the table title is hidden and the tab titles are displayed.",
              "displayName": "Hide Table Title",
              "name": "hideTableTitle",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Determines whether the table title is hidden and the tab titles are displayed.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelection",
                "hideTableTitle",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "Determines whether the entry view counts are shown.",
              "displayName": "Show Counts",
              "name": "showCounts",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Determines whether the entry view counts are shown.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelection",
                "showCounts",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "List of annotation paths referring to SelectionVariant annotations.",
              "displayName": "paths",
              "name": "paths",
              "properties": Array [
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "0",
                  "name": "0",
                  "properties": Array [
                    Object {
                      "artifactType": undefined,
                      "description": "",
                      "displayName": "Annotation Path",
                      "name": "annotationPath",
                      "schema": Object {
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "quickVariantSelection",
                        "paths",
                        0,
                        "annotationPath",
                      ],
                      "type": "string",
                      "value": "test1",
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "annotationPath": Object {
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "annotationPath",
                    ],
                    "title": undefined,
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "table",
                    "quickVariantSelection",
                    "paths",
                    0,
                  ],
                  "type": "object",
                  "value": Object {
                    "annotationPath": "test1",
                  },
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "1",
                  "name": "1",
                  "properties": Array [
                    Object {
                      "artifactType": undefined,
                      "description": "",
                      "displayName": "Annotation Path",
                      "name": "annotationPath",
                      "schema": Object {
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "quickVariantSelection",
                        "paths",
                        1,
                        "annotationPath",
                      ],
                      "type": "string",
                      "value": "test2",
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "annotationPath": Object {
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "annotationPath",
                    ],
                    "title": undefined,
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "table",
                    "quickVariantSelection",
                    "paths",
                    1,
                  ],
                  "type": "object",
                  "value": Object {
                    "annotationPath": "test2",
                  },
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "List of annotation paths referring to SelectionVariant annotations.",
                "items": Object {
                  "$ref": "#/definitions/AnnotationPathAsObject",
                },
                "type": "array",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelection",
                "paths",
              ],
              "type": "object",
              "value": Array [
                Object {
                  "annotationPath": "test1",
                },
                Object {
                  "annotationPath": "test2",
                },
              ],
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
            "properties": Object {
              "hideTableTitle": Object {
                "artifactType": "Manifest",
                "description": "Determines whether the table title is hidden and the tab titles are displayed.",
                "type": "boolean",
              },
              "paths": Object {
                "artifactType": "Manifest",
                "description": "List of annotation paths referring to SelectionVariant annotations.",
                "items": Object {
                  "$ref": "#/definitions/AnnotationPathAsObject",
                },
                "type": "array",
              },
              "showCounts": Object {
                "artifactType": "Manifest",
                "description": "Determines whether the entry view counts are shown.",
                "type": "boolean",
              },
            },
            "required": Array [
              "paths",
            ],
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "quickVariantSelection",
          ],
          "type": "object",
          "value": Object {
            "paths": Array [
              Object {
                "annotationPath": "test1",
              },
              Object {
                "annotationPath": "test2",
              },
            ],
          },
        },
        Object {
          "artifactType": undefined,
          "description": "",
          "displayName": "enableMassEdit",
          "name": "enableMassEdit",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
              "displayName": "visibleFields",
              "name": "visibleFields",
              "schema": Object {
                "artifactType": "Manifest",
                "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                "items": Object {
                  "enum": Array [
                    "TravelID",
                    "AgencyID",
                    "CustomerID",
                    "BeginDate",
                    "EndDate",
                    "TotalPrice",
                    "Memo",
                    "Status",
                  ],
                  "type": "string",
                },
                "type": "array",
                "uniqueItems": true,
              },
              "schemaPath": Array [
                "table",
                "enableMassEdit",
                "visibleFields",
              ],
              "type": "object",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
              "displayName": "ignoredFields",
              "name": "ignoredFields",
              "schema": Object {
                "artifactType": "Manifest",
                "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                "items": Object {
                  "enum": Array [
                    "TravelID",
                    "AgencyID",
                    "CustomerID",
                    "BeginDate",
                    "EndDate",
                    "TotalPrice",
                    "Memo",
                    "Status",
                  ],
                  "type": "string",
                },
                "type": "array",
                "uniqueItems": true,
              },
              "schemaPath": Array [
                "table",
                "enableMassEdit",
                "ignoredFields",
              ],
              "type": "object",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "properties": Object {
              "ignoredFields": Object {
                "artifactType": "Manifest",
                "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                "items": Object {
                  "enum": Array [
                    "TravelID",
                    "AgencyID",
                    "CustomerID",
                    "BeginDate",
                    "EndDate",
                    "TotalPrice",
                    "Memo",
                    "Status",
                  ],
                  "type": "string",
                },
                "type": "array",
                "uniqueItems": true,
              },
              "visibleFields": Object {
                "artifactType": "Manifest",
                "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                "items": Object {
                  "enum": Array [
                    "TravelID",
                    "AgencyID",
                    "CustomerID",
                    "BeginDate",
                    "EndDate",
                    "TotalPrice",
                    "Memo",
                    "Status",
                  ],
                  "type": "string",
                },
                "type": "array",
                "uniqueItems": true,
              },
            },
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "enableMassEdit",
          ],
          "type": "object",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem",
        "description": "Table",
        "isViewNode": true,
        "properties": Object {
          "annotationPath": Object {
            "artifactType": "Manifest",
            "description": "The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.",
            "hidden": true,
            "type": "string",
          },
          "columns": Object {
            "$ref": "#/definitions/LineItemsOfSPV::LineItem",
          },
          "condensedTableLayout": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the content density for ui.table is condensed.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
            "type": "boolean",
          },
          "disableCopyToClipboard": Object {
            "artifactType": "Manifest",
            "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
            "type": "boolean",
          },
          "enableExport": Object {
            "artifactType": "Manifest",
            "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
            "type": "boolean",
          },
          "enableMassEdit": Object {
            "anyOf": Array [
              Object {
                "additionalProperties": false,
                "properties": Object {
                  "ignoredFields": Object {
                    "artifactType": "Manifest",
                    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "items": Object {
                      "enum": Array [
                        "TravelID",
                        "AgencyID",
                        "CustomerID",
                        "BeginDate",
                        "EndDate",
                        "TotalPrice",
                        "Memo",
                        "Status",
                      ],
                      "type": "string",
                    },
                    "type": "array",
                    "uniqueItems": true,
                  },
                  "visibleFields": Object {
                    "artifactType": "Manifest",
                    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "items": Object {
                      "enum": Array [
                        "TravelID",
                        "AgencyID",
                        "CustomerID",
                        "BeginDate",
                        "EndDate",
                        "TotalPrice",
                        "Memo",
                        "Status",
                      ],
                      "type": "string",
                    },
                    "type": "array",
                    "uniqueItems": true,
                  },
                },
                "type": "object",
              },
              Object {
                "type": "boolean",
              },
            ],
            "artifactType": "Manifest",
            "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
          },
          "hierarchyQualifier": Object {
            "artifactType": "Manifest",
            "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
            "type": "string",
          },
          "initialLoad": Object {
            "$ref": "#/definitions/InitialLoadType",
            "artifactType": "Manifest",
            "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically, as defined by the standard variant
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/9f4e1192f1384b85bc160288e17f69c4",
          },
          "personalization": Object {
            "$ref": "#/definitions/PersonalizationType",
            "artifactType": "Manifest",
            "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
          },
          "quickVariantSelection": Object {
            "$ref": "#/definitions/QuickVariantSelectionV4",
            "artifactType": "Manifest",
            "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
          },
          "selectAll": Object {
            "artifactType": "Manifest",
            "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
            "type": "boolean",
          },
          "selectionLimit": Object {
            "artifactType": "Manifest",
            "description": "You can define how many items can be selected at a time using the selectionLimit.",
            "type": "number",
          },
          "selectionMode": Object {
            "$ref": "#/definitions/SelectionMode",
            "artifactType": "Manifest",
            "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/116b5d82e8c545e2a56e1b51b8b0a9bd",
          },
          "toolBar": Object {
            "$ref": "#/definitions/ToolBar<LineItemsOfSPV::LineItem>",
            "description": "Tool Bar",
          },
          "type": Object {
            "$ref": "#/definitions/TableTypeV4",
            "artifactType": "Manifest",
            "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
          },
          "views": Object {
            "$ref": "#/definitions/MultiTableModeV4",
          },
          "widthIncludingColumnHeader": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
            "type": "boolean",
          },
        },
        "propertyIndex": 3,
        "type": "object",
      },
      "text": "Table",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "columns": Object {
          "TestCustomColumn": Object {
            "header": "TestCustomColumn",
            "position": Object {
              "anchor": "DataField::AgencyID",
              "placement": "After",
            },
            "template": "project1.ext.fragment.TestCustomColumn",
          },
        },
        "quickVariantSelection": Object {
          "paths": Array [
            Object {
              "annotationPath": "test1",
            },
            Object {
              "annotationPath": "test2",
            },
          ],
        },
        "toolBar": Object {
          "actions": Object {
            "TableAction": Object {
              "enabled": true,
              "position": Object {
                "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "placement": "After",
              },
              "press": "project1.ext.controller.TableAction.TableAction",
              "requiresSelection": false,
              "text": "TableAction",
              "visible": true,
            },
          },
        },
        "type": "ResponsiveTable",
      },
    },
  ],
  "id": "outline-noderoot-node",
  "moveProps": undefined,
  "path": Array [],
  "properties": Array [
    Object {
      "artifactType": "Manifest",
      "description": "variantManagement defines how the variant management of page personalizations is controlled.
- None - No variant management by default.
- Control - Individual personalizations for each control.",
      "displayName": "Variant Management",
      "name": "variantManagement",
      "options": Array [
        Object {
          "key": "",
          "text": "",
        },
        Object {
          "key": "Control",
          "text": "Control",
        },
        Object {
          "key": "None",
          "text": "None",
        },
        Object {
          "key": "Page",
          "text": "Page",
        },
      ],
      "schema": Object {
        "artifactType": "Manifest",
        "description": "variantManagement defines how the variant management of page personalizations is controlled.
- None - No variant management by default.
- Control - Individual personalizations for each control.",
        "enum": Array [
          "Control",
          "None",
          "Page",
        ],
        "type": "string",
      },
      "schemaPath": Array [
        "variantManagement",
      ],
      "type": "string",
      "value": "Page",
    },
  ],
  "root": true,
  "schema": undefined,
  "text": "Root",
  "title": undefined,
  "type": "rootNode",
  "value": undefined,
}
`;

exports[`getTree getTree - ListReport page V2 1`] = `
Object {
  "additionalText": undefined,
  "annotationNodeId": Array [],
  "children": Array [
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-Share-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "Share",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Allows you to define if the button is visible on the screen.",
                  "displayName": "Visible",
                  "name": "visible",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Button",
                    "description": "Allows you to define if the button is visible on the screen.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "Share",
                    "visible",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "actionType": "Standard",
                "additionalProperties": false,
                "description": "Share",
                "isViewNode": true,
                "properties": Object {
                  "visible": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Button",
                    "description": "Allows you to define if the button is visible on the screen.",
                    "type": "boolean",
                  },
                },
                "type": "object",
              },
              "text": "Share",
              "title": "Share",
              "type": undefined,
              "value": Object {},
            },
          ],
          "id": "outline-node-header-actions-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "header",
            "actions",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "description": "Actions",
            "isViewNode": true,
            "properties": Object {
              "Share": Object {
                "$ref": "#/definitions/HeaderActionStandard<Share>",
              },
            },
            "type": "object",
          },
          "text": "Actions",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "Share": Object {},
          },
        },
      ],
      "id": "outline-node-header-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "header",
      ],
      "properties": Array [],
      "schema": Object {
        "additionalProperties": false,
        "description": "Header",
        "isViewNode": true,
        "properties": Object {
          "actions": Object {
            "$ref": "#/definitions/HeaderActionsStandard",
          },
        },
        "type": "object",
      },
      "text": "Header",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "actions": Object {
          "Share": Object {},
        },
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-to_ProductStock-StockAvailability-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "to_ProductStock/StockAvailability",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.SelectionFields/0",
                "annotationType": "PropertyPath",
                "dataType": "Byte",
                "description": "Availability",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_ProductStock/StockAvailability",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 0,
                "type": "object",
              },
              "text": "Availability",
              "title": "to_ProductStock/StockAvailability",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-ProductCategory-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "ProductCategory",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.SelectionFields/1",
                "annotationType": "PropertyPath",
                "dataType": "String",
                "description": "Category",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "ProductCategory",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 1,
                "type": "object",
              },
              "text": "Category",
              "title": "ProductCategory",
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-filterBar-selectionFields-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "filterBar",
            "selectionFields",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.SelectionFields",
            "description": "Filter Fields",
            "isViewNode": true,
            "properties": Object {
              "ProductCategory": Object {
                "$ref": "#/definitions/SelectionField<ProductCategory>",
                "propertyIndex": 1,
              },
              "to_ProductStock/StockAvailability": Object {
                "$ref": "#/definitions/SelectionField<to_ProductStock:2fStockAvailability>",
                "propertyIndex": 0,
              },
            },
            "type": "object",
          },
          "text": "Filter Fields",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
      ],
      "id": "outline-node-filterBar-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "filterBar",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Specify a SelectionVariant (in order to set default values for the filter bar), a PresentationVariant (in order to define the layout of the table), or a SelectionPresentationVariant (combining both)",
          "displayName": "Annotation Path",
          "name": "annotationPath",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "com.sap.vocabularies.UI.v1.PresentationVariant",
              "text": "com.sap.vocabularies.UI.v1.PresentationVariant",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "const": "com.sap.vocabularies.UI.v1.PresentationVariant",
            "description": "Specify a SelectionVariant (in order to set default values for the filter bar), a PresentationVariant (in order to define the layout of the table), or a SelectionPresentationVariant (combining both)",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/49a6ba5b8d6946208322a9f7e16837c2",
            "enum": Array [
              "com.sap.vocabularies.UI.v1.PresentationVariant",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "filterBar",
            "annotationPath",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Controls whether smart variant management is active. Default is true.",
          "displayName": "Smart Variant Management",
          "name": "smartVariantManagement",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Controls whether smart variant management is active. Default is true.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "filterBar",
            "smartVariantManagement",
          ],
          "type": "boolean",
          "value": true,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "If liveMode is set, the search will be automatically triggered when a filter value is set.",
          "displayName": "Live Mode",
          "name": "liveMode",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "If liveMode is set, the search will be automatically triggered when a filter value is set.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "filterBar",
            "liveMode",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "If you set the flag to true, then standard variant management is not available in the app. The app name is displayed instead.
If the flag is false or undefined, the standard variant management is available and can be enabled or disabled.",
          "displayName": "Variant Management Hidden",
          "name": "variantManagementHidden",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "If you set the flag to true, then standard variant management is not available in the app. The app name is displayed instead.
If the flag is false or undefined, the standard variant management is available and can be enabled or disabled.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "filterBar",
            "variantManagementHidden",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "You can choose an app-specific title by setting the corresponding value for the subTitleIfVariantMgmtHidden property.",
          "displayName": "Sub Title If Variant Mgmt Hidden",
          "name": "subTitleIfVariantMgmtHidden",
          "schema": Object {
            "artifactType": "Manifest",
            "description": "You can choose an app-specific title by setting the corresponding value for the subTitleIfVariantMgmtHidden property.",
            "i18nClassification": "TIT: Subtitle if variant management is hidden",
            "type": "string",
          },
          "schemaPath": Array [
            "filterBar",
            "subTitleIfVariantMgmtHidden",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "Handles the visibility of the Clear button on the filter bar.",
          "displayName": "Show Clear On FB",
          "name": "showClearOnFB",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Handles the visibility of the Clear button on the filter bar.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "filterBar",
            "showClearOnFB",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "Handles the visibility of the Filter button on the filter bar.",
          "displayName": "Show Filter Configuration",
          "name": "showFilterConfiguration",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Handles the visibility of the Filter button on the filter bar.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "filterBar",
            "showFilterConfiguration",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "Handles the visibility of the Restore button on the filter bar.",
          "displayName": "Show Restore On FB",
          "name": "showRestoreOnFB",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Handles the visibility of the Restore button on the filter bar.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "filterBar",
            "showRestoreOnFB",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Defines the date settings for fields in the smart filter bar.",
          "displayName": "dateSettings",
          "name": "dateSettings",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "If set to true all date fields with filter restriction interval will be treated as DateTimeRange filters.",
              "displayName": "Use Date Range",
              "name": "useDateRange",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "If set to true all date fields with filter restriction interval will be treated as DateTimeRange filters.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "filterBar",
                "dateSettings",
                "useDateRange",
              ],
              "type": "boolean",
              "value": true,
            },
            Object {
              "artifactType": "Manifest",
              "description": "This property is set to True by default. This excludes all values given as selectedValues from the list of date range filters.
If the exclude property is set to False, the application shows only selected values in the list of date range filters.",
              "displayName": "Exclude",
              "name": "exclude",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "This property is set to True by default. This excludes all values given as selectedValues from the list of date range filters.
If the exclude property is set to False, the application shows only selected values in the list of date range filters.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "filterBar",
                "dateSettings",
                "exclude",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "The selectedValues property is a set of standard date range values that you want to include or exclude.",
              "displayName": "selectedValues",
              "name": "selectedValues",
              "schema": Object {
                "artifactType": "Manifest",
                "description": "The selectedValues property is a set of standard date range values that you want to include or exclude.",
                "items": Object {
                  "enum": Array [
                    "DATE",
                    "DATERANGE",
                    "DAYS",
                    "FROM",
                    "LAST2WEEKS",
                    "LAST3WEEKS",
                    "LAST4WEEKS",
                    "LAST5WEEKS",
                    "LASTDAYS",
                    "LASTMONTH",
                    "LASTMONTHS",
                    "LASTQUARTER",
                    "LASTQUARTERS",
                    "LASTWEEK",
                    "LASTWEEKS",
                    "LASTYEAR",
                    "LASTYEARS",
                    "MONTH",
                    "NEXT",
                    "NEXT2WEEKS",
                    "NEXT3WEEKS",
                    "NEXT4WEEKS",
                    "NEXT5WEEKS",
                    "NEXTDAYS",
                    "NEXTMONTH",
                    "NEXTMONTHS",
                    "NEXTQUARTER",
                    "NEXTQUARTERS",
                    "NEXTWEEK",
                    "NEXTWEEKS",
                    "NEXTYEARS",
                    "QUARTER",
                    "QUARTER1",
                    "QUARTER2",
                    "QUARTER3",
                    "QUARTER4",
                    "SPECIFICMONTH",
                    "THISMONTH",
                    "THISQUARTER",
                    "THISWEEK",
                    "TO",
                    "TODAY",
                    "TODAYFROMTO",
                    "TOMORROW",
                    "WEEK",
                    "YEAR",
                    "YEARTODATE",
                    "YESTERDAY",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "schemaPath": Array [
                "filterBar",
                "dateSettings",
                "selectedValues",
              ],
              "type": "object",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "Defines the date settings for fields in the smart filter bar.",
            "properties": Object {
              "exclude": Object {
                "artifactType": "Manifest",
                "description": "This property is set to True by default. This excludes all values given as selectedValues from the list of date range filters.
If the exclude property is set to False, the application shows only selected values in the list of date range filters.",
                "type": "boolean",
              },
              "selectedValues": Object {
                "artifactType": "Manifest",
                "description": "The selectedValues property is a set of standard date range values that you want to include or exclude.",
                "items": Object {
                  "enum": Array [
                    "DATE",
                    "DATERANGE",
                    "DAYS",
                    "FROM",
                    "LAST2WEEKS",
                    "LAST3WEEKS",
                    "LAST4WEEKS",
                    "LAST5WEEKS",
                    "LASTDAYS",
                    "LASTMONTH",
                    "LASTMONTHS",
                    "LASTQUARTER",
                    "LASTQUARTERS",
                    "LASTWEEK",
                    "LASTWEEKS",
                    "LASTYEAR",
                    "LASTYEARS",
                    "MONTH",
                    "NEXT",
                    "NEXT2WEEKS",
                    "NEXT3WEEKS",
                    "NEXT4WEEKS",
                    "NEXT5WEEKS",
                    "NEXTDAYS",
                    "NEXTMONTH",
                    "NEXTMONTHS",
                    "NEXTQUARTER",
                    "NEXTQUARTERS",
                    "NEXTWEEK",
                    "NEXTWEEKS",
                    "NEXTYEARS",
                    "QUARTER",
                    "QUARTER1",
                    "QUARTER2",
                    "QUARTER3",
                    "QUARTER4",
                    "SPECIFICMONTH",
                    "THISMONTH",
                    "THISQUARTER",
                    "THISWEEK",
                    "TO",
                    "TODAY",
                    "TODAYFROMTO",
                    "TOMORROW",
                    "WEEK",
                    "YEAR",
                    "YEARTODATE",
                    "YESTERDAY",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "useDateRange": Object {
                "artifactType": "Manifest",
                "description": "If set to true all date fields with filter restriction interval will be treated as DateTimeRange filters.",
                "type": "boolean",
              },
            },
            "type": "object",
          },
          "schemaPath": Array [
            "filterBar",
            "dateSettings",
          ],
          "type": "object",
          "value": Object {
            "useDateRange": true,
          },
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "description": "Filter Bar",
        "isViewNode": true,
        "properties": Object {
          "annotationPath": Object {
            "artifactType": "Manifest",
            "const": "com.sap.vocabularies.UI.v1.PresentationVariant",
            "description": "Specify a SelectionVariant (in order to set default values for the filter bar), a PresentationVariant (in order to define the layout of the table), or a SelectionPresentationVariant (combining both)",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/49a6ba5b8d6946208322a9f7e16837c2",
            "enum": Array [
              "com.sap.vocabularies.UI.v1.PresentationVariant",
            ],
            "type": "string",
          },
          "dateSettings": Object {
            "$ref": "#/definitions/DateRange",
            "artifactType": "Manifest",
            "description": "Defines the date settings for fields in the smart filter bar.",
          },
          "liveMode": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "If liveMode is set, the search will be automatically triggered when a filter value is set.",
            "type": "boolean",
          },
          "selectionFields": Object {
            "$ref": "#/definitions/SelectionFields",
          },
          "showClearOnFB": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Handles the visibility of the Clear button on the filter bar.",
            "type": "boolean",
          },
          "showFilterConfiguration": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Handles the visibility of the Filter button on the filter bar.",
            "type": "boolean",
          },
          "showRestoreOnFB": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smartfilterbar.SmartFilterBar",
            "description": "Handles the visibility of the Restore button on the filter bar.",
            "type": "boolean",
          },
          "smartVariantManagement": Object {
            "artifactType": "Manifest",
            "description": "Controls whether smart variant management is active. Default is true.",
            "type": "boolean",
          },
          "subTitleIfVariantMgmtHidden": Object {
            "artifactType": "Manifest",
            "description": "You can choose an app-specific title by setting the corresponding value for the subTitleIfVariantMgmtHidden property.",
            "i18nClassification": "TIT: Subtitle if variant management is hidden",
            "type": "string",
          },
          "variantManagementHidden": Object {
            "artifactType": "Manifest",
            "description": "If you set the flag to true, then standard variant management is not available in the app. The app name is displayed instead.
If the flag is false or undefined, the standard variant management is available and can be enabled or disabled.",
            "type": "boolean",
          },
        },
        "propertyIndex": 0,
        "type": "object",
      },
      "text": "Filter Bar",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "dateSettings": Object {
          "useDateRange": true,
        },
        "smartVariantManagement": true,
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities:2fSEPMRA_C_PD_ProductCopy-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities:2fSEPMRA_C_PD_ProductCopy",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "FlexChange",
                      "description": "The text of the button tooltip, preferably as an i18n key.",
                      "displayName": "Tooltip",
                      "name": "tooltip",
                      "schema": Object {
                        "artifactType": "FlexChange",
                        "controlType": "sap.m.Button",
                        "description": "The text of the button tooltip, preferably as an i18n key.",
                        "i18nClassification": "ACT: Text for tooltip of button.",
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities:2fSEPMRA_C_PD_ProductCopy",
                        "tooltip",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "FlexChange",
                      "description": "An icon to be displayed as a graphical element within the button.
This can be an image or an icon from the Icon Explorer (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
                      "displayName": "Icon",
                      "name": "icon",
                      "schema": Object {
                        "artifactType": "FlexChange",
                        "controlType": "sap.m.Button",
                        "description": "An icon to be displayed as a graphical element within the button.
This can be an image or an icon from the Icon Explorer (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities:2fSEPMRA_C_PD_ProductCopy",
                        "icon",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "FlexChange",
                      "description": "An alternative icon for the active (depressed) state of the button.
This can be an image or an icon from the Icon Explorer (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
                      "displayName": "Active Icon",
                      "name": "activeIcon",
                      "schema": Object {
                        "artifactType": "FlexChange",
                        "controlType": "sap.m.Button",
                        "description": "An alternative icon for the active (depressed) state of the button.
This can be an image or an icon from the Icon Explorer (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities:2fSEPMRA_C_PD_ProductCopy",
                        "activeIcon",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "FlexChange",
                      "description": "Defines the Button type.",
                      "displayName": "Type",
                      "name": "type",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "Accept",
                          "text": "Accept",
                        },
                        Object {
                          "key": "Attention",
                          "text": "Attention",
                        },
                        Object {
                          "key": "Back",
                          "text": "Back",
                        },
                        Object {
                          "key": "Critical",
                          "text": "Critical",
                        },
                        Object {
                          "key": "Default",
                          "text": "Default",
                        },
                        Object {
                          "key": "Emphasized",
                          "text": "Emphasized",
                        },
                        Object {
                          "key": "Ghost",
                          "text": "Ghost",
                        },
                        Object {
                          "key": "Negative",
                          "text": "Negative",
                        },
                        Object {
                          "key": "Neutral",
                          "text": "Neutral",
                        },
                        Object {
                          "key": "Reject",
                          "text": "Reject",
                        },
                        Object {
                          "key": "Success",
                          "text": "Success",
                        },
                        Object {
                          "key": "Transparent",
                          "text": "Transparent",
                        },
                        Object {
                          "key": "Unstyled",
                          "text": "Unstyled",
                        },
                        Object {
                          "key": "Up",
                          "text": "Up",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "FlexChange",
                        "controlType": "sap.m.Button",
                        "description": "Defines the Button type.",
                        "enum": Array [
                          "Accept",
                          "Attention",
                          "Back",
                          "Critical",
                          "Default",
                          "Emphasized",
                          "Ghost",
                          "Negative",
                          "Neutral",
                          "Reject",
                          "Success",
                          "Transparent",
                          "Unstyled",
                          "Up",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities:2fSEPMRA_C_PD_ProductCopy",
                        "type",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/1",
                    "description": "Copy",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "SEPMRA_C_PD_ProductCopy",
                      },
                    ],
                    "properties": Object {
                      "activeIcon": Object {
                        "artifactType": "FlexChange",
                        "controlType": "sap.m.Button",
                        "description": "An alternative icon for the active (depressed) state of the button.
This can be an image or an icon from the Icon Explorer (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
                        "type": "string",
                      },
                      "icon": Object {
                        "artifactType": "FlexChange",
                        "controlType": "sap.m.Button",
                        "description": "An icon to be displayed as a graphical element within the button.
This can be an image or an icon from the Icon Explorer (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
                        "type": "string",
                      },
                      "tooltip": Object {
                        "artifactType": "FlexChange",
                        "controlType": "sap.m.Button",
                        "description": "The text of the button tooltip, preferably as an i18n key.",
                        "i18nClassification": "ACT: Text for tooltip of button.",
                        "type": "string",
                      },
                      "type": Object {
                        "$ref": "#/definitions/ButtonType",
                        "artifactType": "FlexChange",
                        "controlType": "sap.m.Button",
                        "description": "Defines the Button type.",
                      },
                    },
                    "propertyIndex": 1,
                    "target": "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities",
                    "type": "object",
                  },
                  "text": "Copy",
                  "title": undefined,
                  "type": undefined,
                  "value": undefined,
                },
              ],
              "id": "outline-node-table-toolBar-actions-node",
              "moveProps": Object {
                "allowedChildTypes": Array [
                  "actions",
                ],
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "table",
                "toolBar",
                "actions",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "description": "Actions",
                "isViewNode": true,
                "properties": Object {
                  "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities:2fSEPMRA_C_PD_ProductCopy": Object {
                    "$ref": "#/definitions/ToolBarAction<SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities:2fSEPMRA_C_PD_ProductCopy>",
                    "propertyIndex": 1,
                  },
                },
                "type": "object",
              },
              "text": "Actions",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-table-toolBar-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "table",
            "toolBar",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem",
            "description": "Tool Bar",
            "isViewNode": true,
            "properties": Object {
              "actions": Object {
                "$ref": "#/definitions/Actions<LineItems>",
              },
            },
            "required": Array [
              "actions",
            ],
            "type": "object",
          },
          "text": "Tool Bar",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-ProductPictureURL-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "ProductPictureURL",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the width of the column.",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "ProductPictureURL",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the horizontal alignment of the column content.",
                  "displayName": "H Align",
                  "name": "hAlign",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Begin",
                      "text": "Begin",
                    },
                    Object {
                      "key": "Center",
                      "text": "Center",
                    },
                    Object {
                      "key": "End",
                      "text": "End",
                    },
                    Object {
                      "key": "Initial",
                      "text": "Initial",
                    },
                    Object {
                      "key": "Left",
                      "text": "Left",
                    },
                    Object {
                      "key": "Right",
                      "text": "Right",
                    },
                  ],
                  "schema": Object {
                    "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                    "enum": Array [
                      "Begin",
                      "Center",
                      "End",
                      "Initial",
                      "Left",
                      "Right",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "ProductPictureURL",
                    "hAlign",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/0",
                "dataType": "String",
                "description": "Image",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "ProductPictureURL",
                  },
                ],
                "properties": Object {
                  "hAlign": Object {
                    "anyOf": Array [
                      Object {
                        "$ref": "#/definitions/TextAlign",
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the horizontal alignment of the column content.",
                    "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "width": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                },
                "propertyIndex": 0,
                "type": "object",
              },
              "text": "Image",
              "title": "ProductPictureURL",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-ProductForEdit-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "ProductForEdit",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the width of the column.",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "ProductForEdit",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the horizontal alignment of the column content.",
                  "displayName": "H Align",
                  "name": "hAlign",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Begin",
                      "text": "Begin",
                    },
                    Object {
                      "key": "Center",
                      "text": "Center",
                    },
                    Object {
                      "key": "End",
                      "text": "End",
                    },
                    Object {
                      "key": "Initial",
                      "text": "Initial",
                    },
                    Object {
                      "key": "Left",
                      "text": "Left",
                    },
                    Object {
                      "key": "Right",
                      "text": "Right",
                    },
                  ],
                  "schema": Object {
                    "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                    "enum": Array [
                      "Begin",
                      "Center",
                      "End",
                      "Initial",
                      "Left",
                      "Right",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "ProductForEdit",
                    "hAlign",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/2",
                "dataType": "String",
                "description": "Product",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "ProductForEdit",
                  },
                ],
                "properties": Object {
                  "hAlign": Object {
                    "anyOf": Array [
                      Object {
                        "$ref": "#/definitions/TextAlign",
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the horizontal alignment of the column content.",
                    "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "width": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                },
                "propertyIndex": 2,
                "type": "object",
              },
              "text": "Product",
              "title": "ProductForEdit",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-to_ProductCategory-MainProductCategory-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "to_ProductCategory/MainProductCategory",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the width of the column.",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "to_ProductCategory/MainProductCategory",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the horizontal alignment of the column content.",
                  "displayName": "H Align",
                  "name": "hAlign",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Begin",
                      "text": "Begin",
                    },
                    Object {
                      "key": "Center",
                      "text": "Center",
                    },
                    Object {
                      "key": "End",
                      "text": "End",
                    },
                    Object {
                      "key": "Initial",
                      "text": "Initial",
                    },
                    Object {
                      "key": "Left",
                      "text": "Left",
                    },
                    Object {
                      "key": "Right",
                      "text": "Right",
                    },
                  ],
                  "schema": Object {
                    "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                    "enum": Array [
                      "Begin",
                      "Center",
                      "End",
                      "Initial",
                      "Left",
                      "Right",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "to_ProductCategory/MainProductCategory",
                    "hAlign",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/3",
                "dataType": "String",
                "description": "Main Category",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_ProductCategory/MainProductCategory",
                  },
                ],
                "properties": Object {
                  "hAlign": Object {
                    "anyOf": Array [
                      Object {
                        "$ref": "#/definitions/TextAlign",
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the horizontal alignment of the column content.",
                    "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "width": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                },
                "propertyIndex": 3,
                "type": "object",
              },
              "text": "Main Category",
              "title": "to_ProductCategory/MainProductCategory",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-ProductCategory-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "ProductCategory",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the width of the column.",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "ProductCategory",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the horizontal alignment of the column content.",
                  "displayName": "H Align",
                  "name": "hAlign",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Begin",
                      "text": "Begin",
                    },
                    Object {
                      "key": "Center",
                      "text": "Center",
                    },
                    Object {
                      "key": "End",
                      "text": "End",
                    },
                    Object {
                      "key": "Initial",
                      "text": "Initial",
                    },
                    Object {
                      "key": "Left",
                      "text": "Left",
                    },
                    Object {
                      "key": "Right",
                      "text": "Right",
                    },
                  ],
                  "schema": Object {
                    "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                    "enum": Array [
                      "Begin",
                      "Center",
                      "End",
                      "Initial",
                      "Left",
                      "Right",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "ProductCategory",
                    "hAlign",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/4",
                "dataType": "String",
                "description": "Category",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "ProductCategory",
                  },
                ],
                "properties": Object {
                  "hAlign": Object {
                    "anyOf": Array [
                      Object {
                        "$ref": "#/definitions/TextAlign",
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the horizontal alignment of the column content.",
                    "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "width": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                },
                "propertyIndex": 4,
                "type": "object",
              },
              "text": "Category",
              "title": "ProductCategory",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-FioriTools::ColumnExtension-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": Array [],
                "movable": true,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "custom",
                0,
              ],
              "properties": Array [
                Object {
                  "artifactType": "XMLProperty",
                  "description": "If the fragment needs to be reused for multiple tabs, the id property must be set to make the IDs unique.",
                  "displayName": "Id",
                  "name": "id",
                  "schema": Object {
                    "artifactType": "XMLProperty",
                    "description": "If the fragment needs to be reused for multiple tabs, the id property must be set to make the IDs unique.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "custom",
                    0,
                    "id",
                  ],
                  "type": "string",
                  "value": "FioriTools::ColumnExtension",
                },
                Object {
                  "artifactType": "XMLProperty",
                  "description": "The label of the custom column, preferably as an i18n key.",
                  "displayName": "Text",
                  "name": "text",
                  "schema": Object {
                    "artifactType": "XMLProperty",
                    "description": "The label of the custom column, preferably as an i18n key.",
                    "i18nClassification": "COL: Custom column header text",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "custom",
                    0,
                    "text",
                  ],
                  "type": "string",
                  "value": "Column",
                },
                Object {
                  "artifactType": "XMLProperty",
                  "description": "The column key.",
                  "displayName": "Column Key",
                  "name": "columnKey",
                  "schema": Object {
                    "artifactType": "XMLProperty",
                    "description": "The column key.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "custom",
                    0,
                    "columnKey",
                  ],
                  "type": "string",
                  "value": "ColumnExtension",
                },
                Object {
                  "artifactType": "XMLProperty",
                  "description": "If the content of your custom column refers to a property (such as{Price}), you need to include a corresponding 'leadingProperty' entry in the column definition.",
                  "displayName": "Leading Property",
                  "name": "leadingProperty",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Activation_ac",
                      "text": "Activation_ac",
                    },
                    Object {
                      "key": "Copy_ac",
                      "text": "Copy_ac",
                    },
                    Object {
                      "key": "Copy_new_supplier_ac",
                      "text": "Copy_new_supplier_ac",
                    },
                    Object {
                      "key": "Create_review_post_ac",
                      "text": "Create_review_post_ac",
                    },
                    Object {
                      "key": "Delete_ext_ac",
                      "text": "Delete_ext_ac",
                    },
                    Object {
                      "key": "Edit_ac",
                      "text": "Edit_ac",
                    },
                    Object {
                      "key": "Favorites_add_ac",
                      "text": "Favorites_add_ac",
                    },
                    Object {
                      "key": "Favorites_remove_ac",
                      "text": "Favorites_remove_ac",
                    },
                    Object {
                      "key": "Favorites_toggle_ac",
                      "text": "Favorites_toggle_ac",
                    },
                    Object {
                      "key": "Mycart_add_ac",
                      "text": "Mycart_add_ac",
                    },
                    Object {
                      "key": "Preparation_ac",
                      "text": "Preparation_ac",
                    },
                    Object {
                      "key": "Shortage_list_ac",
                      "text": "Shortage_list_ac",
                    },
                    Object {
                      "key": "Validation_ac",
                      "text": "Validation_ac",
                    },
                    Object {
                      "key": "Description_fc",
                      "text": "Description_fc",
                    },
                    Object {
                      "key": "ProductForEdit_fc",
                      "text": "ProductForEdit_fc",
                    },
                    Object {
                      "key": "Product",
                      "text": "Product",
                    },
                    Object {
                      "key": "ProductForEdit",
                      "text": "ProductForEdit",
                    },
                    Object {
                      "key": "ProductCategory",
                      "text": "ProductCategory",
                    },
                    Object {
                      "key": "Price",
                      "text": "Price",
                    },
                    Object {
                      "key": "Currency",
                      "text": "Currency",
                    },
                    Object {
                      "key": "Height",
                      "text": "Height",
                    },
                    Object {
                      "key": "Width",
                      "text": "Width",
                    },
                    Object {
                      "key": "Depth",
                      "text": "Depth",
                    },
                    Object {
                      "key": "DimensionUnit",
                      "text": "DimensionUnit",
                    },
                    Object {
                      "key": "ProductPictureURL",
                      "text": "ProductPictureURL",
                    },
                    Object {
                      "key": "Supplier",
                      "text": "Supplier",
                    },
                    Object {
                      "key": "ProductBaseUnit",
                      "text": "ProductBaseUnit",
                    },
                    Object {
                      "key": "Weight",
                      "text": "Weight",
                    },
                    Object {
                      "key": "WeightUnit",
                      "text": "WeightUnit",
                    },
                    Object {
                      "key": "OriginalLanguage",
                      "text": "OriginalLanguage",
                    },
                    Object {
                      "key": "Name",
                      "text": "Name",
                    },
                    Object {
                      "key": "Description",
                      "text": "Description",
                    },
                    Object {
                      "key": "DraftUUID",
                      "text": "DraftUUID",
                    },
                    Object {
                      "key": "DraftEntityCreationDateTime",
                      "text": "DraftEntityCreationDateTime",
                    },
                    Object {
                      "key": "DraftEntityLastChangeDateTime",
                      "text": "DraftEntityLastChangeDateTime",
                    },
                    Object {
                      "key": "HasActiveEntity",
                      "text": "HasActiveEntity",
                    },
                    Object {
                      "key": "HasDraftEntity",
                      "text": "HasDraftEntity",
                    },
                    Object {
                      "key": "IsActiveEntity",
                      "text": "IsActiveEntity",
                    },
                    Object {
                      "key": "DraftAdministrativeData",
                      "text": "DraftAdministrativeData",
                    },
                    Object {
                      "key": "SiblingEntity",
                      "text": "SiblingEntity",
                    },
                    Object {
                      "key": "to_CollaborativeReview",
                      "text": "to_CollaborativeReview",
                    },
                    Object {
                      "key": "to_CollaborativeReviewPost",
                      "text": "to_CollaborativeReviewPost",
                    },
                    Object {
                      "key": "to_Currency",
                      "text": "to_Currency",
                    },
                    Object {
                      "key": "to_DimensionUnit",
                      "text": "to_DimensionUnit",
                    },
                    Object {
                      "key": "to_LastOrderDate",
                      "text": "to_LastOrderDate",
                    },
                    Object {
                      "key": "to_OriginalLanguage",
                      "text": "to_OriginalLanguage",
                    },
                    Object {
                      "key": "to_PriceRange",
                      "text": "to_PriceRange",
                    },
                    Object {
                      "key": "to_ProductBaseUnit",
                      "text": "to_ProductBaseUnit",
                    },
                    Object {
                      "key": "to_ProductCategory",
                      "text": "to_ProductCategory",
                    },
                    Object {
                      "key": "to_ProductImage",
                      "text": "to_ProductImage",
                    },
                    Object {
                      "key": "to_ProductSalesData",
                      "text": "to_ProductSalesData",
                    },
                    Object {
                      "key": "to_ProductStock",
                      "text": "to_ProductStock",
                    },
                    Object {
                      "key": "to_ProductText",
                      "text": "to_ProductText",
                    },
                    Object {
                      "key": "to_ProductTextInOriginalLang",
                      "text": "to_ProductTextInOriginalLang",
                    },
                    Object {
                      "key": "to_StorageBin",
                      "text": "to_StorageBin",
                    },
                    Object {
                      "key": "to_Supplier",
                      "text": "to_Supplier",
                    },
                    Object {
                      "key": "to_WeightUnit",
                      "text": "to_WeightUnit",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "XMLProperty",
                    "description": "If the content of your custom column refers to a property (such as{Price}), you need to include a corresponding 'leadingProperty' entry in the column definition.",
                    "enum": Array [
                      "Activation_ac",
                      "Copy_ac",
                      "Copy_new_supplier_ac",
                      "Create_review_post_ac",
                      "Delete_ext_ac",
                      "Edit_ac",
                      "Favorites_add_ac",
                      "Favorites_remove_ac",
                      "Favorites_toggle_ac",
                      "Mycart_add_ac",
                      "Preparation_ac",
                      "Shortage_list_ac",
                      "Validation_ac",
                      "Description_fc",
                      "ProductForEdit_fc",
                      "Product",
                      "ProductForEdit",
                      "ProductCategory",
                      "Price",
                      "Currency",
                      "Height",
                      "Width",
                      "Depth",
                      "DimensionUnit",
                      "ProductPictureURL",
                      "Supplier",
                      "ProductBaseUnit",
                      "Weight",
                      "WeightUnit",
                      "OriginalLanguage",
                      "Name",
                      "Description",
                      "DraftUUID",
                      "DraftEntityCreationDateTime",
                      "DraftEntityLastChangeDateTime",
                      "HasActiveEntity",
                      "HasDraftEntity",
                      "IsActiveEntity",
                      "DraftAdministrativeData",
                      "SiblingEntity",
                      "to_CollaborativeReview",
                      "to_CollaborativeReviewPost",
                      "to_Currency",
                      "to_DimensionUnit",
                      "to_LastOrderDate",
                      "to_OriginalLanguage",
                      "to_PriceRange",
                      "to_ProductBaseUnit",
                      "to_ProductCategory",
                      "to_ProductImage",
                      "to_ProductSalesData",
                      "to_ProductStock",
                      "to_ProductText",
                      "to_ProductTextInOriginalLang",
                      "to_StorageBin",
                      "to_Supplier",
                      "to_WeightUnit",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "custom",
                    0,
                    "leadingProperty",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "The UI5 control used for your extension.",
                  "displayName": "Class Name",
                  "name": "className",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "sap.ui.core.Fragment",
                      "text": "sap.ui.core.Fragment",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "const": "sap.ui.core.Fragment",
                    "description": "The UI5 control used for your extension.",
                    "enum": Array [
                      "sap.ui.core.Fragment",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "custom",
                    0,
                    "className",
                  ],
                  "type": "string",
                  "value": "sap.ui.core.Fragment",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "The relative path to your fragment with path segments separated by '.'. The first element is the app ID.",
                  "displayName": "Fragment Name",
                  "name": "fragmentName",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "fev2.ext.fragment.CustomColumn",
                      "text": "fev2.ext.fragment.CustomColumn",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "const": "fev2.ext.fragment.CustomColumn",
                    "description": "The relative path to your fragment with path segments separated by '.'. The first element is the app ID.",
                    "enum": Array [
                      "fev2.ext.fragment.CustomColumn",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "custom",
                    0,
                    "fragmentName",
                  ],
                  "type": "string",
                  "value": "fev2.ext.fragment.CustomColumn",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "In case of a responsive table, you additionally need to specify a fragment for the table cells.",
                  "displayName": "Cells Fragment Name",
                  "name": "cellsFragmentName",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "fev2.ext.fragment.CustomCell",
                      "text": "fev2.ext.fragment.CustomCell",
                    },
                    Object {
                      "key": "fev2.ext.fragment.CustomSection",
                      "text": "fev2.ext.fragment.CustomSection",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "In case of a responsive table, you additionally need to specify a fragment for the table cells.",
                    "enum": Array [
                      "fev2.ext.fragment.CustomCell",
                      "fev2.ext.fragment.CustomSection",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "custom",
                    0,
                    "cellsFragmentName",
                  ],
                  "type": "string",
                  "value": "fev2.ext.fragment.CustomCell",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Type of custom column view extension.",
                  "displayName": "Extension Type",
                  "name": "extensionType",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "AnalyticalTableColumnsExtension",
                      "text": "AnalyticalTableColumnsExtension",
                    },
                    Object {
                      "key": "GridTableColumnsExtension",
                      "text": "GridTableColumnsExtension",
                    },
                    Object {
                      "key": "ResponsiveTableColumnsExtension",
                      "text": "ResponsiveTableColumnsExtension",
                    },
                    Object {
                      "key": "TreeTableColumnsExtension",
                      "text": "TreeTableColumnsExtension",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Type of custom column view extension.",
                    "enum": Array [
                      "AnalyticalTableColumnsExtension",
                      "GridTableColumnsExtension",
                      "ResponsiveTableColumnsExtension",
                      "TreeTableColumnsExtension",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "custom",
                    0,
                    "extensionType",
                  ],
                  "type": "string",
                  "value": "ResponsiveTableColumnsExtension",
                },
              ],
              "schema": Object {},
              "text": "Column",
              "title": undefined,
              "type": "customColumn",
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataFieldForAnnotation:::sTarget::to_Supplier-@com.sap.vocabularies.Communication.v1.Contact-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataFieldForAnnotation:::sTarget::to_Supplier/@com.sap.vocabularies.Communication.v1.Contact",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the width of the column.",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataFieldForAnnotation:::sTarget::to_Supplier/@com.sap.vocabularies.Communication.v1.Contact",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the horizontal alignment of the column content.",
                  "displayName": "H Align",
                  "name": "hAlign",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Begin",
                      "text": "Begin",
                    },
                    Object {
                      "key": "Center",
                      "text": "Center",
                    },
                    Object {
                      "key": "End",
                      "text": "End",
                    },
                    Object {
                      "key": "Initial",
                      "text": "Initial",
                    },
                    Object {
                      "key": "Left",
                      "text": "Left",
                    },
                    Object {
                      "key": "Right",
                      "text": "Right",
                    },
                  ],
                  "schema": Object {
                    "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                    "enum": Array [
                      "Begin",
                      "Center",
                      "End",
                      "Initial",
                      "Left",
                      "Right",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataFieldForAnnotation:::sTarget::to_Supplier/@com.sap.vocabularies.Communication.v1.Contact",
                    "hAlign",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/5",
                "dataType": "Contact",
                "description": "Supplier",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Target",
                    "value": "to_Supplier/Communication.Contact",
                  },
                ],
                "properties": Object {
                  "hAlign": Object {
                    "anyOf": Array [
                      Object {
                        "$ref": "#/definitions/TextAlign",
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the horizontal alignment of the column content.",
                    "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "width": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                },
                "propertyIndex": 5,
                "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_SupplierType",
                "type": "object",
              },
              "text": "Supplier",
              "title": "sTarget::to_Supplier/@com.sap.vocabularies.Communication.v1.Contact",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-to_ProductStock-StockAvailability-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "to_ProductStock/StockAvailability",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the width of the column.",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "to_ProductStock/StockAvailability",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the horizontal alignment of the column content.",
                  "displayName": "H Align",
                  "name": "hAlign",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Begin",
                      "text": "Begin",
                    },
                    Object {
                      "key": "Center",
                      "text": "Center",
                    },
                    Object {
                      "key": "End",
                      "text": "End",
                    },
                    Object {
                      "key": "Initial",
                      "text": "Initial",
                    },
                    Object {
                      "key": "Left",
                      "text": "Left",
                    },
                    Object {
                      "key": "Right",
                      "text": "Right",
                    },
                  ],
                  "schema": Object {
                    "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                    "enum": Array [
                      "Begin",
                      "Center",
                      "End",
                      "Initial",
                      "Left",
                      "Right",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "to_ProductStock/StockAvailability",
                    "hAlign",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/6",
                "dataType": "Byte",
                "description": "Availability",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_ProductStock/StockAvailability",
                  },
                ],
                "properties": Object {
                  "hAlign": Object {
                    "anyOf": Array [
                      Object {
                        "$ref": "#/definitions/TextAlign",
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the horizontal alignment of the column content.",
                    "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "width": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                },
                "propertyIndex": 6,
                "type": "object",
              },
              "text": "Availability",
              "title": "to_ProductStock/StockAvailability",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataFieldForAnnotation:::sTarget::to_CollaborativeReview-@com.sap.vocabularies.UI.v1.DataPoint#AverageRatingValue-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataFieldForAnnotation:::sTarget::to_CollaborativeReview/@com.sap.vocabularies.UI.v1.DataPoint#AverageRatingValue",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the width of the column.",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataFieldForAnnotation:::sTarget::to_CollaborativeReview/@com.sap.vocabularies.UI.v1.DataPoint#AverageRatingValue",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the horizontal alignment of the column content.",
                  "displayName": "H Align",
                  "name": "hAlign",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Begin",
                      "text": "Begin",
                    },
                    Object {
                      "key": "Center",
                      "text": "Center",
                    },
                    Object {
                      "key": "End",
                      "text": "End",
                    },
                    Object {
                      "key": "Initial",
                      "text": "Initial",
                    },
                    Object {
                      "key": "Left",
                      "text": "Left",
                    },
                    Object {
                      "key": "Right",
                      "text": "Right",
                    },
                  ],
                  "schema": Object {
                    "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                    "enum": Array [
                      "Begin",
                      "Center",
                      "End",
                      "Initial",
                      "Left",
                      "Right",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataFieldForAnnotation:::sTarget::to_CollaborativeReview/@com.sap.vocabularies.UI.v1.DataPoint#AverageRatingValue",
                    "hAlign",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/7",
                "dataType": "Rating",
                "description": "Average Rating",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Target",
                    "value": "to_CollaborativeReview/UI.DataPoint#AverageRatingValue",
                  },
                ],
                "properties": Object {
                  "hAlign": Object {
                    "anyOf": Array [
                      Object {
                        "$ref": "#/definitions/TextAlign",
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the horizontal alignment of the column content.",
                    "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "width": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                },
                "propertyIndex": 7,
                "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewType",
                "type": "object",
              },
              "text": "Average Rating",
              "title": "sTarget::to_CollaborativeReview/@com.sap.vocabularies.UI.v1.DataPoint#AverageRatingValue",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-Price-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "Price",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the width of the column.",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "Price",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the horizontal alignment of the column content.",
                  "displayName": "H Align",
                  "name": "hAlign",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Begin",
                      "text": "Begin",
                    },
                    Object {
                      "key": "Center",
                      "text": "Center",
                    },
                    Object {
                      "key": "End",
                      "text": "End",
                    },
                    Object {
                      "key": "Initial",
                      "text": "Initial",
                    },
                    Object {
                      "key": "Left",
                      "text": "Left",
                    },
                    Object {
                      "key": "Right",
                      "text": "Right",
                    },
                  ],
                  "schema": Object {
                    "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                    "enum": Array [
                      "Begin",
                      "Center",
                      "End",
                      "Initial",
                      "Left",
                      "Right",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "Price",
                    "hAlign",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/8",
                "dataType": "Decimal",
                "description": "Price per Unit",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "Price",
                  },
                ],
                "properties": Object {
                  "hAlign": Object {
                    "anyOf": Array [
                      Object {
                        "$ref": "#/definitions/TextAlign",
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the horizontal alignment of the column content.",
                    "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "width": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Column",
                    "description": "Defines the width of the column.",
                    "type": "string",
                  },
                },
                "propertyIndex": 8,
                "type": "object",
              },
              "text": "Price per Unit",
              "title": "Price",
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-table-columns-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "table",
            "columns",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "description": "Columns",
            "isViewNode": true,
            "properties": Object {
              "DataFieldForAnnotation:::sTarget::to_CollaborativeReview/@com.sap.vocabularies.UI.v1.DataPoint#AverageRatingValue": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/7",
                "dataType": "Rating",
                "description": "Average Rating",
                "keys": Array [
                  Object {
                    "name": "Target",
                    "value": "to_CollaborativeReview/UI.DataPoint#AverageRatingValue",
                  },
                ],
                "propertyIndex": 7,
                "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewType",
              },
              "DataFieldForAnnotation:::sTarget::to_Supplier/@com.sap.vocabularies.Communication.v1.Contact": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/5",
                "dataType": "Contact",
                "description": "Supplier",
                "keys": Array [
                  Object {
                    "name": "Target",
                    "value": "to_Supplier/Communication.Contact",
                  },
                ],
                "propertyIndex": 5,
                "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_SupplierType",
              },
              "Price": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/8",
                "dataType": "Decimal",
                "description": "Price per Unit",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "Price",
                  },
                ],
                "propertyIndex": 8,
              },
              "ProductCategory": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/4",
                "dataType": "String",
                "description": "Category",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "ProductCategory",
                  },
                ],
                "propertyIndex": 4,
              },
              "ProductForEdit": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/2",
                "dataType": "String",
                "description": "Product",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "ProductForEdit",
                  },
                ],
                "propertyIndex": 2,
              },
              "ProductPictureURL": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/0",
                "dataType": "String",
                "description": "Image",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "ProductPictureURL",
                  },
                ],
                "propertyIndex": 0,
              },
              "custom": Object {
                "$ref": "#/definitions/TableCustomColumns",
              },
              "to_ProductCategory/MainProductCategory": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/3",
                "dataType": "String",
                "description": "Main Category",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_ProductCategory/MainProductCategory",
                  },
                ],
                "propertyIndex": 3,
              },
              "to_ProductStock/StockAvailability": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem/6",
                "dataType": "Byte",
                "description": "Availability",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_ProductStock/StockAvailability",
                  },
                ],
                "propertyIndex": 6,
              },
            },
            "type": "object",
          },
          "text": "Columns",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "custom": Array [
              Object {
                "cellsFragmentName": "fev2.ext.fragment.CustomCell",
                "className": "sap.ui.core.Fragment",
                "columnIndex": 4,
                "columnKey": "ColumnExtension",
                "extensionType": "ResponsiveTableColumnsExtension",
                "fragmentName": "fev2.ext.fragment.CustomColumn",
                "id": "FioriTools::ColumnExtension",
                "text": "Column",
              },
            ],
          },
        },
      ],
      "id": "outline-node-table-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "table",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Single selection in tables is enabled by default. If you want, you can enable multi-select.",
          "displayName": "Multi Select",
          "name": "multiSelect",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Single selection in tables is enabled by default. If you want, you can enable multi-select.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "multiSelect",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Specifies the type of table.",
          "displayName": "Type",
          "name": "type",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "ResponsiveTable",
              "text": "ResponsiveTable",
            },
            Object {
              "key": "TreeTable",
              "text": "TreeTable",
            },
            Object {
              "key": "AnalyticalTable",
              "text": "AnalyticalTable",
            },
            Object {
              "key": "GridTable",
              "text": "GridTable",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "const": "ResponsiveTable",
            "description": "Specifies the type of table.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
            "enum": Array [
              "ResponsiveTable",
              "TreeTable",
              "AnalyticalTable",
              "GridTable",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "type",
          ],
          "type": "string",
          "value": "ResponsiveTable",
        },
        Object {
          "artifactType": "FlexChange",
          "description": "Set this property to true if you want items to be selectable when they are clicked rather than after the selection control has been set.",
          "displayName": "Include Item In Selection",
          "name": "includeItemInSelection",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.m.Table",
            "description": "Set this property to true if you want items to be selectable when they are clicked rather than after the selection control has been set.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "includeItemInSelection",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "Defines the layout the table pop-in rows are rendered in.",
          "displayName": "Popin Layout",
          "name": "popinLayout",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "Block",
              "text": "Block",
            },
            Object {
              "key": "GridLarge",
              "text": "GridLarge",
            },
            Object {
              "key": "GridSmall",
              "text": "GridSmall",
            },
          ],
          "schema": Object {
            "description": "Defines the layout options of the table popins.

This enum is part of the 'sap/m/library' module export and must be accessed by the property 'PopinLayout'.",
            "enum": Array [
              "Block",
              "GridLarge",
              "GridSmall",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "popinLayout",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "Defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.",
          "displayName": "Growing Threshold",
          "name": "growingThreshold",
          "schema": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.m.Table",
            "description": "Defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.",
            "type": "number",
          },
          "schemaPath": Array [
            "table",
            "growingThreshold",
          ],
          "type": "number",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "The Select All button is disabled by default. To enable it, set this property to true.",
          "displayName": "Select All",
          "name": "selectAll",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "The Select All button is disabled by default. To enable it, set this property to true.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "selectAll",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "When new data is loaded, the number of lines is restricted to the specified limit. The default value is 200.
If selectAll is true, the selection limit is not evaluated.",
          "displayName": "Selection Limit",
          "name": "selectionLimit",
          "schema": Object {
            "artifactType": "Manifest",
            "description": "When new data is loaded, the number of lines is restricted to the specified limit. The default value is 200.
If selectAll is true, the selection limit is not evaluated.",
            "type": "number",
          },
          "schemaPath": Array [
            "table",
            "selectionLimit",
          ],
          "type": "number",
          "value": undefined,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "The showTablePersonalisation attribute can be set to false to hide the table personalization button.",
          "displayName": "Show Table Personalisation",
          "name": "showTablePersonalisation",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smarttable.SmartTable",
            "description": "The showTablePersonalisation attribute can be set to false to hide the table personalization button.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "showTablePersonalisation",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
          "displayName": "Use Export To Excel",
          "name": "useExportToExcel",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smarttable.SmartTable",
            "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "useExportToExcel",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.",
          "displayName": "Export Type",
          "name": "exportType",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "GW",
              "text": "GW",
            },
            Object {
              "key": "UI5Client",
              "text": "UI5Client",
            },
            Object {
              "key": "UI5ClientPDF",
              "text": "UI5ClientPDF",
            },
          ],
          "schema": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smarttable.SmartTable",
            "description": "Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.",
            "enum": Array [
              "GW",
              "UI5Client",
              "UI5ClientPDF",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "exportType",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "If copy is set to true, the Copy to Clipboard button is shown in the table toolbar.
By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured for the corresponding table.",
          "displayName": "Copy",
          "name": "copy",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "If copy is set to true, the Copy to Clipboard button is shown in the table toolbar.
By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured for the corresponding table.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "copy",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Sets a condensed table layout for analytical tables, grid tables, and tree tables.",
          "displayName": "Condensed Table Layout",
          "name": "condensedTableLayout",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Sets a condensed table layout for analytical tables, grid tables, and tree tables.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "condensedTableLayout",
          ],
          "type": "boolean",
          "value": true,
        },
        Object {
          "artifactType": "Manifest",
          "description": "If you have enabled harmonized variant management, by default, business users cannot set a filter in the table personalization settings.
To enable filtering for business users, you must set the enableTableFilterInPageVariant property to true.",
          "displayName": "Enable Table Filter In Page Variant",
          "name": "enableTableFilterInPageVariant",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "If you have enabled harmonized variant management, by default, business users cannot set a filter in the table personalization settings.
To enable filtering for business users, you must set the enableTableFilterInPageVariant property to true.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/3e2b4d212b66481a829ccef1dc0ca16b",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "enableTableFilterInPageVariant",
          ],
          "type": "boolean",
          "value": true,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Used to enable inline deletion in a responsive table.",
          "displayName": "Inline Delete",
          "name": "inlineDelete",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Used to enable inline deletion in a responsive table.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "inlineDelete",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Represents the qualifier of an annotation. ALP looks for a SelectionPresentationVariant with this qualifier. If it's not found, it looks for a PresentationVariant with this qualifier instead.",
          "displayName": "Qualifier",
          "name": "qualifier",
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Represents the qualifier of an annotation. ALP looks for a SelectionPresentationVariant with this qualifier. If it's not found, it looks for a PresentationVariant with this qualifier instead.",
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "qualifier",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines the visualization of the content area.",
          "displayName": "Default Content View",
          "name": "defaultContentView",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "chart",
              "text": "chart",
            },
            Object {
              "key": "charttable",
              "text": "charttable",
            },
            Object {
              "key": "table",
              "text": "table",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines the visualization of the content area.",
            "enum": Array [
              "chart",
              "charttable",
              "table",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "defaultContentView",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines the filter mode that is used.",
          "displayName": "Default Filter Mode",
          "name": "defaultFilterMode",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "compact",
              "text": "compact",
            },
            Object {
              "key": "visual",
              "text": "visual",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines the filter mode that is used.",
            "enum": Array [
              "compact",
              "visual",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "defaultFilterMode",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Lets you define a title for the content area.",
          "displayName": "Content Title",
          "name": "contentTitle",
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Lets you define a title for the content area.",
            "i18nClassification": "TIT: Title for the content area",
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "contentTitle",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines if filter fields will be set as in parameter.",
          "displayName": "All Filters As In Parameters",
          "name": "allFiltersAsInParameters",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines if filter fields will be set as in parameter.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "allFiltersAsInParameters",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Adds a create action that uses the filter settings as input.",
          "displayName": "createWithFilters",
          "name": "createWithFilters",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "For the create action to use the filter settings as input, set this property to extension and implement the extension function as mentioned in help.sap.com for SAP S/4HANA, section \\"Prefilling Fields When Creating a New Entity Using an Extension Point\\".",
              "displayName": "Strategy",
              "name": "strategy",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "extension",
                  "text": "extension",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "const": "extension",
                "description": "For the create action to use the filter settings as input, set this property to extension and implement the extension function as mentioned in help.sap.com for SAP S/4HANA, section \\"Prefilling Fields When Creating a New Entity Using an Extension Point\\".",
                "descriptionSrcURL": "https://ui5.sap.com/sdk#/topic/189e2d8a59f04a2693a4fde7f4a91a65",
                "enum": Array [
                  "extension",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "table",
                "createWithFilters",
                "strategy",
              ],
              "type": "string",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "Adds a new create action that uses the filter settings as input.",
            "properties": Object {
              "strategy": Object {
                "artifactType": "Manifest",
                "const": "extension",
                "description": "For the create action to use the filter settings as input, set this property to extension and implement the extension function as mentioned in help.sap.com for SAP S/4HANA, section \\"Prefilling Fields When Creating a New Entity Using an Extension Point\\".",
                "descriptionSrcURL": "https://ui5.sap.com/sdk#/topic/189e2d8a59f04a2693a4fde7f4a91a65",
                "enum": Array [
                  "extension",
                ],
                "type": "string",
              },
            },
            "required": Array [
              "strategy",
            ],
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "createWithFilters",
          ],
          "type": "object",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Allows you to edit multiple objects using a dialog.",
          "displayName": "multiEdit",
          "name": "multiEdit",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "When multiEdit is enabled, by default the dialog displays editable fields corresponding to columns that are currently displayed in the table.",
              "displayName": "Enabled",
              "name": "enabled",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "When multiEdit is enabled, by default the dialog displays editable fields corresponding to columns that are currently displayed in the table.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "multiEdit",
                "enabled",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "Use annotationPath to define a mass edit dialog that points to a FieldGroup annotation with a qualifier.",
              "displayName": "Annotation Path",
              "name": "annotationPath",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "com.sap.vocabularies.UI.v1.FieldGroup#GeneralInformation",
                  "text": "com.sap.vocabularies.UI.v1.FieldGroup#GeneralInformation",
                },
                Object {
                  "key": "com.sap.vocabularies.UI.v1.FieldGroup#HeaderInformation",
                  "text": "com.sap.vocabularies.UI.v1.FieldGroup#HeaderInformation",
                },
                Object {
                  "key": "com.sap.vocabularies.UI.v1.FieldGroup#ProductHeaderText",
                  "text": "com.sap.vocabularies.UI.v1.FieldGroup#ProductHeaderText",
                },
                Object {
                  "key": "com.sap.vocabularies.UI.v1.FieldGroup#QuickCreate",
                  "text": "com.sap.vocabularies.UI.v1.FieldGroup#QuickCreate",
                },
                Object {
                  "key": "com.sap.vocabularies.UI.v1.FieldGroup#QuickView",
                  "text": "com.sap.vocabularies.UI.v1.FieldGroup#QuickView",
                },
                Object {
                  "key": "com.sap.vocabularies.UI.v1.FieldGroup#TechnicalData",
                  "text": "com.sap.vocabularies.UI.v1.FieldGroup#TechnicalData",
                },
                Object {
                  "key": "com.sap.vocabularies.UI.v1.FieldGroup#ZmartFilterPrice",
                  "text": "com.sap.vocabularies.UI.v1.FieldGroup#ZmartFilterPrice",
                },
                Object {
                  "key": "com.sap.vocabularies.UI.v1.FieldGroup#ZmartFilterTechnicalData",
                  "text": "com.sap.vocabularies.UI.v1.FieldGroup#ZmartFilterTechnicalData",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Use annotationPath to define a mass edit dialog that points to a FieldGroup annotation with a qualifier.",
                "enum": Array [
                  "com.sap.vocabularies.UI.v1.FieldGroup#GeneralInformation",
                  "com.sap.vocabularies.UI.v1.FieldGroup#HeaderInformation",
                  "com.sap.vocabularies.UI.v1.FieldGroup#ProductHeaderText",
                  "com.sap.vocabularies.UI.v1.FieldGroup#QuickCreate",
                  "com.sap.vocabularies.UI.v1.FieldGroup#QuickView",
                  "com.sap.vocabularies.UI.v1.FieldGroup#TechnicalData",
                  "com.sap.vocabularies.UI.v1.FieldGroup#ZmartFilterPrice",
                  "com.sap.vocabularies.UI.v1.FieldGroup#ZmartFilterTechnicalData",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "table",
                "multiEdit",
                "annotationPath",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "Determines which fields are hidden in key user adaptation and restricts them from being added to the Mass Edit dialog.",
              "displayName": "ignoredFields",
              "name": "ignoredFields",
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Determines which fields are hidden in key user adaptation and restricts them from being added to the Mass Edit dialog.",
                "items": Object {
                  "const": "GENERICPROPERTY",
                  "enum": Array [
                    "Activation_ac",
                    "Copy_ac",
                    "Copy_new_supplier_ac",
                    "Create_review_post_ac",
                    "Delete_ext_ac",
                    "Edit_ac",
                    "Favorites_add_ac",
                    "Favorites_remove_ac",
                    "Favorites_toggle_ac",
                    "Mycart_add_ac",
                    "Preparation_ac",
                    "Shortage_list_ac",
                    "Validation_ac",
                    "Description_fc",
                    "ProductForEdit_fc",
                    "Product",
                    "ProductForEdit",
                    "ProductCategory",
                    "Price",
                    "Currency",
                    "Height",
                    "Width",
                    "Depth",
                    "DimensionUnit",
                    "ProductPictureURL",
                    "Supplier",
                    "ProductBaseUnit",
                    "Weight",
                    "WeightUnit",
                    "OriginalLanguage",
                    "Name",
                    "Description",
                    "DraftUUID",
                    "DraftEntityCreationDateTime",
                    "DraftEntityLastChangeDateTime",
                    "HasActiveEntity",
                    "HasDraftEntity",
                    "IsActiveEntity",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "schemaPath": Array [
                "table",
                "multiEdit",
                "ignoredFields",
              ],
              "type": "object",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "Allows you to edit multiple objects using a dialog.",
            "properties": Object {
              "annotationPath": Object {
                "artifactType": "Manifest",
                "description": "Use annotationPath to define a mass edit dialog that points to a FieldGroup annotation with a qualifier.",
                "enum": Array [
                  "com.sap.vocabularies.UI.v1.FieldGroup#GeneralInformation",
                  "com.sap.vocabularies.UI.v1.FieldGroup#HeaderInformation",
                  "com.sap.vocabularies.UI.v1.FieldGroup#ProductHeaderText",
                  "com.sap.vocabularies.UI.v1.FieldGroup#QuickCreate",
                  "com.sap.vocabularies.UI.v1.FieldGroup#QuickView",
                  "com.sap.vocabularies.UI.v1.FieldGroup#TechnicalData",
                  "com.sap.vocabularies.UI.v1.FieldGroup#ZmartFilterPrice",
                  "com.sap.vocabularies.UI.v1.FieldGroup#ZmartFilterTechnicalData",
                ],
                "type": "string",
              },
              "enabled": Object {
                "artifactType": "Manifest",
                "description": "When multiEdit is enabled, by default the dialog displays editable fields corresponding to columns that are currently displayed in the table.",
                "type": "boolean",
              },
              "ignoredFields": Object {
                "artifactType": "Manifest",
                "description": "Determines which fields are hidden in key user adaptation and restricts them from being added to the Mass Edit dialog.",
                "items": Object {
                  "const": "GENERICPROPERTY",
                  "enum": Array [
                    "Activation_ac",
                    "Copy_ac",
                    "Copy_new_supplier_ac",
                    "Create_review_post_ac",
                    "Delete_ext_ac",
                    "Edit_ac",
                    "Favorites_add_ac",
                    "Favorites_remove_ac",
                    "Favorites_toggle_ac",
                    "Mycart_add_ac",
                    "Preparation_ac",
                    "Shortage_list_ac",
                    "Validation_ac",
                    "Description_fc",
                    "ProductForEdit_fc",
                    "Product",
                    "ProductForEdit",
                    "ProductCategory",
                    "Price",
                    "Currency",
                    "Height",
                    "Width",
                    "Depth",
                    "DimensionUnit",
                    "ProductPictureURL",
                    "Supplier",
                    "ProductBaseUnit",
                    "Weight",
                    "WeightUnit",
                    "OriginalLanguage",
                    "Name",
                    "Description",
                    "DraftUUID",
                    "DraftEntityCreationDateTime",
                    "DraftEntityLastChangeDateTime",
                    "HasActiveEntity",
                    "HasDraftEntity",
                    "IsActiveEntity",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
            },
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "multiEdit",
          ],
          "type": "object",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Enables the creation of objects that have a maximum of eight data fields through a dialog in the list report page.",
          "displayName": "createWithParameterDialog",
          "name": "createWithParameterDialog",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "",
              "displayName": "fields",
              "name": "fields",
              "schema": Object {
                "artifactType": "Manifest",
                "items": Object {
                  "enum": Array [
                    "Activation_ac",
                    "Copy_ac",
                    "Copy_new_supplier_ac",
                    "Create_review_post_ac",
                    "Delete_ext_ac",
                    "Edit_ac",
                    "Favorites_add_ac",
                    "Favorites_remove_ac",
                    "Favorites_toggle_ac",
                    "Mycart_add_ac",
                    "Preparation_ac",
                    "Shortage_list_ac",
                    "Validation_ac",
                    "Description_fc",
                    "ProductForEdit_fc",
                    "Product",
                    "ProductForEdit",
                    "ProductCategory",
                    "Price",
                    "Currency",
                    "Height",
                    "Width",
                    "Depth",
                    "DimensionUnit",
                    "ProductPictureURL",
                    "Supplier",
                    "ProductBaseUnit",
                    "Weight",
                    "WeightUnit",
                    "OriginalLanguage",
                    "Name",
                    "Description",
                    "DraftUUID",
                    "DraftEntityCreationDateTime",
                    "DraftEntityLastChangeDateTime",
                    "HasActiveEntity",
                    "HasDraftEntity",
                    "IsActiveEntity",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "schemaPath": Array [
                "table",
                "createWithParameterDialog",
                "fields",
              ],
              "type": "object",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "Enables the creation of objects that have a maximum of eight data fields through a dialog in the list report page.",
            "properties": Object {
              "fields": Object {
                "artifactType": "Manifest",
                "items": Object {
                  "enum": Array [
                    "Activation_ac",
                    "Copy_ac",
                    "Copy_new_supplier_ac",
                    "Create_review_post_ac",
                    "Delete_ext_ac",
                    "Edit_ac",
                    "Favorites_add_ac",
                    "Favorites_remove_ac",
                    "Favorites_toggle_ac",
                    "Mycart_add_ac",
                    "Preparation_ac",
                    "Shortage_list_ac",
                    "Validation_ac",
                    "Description_fc",
                    "ProductForEdit_fc",
                    "Product",
                    "ProductForEdit",
                    "ProductCategory",
                    "Price",
                    "Currency",
                    "Height",
                    "Width",
                    "Depth",
                    "DimensionUnit",
                    "ProductPictureURL",
                    "Supplier",
                    "ProductBaseUnit",
                    "Weight",
                    "WeightUnit",
                    "OriginalLanguage",
                    "Name",
                    "Description",
                    "DraftUUID",
                    "DraftEntityCreationDateTime",
                    "DraftEntityLastChangeDateTime",
                    "HasActiveEntity",
                    "HasDraftEntity",
                    "IsActiveEntity",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
            },
            "required": Array [
              "fields",
            ],
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "createWithParameterDialog",
          ],
          "type": "object",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "With quickVariantSelection, you can switch to multiple views (single table mode).
Each view links to a variant you have added to your annotations.",
          "displayName": "quickVariantSelection",
          "name": "quickVariantSelection",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "To show the number of records available, set showCounts to true.",
              "displayName": "Show Counts",
              "name": "showCounts",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "To show the number of records available, set showCounts to true.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelection",
                "showCounts",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "The variants section contains a set of entries that point to a SelectionVariant or SelectionPresentationVariant annotation.",
              "displayName": "variants",
              "name": "variants",
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/QuickVariant",
                },
                "artifactType": "Manifest",
                "description": "The variants section contains a set of entries that point to a SelectionVariant or SelectionPresentationVariant annotation.",
                "type": "object",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelection",
                "variants",
              ],
              "type": "object",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "With quickVariantSelection, you can switch to multiple views (single table mode).
Each view links to a variant you have added to your annotations.",
            "properties": Object {
              "showCounts": Object {
                "artifactType": "Manifest",
                "description": "To show the number of records available, set showCounts to true.",
                "type": "boolean",
              },
              "variants": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/QuickVariant",
                },
                "artifactType": "Manifest",
                "description": "The variants section contains a set of entries that point to a SelectionVariant or SelectionPresentationVariant annotation.",
                "type": "object",
              },
            },
            "required": Array [
              "variants",
            ],
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "quickVariantSelection",
          ],
          "type": "object",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Switches to multiple views (multi-table mode), based on variants you have defined as annotations.",
          "displayName": "quickVariantSelectionX",
          "name": "quickVariantSelectionX",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "When set to true, this enables automatic binding of the table with either the tableBindingPath (if it exists) or the entitySet property.",
              "displayName": "Enable Auto Binding",
              "name": "enableAutoBinding",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "When set to true, this enables automatic binding of the table with either the tableBindingPath (if it exists) or the entitySet property.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelectionX",
                "enableAutoBinding",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "To show the number of records available, set showCounts to true.",
              "displayName": "Show Counts",
              "name": "showCounts",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "To show the number of records available, set showCounts to true.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelectionX",
                "showCounts",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "The variants section contains a set of entries that point to a SelectionVariant or SelectionPresentationVariant annotation.",
              "displayName": "variants",
              "name": "variants",
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/QuickVariantX",
                },
                "artifactType": "Manifest",
                "description": "The variants section contains a set of entries that point to a SelectionVariant or SelectionPresentationVariant annotation.",
                "type": "object",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelectionX",
                "variants",
              ],
              "type": "object",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "Switches to multiple views (multi-table mode), based on variants you have defined as annotations.",
            "properties": Object {
              "enableAutoBinding": Object {
                "artifactType": "Manifest",
                "description": "When set to true, this enables automatic binding of the table with either the tableBindingPath (if it exists) or the entitySet property.",
                "type": "boolean",
              },
              "showCounts": Object {
                "artifactType": "Manifest",
                "description": "To show the number of records available, set showCounts to true.",
                "type": "boolean",
              },
              "variants": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/QuickVariantX",
                },
                "artifactType": "Manifest",
                "description": "The variants section contains a set of entries that point to a SelectionVariant or SelectionPresentationVariant annotation.",
                "type": "object",
              },
            },
            "required": Array [
              "variants",
            ],
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "quickVariantSelectionX",
          ],
          "type": "object",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Change the default behavior for autoloading of data.",
          "displayName": "dataLoadSettings",
          "name": "dataLoadSettings",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "Changes the default behavior for autoloading data.
For multi-view scenarios, you can change the enableAutobinding property to False under quickVariantSelectionX instead.",
              "displayName": "Load Data On App Launch",
              "name": "loadDataOnAppLaunch",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "always",
                  "text": "always",
                },
                Object {
                  "key": "ifAnyFilterExist",
                  "text": "ifAnyFilterExist",
                },
                Object {
                  "key": "never",
                  "text": "never",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Changes the default behavior for autoloading data.
For multi-view scenarios, you can change the enableAutobinding property to False under quickVariantSelectionX instead.",
                "enum": Array [
                  "always",
                  "ifAnyFilterExist",
                  "never",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "table",
                "dataLoadSettings",
                "loadDataOnAppLaunch",
              ],
              "type": "string",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "Change the default behavior for autoloading of data.",
            "properties": Object {
              "loadDataOnAppLaunch": Object {
                "$ref": "#/definitions/LoadDataOnAppLaunchSettings",
                "artifactType": "Manifest",
                "description": "Changes the default behavior for autoloading data.
For multi-view scenarios, you can change the enableAutobinding property to False under quickVariantSelectionX instead.",
              },
            },
            "required": Array [
              "loadDataOnAppLaunch",
            ],
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "dataLoadSettings",
          ],
          "type": "object",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem",
        "controlProperty": "type",
        "description": "Table",
        "isViewNode": true,
        "properties": Object {
          "columns": Object {
            "$ref": "#/definitions/LineItems",
          },
          "condensedTableLayout": Object {
            "artifactType": "Manifest",
            "description": "Sets a condensed table layout for analytical tables, grid tables, and tree tables.",
            "type": "boolean",
          },
          "copy": Object {
            "artifactType": "Manifest",
            "description": "If copy is set to true, the Copy to Clipboard button is shown in the table toolbar.
By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured for the corresponding table.",
            "type": "boolean",
          },
          "createWithFilters": Object {
            "$ref": "#/definitions/CreateWithFilters",
            "artifactType": "Manifest",
            "description": "Adds a new create action that uses the filter settings as input.",
          },
          "createWithParameterDialog": Object {
            "$ref": "#/definitions/Fields4Dialog",
            "artifactType": "Manifest",
            "description": "Enables the creation of objects that have a maximum of eight data fields through a dialog in the list report page.",
          },
          "dataLoadSettings": Object {
            "$ref": "#/definitions/DataLoadSettings",
            "artifactType": "Manifest",
            "description": "Change the default behavior for autoloading of data.",
          },
          "enableTableFilterInPageVariant": Object {
            "artifactType": "Manifest",
            "description": "If you have enabled harmonized variant management, by default, business users cannot set a filter in the table personalization settings.
To enable filtering for business users, you must set the enableTableFilterInPageVariant property to true.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/3e2b4d212b66481a829ccef1dc0ca16b",
            "type": "boolean",
          },
          "exportType": Object {
            "$ref": "#/definitions/smarttable.ExportType",
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smarttable.SmartTable",
            "description": "Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.",
          },
          "growingThreshold": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.m.Table",
            "description": "Defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.",
            "type": "number",
          },
          "includeItemInSelection": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.m.Table",
            "description": "Set this property to true if you want items to be selectable when they are clicked rather than after the selection control has been set.",
            "type": "boolean",
          },
          "multiEdit": Object {
            "$ref": "#/definitions/MultiEdit",
            "artifactType": "Manifest",
            "description": "Allows you to edit multiple objects using a dialog.",
          },
          "multiSelect": Object {
            "artifactType": "Manifest",
            "description": "Single selection in tables is enabled by default. If you want, you can enable multi-select.",
            "type": "boolean",
          },
          "popinLayout": Object {
            "anyOf": Array [
              Object {
                "$ref": "#/definitions/PopinLayout",
              },
              Object {
                "type": "string",
              },
            ],
            "artifactType": "FlexChange",
            "controlType": "sap.m.Table",
            "description": "Defines the layout the table pop-in rows are rendered in.",
            "pattern": "^(Block|GridLarge|GridSmall)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
          },
          "quickVariantSelection": Object {
            "$ref": "#/definitions/QuickVariantSelection",
            "artifactType": "Manifest",
            "description": "With quickVariantSelection, you can switch to multiple views (single table mode).
Each view links to a variant you have added to your annotations.",
          },
          "quickVariantSelectionX": Object {
            "$ref": "#/definitions/QuickVariantSelectionX",
            "artifactType": "Manifest",
            "description": "Switches to multiple views (multi-table mode), based on variants you have defined as annotations.",
          },
          "selectAll": Object {
            "artifactType": "Manifest",
            "description": "The Select All button is disabled by default. To enable it, set this property to true.",
            "type": "boolean",
          },
          "selectionLimit": Object {
            "artifactType": "Manifest",
            "description": "When new data is loaded, the number of lines is restricted to the specified limit. The default value is 200.
If selectAll is true, the selection limit is not evaluated.",
            "type": "number",
          },
          "showTablePersonalisation": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smarttable.SmartTable",
            "description": "The showTablePersonalisation attribute can be set to false to hide the table personalization button.",
            "type": "boolean",
          },
          "toolBar": Object {
            "$ref": "#/definitions/ToolBar<LineItems>",
            "description": "Tool Bar",
          },
          "type": Object {
            "artifactType": "Manifest",
            "const": "ResponsiveTable",
            "description": "Specifies the type of table.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
            "enum": Array [
              "ResponsiveTable",
            ],
            "type": "string",
          },
          "useExportToExcel": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.ui.comp.smarttable.SmartTable",
            "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
            "type": "boolean",
          },
        },
        "type": "object",
      },
      "text": "Table",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "columns": Object {
          "custom": Array [
            Object {
              "cellsFragmentName": "fev2.ext.fragment.CustomCell",
              "className": "sap.ui.core.Fragment",
              "columnIndex": 4,
              "columnKey": "ColumnExtension",
              "extensionType": "ResponsiveTableColumnsExtension",
              "fragmentName": "fev2.ext.fragment.CustomColumn",
              "id": "FioriTools::ColumnExtension",
              "text": "Column",
            },
          ],
        },
        "condensedTableLayout": true,
        "enableTableFilterInPageVariant": true,
        "type": "ResponsiveTable",
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [],
          "id": "outline-node-footer-actions-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "footer",
            "actions",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "description": "Actions",
            "isViewNode": true,
            "properties": Object {},
            "type": "object",
          },
          "text": "Actions",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
      ],
      "id": "outline-node-footer-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "footer",
      ],
      "properties": Array [],
      "schema": Object {
        "additionalProperties": false,
        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.LineItem",
        "description": "Footer",
        "isViewNode": true,
        "properties": Object {
          "actions": Object {
            "$ref": "#/definitions/FooterActions<LineItems>",
          },
        },
        "propertyIndex": 2,
        "type": "object",
      },
      "text": "Footer",
      "title": undefined,
      "type": undefined,
      "value": undefined,
    },
  ],
  "id": "outline-noderoot-node",
  "moveProps": undefined,
  "path": Array [],
  "properties": Array [
    Object {
      "artifactType": "FlexChange",
      "description": "Set fitContent to true to optimize the dynamic page responsiveness on small screens and behavior when the DynamicPageHeader is expanded or collapsed.",
      "displayName": "Fit Content",
      "name": "fitContent",
      "options": Array [
        Object {
          "key": undefined,
          "text": "",
        },
        Object {
          "key": true,
          "text": "True",
        },
        Object {
          "key": false,
          "text": "False",
        },
      ],
      "schema": Object {
        "artifactType": "FlexChange",
        "controlType": "sap.f.DynamicPage",
        "description": "Set fitContent to true to optimize the dynamic page responsiveness on small screens and behavior when the DynamicPageHeader is expanded or collapsed.",
        "type": "boolean",
      },
      "schemaPath": Array [
        "fitContent",
      ],
      "type": "boolean",
      "value": undefined,
    },
  ],
  "root": true,
  "schema": undefined,
  "text": "Root",
  "title": undefined,
  "type": "rootNode",
  "value": undefined,
}
`;

exports[`getTree getTree - ListReport page Visual Filters 1`] = `
Object {
  "additionalText": undefined,
  "annotationNodeId": Array [],
  "children": Array [
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [],
          "id": "outline-node-header-actions-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "header",
            "actions",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/CustomHeaderAction",
            },
            "description": "Actions",
            "isViewNode": true,
            "properties": Object {},
            "type": "object",
          },
          "text": "Actions",
          "title": undefined,
          "type": undefined,
          "value": Object {},
        },
      ],
      "id": "outline-node-header-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "header",
      ],
      "properties": Array [],
      "schema": Object {
        "additionalProperties": false,
        "description": "Header",
        "isViewNode": true,
        "properties": Object {
          "actions": Object {
            "$ref": "#/definitions/HeaderActions",
          },
        },
        "propertyIndex": 0,
        "type": "object",
      },
      "text": "Header",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "actions": Object {},
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::to_Agency_AgencyID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::to_Agency_AgencyID",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.SelectionFields/0",
                "annotationType": "PropertyPath",
                "dataType": "String",
                "description": "{i18n>AgencyID}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_Agency_AgencyID",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 0,
                "target": "TravelService.Travel",
                "type": "object",
              },
              "text": "{i18n>AgencyID}",
              "title": "to_Agency_AgencyID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::BookingFee-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::BookingFee",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.SelectionFields/1",
                "annotationType": "PropertyPath",
                "dataType": "Decimal",
                "description": "{i18n>BookingFee}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "BookingFee",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 1,
                "target": "TravelService.Travel",
                "type": "object",
              },
              "text": "{i18n>BookingFee}",
              "title": "BookingFee",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::LastDate-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::LastDate",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.SelectionFields/2",
                "annotationType": "PropertyPath",
                "dataType": "Date",
                "description": "{i18n>LastDate}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "LastDate",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 2,
                "target": "TravelService.Travel",
                "type": "object",
              },
              "text": "{i18n>LastDate}",
              "title": "LastDate",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::Description-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::Description",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.SelectionFields/3",
                "annotationType": "PropertyPath",
                "dataType": "String",
                "description": "{i18n>Description}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "Description",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 3,
                "target": "TravelService.Travel",
                "type": "object",
              },
              "text": "{i18n>Description}",
              "title": "Description",
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-filterBar-selectionFields-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "filterBar",
            "selectionFields",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/CustomFilterField",
            },
            "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.SelectionFields",
            "description": "Compact Filters",
            "isViewNode": true,
            "properties": Object {
              "SelectionField::BookingFee": Object {
                "$ref": "#/definitions/SelectionField::BookingFee",
                "propertyIndex": 1,
              },
              "SelectionField::Description": Object {
                "$ref": "#/definitions/SelectionField::Description",
                "propertyIndex": 3,
              },
              "SelectionField::LastDate": Object {
                "$ref": "#/definitions/SelectionField::LastDate",
                "propertyIndex": 2,
              },
              "SelectionField::to_Agency_AgencyID": Object {
                "$ref": "#/definitions/SelectionField::to_Agency_AgencyID",
                "propertyIndex": 0,
              },
            },
            "type": "object",
          },
          "text": "Compact Filters",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-visualFilters-LastDate-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "visualFilters",
              },
              "path": Array [
                "filterBar",
                "visualFilters",
                "LastDate",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the selection field appears.
- Default: The filter field appears by default in the filter bar (both the regular filter fields as well as the corresponding visual filter fields).
- Adaptation: The filter field only appears under Adapt Filters.
- Hidden: The filter field is hidden.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the selection field appears.
- Default: The filter field appears by default in the filter bar (both the regular filter fields as well as the corresponding visual filter fields).
- Adaptation: The filter field only appears under Adapt Filters.
- Hidden: The filter field is hidden.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "filterBar",
                    "visualFilters",
                    "LastDate",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "LastDate/@com.sap.vocabularies.Common.v1.ValueList#visualFilter",
                "description": "{i18n>LastDate}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "LastDate",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the selection field appears.
- Default: The filter field appears by default in the filter bar (both the regular filter fields as well as the corresponding visual filter fields).
- Adaptation: The filter field only appears under Adapt Filters.
- Hidden: The filter field is hidden.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
                  },
                  "visualFilterValueList": Object {
                    "artifactType": "Manifest",
                    "description": "The valuelist annotation corresponding to the visual filter representation.",
                    "hidden": true,
                    "type": "string",
                  },
                },
                "propertyIndex": 2,
                "type": "object",
              },
              "text": "{i18n>LastDate}",
              "title": undefined,
              "type": undefined,
              "value": Object {
                "visualFilterValueList": "com.sap.vocabularies.Common.v1.ValueList#visualFilter",
              },
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-visualFilters-Description-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "visualFilters",
              },
              "path": Array [
                "filterBar",
                "visualFilters",
                "Description",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the selection field appears.
- Default: The filter field appears by default in the filter bar (both the regular filter fields as well as the corresponding visual filter fields).
- Adaptation: The filter field only appears under Adapt Filters.
- Hidden: The filter field is hidden.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the selection field appears.
- Default: The filter field appears by default in the filter bar (both the regular filter fields as well as the corresponding visual filter fields).
- Adaptation: The filter field only appears under Adapt Filters.
- Hidden: The filter field is hidden.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "filterBar",
                    "visualFilters",
                    "Description",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "Description/@com.sap.vocabularies.Common.v1.ValueList#visualFilter",
                "description": "{i18n>Description}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "Description",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the selection field appears.
- Default: The filter field appears by default in the filter bar (both the regular filter fields as well as the corresponding visual filter fields).
- Adaptation: The filter field only appears under Adapt Filters.
- Hidden: The filter field is hidden.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
                  },
                  "visualFilterValueList": Object {
                    "artifactType": "Manifest",
                    "description": "The valuelist annotation corresponding to the visual filter representation.",
                    "hidden": true,
                    "type": "string",
                  },
                },
                "propertyIndex": 3,
                "type": "object",
              },
              "text": "{i18n>Description}",
              "title": undefined,
              "type": undefined,
              "value": Object {
                "visualFilterValueList": "com.sap.vocabularies.Common.v1.ValueList#visualFilter",
              },
            },
          ],
          "id": "outline-node-filterBar-visualFilters-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "filterBar",
            "visualFilters",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/VisualFilter",
            },
            "description": "Visual Filters",
            "isViewNode": true,
            "properties": Object {
              "Description": Object {
                "$ref": "#/definitions/VisualFilter<Description>",
                "propertyIndex": 3,
              },
              "LastDate": Object {
                "$ref": "#/definitions/VisualFilter<LastDate>",
                "propertyIndex": 2,
              },
            },
            "type": "object",
          },
          "text": "Visual Filters",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "Description": Object {
              "visualFilterValueList": "com.sap.vocabularies.Common.v1.ValueList#visualFilter",
            },
            "LastDate": Object {
              "visualFilterValueList": "com.sap.vocabularies.Common.v1.ValueList#visualFilter",
            },
          },
        },
      ],
      "id": "outline-node-filterBar-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "filterBar",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Allows you to hide the filter bar.",
          "displayName": "Hide Filter Bar",
          "name": "hideFilterBar",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Allows you to hide the filter bar.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bd7590569c74c61a0124c6e370030f6",
            "type": "boolean",
          },
          "schemaPath": Array [
            "filterBar",
            "hideFilterBar",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Allows you to specify the default filter mode on the initial load.",
          "displayName": "Initial Layout",
          "name": "initialLayout",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "Compact",
              "text": "Compact",
            },
            Object {
              "key": "Visual",
              "text": "Visual",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Allows you to specify the default filter mode on the initial load.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
            "enum": Array [
              "Compact",
              "Visual",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "filterBar",
            "initialLayout",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Allows you to specify the layout of the filter bar.
- Compact: This setting shows filter fields in compact mode.
- CompactVisual: This setting shows filter fields in both compact and visual modes.",
          "displayName": "Layout",
          "name": "layout",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "Compact",
              "text": "Compact",
            },
            Object {
              "key": "CompactVisual",
              "text": "CompactVisual",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Allows you to specify the layout of the filter bar.
- Compact: This setting shows filter fields in compact mode.
- CompactVisual: This setting shows filter fields in both compact and visual modes.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
            "enum": Array [
              "Compact",
              "CompactVisual",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "filterBar",
            "layout",
          ],
          "type": "string",
          "value": "CompactVisual",
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "description": "Filter Bar",
        "isViewNode": true,
        "properties": Object {
          "hideFilterBar": Object {
            "artifactType": "Manifest",
            "description": "Allows you to hide the filter bar.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bd7590569c74c61a0124c6e370030f6",
            "type": "boolean",
          },
          "initialLayout": Object {
            "$ref": "#/definitions/InitialLayoutType",
            "artifactType": "Manifest",
            "description": "Allows you to specify the default filter mode on the initial load.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
          },
          "layout": Object {
            "$ref": "#/definitions/LayoutType",
            "artifactType": "Manifest",
            "description": "Allows you to specify the layout of the filter bar.
- Compact: This setting shows filter fields in compact mode.
- CompactVisual: This setting shows filter fields in both compact and visual modes.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
          },
          "selectionFields": Object {
            "anyOf": Array [
              Object {
                "$ref": "#/definitions/SelectionFields",
              },
              Object {
                "$ref": "#/definitions/CompactFilters",
              },
            ],
            "isViewNode": true,
          },
          "visualFilters": Object {
            "$ref": "#/definitions/VisualFilters",
          },
        },
        "propertyIndex": 1,
        "type": "object",
      },
      "text": "Filter Bar",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "layout": "CompactVisual",
        "visualFilters": Object {
          "Description": Object {
            "visualFilterValueList": "com.sap.vocabularies.Common.v1.ValueList#visualFilter",
          },
          "LastDate": Object {
            "visualFilterValueList": "com.sap.vocabularies.Common.v1.ValueList#visualFilter",
          },
        },
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": Array [
        0,
      ],
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": Array [],
          "children": Array [],
          "id": "outline-node-table-views-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "views",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "views",
          },
          "path": Array [
            "table",
            "views",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "anyOf": Array [
                Object {
                  "$ref": "#/definitions/LRTableView",
                },
                Object {
                  "$ref": "#/definitions/LRChartView",
                },
                Object {
                  "$ref": "#/definitions/TableViewExtension",
                },
                Object {
                  "type": "boolean",
                },
              ],
            },
            "description": "Views",
            "isViewNode": true,
            "properties": Object {},
            "type": "object",
          },
          "text": "Views",
          "title": undefined,
          "type": "views",
          "value": undefined,
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": Array [
                    0,
                    0,
                  ],
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-DataFieldForAction::TravelService.rejectTravel-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": Array [
                      Object {
                        "allowedRanges": Array [
                          Object {
                            "from": 0,
                            "to": 1,
                          },
                        ],
                        "path": Array [
                          "table",
                          "toolBar",
                          "actions",
                        ],
                      },
                      Object {
                        "allowedRanges": undefined,
                        "path": Array [
                          "table",
                          "columns",
                        ],
                      },
                    ],
                    "movable": true,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "DataFieldForAction::TravelService.rejectTravel",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Enables single selection for a bound action.",
                      "displayName": "Enable On Select",
                      "name": "enableOnSelect",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "multi",
                          "text": "multi",
                        },
                        Object {
                          "key": "single",
                          "text": "single",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::TravelService.rejectTravel",
                        "enableOnSelect",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Settings that control the behavior after creating a new entry.",
                      "displayName": "afterExecution",
                      "name": "afterExecution",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                          "displayName": "Navigate To Instance",
                          "name": "navigateToInstance",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::TravelService.rejectTravel",
                            "afterExecution",
                            "navigateToInstance",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                          "displayName": "Enable Auto Scroll",
                          "name": "enableAutoScroll",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::TravelService.rejectTravel",
                            "afterExecution",
                            "enableAutoScroll",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                        "properties": Object {
                          "enableAutoScroll": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "navigateToInstance": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::TravelService.rejectTravel",
                        "afterExecution",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/0",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "{i18n>RejectTravel}",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "rejectTravel",
                      },
                    ],
                    "properties": Object {
                      "afterExecution": Object {
                        "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                      },
                      "enableOnSelect": Object {
                        "$ref": "#/definitions/SelectType",
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                      },
                    },
                    "propertyIndex": 0,
                    "target": "TravelService",
                    "type": "object",
                  },
                  "text": "{i18n>RejectTravel}",
                  "title": "rejectTravel",
                  "type": undefined,
                  "value": undefined,
                },
              ],
              "id": "outline-node-table-toolBar-actions-node",
              "moveProps": Object {
                "allowedChildTypes": Array [
                  "actions",
                ],
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "table",
                "toolBar",
                "actions",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/CustomTableAction",
                },
                "description": "Actions",
                "isViewNode": true,
                "properties": Object {
                  "DataFieldForAction::TravelService.rejectTravel": Object {
                    "$ref": "#/definitions/ToolBarAction<TravelService.rejectTravel>",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "{i18n>RejectTravel}",
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "rejectTravel",
                      },
                    ],
                    "propertyIndex": 0,
                    "target": "TravelService",
                  },
                },
                "type": "object",
              },
              "text": "Actions",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-table-toolBar-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "table",
            "toolBar",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem",
            "description": "Tool Bar",
            "isViewNode": true,
            "properties": Object {
              "actions": Object {
                "$ref": "#/definitions/Actions<LineItemsOfSPV::LineItem>",
              },
            },
            "required": Array [
              "actions",
            ],
            "type": "object",
          },
          "text": "Tool Bar",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": Array [
                0,
                1,
              ],
              "children": Array [],
              "id": "outline-node-table-columns-DataField::to_Customer_CustomerID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": Array [],
                "movable": true,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::to_Customer_CustomerID",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::to_Customer_CustomerID",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::to_Customer_CustomerID",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::to_Customer_CustomerID",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/1",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "{i18n>CustomerID}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_Customer_CustomerID",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 0,
                "type": "object",
              },
              "text": "{i18n>CustomerID}",
              "title": "to_Customer_CustomerID",
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-table-columns-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "table",
            "columns",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/TableCustomColumn",
            },
            "description": "Columns",
            "isViewNode": true,
            "properties": Object {
              "DataField::to_Customer_CustomerID": Object {
                "$ref": "#/definitions/TableColumn",
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/1",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "{i18n>CustomerID}",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_Customer_CustomerID",
                  },
                ],
                "propertyIndex": 0,
              },
            },
            "type": "object",
          },
          "text": "Columns",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
      ],
      "id": "outline-node-table-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "table",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically, as defined by the standard variant
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
          "displayName": "Initial Load",
          "name": "initialLoad",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "Auto",
              "text": "Auto",
            },
            Object {
              "key": "Disabled",
              "text": "Disabled",
            },
            Object {
              "key": "Enabled",
              "text": "Enabled",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically, as defined by the standard variant
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/9f4e1192f1384b85bc160288e17f69c4",
            "enum": Array [
              "Auto",
              "Disabled",
              "Enabled",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "initialLoad",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
          "displayName": "Type",
          "name": "type",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "AnalyticalTable",
              "text": "AnalyticalTable",
            },
            Object {
              "key": "GridTable",
              "text": "GridTable",
            },
            Object {
              "key": "ResponsiveTable",
              "text": "ResponsiveTable",
            },
            Object {
              "key": "TreeTable",
              "text": "TreeTable",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
            "enum": Array [
              "AnalyticalTable",
              "GridTable",
              "ResponsiveTable",
              "TreeTable",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "type",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
          "displayName": "Selection Mode",
          "name": "selectionMode",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "Auto",
              "text": "Auto",
            },
            Object {
              "key": "Multi",
              "text": "Multi",
            },
            Object {
              "key": "None",
              "text": "None",
            },
            Object {
              "key": "Single",
              "text": "Single",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/116b5d82e8c545e2a56e1b51b8b0a9bd",
            "enum": Array [
              "Auto",
              "Multi",
              "None",
              "Single",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "selectionMode",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
          "displayName": "Select All",
          "name": "selectAll",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "selectAll",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "You can define how many items can be selected at a time using the selectionLimit.",
          "displayName": "Selection Limit",
          "name": "selectionLimit",
          "schema": Object {
            "artifactType": "Manifest",
            "description": "You can define how many items can be selected at a time using the selectionLimit.",
            "type": "number",
          },
          "schemaPath": Array [
            "table",
            "selectionLimit",
          ],
          "type": "number",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
          "displayName": "Enable Export",
          "name": "enableExport",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "enableExport",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines whether the content density for ui.table is condensed.",
          "displayName": "Condensed Table Layout",
          "name": "condensedTableLayout",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the content density for ui.table is condensed.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "condensedTableLayout",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
          "displayName": "Hierarchy Qualifier",
          "name": "hierarchyQualifier",
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "hierarchyQualifier",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
          "displayName": "Width Including Column Header",
          "name": "widthIncludingColumnHeader",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "widthIncludingColumnHeader",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
          "displayName": "Disable Copy To Clipboard",
          "name": "disableCopyToClipboard",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "disableCopyToClipboard",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
          "displayName": "Enable Mass Edit",
          "name": "enableMassEdit",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "enableMassEdit",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
          "displayName": "personalization",
          "name": "personalization",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "Defines whether the user can add and remove columns to a given table.",
              "displayName": "Column",
              "name": "column",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can add and remove columns to a given table.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "personalization",
                "column",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "Defines whether the user can sort a given table.",
              "displayName": "Sort",
              "name": "sort",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can sort a given table.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "personalization",
                "sort",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "Defines whether the user can filter data of a given table.",
              "displayName": "Filter",
              "name": "filter",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can filter data of a given table.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "personalization",
                "filter",
              ],
              "type": "boolean",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
            "properties": Object {
              "column": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can add and remove columns to a given table.",
                "type": "boolean",
              },
              "filter": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can filter data of a given table.",
                "type": "boolean",
              },
              "sort": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can sort a given table.",
                "type": "boolean",
              },
            },
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "personalization",
          ],
          "type": "object",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
          "displayName": "quickVariantSelection",
          "name": "quickVariantSelection",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "Determines whether the table title is hidden and the tab titles are displayed.",
              "displayName": "Hide Table Title",
              "name": "hideTableTitle",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Determines whether the table title is hidden and the tab titles are displayed.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelection",
                "hideTableTitle",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "Determines whether the entry view counts are shown.",
              "displayName": "Show Counts",
              "name": "showCounts",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Determines whether the entry view counts are shown.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelection",
                "showCounts",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "List of annotation paths referring to SelectionVariant annotations.",
              "displayName": "paths",
              "name": "paths",
              "schema": Object {
                "artifactType": "Manifest",
                "description": "List of annotation paths referring to SelectionVariant annotations.",
                "items": Object {
                  "$ref": "#/definitions/AnnotationPathAsObject",
                },
                "type": "array",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelection",
                "paths",
              ],
              "type": "object",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
            "properties": Object {
              "hideTableTitle": Object {
                "artifactType": "Manifest",
                "description": "Determines whether the table title is hidden and the tab titles are displayed.",
                "type": "boolean",
              },
              "paths": Object {
                "artifactType": "Manifest",
                "description": "List of annotation paths referring to SelectionVariant annotations.",
                "items": Object {
                  "$ref": "#/definitions/AnnotationPathAsObject",
                },
                "type": "array",
              },
              "showCounts": Object {
                "artifactType": "Manifest",
                "description": "Determines whether the entry view counts are shown.",
                "type": "boolean",
              },
            },
            "required": Array [
              "paths",
            ],
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "quickVariantSelection",
          ],
          "type": "object",
          "value": undefined,
        },
        Object {
          "artifactType": undefined,
          "description": "",
          "displayName": "enableMassEdit",
          "name": "enableMassEdit",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
              "displayName": "visibleFields",
              "name": "visibleFields",
              "schema": Object {
                "artifactType": "Manifest",
                "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                "items": Object {
                  "enum": Array [
                    "to_Customer_CustomerID",
                  ],
                  "type": "string",
                },
                "type": "array",
                "uniqueItems": true,
              },
              "schemaPath": Array [
                "table",
                "enableMassEdit",
                "visibleFields",
              ],
              "type": "object",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
              "displayName": "ignoredFields",
              "name": "ignoredFields",
              "schema": Object {
                "artifactType": "Manifest",
                "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                "items": Object {
                  "enum": Array [
                    "to_Customer_CustomerID",
                  ],
                  "type": "string",
                },
                "type": "array",
                "uniqueItems": true,
              },
              "schemaPath": Array [
                "table",
                "enableMassEdit",
                "ignoredFields",
              ],
              "type": "object",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "properties": Object {
              "ignoredFields": Object {
                "artifactType": "Manifest",
                "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                "items": Object {
                  "enum": Array [
                    "to_Customer_CustomerID",
                  ],
                  "type": "string",
                },
                "type": "array",
                "uniqueItems": true,
              },
              "visibleFields": Object {
                "artifactType": "Manifest",
                "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                "items": Object {
                  "enum": Array [
                    "to_Customer_CustomerID",
                  ],
                  "type": "string",
                },
                "type": "array",
                "uniqueItems": true,
              },
            },
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "enableMassEdit",
          ],
          "type": "object",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem",
        "description": "Table",
        "isViewNode": true,
        "properties": Object {
          "annotationPath": Object {
            "artifactType": "Manifest",
            "description": "The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.",
            "hidden": true,
            "type": "string",
          },
          "columns": Object {
            "$ref": "#/definitions/LineItemsOfSPV::LineItem",
          },
          "condensedTableLayout": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the content density for ui.table is condensed.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
            "type": "boolean",
          },
          "disableCopyToClipboard": Object {
            "artifactType": "Manifest",
            "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
            "type": "boolean",
          },
          "enableExport": Object {
            "artifactType": "Manifest",
            "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
            "type": "boolean",
          },
          "enableMassEdit": Object {
            "anyOf": Array [
              Object {
                "additionalProperties": false,
                "properties": Object {
                  "ignoredFields": Object {
                    "artifactType": "Manifest",
                    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "items": Object {
                      "enum": Array [
                        "to_Customer_CustomerID",
                      ],
                      "type": "string",
                    },
                    "type": "array",
                    "uniqueItems": true,
                  },
                  "visibleFields": Object {
                    "artifactType": "Manifest",
                    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "items": Object {
                      "enum": Array [
                        "to_Customer_CustomerID",
                      ],
                      "type": "string",
                    },
                    "type": "array",
                    "uniqueItems": true,
                  },
                },
                "type": "object",
              },
              Object {
                "type": "boolean",
              },
            ],
            "artifactType": "Manifest",
            "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
          },
          "hierarchyQualifier": Object {
            "artifactType": "Manifest",
            "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
            "type": "string",
          },
          "initialLoad": Object {
            "$ref": "#/definitions/InitialLoadType",
            "artifactType": "Manifest",
            "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically, as defined by the standard variant
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/9f4e1192f1384b85bc160288e17f69c4",
          },
          "personalization": Object {
            "$ref": "#/definitions/PersonalizationType",
            "artifactType": "Manifest",
            "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
          },
          "quickVariantSelection": Object {
            "$ref": "#/definitions/QuickVariantSelectionV4",
            "artifactType": "Manifest",
            "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
          },
          "selectAll": Object {
            "artifactType": "Manifest",
            "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
            "type": "boolean",
          },
          "selectionLimit": Object {
            "artifactType": "Manifest",
            "description": "You can define how many items can be selected at a time using the selectionLimit.",
            "type": "number",
          },
          "selectionMode": Object {
            "$ref": "#/definitions/SelectionMode",
            "artifactType": "Manifest",
            "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/116b5d82e8c545e2a56e1b51b8b0a9bd",
          },
          "toolBar": Object {
            "$ref": "#/definitions/ToolBar<LineItemsOfSPV::LineItem>",
            "description": "Tool Bar",
          },
          "type": Object {
            "$ref": "#/definitions/TableTypeV4",
            "artifactType": "Manifest",
            "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
          },
          "views": Object {
            "$ref": "#/definitions/MultiTableModeV4",
          },
          "widthIncludingColumnHeader": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
            "type": "boolean",
          },
        },
        "propertyIndex": 3,
        "type": "object",
      },
      "text": "Table",
      "title": undefined,
      "type": undefined,
      "value": Object {},
    },
  ],
  "id": "outline-noderoot-node",
  "moveProps": undefined,
  "path": Array [],
  "properties": Array [
    Object {
      "artifactType": "Manifest",
      "description": "variantManagement defines how the variant management of page personalizations is controlled.
- None - No variant management by default.
- Control - Individual personalizations for each control.",
      "displayName": "Variant Management",
      "name": "variantManagement",
      "options": Array [
        Object {
          "key": "",
          "text": "",
        },
        Object {
          "key": "Control",
          "text": "Control",
        },
        Object {
          "key": "None",
          "text": "None",
        },
        Object {
          "key": "Page",
          "text": "Page",
        },
      ],
      "schema": Object {
        "artifactType": "Manifest",
        "description": "variantManagement defines how the variant management of page personalizations is controlled.
- None - No variant management by default.
- Control - Individual personalizations for each control.",
        "enum": Array [
          "Control",
          "None",
          "Page",
        ],
        "type": "string",
      },
      "schemaPath": Array [
        "variantManagement",
      ],
      "type": "string",
      "value": "Page",
    },
  ],
  "root": true,
  "schema": undefined,
  "text": "Root",
  "title": undefined,
  "type": "rootNode",
  "value": undefined,
}
`;

exports[`getTree getTree - ObjectPage page 1`] = `
Object {
  "additionalText": undefined,
  "annotationNodeId": Array [],
  "children": Array [
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-EditAction-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "EditAction",
              ],
              "properties": Array [],
              "schema": Object {
                "actionType": "Standard",
                "additionalProperties": true,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Container/Travel/@com.sap.vocabularies.UI.v1.UpdateHidden",
                "description": "Edit",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Action",
                    "value": "Edit",
                  },
                ],
                "propertyIndex": 0,
                "type": "object",
              },
              "text": "Edit",
              "title": "EditAction",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-DeleteAction-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "DeleteAction",
              ],
              "properties": Array [],
              "schema": Object {
                "actionType": "Standard",
                "additionalProperties": true,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Container/Travel/@com.sap.vocabularies.UI.v1.DeleteHidden",
                "description": "Delete",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Action",
                    "value": "Delete",
                  },
                ],
                "propertyIndex": 1,
                "type": "object",
              },
              "text": "Delete",
              "title": "DeleteAction",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Settings that control the behavior after creating a new entry.",
                  "displayName": "afterExecution",
                  "name": "afterExecution",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                      "displayName": "Navigate To Instance",
                      "name": "navigateToInstance",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                        "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                        "navigateToInstance",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                      "displayName": "Enable Auto Scroll",
                      "name": "enableAutoScroll",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                        "enableAutoScroll",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Settings that control the behavior after creating a new entry.",
                    "properties": Object {
                      "enableAutoScroll": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                        "type": "boolean",
                      },
                      "navigateToInstance": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                        "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                        "type": "boolean",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                    "afterExecution",
                  ],
                  "type": "object",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "actionType": "Annotation",
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/5",
                "dataType": "DataFieldForAction",
                "description": "Set To Booked",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Action",
                    "value": "setToBooked",
                  },
                ],
                "properties": Object {
                  "afterExecution": Object {
                    "$ref": "#/definitions/ActionAfterExecutionConfigurationObjectPageHeader",
                    "artifactType": "Manifest",
                    "description": "Settings that control the behavior after creating a new entry.",
                  },
                },
                "propertyIndex": 2,
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                "type": "object",
              },
              "text": "Set To Booked",
              "title": "setToBooked",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-HeaderAction-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": Array [
                  Object {
                    "allowedRanges": Array [
                      Object {
                        "from": 0,
                        "to": 0,
                      },
                      Object {
                        "from": 0,
                        "to": 8,
                      },
                    ],
                    "path": Array [
                      "header",
                      "actions",
                    ],
                  },
                ],
                "movable": true,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "HeaderAction",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                  "displayName": "Text",
                  "name": "text",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "HeaderAction",
                    "text",
                  ],
                  "type": "string",
                  "value": "HeaderAction",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Relevant for extension actions; allows the definition of a target action handler.",
                  "displayName": "Press",
                  "name": "press",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "HeaderAction",
                    "press",
                  ],
                  "type": "string",
                  "value": "project1.ext.controller.HeaderAction.HeaderAction",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines if the action button is visible.",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/isEditable}",
                      "{= !\${ui>/isEditable}}",
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "HeaderAction",
                    "visible",
                  ],
                  "type": "string",
                  "value": true,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines if the action is enabled. The default value is true.",
                  "displayName": "Enabled",
                  "name": "enabled",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/isEditable}",
                      "{= !\${ui>/isEditable}}",
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "HeaderAction",
                    "enabled",
                  ],
                  "type": "string",
                  "value": true,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the position of the action relative to the anchor action.",
                  "displayName": "position",
                  "name": "position",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The key of another action to be used as placement anchor.",
                      "displayName": "Anchor",
                      "name": "anchor",
                      "options": Array [
                        Object {
                          "key": "",
                          "reset": true,
                          "text": "",
                        },
                        Object {
                          "key": "EditAction",
                          "text": "EditAction",
                        },
                        Object {
                          "key": "DeleteAction",
                          "text": "DeleteAction",
                        },
                        Object {
                          "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        },
                        Object {
                          "key": "HeaderAction",
                          "text": "HeaderAction",
                        },
                        Object {
                          "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        },
                        Object {
                          "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        },
                        Object {
                          "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        },
                        Object {
                          "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another action to be used as placement anchor.",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "EditAction",
                            "description": "Edit",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DeleteAction",
                            "description": "Delete",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Set To Booked",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "HeaderAction",
                            "custom": true,
                            "description": "HeaderAction",
                            "hidden": true,
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Set To New",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Check Travel",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Create new Booking",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Deduct Discount",
                          },
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "HeaderAction",
                        "position",
                        "anchor",
                      ],
                      "type": "string",
                      "value": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Define the placement, either before or after the anchor action.",
                      "displayName": "Placement",
                      "name": "placement",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "After",
                          "text": "After",
                        },
                        Object {
                          "key": "Before",
                          "text": "Before",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor action.",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "HeaderAction",
                        "position",
                        "placement",
                      ],
                      "type": "string",
                      "value": "Before",
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the position of the action relative to the anchor action.",
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another action to be used as placement anchor.",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "EditAction",
                            "description": "Edit",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DeleteAction",
                            "description": "Delete",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Set To Booked",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "HeaderAction",
                            "custom": true,
                            "description": "HeaderAction",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Set To New",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Check Travel",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Create new Booking",
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "description": "Deduct Discount",
                          },
                        ],
                        "type": "string",
                      },
                      "placement": Object {
                        "$ref": "#/definitions/ActionPlacement",
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor action.",
                      },
                    },
                    "required": Array [
                      "placement",
                    ],
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "HeaderAction",
                    "position",
                  ],
                  "type": "object",
                  "value": Object {
                    "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                    "placement": "Before",
                  },
                },
              ],
              "schema": Object {
                "actionType": "Custom",
                "additionalProperties": false,
                "description": "HeaderAction",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "HeaderAction",
                  },
                ],
                "properties": Object {
                  "enabled": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                          "{ui>/isEditable}",
                          "{= !\${ui>/isEditable}}",
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines if the action is enabled. The default value is true.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "position": Object {
                    "$ref": "#/definitions/CustomHeaderActionPositionOP",
                    "artifactType": "Manifest",
                    "description": "Defines the position of the action relative to the anchor action.",
                  },
                  "press": Object {
                    "artifactType": "Manifest",
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "type": "string",
                  },
                  "text": Object {
                    "artifactType": "Manifest",
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "type": "string",
                  },
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                          "{ui>/isEditable}",
                          "{= !\${ui>/isEditable}}",
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines if the action button is visible.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                },
                "propertyIndex": 3,
                "required": Array [
                  "press",
                  "text",
                ],
                "type": "object",
              },
              "text": "HeaderAction",
              "title": "HeaderAction",
              "type": "customAction",
              "value": Object {
                "enabled": true,
                "position": Object {
                  "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                  "placement": "Before",
                },
                "press": "project1.ext.controller.HeaderAction.HeaderAction",
                "text": "HeaderAction",
                "visible": true,
              },
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Settings that control the behavior after creating a new entry.",
                  "displayName": "afterExecution",
                  "name": "afterExecution",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                      "displayName": "Navigate To Instance",
                      "name": "navigateToInstance",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                        "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                        "navigateToInstance",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                      "displayName": "Enable Auto Scroll",
                      "name": "enableAutoScroll",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                        "enableAutoScroll",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Settings that control the behavior after creating a new entry.",
                    "properties": Object {
                      "enableAutoScroll": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                        "type": "boolean",
                      },
                      "navigateToInstance": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                        "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                        "type": "boolean",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                    "afterExecution",
                  ],
                  "type": "object",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "actionType": "Annotation",
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/6",
                "dataType": "DataFieldForAction",
                "description": "Set To New",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Action",
                    "value": "setToNew",
                  },
                ],
                "properties": Object {
                  "afterExecution": Object {
                    "$ref": "#/definitions/ActionAfterExecutionConfigurationObjectPageHeader",
                    "artifactType": "Manifest",
                    "description": "Settings that control the behavior after creating a new entry.",
                  },
                },
                "propertyIndex": 4,
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                "type": "object",
              },
              "text": "Set To New",
              "title": "setToNew",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Settings that control the behavior after creating a new entry.",
                  "displayName": "afterExecution",
                  "name": "afterExecution",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                      "displayName": "Navigate To Instance",
                      "name": "navigateToInstance",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                        "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                        "navigateToInstance",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                      "displayName": "Enable Auto Scroll",
                      "name": "enableAutoScroll",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                        "enableAutoScroll",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Settings that control the behavior after creating a new entry.",
                    "properties": Object {
                      "enableAutoScroll": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                        "type": "boolean",
                      },
                      "navigateToInstance": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                        "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                        "type": "boolean",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                    "afterExecution",
                  ],
                  "type": "object",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "actionType": "Annotation",
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/7",
                "dataType": "DataFieldForAction",
                "description": "Check Travel",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Action",
                    "value": "Check",
                  },
                ],
                "properties": Object {
                  "afterExecution": Object {
                    "$ref": "#/definitions/ActionAfterExecutionConfigurationObjectPageHeader",
                    "artifactType": "Manifest",
                    "description": "Settings that control the behavior after creating a new entry.",
                  },
                },
                "propertyIndex": 5,
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                "type": "object",
              },
              "text": "Check Travel",
              "title": "Check",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Settings that control the behavior after creating a new entry.",
                  "displayName": "afterExecution",
                  "name": "afterExecution",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                      "displayName": "Navigate To Instance",
                      "name": "navigateToInstance",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                        "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                        "navigateToInstance",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                      "displayName": "Enable Auto Scroll",
                      "name": "enableAutoScroll",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                        "enableAutoScroll",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Settings that control the behavior after creating a new entry.",
                    "properties": Object {
                      "enableAutoScroll": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                        "type": "boolean",
                      },
                      "navigateToInstance": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                        "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                        "type": "boolean",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                    "afterExecution",
                  ],
                  "type": "object",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "actionType": "Annotation",
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/8",
                "dataType": "DataFieldForAction",
                "description": "Create new Booking",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Action",
                    "value": "createBookingDraft",
                  },
                ],
                "properties": Object {
                  "afterExecution": Object {
                    "$ref": "#/definitions/ActionAfterExecutionConfigurationObjectPageHeader",
                    "artifactType": "Manifest",
                    "description": "Settings that control the behavior after creating a new entry.",
                  },
                },
                "propertyIndex": 6,
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                "type": "object",
              },
              "text": "Create new Booking",
              "title": "createBookingDraft",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Settings that control the behavior after creating a new entry.",
                  "displayName": "afterExecution",
                  "name": "afterExecution",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                      "displayName": "Navigate To Instance",
                      "name": "navigateToInstance",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                        "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                        "navigateToInstance",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                      "displayName": "Enable Auto Scroll",
                      "name": "enableAutoScroll",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "afterExecution",
                        "enableAutoScroll",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Settings that control the behavior after creating a new entry.",
                    "properties": Object {
                      "enableAutoScroll": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                        "type": "boolean",
                      },
                      "navigateToInstance": Object {
                        "artifactType": "Manifest",
                        "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                        "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                        "type": "boolean",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                    "afterExecution",
                  ],
                  "type": "object",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "actionType": "Annotation",
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/9",
                "dataType": "DataFieldForAction",
                "description": "Deduct Discount",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Action",
                    "value": "deductDiscount",
                  },
                ],
                "properties": Object {
                  "afterExecution": Object {
                    "$ref": "#/definitions/ActionAfterExecutionConfigurationObjectPageHeader",
                    "artifactType": "Manifest",
                    "description": "Settings that control the behavior after creating a new entry.",
                  },
                },
                "propertyIndex": 7,
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                "type": "object",
              },
              "text": "Deduct Discount",
              "title": "deductDiscount",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-header-actions-RelatedApps-additionalSemanticObjects-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": undefined,
                  },
                  "path": Array [
                    "header",
                    "actions",
                    "RelatedApps",
                    "additionalSemanticObjects",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": Object {
                      "$ref": "#/definitions/AdditionalSemanticObject",
                    },
                    "artifactType": "Manifest",
                    "description": "Additional Semantic Objects.",
                    "isViewNode": true,
                    "type": "object",
                  },
                  "text": "Additional Semantic Objects.",
                  "title": undefined,
                  "type": undefined,
                  "value": undefined,
                },
              ],
              "id": "outline-node-header-actions-RelatedApps-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "RelatedApps",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Set showRelatedApps to true to show the navigation button for related apps.",
                  "displayName": "Show Related Apps",
                  "name": "showRelatedApps",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Set showRelatedApps to true to show the navigation button for related apps.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "RelatedApps",
                    "showRelatedApps",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "actionType": "Standard",
                "additionalProperties": false,
                "artifactType": "Manifest",
                "description": "Related Apps",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Action",
                    "value": "RelatedApps",
                  },
                ],
                "properties": Object {
                  "additionalSemanticObjects": Object {
                    "$ref": "#/definitions/AdditionalSemanticObjects",
                    "artifactType": "Manifest",
                    "description": "Additional Semantic Objects.",
                  },
                  "showRelatedApps": Object {
                    "artifactType": "Manifest",
                    "description": "Set showRelatedApps to true to show the navigation button for related apps.",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 8,
                "required": Array [
                  "additionalSemanticObjects",
                ],
                "type": "object",
              },
              "text": "Related Apps",
              "title": "RelatedApps",
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-header-actions-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "header",
            "actions",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/CustomHeaderActionOP",
            },
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification",
            "description": "Actions",
            "isViewNode": true,
            "properties": Object {
              "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                "$ref": "#/definitions/ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                "propertyIndex": 5,
              },
              "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                "$ref": "#/definitions/ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createBookingDraft::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                "propertyIndex": 6,
              },
              "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                "$ref": "#/definitions/ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                "propertyIndex": 7,
              },
              "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                "$ref": "#/definitions/ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                "propertyIndex": 2,
              },
              "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                "$ref": "#/definitions/ObjectPageHeaderAction<DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                "propertyIndex": 4,
              },
              "DeleteAction": Object {
                "$ref": "#/definitions/ObjectPageHeaderAction<DeleteAction>",
                "propertyIndex": 1,
              },
              "EditAction": Object {
                "$ref": "#/definitions/ObjectPageHeaderAction<EditAction>",
                "propertyIndex": 0,
              },
              "HeaderAction": Object {
                "$ref": "#/definitions/CustomHeaderActionOP",
                "actionType": "Custom",
                "description": "HeaderAction",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "HeaderAction",
                  },
                ],
                "propertyIndex": 3,
              },
              "RelatedApps": Object {
                "$ref": "#/definitions/RelatedApps",
                "actionType": "Standard",
                "artifactType": "Manifest",
                "description": "Related Apps",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Action",
                    "value": "RelatedApps",
                  },
                ],
                "propertyIndex": 8,
              },
            },
            "type": "object",
          },
          "text": "Actions",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "HeaderAction": Object {
              "enabled": true,
              "position": Object {
                "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "placement": "Before",
              },
              "press": "project1.ext.controller.HeaderAction.HeaderAction",
              "text": "HeaderAction",
              "visible": true,
            },
          },
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-header-sections-@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection-form-fields-node",
                      "moveProps": Object {
                        "allowedChildTypes": Array [
                          "fields",
                        ],
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "header",
                        "sections",
                        "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection",
                        "form",
                        "fields",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": false,
                        "description": "Fields",
                        "isViewNode": true,
                        "properties": Object {},
                        "type": "object",
                      },
                      "text": "Fields",
                      "title": undefined,
                      "type": undefined,
                      "value": undefined,
                    },
                  ],
                  "id": "outline-node-header-sections-@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection-form-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": undefined,
                  },
                  "path": Array [
                    "header",
                    "sections",
                    "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection",
                    "form",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection",
                    "description": "Form",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Target",
                        "value": "FieldGroup#HeaderFormSection",
                      },
                    ],
                    "properties": Object {
                      "fields": Object {
                        "$ref": "#/definitions/HeaderSectionFields<TravelType::Form::HeaderFormSection>",
                      },
                    },
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                    "type": "object",
                  },
                  "text": "Form",
                  "title": undefined,
                  "type": undefined,
                  "value": undefined,
                },
              ],
              "id": "outline-node-header-sections-@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "sections",
              },
              "path": Array [
                "header",
                "sections",
                "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
                  "displayName": "Stashed",
                  "name": "stashed",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection",
                    "stashed",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the key user adaptation behavior of the header facet.",
                  "displayName": "flexSettings",
                  "name": "flexSettings",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines which settings are available for key user adaptation at design time.",
                      "displayName": "Designtime",
                      "name": "designtime",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "Default",
                          "text": "Default",
                        },
                        Object {
                          "key": "not-adaptable",
                          "text": "not-adaptable",
                        },
                        Object {
                          "key": "not-adaptable-tree",
                          "text": "not-adaptable-tree",
                        },
                        Object {
                          "key": "not-adaptable-visibility",
                          "text": "not-adaptable-visibility",
                        },
                        Object {
                          "key": "not-removable",
                          "text": "not-removable",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Defines which settings are available for key user adaptation at design time.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/ccd45ba3f0b446a0901b2c9d42b8ad53",
                        "enum": Array [
                          "Default",
                          "not-adaptable",
                          "not-adaptable-tree",
                          "not-adaptable-visibility",
                          "not-removable",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "header",
                        "sections",
                        "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection",
                        "flexSettings",
                        "designtime",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the key user adaptation behavior of the header facet.",
                    "properties": Object {
                      "designtime": Object {
                        "$ref": "#/definitions/DesignTime",
                        "artifactType": "Manifest",
                        "description": "Defines which settings are available for key user adaptation at design time.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/ccd45ba3f0b446a0901b2c9d42b8ad53",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection",
                    "flexSettings",
                  ],
                  "type": "object",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.HeaderFacets/0",
                "description": "HeaderFormSection",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "ID",
                    "value": "HeaderFormSection",
                  },
                ],
                "properties": Object {
                  "flexSettings": Object {
                    "$ref": "#/definitions/FlexSettings",
                    "artifactType": "Manifest",
                    "description": "Defines the key user adaptation behavior of the header facet.",
                  },
                  "form": Object {
                    "$ref": "#/definitions/HeaderSectionForm<TravelType::Form::HeaderFormSection>",
                  },
                  "stashed": Object {
                    "artifactType": "Manifest",
                    "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 0,
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "title": "Facet ID: HeaderFormSection",
                "type": "object",
              },
              "text": "HeaderFormSection",
              "title": "HeaderFormSection",
              "type": undefined,
              "value": Object {},
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-sections-HeaderCustomSection-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": Array [],
                "movable": true,
                "type": "sections",
              },
              "path": Array [
                "header",
                "sections",
                "HeaderCustomSection",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Subtitle of header section.",
                  "displayName": "Sub Title",
                  "name": "subTitle",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Subtitle of header section.",
                    "i18nClassification": "TIT: Custom header section subtitle",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "HeaderCustomSection",
                    "subTitle",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "The fragment for the editable version of the header facet.",
                  "displayName": "Template Edit",
                  "name": "templateEdit",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The fragment for the editable version of the header facet.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "HeaderCustomSection",
                    "templateEdit",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the loading behavior of the Object Page header.",
                  "displayName": "Request Group Id",
                  "name": "requestGroupId",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Decoration",
                      "text": "Decoration",
                    },
                    Object {
                      "key": "Heroes",
                      "text": "Heroes",
                    },
                    Object {
                      "key": "LongRunners",
                      "text": "LongRunners",
                    },
                    Object {
                      "key": "Workers",
                      "text": "Workers",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines the loading behavior of the Object Page header.",
                    "enum": Array [
                      "Decoration",
                      "Heroes",
                      "LongRunners",
                      "Workers",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "HeaderCustomSection",
                    "requestGroupId",
                  ],
                  "type": "string",
                  "value": "Heroes",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines if the header facet is displayed in the header area.",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/isEditable}",
                      "{= !\${ui>/isEditable}}",
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "HeaderCustomSection",
                    "visible",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "The path to the XML template containing the section control.",
                  "displayName": "Fragment Name",
                  "name": "fragmentName",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The path to the XML template containing the section control.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "HeaderCustomSection",
                    "fragmentName",
                  ],
                  "type": "string",
                  "value": "project1.ext.fragment.HeaderCustomSection",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Use the key of another section as a placement anchor.",
                  "displayName": "Anchor",
                  "name": "relatedFacet",
                  "options": Array [
                    Object {
                      "key": "",
                      "reset": true,
                      "text": "",
                    },
                    Object {
                      "key": "HeaderFormSection",
                      "text": "HeaderFormSection",
                    },
                    Object {
                      "key": "HeaderCustomSection",
                      "text": "HeaderCustomSection",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Use the key of another section as a placement anchor.",
                    "displayName": "Anchor",
                    "oneOf": Array [
                      Object {
                        "bundle": "ui5",
                        "const": "HeaderFormSection",
                        "description": "HeaderFormSection",
                      },
                      Object {
                        "bundle": "ui5",
                        "const": "HeaderCustomSection",
                        "custom": true,
                        "description": "HeaderCustomSection",
                        "hidden": true,
                      },
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "HeaderCustomSection",
                    "relatedFacet",
                  ],
                  "type": "string",
                  "value": "HeaderFormSection",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Define the placement, either before or after the anchor section.",
                  "displayName": "Placement",
                  "name": "relativePosition",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "After",
                      "text": "After",
                    },
                    Object {
                      "key": "Before",
                      "text": "Before",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Define the placement, either before or after the anchor section.",
                    "displayName": "Placement",
                    "enum": Array [
                      "After",
                      "Before",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "HeaderCustomSection",
                    "relativePosition",
                  ],
                  "type": "string",
                  "value": "After",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "The label of a custom section, preferably as an i18n key.",
                  "displayName": "Title",
                  "name": "title",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The label of a custom section, preferably as an i18n key.",
                    "i18nClassification": "TIT: Custom section title",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "HeaderCustomSection",
                    "title",
                  ],
                  "type": "string",
                  "value": "HeaderCustomSection",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
                  "displayName": "Stashed",
                  "name": "stashed",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "HeaderCustomSection",
                    "stashed",
                  ],
                  "type": "boolean",
                  "value": false,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the key user adaptation behavior of the header facet.",
                  "displayName": "flexSettings",
                  "name": "flexSettings",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines which settings are available for key user adaptation at design time.",
                      "displayName": "Designtime",
                      "name": "designtime",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "Default",
                          "text": "Default",
                        },
                        Object {
                          "key": "not-adaptable",
                          "text": "not-adaptable",
                        },
                        Object {
                          "key": "not-adaptable-tree",
                          "text": "not-adaptable-tree",
                        },
                        Object {
                          "key": "not-adaptable-visibility",
                          "text": "not-adaptable-visibility",
                        },
                        Object {
                          "key": "not-removable",
                          "text": "not-removable",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Defines which settings are available for key user adaptation at design time.",
                        "enum": Array [
                          "Default",
                          "not-adaptable",
                          "not-adaptable-tree",
                          "not-adaptable-visibility",
                          "not-removable",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "header",
                        "sections",
                        "HeaderCustomSection",
                        "flexSettings",
                        "designtime",
                      ],
                      "type": "string",
                      "value": "Default",
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the key user adaptation behavior of the header facet.",
                    "properties": Object {
                      "designtime": Object {
                        "$ref": "#/definitions/DesignTime",
                        "artifactType": "Manifest",
                        "description": "Defines which settings are available for key user adaptation at design time.",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "HeaderCustomSection",
                    "flexSettings",
                  ],
                  "type": "object",
                  "value": Object {
                    "designtime": "Default",
                  },
                },
              ],
              "schema": Object {
                "actionType": "Custom",
                "additionalProperties": false,
                "description": "HeaderCustomSection",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "HeaderCustomSection",
                  },
                ],
                "properties": Object {
                  "flexSettings": Object {
                    "$ref": "#/definitions/ObjectPageCustomHeaderSectionFlexSettings",
                    "artifactType": "Manifest",
                    "description": "Defines the key user adaptation behavior of the header facet.",
                  },
                  "fragmentName": Object {
                    "artifactType": "Manifest",
                    "description": "The path to the XML template containing the section control.",
                    "type": "string",
                  },
                  "relatedFacet": Object {
                    "artifactType": "Manifest",
                    "description": "Use the key of another section as a placement anchor.",
                    "displayName": "Anchor",
                    "oneOf": Array [
                      Object {
                        "bundle": "ui5",
                        "const": "HeaderFormSection",
                        "description": "HeaderFormSection",
                      },
                      Object {
                        "bundle": "ui5",
                        "const": "HeaderCustomSection",
                        "custom": true,
                        "description": "HeaderCustomSection",
                      },
                    ],
                    "type": "string",
                  },
                  "relativePosition": Object {
                    "$ref": "#/definitions/SectionPosition",
                    "artifactType": "Manifest",
                    "description": "Define the placement, either before or after the anchor section.",
                  },
                  "requestGroupId": Object {
                    "$ref": "#/definitions/RequestGroupId",
                    "artifactType": "Manifest",
                    "description": "Defines the loading behavior of the Object Page header.",
                  },
                  "stashed": Object {
                    "artifactType": "Manifest",
                    "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
                    "type": "boolean",
                  },
                  "subTitle": Object {
                    "artifactType": "Manifest",
                    "description": "Subtitle of header section.",
                    "i18nClassification": "TIT: Custom header section subtitle",
                    "type": "string",
                  },
                  "templateEdit": Object {
                    "artifactType": "Manifest",
                    "description": "The fragment for the editable version of the header facet.",
                    "type": "string",
                  },
                  "title": Object {
                    "artifactType": "Manifest",
                    "description": "The label of a custom section, preferably as an i18n key.",
                    "i18nClassification": "TIT: Custom section title",
                    "type": "string",
                  },
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                          "{ui>/isEditable}",
                          "{= !\${ui>/isEditable}}",
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines if the header facet is displayed in the header area.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                },
                "propertyIndex": 1,
                "required": Array [
                  "fragmentName",
                  "title",
                ],
                "type": "object",
              },
              "text": "HeaderCustomSection",
              "title": undefined,
              "type": "customSection",
              "value": Object {
                "flexSettings": Object {
                  "designtime": "Default",
                },
                "fragmentName": "project1.ext.fragment.HeaderCustomSection",
                "relatedFacet": "HeaderFormSection",
                "relativePosition": "After",
                "requestGroupId": "Heroes",
                "stashed": false,
                "title": "HeaderCustomSection",
              },
            },
          ],
          "id": "outline-node-header-sections-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "sections",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "sections",
          },
          "path": Array [
            "header",
            "sections",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/ObjectPageCustomHeaderSectionFragment",
            },
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.HeaderFacets",
            "description": "Header Sections",
            "isViewNode": true,
            "properties": Object {
              "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection": Object {
                "$ref": "#/definitions/ObjectPageHeaderSectionForm<@com.sap.vocabularies.UI.v1.FieldGroup::HeaderFormSection>",
                "propertyIndex": 0,
              },
              "HeaderCustomSection": Object {
                "$ref": "#/definitions/ObjectPageCustomHeaderSectionFragment",
                "actionType": "Custom",
                "description": "HeaderCustomSection",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "HeaderCustomSection",
                  },
                ],
                "propertyIndex": 1,
              },
            },
            "type": "object",
          },
          "text": "Header Sections",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection": Object {},
            "HeaderCustomSection": Object {
              "flexSettings": Object {
                "designtime": "Default",
              },
              "fragmentName": "project1.ext.fragment.HeaderCustomSection",
              "relatedFacet": "HeaderFormSection",
              "relativePosition": "After",
              "requestGroupId": "Heroes",
              "stashed": false,
              "title": "HeaderCustomSection",
            },
          },
        },
      ],
      "id": "outline-node-header-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "header",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Set editableHeaderContent to true to make the header fields editable.",
          "displayName": "Editable Header Content",
          "name": "editableHeaderContent",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Set editableHeaderContent to true to make the header fields editable.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "header",
            "editableHeaderContent",
          ],
          "type": "boolean",
          "value": false,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Set visible to true to make the header visible.",
          "displayName": "Visible",
          "name": "visible",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Set visible to true to make the header visible.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "header",
            "visible",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines whether the anchor bar is displayed.",
          "displayName": "Anchor Bar Visible",
          "name": "anchorBarVisible",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the anchor bar is displayed.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "header",
            "anchorBarVisible",
          ],
          "type": "boolean",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.HeaderInfo",
        "description": "Header",
        "isViewNode": true,
        "properties": Object {
          "actions": Object {
            "$ref": "#/definitions/ObjectPageHeaderActions",
          },
          "anchorBarVisible": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the anchor bar is displayed.",
            "type": "boolean",
          },
          "editableHeaderContent": Object {
            "artifactType": "Manifest",
            "description": "Set editableHeaderContent to true to make the header fields editable.",
            "type": "boolean",
          },
          "sections": Object {
            "$ref": "#/definitions/HeaderSections",
          },
          "visible": Object {
            "artifactType": "Manifest",
            "description": "Set visible to true to make the header visible.",
            "type": "boolean",
          },
        },
        "propertyIndex": 0,
        "type": "object",
      },
      "text": "Header",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "actions": Object {
          "HeaderAction": Object {
            "enabled": true,
            "position": Object {
              "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
              "placement": "Before",
            },
            "press": "project1.ext.controller.HeaderAction.HeaderAction",
            "text": "HeaderAction",
            "visible": true,
          },
        },
        "editableHeaderContent": false,
        "sections": Object {
          "@com.sap.vocabularies.UI.v1.FieldGroup#HeaderFormSection": Object {},
          "HeaderCustomSection": Object {
            "flexSettings": Object {
              "designtime": "Default",
            },
            "fragmentName": "project1.ext.fragment.HeaderCustomSection",
            "relatedFacet": "HeaderFormSection",
            "relativePosition": "After",
            "requestGroupId": "Heroes",
            "stashed": false,
            "title": "HeaderCustomSection",
          },
        },
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [],
      "id": "outline-node-layout-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "layout",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Defines the layout of the sections.
- Page (default): In this mode, all the sections and subsections are added to the same page.
- Tabs: In this mode, the sections are represented as tabs under the header facet.",
          "displayName": "Section Layout",
          "name": "sectionLayout",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "Page",
              "text": "Page",
            },
            Object {
              "key": "Tabs",
              "text": "Tabs",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Defines the layout of the sections.
- Page (default): In this mode, all the sections and subsections are added to the same page.
- Tabs: In this mode, the sections are represented as tabs under the header facet.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/facfea09018d4376acaceddb7e3f03b6",
            "enum": Array [
              "Page",
              "Tabs",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "layout",
            "sectionLayout",
          ],
          "type": "string",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "description": "Page Layout",
        "isViewNode": true,
        "properties": Object {
          "sectionLayout": Object {
            "$ref": "#/definitions/SectionLayoutType",
            "artifactType": "Manifest",
            "description": "Defines the layout of the sections.
- Page (default): In this mode, all the sections and subsections are added to the same page.
- Tabs: In this mode, the sections are represented as tabs under the header facet.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/facfea09018d4376acaceddb7e3f03b6",
          },
        },
        "propertyIndex": 1,
        "type": "object",
      },
      "text": "Page Layout",
      "title": undefined,
      "type": undefined,
      "value": Object {},
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-DataField::TravelID-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.Identification",
                        "form",
                        "fields",
                        "DataField::TravelID",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/0",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "TravelID",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "TravelID",
                          },
                        ],
                        "properties": Object {},
                        "propertyIndex": 0,
                        "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "type": "object",
                      },
                      "text": "TravelID",
                      "title": "TravelID",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-DataField::BookingFee-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.Identification",
                        "form",
                        "fields",
                        "DataField::BookingFee",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/1",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Decimal",
                        "description": "BookingFee",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "BookingFee",
                          },
                        ],
                        "properties": Object {},
                        "propertyIndex": 1,
                        "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "type": "object",
                      },
                      "text": "BookingFee",
                      "title": "BookingFee",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-DataField::TotalPrice-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.Identification",
                        "form",
                        "fields",
                        "DataField::TotalPrice",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/2",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Decimal",
                        "description": "TotalPrice",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "TotalPrice",
                          },
                        ],
                        "properties": Object {},
                        "propertyIndex": 2,
                        "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "type": "object",
                      },
                      "text": "TotalPrice",
                      "title": "TotalPrice",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-DataField::Memo-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.Identification",
                        "form",
                        "fields",
                        "DataField::Memo",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/3",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "Comment",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "Memo",
                          },
                        ],
                        "properties": Object {},
                        "propertyIndex": 3,
                        "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "type": "object",
                      },
                      "text": "Comment",
                      "title": "Memo",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-DataField::Status-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.Identification",
                        "form",
                        "fields",
                        "DataField::Status",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/4",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "Status",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "Status",
                          },
                        ],
                        "properties": Object {},
                        "propertyIndex": 4,
                        "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "type": "object",
                      },
                      "text": "Status",
                      "title": "Status",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-DataFieldForAnnotation::ConnectedFields::connected-DataField::AgencyName-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "fields",
                          },
                          "path": Array [
                            "sections",
                            "@com.sap.vocabularies.UI.v1.Identification",
                            "form",
                            "fields",
                            "DataFieldForAnnotation::ConnectedFields::connected",
                            "DataField::AgencyName",
                          ],
                          "properties": Array [],
                          "schema": Object {
                            "additionalProperties": false,
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.ConnectedFields#connected/Data/AgencyName",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                            "dataType": "String",
                            "description": "AgencyName",
                            "isViewNode": true,
                            "keys": Array [
                              Object {
                                "name": "Value",
                                "value": "AgencyName",
                              },
                            ],
                            "properties": Object {},
                            "propertyIndex": 0,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "type": "object",
                          },
                          "text": "AgencyName",
                          "title": "AgencyName",
                          "type": undefined,
                          "value": undefined,
                        },
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-DataFieldForAnnotation::ConnectedFields::connected-DataField::CurrencyCode-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "fields",
                          },
                          "path": Array [
                            "sections",
                            "@com.sap.vocabularies.UI.v1.Identification",
                            "form",
                            "fields",
                            "DataFieldForAnnotation::ConnectedFields::connected",
                            "DataField::CurrencyCode",
                          ],
                          "properties": Array [],
                          "schema": Object {
                            "additionalProperties": false,
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.ConnectedFields#connected/Data/CurrencyCode",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                            "dataType": "String",
                            "description": "CurrencyCode",
                            "isViewNode": true,
                            "keys": Array [
                              Object {
                                "name": "Value",
                                "value": "CurrencyCode",
                              },
                            ],
                            "properties": Object {},
                            "propertyIndex": 1,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "type": "object",
                          },
                          "text": "CurrencyCode",
                          "title": "CurrencyCode",
                          "type": undefined,
                          "value": undefined,
                        },
                      ],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-DataFieldForAnnotation::ConnectedFields::connected-node",
                      "moveProps": Object {
                        "allowedChildTypes": Array [
                          "fields",
                        ],
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.Identification",
                        "form",
                        "fields",
                        "DataFieldForAnnotation::ConnectedFields::connected",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/10",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAnnotation",
                        "dataType": "ConnectedFields",
                        "description": "connected field",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Target",
                            "value": "@UI.ConnectedFields#connected",
                          },
                        ],
                        "properties": Object {
                          "DataField::AgencyName": Object {
                            "$ref": "#/definitions/ConnectedFields::connected::DataField::AgencyName",
                            "propertyIndex": 0,
                          },
                          "DataField::CurrencyCode": Object {
                            "$ref": "#/definitions/ConnectedFields::connected::DataField::CurrencyCode",
                            "propertyIndex": 1,
                          },
                        },
                        "propertyIndex": 10,
                        "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "type": "object",
                      },
                      "text": "connected field",
                      "title": "ConnectedFields/connected",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-DataFieldForAnnotation::Contact::contact-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.Identification",
                        "form",
                        "fields",
                        "DataFieldForAnnotation::Contact::contact",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/11",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAnnotation",
                        "dataType": "Contact",
                        "description": "Contact Name",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Target",
                            "value": "@Communication.Contact#contact",
                          },
                        ],
                        "properties": Object {},
                        "propertyIndex": 11,
                        "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "type": "object",
                      },
                      "text": "Contact Name",
                      "title": "Contact/contact",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-DataFieldForAnnotation::ConnectedFields::connected1-DataField::BeginDate-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "fields",
                          },
                          "path": Array [
                            "sections",
                            "@com.sap.vocabularies.UI.v1.Identification",
                            "form",
                            "fields",
                            "DataFieldForAnnotation::ConnectedFields::connected1",
                            "DataField::BeginDate",
                          ],
                          "properties": Array [],
                          "schema": Object {
                            "additionalProperties": false,
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.ConnectedFields#connected1/Data/BeginDate",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                            "dataType": "Date",
                            "description": "BeginDate",
                            "isViewNode": true,
                            "keys": Array [
                              Object {
                                "name": "Value",
                                "value": "BeginDate",
                              },
                            ],
                            "properties": Object {},
                            "propertyIndex": 0,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "type": "object",
                          },
                          "text": "BeginDate",
                          "title": "BeginDate",
                          "type": undefined,
                          "value": undefined,
                        },
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-DataFieldForAnnotation::ConnectedFields::connected1-DataField::LastChangedAtTravel-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "fields",
                          },
                          "path": Array [
                            "sections",
                            "@com.sap.vocabularies.UI.v1.Identification",
                            "form",
                            "fields",
                            "DataFieldForAnnotation::ConnectedFields::connected1",
                            "DataField::LastChangedAtTravel",
                          ],
                          "properties": Array [],
                          "schema": Object {
                            "additionalProperties": false,
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.ConnectedFields#connected1/Data/LastChangedAtTravel",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                            "dataType": "DateTimeOffset",
                            "description": "Zeitstempel",
                            "isViewNode": true,
                            "keys": Array [
                              Object {
                                "name": "Value",
                                "value": "LastChangedAtTravel",
                              },
                            ],
                            "properties": Object {},
                            "propertyIndex": 1,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "type": "object",
                          },
                          "text": "Zeitstempel",
                          "title": "LastChangedAtTravel",
                          "type": undefined,
                          "value": undefined,
                        },
                      ],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-DataFieldForAnnotation::ConnectedFields::connected1-node",
                      "moveProps": Object {
                        "allowedChildTypes": Array [
                          "fields",
                        ],
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.Identification",
                        "form",
                        "fields",
                        "DataFieldForAnnotation::ConnectedFields::connected1",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification/12",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAnnotation",
                        "dataType": "ConnectedFields",
                        "description": "connected field 2",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Target",
                            "value": "@UI.ConnectedFields#connected1",
                          },
                        ],
                        "properties": Object {
                          "DataField::BeginDate": Object {
                            "$ref": "#/definitions/ConnectedFields::connected1::DataField::BeginDate",
                            "propertyIndex": 0,
                          },
                          "DataField::LastChangedAtTravel": Object {
                            "$ref": "#/definitions/ConnectedFields::connected1::DataField::LastChangedAtTravel",
                            "propertyIndex": 1,
                          },
                        },
                        "propertyIndex": 12,
                        "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "type": "object",
                      },
                      "text": "connected field 2",
                      "title": "ConnectedFields/connected1",
                      "type": undefined,
                      "value": undefined,
                    },
                  ],
                  "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-fields-node",
                  "moveProps": Object {
                    "allowedChildTypes": Array [
                      "fields",
                    ],
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "fields",
                  },
                  "path": Array [
                    "sections",
                    "@com.sap.vocabularies.UI.v1.Identification",
                    "form",
                    "fields",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": false,
                    "description": "Fields",
                    "isViewNode": true,
                    "properties": Object {
                      "DataField::BookingFee": Object {
                        "$ref": "#/definitions/TravelType::Identification::DataField::BookingFee",
                        "propertyIndex": 1,
                      },
                      "DataField::Memo": Object {
                        "$ref": "#/definitions/TravelType::Identification::DataField::Memo",
                        "propertyIndex": 3,
                      },
                      "DataField::Status": Object {
                        "$ref": "#/definitions/TravelType::Identification::DataField::Status",
                        "propertyIndex": 4,
                      },
                      "DataField::TotalPrice": Object {
                        "$ref": "#/definitions/TravelType::Identification::DataField::TotalPrice",
                        "propertyIndex": 2,
                      },
                      "DataField::TravelID": Object {
                        "$ref": "#/definitions/TravelType::Identification::DataField::TravelID",
                        "propertyIndex": 0,
                      },
                      "DataFieldForAnnotation::ConnectedFields::connected": Object {
                        "$ref": "#/definitions/TravelType::Identification::DataFieldForAnnotation::ConnectedFields::connected",
                        "propertyIndex": 10,
                      },
                      "DataFieldForAnnotation::ConnectedFields::connected1": Object {
                        "$ref": "#/definitions/TravelType::Identification::DataFieldForAnnotation::ConnectedFields::connected1",
                        "propertyIndex": 12,
                      },
                      "DataFieldForAnnotation::Contact::contact": Object {
                        "$ref": "#/definitions/TravelType::Identification::DataFieldForAnnotation::Contact::contact",
                        "propertyIndex": 11,
                      },
                    },
                    "type": "object",
                  },
                  "text": "Fields",
                  "title": undefined,
                  "type": undefined,
                  "value": undefined,
                },
              ],
              "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-form-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "sections",
                "@com.sap.vocabularies.UI.v1.Identification",
                "form",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification",
                "description": "Form",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Target",
                    "value": "Identification",
                  },
                ],
                "properties": Object {
                  "fields": Object {
                    "$ref": "#/definitions/SectionFields<TravelType::Identification>",
                  },
                },
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "type": "object",
              },
              "text": "Form",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.Identification-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": "sections",
          },
          "path": Array [
            "sections",
            "@com.sap.vocabularies.UI.v1.Identification",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/0",
            "description": "Travel - Managed with Semantic Key",
            "isViewNode": true,
            "keys": Array [
              Object {
                "name": "ID",
                "value": "Travel",
              },
            ],
            "properties": Object {
              "form": Object {
                "$ref": "#/definitions/SectionForm<TravelType::Identification>",
              },
            },
            "propertyIndex": 0,
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
            "title": "Facet ID: Travel",
            "type": "object",
          },
          "text": "Travel - Managed with Semantic Key",
          "title": "Travel",
          "type": undefined,
          "value": undefined,
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-CustomSection-controls-FilterBar-filterFields-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "CustomSection",
                        "controls",
                        "FilterBar",
                        "filterFields",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": Object {
                          "$ref": "#/definitions/sap.fe.macros.filterBar.FilterField",
                        },
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.SelectionFields#filterBarMacro",
                        "isViewNode": true,
                        "metadata": Object {
                          "path": Array [],
                          "type": "Aggregation",
                        },
                        "properties": Object {},
                        "type": "object",
                      },
                      "text": "Filter Fields",
                      "title": undefined,
                      "type": undefined,
                      "value": undefined,
                    },
                  ],
                  "id": "outline-node-sections-CustomSection-controls-FilterBar-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": undefined,
                  },
                  "path": Array [
                    "sections",
                    "CustomSection",
                    "controls",
                    "FilterBar",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Defines the path of the context used in the current page or block.
This setting is defined by the framework.",
                      "displayName": "Context Path",
                      "name": "contextPath",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines the path of the context used in the current page or block.
This setting is defined by the framework.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "controls",
                        "FilterBar",
                        "contextPath",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "If true, the search is triggered automatically when a filter value is changed.",
                      "displayName": "Live Mode",
                      "name": "liveMode",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "If true, the search is triggered automatically when a filter value is changed.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "controls",
                        "FilterBar",
                        "liveMode",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Defines the relative path of the property in the metamodel, based on the current contextPath.",
                      "displayName": "Meta Path",
                      "name": "metaPath",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines the relative path of the property in the metamodel, based on the current contextPath.",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 119,
                            "endLine": 4,
                            "endOffset": 263,
                            "startColumn": 42,
                            "startLine": 4,
                            "startOffset": 186,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "controls",
                        "FilterBar",
                        "metaPath",
                      ],
                      "type": "string",
                      "value": "_Booking/@com.sap.vocabularies.UI.v1.SelectionFields#filterBarMacro",
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Handles the visibility of the 'Clear' button on the FilterBar.",
                      "displayName": "Show Clear Button",
                      "name": "showClearButton",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Handles the visibility of the 'Clear' button on the FilterBar.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "controls",
                        "FilterBar",
                        "showClearButton",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Displays possible errors during the search in a message box",
                      "displayName": "Show Messages",
                      "name": "showMessages",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Displays possible errors during the search in a message box",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "controls",
                        "FilterBar",
                        "showMessages",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Parameter which sets the visibility of the FilterBar building block",
                      "displayName": "Visible",
                      "name": "visible",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Parameter which sets the visibility of the FilterBar building block",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "controls",
                        "FilterBar",
                        "visible",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "Unique id of control",
                      "displayName": "Id",
                      "name": "id",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 40,
                            "endLine": 4,
                            "endOffset": 184,
                            "startColumn": 27,
                            "startLine": 4,
                            "startOffset": 171,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "controls",
                        "FilterBar",
                        "id",
                      ],
                      "type": "string",
                      "value": "FilterBar",
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "This event is fired when the 'Clear' button is pressed. This is only possible when the 'Clear' button is enabled.",
                      "displayName": "After Clear",
                      "name": "afterClear",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "This event is fired when the 'Clear' button is pressed. This is only possible when the 'Clear' button is enabled.",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "controls",
                        "FilterBar",
                        "afterClear",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "This event is fired after either a filter value or the visibility of a filter item has been changed. The event contains conditions that will be used as filters.",
                      "displayName": "Filter Changed",
                      "name": "filterChanged",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "This event is fired after either a filter value or the visibility of a filter item has been changed. The event contains conditions that will be used as filters.",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "controls",
                        "FilterBar",
                        "filterChanged",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "XMLProperty",
                      "description": "This event is fired when the 'Go' button is pressed or after a condition change.",
                      "displayName": "Search",
                      "name": "search",
                      "schema": Object {
                        "artifactType": "XMLProperty",
                        "description": "This event is fired when the 'Go' button is pressed or after a condition change.",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "controls",
                        "FilterBar",
                        "search",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "description": "FilterBar #FilterBar",
                    "isViewNode": true,
                    "metadata": Object {
                      "controlName": "sap.fe.macros.FilterBar",
                      "internalId": "8f180c2b-a8fb-45e2-841d-5e949596a988",
                      "path": Array [
                        Object {
                          "index": 0,
                          "name": "VBox",
                        },
                        Object {
                          "index": 1,
                          "name": "macros:FilterBar",
                        },
                      ],
                      "position": Object {
                        "endColumn": 121,
                        "endLine": 4,
                        "endOffset": 265,
                        "startColumn": 9,
                        "startLine": 4,
                        "startOffset": 153,
                      },
                      "type": "Control",
                    },
                    "properties": Object {
                      "afterClear": Object {
                        "artifactType": "XMLProperty",
                        "description": "This event is fired when the 'Clear' button is pressed. This is only possible when the 'Clear' button is enabled.",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "contextPath": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines the path of the context used in the current page or block.
This setting is defined by the framework.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "filterChanged": Object {
                        "artifactType": "XMLProperty",
                        "description": "This event is fired after either a filter value or the visibility of a filter item has been changed. The event contains conditions that will be used as filters.",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "filterFields": Object {
                        "additionalProperties": Object {
                          "$ref": "#/definitions/sap.fe.macros.filterBar.FilterField",
                        },
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.SelectionFields#filterBarMacro",
                        "isViewNode": true,
                        "metadata": Object {
                          "path": Array [],
                          "type": "Aggregation",
                        },
                        "properties": Object {},
                        "type": "object",
                      },
                      "id": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 40,
                            "endLine": 4,
                            "endOffset": 184,
                            "startColumn": 27,
                            "startLine": 4,
                            "startOffset": 171,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "liveMode": Object {
                        "artifactType": "XMLProperty",
                        "description": "If true, the search is triggered automatically when a filter value is changed.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "metaPath": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines the relative path of the property in the metamodel, based on the current contextPath.",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 119,
                            "endLine": 4,
                            "endOffset": 263,
                            "startColumn": 42,
                            "startLine": 4,
                            "startOffset": 186,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "search": Object {
                        "artifactType": "XMLProperty",
                        "description": "This event is fired when the 'Go' button is pressed or after a condition change.",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "showClearButton": Object {
                        "artifactType": "XMLProperty",
                        "description": "Handles the visibility of the 'Clear' button on the FilterBar.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "showMessages": Object {
                        "artifactType": "XMLProperty",
                        "description": "Displays possible errors during the search in a message box",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "visible": Object {
                        "artifactType": "XMLProperty",
                        "description": "Parameter which sets the visibility of the FilterBar building block",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                    },
                    "propertyIndex": 1,
                    "type": "object",
                  },
                  "text": "FilterBar #FilterBar",
                  "title": undefined,
                  "type": undefined,
                  "value": Object {
                    "id": "FilterBar",
                    "metaPath": "_Booking/@com.sap.vocabularies.UI.v1.SelectionFields#filterBarMacro",
                  },
                },
              ],
              "id": "outline-node-sections-CustomSection-controls-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "sections",
                "CustomSection",
                "controls",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "description": "Custom Extension Fragment",
                "metadata": Object {
                  "filePath": "ext\\\\fragment\\\\CustomSection.fragment.xml",
                },
                "properties": Object {
                  "$filePath": Object {
                    "hidden": true,
                    "type": "string",
                  },
                  "$schema": Object {
                    "hidden": true,
                    "type": "string",
                  },
                  "FilterBar": Object {
                    "description": "FilterBar #FilterBar",
                    "isViewNode": true,
                    "metadata": Object {
                      "controlName": "sap.fe.macros.FilterBar",
                      "internalId": "8f180c2b-a8fb-45e2-841d-5e949596a988",
                      "path": Array [
                        Object {
                          "index": 0,
                          "name": "VBox",
                        },
                        Object {
                          "index": 1,
                          "name": "macros:FilterBar",
                        },
                      ],
                      "position": Object {
                        "endColumn": 121,
                        "endLine": 4,
                        "endOffset": 265,
                        "startColumn": 9,
                        "startLine": 4,
                        "startOffset": 153,
                      },
                      "type": "Control",
                    },
                    "properties": Object {
                      "afterClear": Object {
                        "artifactType": "XMLProperty",
                        "description": "This event is fired when the 'Clear' button is pressed. This is only possible when the 'Clear' button is enabled.",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "contextPath": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines the path of the context used in the current page or block.
This setting is defined by the framework.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "filterChanged": Object {
                        "artifactType": "XMLProperty",
                        "description": "This event is fired after either a filter value or the visibility of a filter item has been changed. The event contains conditions that will be used as filters.",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "filterFields": Object {
                        "additionalProperties": Object {
                          "$ref": "#/definitions/sap.fe.macros.filterBar.FilterField",
                        },
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.SelectionFields#filterBarMacro",
                        "isViewNode": true,
                        "metadata": Object {
                          "path": Array [],
                          "type": "Aggregation",
                        },
                        "properties": Object {},
                        "type": "object",
                      },
                      "id": Object {
                        "artifactType": "XMLProperty",
                        "description": "Unique id of control",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 40,
                            "endLine": 4,
                            "endOffset": 184,
                            "startColumn": 27,
                            "startLine": 4,
                            "startOffset": 171,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "liveMode": Object {
                        "artifactType": "XMLProperty",
                        "description": "If true, the search is triggered automatically when a filter value is changed.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "metaPath": Object {
                        "artifactType": "XMLProperty",
                        "description": "Defines the relative path of the property in the metamodel, based on the current contextPath.",
                        "metadata": Object {
                          "position": Object {
                            "endColumn": 119,
                            "endLine": 4,
                            "endOffset": 263,
                            "startColumn": 42,
                            "startLine": 4,
                            "startOffset": 186,
                          },
                          "type": "Property",
                        },
                        "type": "string",
                      },
                      "search": Object {
                        "artifactType": "XMLProperty",
                        "description": "This event is fired when the 'Go' button is pressed or after a condition change.",
                        "metadata": Object {
                          "type": "Event",
                        },
                        "type": "string",
                      },
                      "showClearButton": Object {
                        "artifactType": "XMLProperty",
                        "description": "Handles the visibility of the 'Clear' button on the FilterBar.",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "showMessages": Object {
                        "artifactType": "XMLProperty",
                        "description": "Displays possible errors during the search in a message box",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                      "visible": Object {
                        "artifactType": "XMLProperty",
                        "description": "Parameter which sets the visibility of the FilterBar building block",
                        "metadata": Object {
                          "type": "Property",
                        },
                        "type": "boolean",
                      },
                    },
                    "propertyIndex": 1,
                    "type": "object",
                  },
                },
              },
              "text": undefined,
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-sections-CustomSection-actions-CustomSectionAction-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": Array [],
                    "movable": true,
                    "type": "actions",
                  },
                  "path": Array [
                    "sections",
                    "CustomSection",
                    "actions",
                    "CustomSectionAction",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                      "displayName": "Text",
                      "name": "text",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                        "i18nClassification": "COL: Custom action text",
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "actions",
                        "CustomSectionAction",
                        "text",
                      ],
                      "type": "string",
                      "value": "CustomSectionAction",
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Relevant for extension actions; allows the definition of a target action handler.",
                      "displayName": "Press",
                      "name": "press",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Relevant for extension actions; allows the definition of a target action handler.",
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "actions",
                        "CustomSectionAction",
                        "press",
                      ],
                      "type": "string",
                      "value": "project1.ext.controller.CustomSectionAction.CustomSectionAction",
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines if the action button is visible.",
                      "displayName": "Visible",
                      "name": "visible",
                      "schema": Object {
                        "enum": Array [
                          false,
                          true,
                          "{ui>/isEditable}",
                          "{= !\${ui>/isEditable}}",
                        ],
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "actions",
                        "CustomSectionAction",
                        "visible",
                      ],
                      "type": "string",
                      "value": true,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines if the action is enabled. The default value is true.",
                      "displayName": "Enabled",
                      "name": "enabled",
                      "schema": Object {
                        "enum": Array [
                          false,
                          true,
                          "{ui>/isEditable}",
                          "{= !\${ui>/isEditable}}",
                        ],
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "actions",
                        "CustomSectionAction",
                        "enabled",
                      ],
                      "type": "string",
                      "value": true,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines the position of the action relative to the anchor action.",
                      "displayName": "position",
                      "name": "position",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "The key of another action to be used as placement anchor.",
                          "displayName": "Anchor",
                          "name": "anchor",
                          "options": Array [
                            Object {
                              "key": "",
                              "reset": true,
                              "text": "",
                            },
                            Object {
                              "key": "CustomSectionAction",
                              "text": "CustomSectionAction",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "The key of another action to be used as placement anchor.",
                            "oneOf": Array [
                              Object {
                                "bundle": "ui5",
                                "const": "CustomSectionAction",
                                "custom": true,
                                "description": "CustomSectionAction",
                                "hidden": true,
                              },
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "CustomSection",
                            "actions",
                            "CustomSectionAction",
                            "position",
                            "anchor",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Define the placement, either before or after the anchor action.",
                          "displayName": "Placement",
                          "name": "placement",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "After",
                              "text": "After",
                            },
                            Object {
                              "key": "Before",
                              "text": "Before",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Define the placement, either before or after the anchor action.",
                            "enum": Array [
                              "After",
                              "Before",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "CustomSection",
                            "actions",
                            "CustomSectionAction",
                            "position",
                            "placement",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Defines the position of the action relative to the anchor action.",
                        "properties": Object {
                          "anchor": Object {
                            "artifactType": "Manifest",
                            "description": "The key of another action to be used as placement anchor.",
                            "oneOf": Array [
                              Object {
                                "bundle": "ui5",
                                "const": "CustomSectionAction",
                                "custom": true,
                                "description": "CustomSectionAction",
                              },
                            ],
                            "type": "string",
                          },
                          "placement": Object {
                            "$ref": "#/definitions/ActionPlacement",
                            "artifactType": "Manifest",
                            "description": "Define the placement, either before or after the anchor action.",
                          },
                        },
                        "required": Array [
                          "placement",
                        ],
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "sections",
                        "CustomSection",
                        "actions",
                        "CustomSectionAction",
                        "position",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "actionType": "Custom",
                    "additionalProperties": false,
                    "description": "CustomSectionAction",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Key",
                        "value": "CustomSectionAction",
                      },
                    ],
                    "properties": Object {
                      "enabled": Object {
                        "anyOf": Array [
                          Object {
                            "enum": Array [
                              false,
                              true,
                              "{ui>/isEditable}",
                              "{= !\${ui>/isEditable}}",
                            ],
                          },
                          Object {
                            "type": "string",
                          },
                        ],
                        "artifactType": "Manifest",
                        "description": "Defines if the action is enabled. The default value is true.",
                        "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                      },
                      "position": Object {
                        "$ref": "#/definitions/CustomSectionActionPositionOP<CustomSection>",
                        "artifactType": "Manifest",
                        "description": "Defines the position of the action relative to the anchor action.",
                      },
                      "press": Object {
                        "artifactType": "Manifest",
                        "description": "Relevant for extension actions; allows the definition of a target action handler.",
                        "type": "string",
                      },
                      "text": Object {
                        "artifactType": "Manifest",
                        "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                        "i18nClassification": "COL: Custom action text",
                        "type": "string",
                      },
                      "visible": Object {
                        "anyOf": Array [
                          Object {
                            "enum": Array [
                              false,
                              true,
                              "{ui>/isEditable}",
                              "{= !\${ui>/isEditable}}",
                            ],
                          },
                          Object {
                            "type": "string",
                          },
                        ],
                        "artifactType": "Manifest",
                        "description": "Defines if the action button is visible.",
                        "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                      },
                    },
                    "propertyIndex": 0,
                    "required": Array [
                      "press",
                      "text",
                    ],
                    "type": "object",
                  },
                  "text": "CustomSectionAction",
                  "title": "CustomSectionAction",
                  "type": "customAction",
                  "value": Object {
                    "enabled": true,
                    "press": "project1.ext.controller.CustomSectionAction.CustomSectionAction",
                    "text": "CustomSectionAction",
                    "visible": true,
                  },
                },
              ],
              "id": "outline-node-sections-CustomSection-actions-node",
              "moveProps": Object {
                "allowedChildTypes": Array [
                  "actions",
                ],
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "sections",
                "CustomSection",
                "actions",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/CustomSectionActionOP<CustomSection>",
                },
                "description": "Actions",
                "isViewNode": true,
                "properties": Object {
                  "CustomSectionAction": Object {
                    "$ref": "#/definitions/CustomSectionActionOP<CustomSection>",
                    "actionType": "Custom",
                    "description": "CustomSectionAction",
                    "keys": Array [
                      Object {
                        "name": "Key",
                        "value": "CustomSectionAction",
                      },
                    ],
                    "propertyIndex": 0,
                  },
                },
                "type": "object",
              },
              "text": "Actions",
              "title": undefined,
              "type": undefined,
              "value": Object {
                "CustomSectionAction": Object {
                  "enabled": true,
                  "press": "project1.ext.controller.CustomSectionAction.CustomSectionAction",
                  "text": "CustomSectionAction",
                  "visible": true,
                },
              },
            },
          ],
          "id": "outline-node-sections-CustomSection-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": Array [],
            "movable": true,
            "type": "sections",
          },
          "path": Array [
            "sections",
            "CustomSection",
          ],
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "The path to the XML template containing the section control.",
              "displayName": "Fragment Name",
              "name": "fragmentName",
              "schema": Object {
                "artifactType": "Manifest",
                "description": "The path to the XML template containing the section control.",
                "type": "string",
              },
              "schemaPath": Array [
                "sections",
                "CustomSection",
                "fragmentName",
              ],
              "type": "string",
              "value": "project1.ext.fragment.CustomSection",
            },
            Object {
              "artifactType": "Manifest",
              "description": "Use the key of another section as a placement anchor.",
              "displayName": "Anchor",
              "name": "relatedFacet",
              "options": Array [
                Object {
                  "key": "",
                  "reset": true,
                  "text": "",
                },
                Object {
                  "key": "Travel",
                  "text": "Travel",
                },
                Object {
                  "key": "CustomSection",
                  "text": "CustomSection",
                },
                Object {
                  "key": "Booking",
                  "text": "Booking",
                },
                Object {
                  "key": "GroupSection",
                  "text": "GroupSection",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Use the key of another section as a placement anchor.",
                "displayName": "Anchor",
                "oneOf": Array [
                  Object {
                    "bundle": "ui5",
                    "const": "Travel",
                    "description": "Travel - Managed with Semantic Key",
                  },
                  Object {
                    "bundle": "ui5",
                    "const": "CustomSection",
                    "custom": true,
                    "description": "CustomSection",
                    "hidden": true,
                  },
                  Object {
                    "bundle": "ui5",
                    "const": "Booking",
                    "description": "Booking",
                  },
                  Object {
                    "bundle": "ui5",
                    "const": "GroupSection",
                    "description": "Group Section",
                  },
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "sections",
                "CustomSection",
                "relatedFacet",
              ],
              "type": "string",
              "value": "Travel",
            },
            Object {
              "artifactType": "Manifest",
              "description": "Define the placement, either before or after the anchor section.",
              "displayName": "Placement",
              "name": "relativePosition",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "After",
                  "text": "After",
                },
                Object {
                  "key": "Before",
                  "text": "Before",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Define the placement, either before or after the anchor section.",
                "displayName": "Placement",
                "enum": Array [
                  "After",
                  "Before",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "sections",
                "CustomSection",
                "relativePosition",
              ],
              "type": "string",
              "value": "After",
            },
            Object {
              "artifactType": "Manifest",
              "description": "The label of a custom section, preferably as an i18n key.",
              "displayName": "Title",
              "name": "title",
              "schema": Object {
                "artifactType": "Manifest",
                "description": "The label of a custom section, preferably as an i18n key.",
                "i18nClassification": "TIT: Custom section title",
                "type": "string",
              },
              "schemaPath": Array [
                "sections",
                "CustomSection",
                "title",
              ],
              "type": "string",
              "value": "CustomSection",
            },
          ],
          "schema": Object {
            "actionType": "Custom",
            "additionalProperties": false,
            "description": "CustomSection",
            "isViewNode": true,
            "keys": Array [
              Object {
                "name": "Key",
                "value": "CustomSection",
              },
            ],
            "properties": Object {
              "actions": Object {
                "$ref": "#/definitions/ObjectPageCustomSectionActions<CustomSection>",
              },
              "controls": Object {
                "type": "object",
              },
              "fragmentName": Object {
                "artifactType": "Manifest",
                "description": "The path to the XML template containing the section control.",
                "type": "string",
              },
              "relatedFacet": Object {
                "artifactType": "Manifest",
                "description": "Use the key of another section as a placement anchor.",
                "displayName": "Anchor",
                "oneOf": Array [
                  Object {
                    "bundle": "ui5",
                    "const": "Travel",
                    "description": "Travel - Managed with Semantic Key",
                  },
                  Object {
                    "bundle": "ui5",
                    "const": "CustomSection",
                    "custom": true,
                    "description": "CustomSection",
                  },
                  Object {
                    "bundle": "ui5",
                    "const": "Booking",
                    "description": "Booking",
                  },
                  Object {
                    "bundle": "ui5",
                    "const": "GroupSection",
                    "description": "Group Section",
                  },
                ],
                "type": "string",
              },
              "relativePosition": Object {
                "$ref": "#/definitions/SectionPosition",
                "artifactType": "Manifest",
                "description": "Define the placement, either before or after the anchor section.",
              },
              "title": Object {
                "artifactType": "Manifest",
                "description": "The label of a custom section, preferably as an i18n key.",
                "i18nClassification": "TIT: Custom section title",
                "type": "string",
              },
            },
            "propertyIndex": 1,
            "required": Array [
              "fragmentName",
              "title",
            ],
            "type": "object",
          },
          "text": "CustomSection",
          "title": undefined,
          "type": "customSection",
          "value": Object {
            "actions": Object {
              "CustomSectionAction": Object {
                "enabled": true,
                "press": "project1.ext.controller.CustomSectionAction.CustomSectionAction",
                "text": "CustomSectionAction",
                "visible": true,
              },
            },
            "controls": Object {
              "FilterBar": Object {
                "id": "FilterBar",
                "metaPath": "_Booking/@com.sap.vocabularies.UI.v1.SelectionFields#filterBarMacro",
              },
            },
            "fragmentName": "project1.ext.fragment.CustomSection",
            "relatedFacet": "Travel",
            "relativePosition": "After",
            "title": "CustomSection",
          },
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-table-toolBar-actions-node",
                      "moveProps": Object {
                        "allowedChildTypes": Array [
                          "actions",
                        ],
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "actions",
                      },
                      "path": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "toolBar",
                        "actions",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": Object {
                          "$ref": "#/definitions/CustomTableActionOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                        },
                        "description": "Actions",
                        "isViewNode": true,
                        "properties": Object {},
                        "type": "object",
                      },
                      "text": "Actions",
                      "title": undefined,
                      "type": undefined,
                      "value": Object {},
                    },
                  ],
                  "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-table-toolBar-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": undefined,
                  },
                  "path": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "toolBar",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem",
                    "description": "Tool Bar",
                    "isViewNode": true,
                    "properties": Object {
                      "actions": Object {
                        "$ref": "#/definitions/Actions<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                      },
                    },
                    "required": Array [
                      "actions",
                    ],
                    "type": "object",
                  },
                  "text": "Tool Bar",
                  "title": undefined,
                  "type": undefined,
                  "value": Object {
                    "actions": Object {},
                  },
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-table-columns-DataField::BookingID-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "columns",
                        "DataField::BookingID",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::BookingID",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::BookingID",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::BookingID",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/0",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "BookingID",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "BookingID",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 0,
                        "type": "object",
                      },
                      "text": "BookingID",
                      "title": "BookingID",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-table-columns-DataField::BookingDate-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "columns",
                        "DataField::BookingDate",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::BookingDate",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::BookingDate",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::BookingDate",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/1",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Date",
                        "description": "BookingDate",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "BookingDate",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 1,
                        "type": "object",
                      },
                      "text": "BookingDate",
                      "title": "BookingDate",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-table-columns-CustomColumns-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": Array [],
                        "movable": true,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "columns",
                        "CustomColumns",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
                          "displayName": "Header",
                          "name": "header",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
                            "i18nClassification": "COL: Custom column header text",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "CustomColumns",
                            "header",
                          ],
                          "type": "string",
                          "value": "CustomColumns",
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "CustomColumns",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines a target fragment.",
                          "displayName": "Template",
                          "name": "template",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines a target fragment.",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "CustomColumns",
                            "template",
                          ],
                          "type": "string",
                          "value": "project1.ext.fragment.CustomColumns",
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Aligns the header as well as the content horizontally.",
                          "displayName": "Horizontal Align",
                          "name": "horizontalAlign",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Begin",
                              "text": "Begin",
                            },
                            Object {
                              "key": "Center",
                              "text": "Center",
                            },
                            Object {
                              "key": "End",
                              "text": "End",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Aligns the header as well as the content horizontally.",
                            "enum": Array [
                              "Begin",
                              "Center",
                              "End",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "CustomColumns",
                            "horizontalAlign",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
- Default: it will be shown by default in the table.
- Adaptation: it will initially not be shown in the table but be available via end user adaptation
- Hidden: the column is neither available in the table nor in adaptation",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
- Default: it will be shown by default in the table.
- Adaptation: it will initially not be shown in the table but be available via end user adaptation
- Hidden: the column is neither available in the table nor in adaptation",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "CustomColumns",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines the position of the column relative to the anchor column.",
                          "displayName": "position",
                          "name": "position",
                          "properties": Array [
                            Object {
                              "artifactType": "Manifest",
                              "description": "The key of another column to be used as placement anchor.",
                              "displayName": "Anchor",
                              "name": "anchor",
                              "options": Array [
                                Object {
                                  "key": "",
                                  "text": "",
                                },
                                Object {
                                  "key": "DataField::BookingID",
                                  "text": "DataField::BookingID",
                                },
                                Object {
                                  "key": "DataField::BookingDate",
                                  "text": "DataField::BookingDate",
                                },
                                Object {
                                  "key": "DataField::CustomerID",
                                  "text": "DataField::CustomerID",
                                },
                                Object {
                                  "key": "DataField::AirlineID",
                                  "text": "DataField::AirlineID",
                                },
                                Object {
                                  "key": "DataField::ConnectionID",
                                  "text": "DataField::ConnectionID",
                                },
                                Object {
                                  "key": "DataField::FlightDate",
                                  "text": "DataField::FlightDate",
                                },
                                Object {
                                  "key": "DataField::FlightPrice",
                                  "text": "DataField::FlightPrice",
                                },
                                Object {
                                  "key": "CustomColumns",
                                  "text": "CustomColumns",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "The key of another column to be used as placement anchor.",
                                "enum": Array [
                                  "DataField::BookingID",
                                  "DataField::BookingDate",
                                  "DataField::CustomerID",
                                  "DataField::AirlineID",
                                  "DataField::ConnectionID",
                                  "DataField::FlightDate",
                                  "DataField::FlightPrice",
                                  "CustomColumns",
                                ],
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "sections",
                                "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                                "table",
                                "columns",
                                "CustomColumns",
                                "position",
                                "anchor",
                              ],
                              "type": "string",
                              "value": "DataField::BookingDate",
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Define the placement, either before or after the anchor column.",
                              "displayName": "Placement",
                              "name": "placement",
                              "options": Array [
                                Object {
                                  "key": "",
                                  "text": "",
                                },
                                Object {
                                  "key": "After",
                                  "text": "After",
                                },
                                Object {
                                  "key": "Before",
                                  "text": "Before",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Define the placement, either before or after the anchor column.",
                                "enum": Array [
                                  "After",
                                  "Before",
                                ],
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "sections",
                                "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                                "table",
                                "columns",
                                "CustomColumns",
                                "position",
                                "placement",
                              ],
                              "type": "string",
                              "value": "After",
                            },
                          ],
                          "schema": Object {
                            "additionalProperties": false,
                            "artifactType": "Manifest",
                            "description": "Defines the position of the column relative to the anchor column.",
                            "properties": Object {
                              "anchor": Object {
                                "artifactType": "Manifest",
                                "description": "The key of another column to be used as placement anchor.",
                                "enum": Array [
                                  "DataField::BookingID",
                                  "DataField::BookingDate",
                                  "CustomColumns",
                                  "DataField::CustomerID",
                                  "DataField::AirlineID",
                                  "DataField::ConnectionID",
                                  "DataField::FlightDate",
                                  "DataField::FlightPrice",
                                ],
                                "type": "string",
                              },
                              "placement": Object {
                                "$ref": "#/definitions/Placement",
                                "artifactType": "Manifest",
                                "description": "Define the placement, either before or after the anchor column.",
                              },
                            },
                            "required": Array [
                              "placement",
                            ],
                            "type": "object",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "CustomColumns",
                            "position",
                          ],
                          "type": "object",
                          "value": Object {
                            "anchor": "DataField::BookingDate",
                            "placement": "After",
                          },
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.
Once clicked, a list of properties that can be sorted by are displayed.",
                          "displayName": "properties",
                          "name": "properties",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.
Once clicked, a list of properties that can be sorted by are displayed.",
                            "items": Object {
                              "enum": Array [
                                "BookingID",
                                "BookingDate",
                                "CustomerID",
                                "AirlineID",
                                "ConnectionID",
                                "FlightDate",
                                "FlightPrice",
                              ],
                              "type": "string",
                            },
                            "type": "array",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "CustomColumns",
                            "properties",
                          ],
                          "type": "object",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "actionType": "Custom",
                        "additionalProperties": false,
                        "description": "CustomColumns",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Key",
                            "value": "CustomColumns",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
- Default: it will be shown by default in the table.
- Adaptation: it will initially not be shown in the table but be available via end user adaptation
- Hidden: the column is neither available in the table nor in adaptation",
                          },
                          "header": Object {
                            "artifactType": "Manifest",
                            "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
                            "i18nClassification": "COL: Custom column header text",
                            "type": "string",
                          },
                          "horizontalAlign": Object {
                            "$ref": "#/definitions/HorizontalAlign",
                            "artifactType": "Manifest",
                            "description": "Aligns the header as well as the content horizontally.",
                          },
                          "position": Object {
                            "$ref": "#/definitions/PositionOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                            "artifactType": "Manifest",
                            "description": "Defines the position of the column relative to the anchor column.",
                          },
                          "properties": Object {
                            "artifactType": "Manifest",
                            "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.
Once clicked, a list of properties that can be sorted by are displayed.",
                            "items": Object {
                              "enum": Array [
                                "BookingID",
                                "BookingDate",
                                "CustomerID",
                                "AirlineID",
                                "ConnectionID",
                                "FlightDate",
                                "FlightPrice",
                              ],
                              "type": "string",
                            },
                            "type": "array",
                          },
                          "template": Object {
                            "artifactType": "Manifest",
                            "description": "Defines a target fragment.",
                            "type": "string",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                        },
                        "propertyIndex": 2,
                        "required": Array [
                          "header",
                          "template",
                        ],
                        "type": "object",
                      },
                      "text": "CustomColumns",
                      "title": "CustomColumns",
                      "type": "customColumn",
                      "value": Object {
                        "header": "CustomColumns",
                        "position": Object {
                          "anchor": "DataField::BookingDate",
                          "placement": "After",
                        },
                        "template": "project1.ext.fragment.CustomColumns",
                      },
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-table-columns-DataField::CustomerID-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "columns",
                        "DataField::CustomerID",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::CustomerID",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::CustomerID",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::CustomerID",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/2",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "Kunden ID",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "CustomerID",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 3,
                        "type": "object",
                      },
                      "text": "Kunden ID",
                      "title": "CustomerID",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-table-columns-DataField::AirlineID-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "columns",
                        "DataField::AirlineID",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::AirlineID",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::AirlineID",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::AirlineID",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/3",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "AirlineID",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "AirlineID",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 4,
                        "type": "object",
                      },
                      "text": "AirlineID",
                      "title": "AirlineID",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-table-columns-DataField::ConnectionID-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "columns",
                        "DataField::ConnectionID",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::ConnectionID",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::ConnectionID",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::ConnectionID",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/4",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "ConnectionID",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "ConnectionID",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 5,
                        "type": "object",
                      },
                      "text": "ConnectionID",
                      "title": "ConnectionID",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-table-columns-DataField::FlightDate-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "columns",
                        "DataField::FlightDate",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::FlightDate",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::FlightDate",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::FlightDate",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/5",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Date",
                        "description": "FlightDate",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "FlightDate",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 6,
                        "type": "object",
                      },
                      "text": "FlightDate",
                      "title": "FlightDate",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-table-columns-DataField::FlightPrice-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "columns",
                        "DataField::FlightPrice",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::FlightPrice",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::FlightPrice",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "sections",
                            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                            "table",
                            "columns",
                            "DataField::FlightPrice",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/6",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Decimal",
                        "description": "FlightPrice",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "FlightPrice",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 7,
                        "type": "object",
                      },
                      "text": "FlightPrice",
                      "title": "FlightPrice",
                      "type": undefined,
                      "value": undefined,
                    },
                  ],
                  "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-table-columns-node",
                  "moveProps": Object {
                    "allowedChildTypes": Array [
                      "actions",
                    ],
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "columns",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": Object {
                      "$ref": "#/definitions/TableCustomColumnOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    },
                    "description": "Columns",
                    "isViewNode": true,
                    "properties": Object {
                      "CustomColumns": Object {
                        "$ref": "#/definitions/TableCustomColumnOP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                        "actionType": "Custom",
                        "description": "CustomColumns",
                        "keys": Array [
                          Object {
                            "name": "Key",
                            "value": "CustomColumns",
                          },
                        ],
                        "propertyIndex": 2,
                      },
                      "DataField::AirlineID": Object {
                        "$ref": "#/definitions/ObjectPageTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/3",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "AirlineID",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "AirlineID",
                          },
                        ],
                        "propertyIndex": 4,
                      },
                      "DataField::BookingDate": Object {
                        "$ref": "#/definitions/ObjectPageTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/1",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Date",
                        "description": "BookingDate",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "BookingDate",
                          },
                        ],
                        "propertyIndex": 1,
                      },
                      "DataField::BookingID": Object {
                        "$ref": "#/definitions/ObjectPageTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/0",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "BookingID",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "BookingID",
                          },
                        ],
                        "propertyIndex": 0,
                      },
                      "DataField::ConnectionID": Object {
                        "$ref": "#/definitions/ObjectPageTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/4",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "ConnectionID",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "ConnectionID",
                          },
                        ],
                        "propertyIndex": 5,
                      },
                      "DataField::CustomerID": Object {
                        "$ref": "#/definitions/ObjectPageTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/2",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "Kunden ID",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "CustomerID",
                          },
                        ],
                        "propertyIndex": 3,
                      },
                      "DataField::FlightDate": Object {
                        "$ref": "#/definitions/ObjectPageTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/5",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Date",
                        "description": "FlightDate",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "FlightDate",
                          },
                        ],
                        "propertyIndex": 6,
                      },
                      "DataField::FlightPrice": Object {
                        "$ref": "#/definitions/ObjectPageTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem/6",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Decimal",
                        "description": "FlightPrice",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "FlightPrice",
                          },
                        ],
                        "propertyIndex": 7,
                      },
                    },
                    "type": "object",
                  },
                  "text": "Columns",
                  "title": undefined,
                  "type": undefined,
                  "value": Object {
                    "CustomColumns": Object {
                      "header": "CustomColumns",
                      "position": Object {
                        "anchor": "DataField::BookingDate",
                        "placement": "After",
                      },
                      "template": "project1.ext.fragment.CustomColumns",
                    },
                  },
                },
              ],
              "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-table-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "sections",
                "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                "table",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                  "displayName": "Type",
                  "name": "type",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "AnalyticalTable",
                      "text": "AnalyticalTable",
                    },
                    Object {
                      "key": "GridTable",
                      "text": "GridTable",
                    },
                    Object {
                      "key": "ResponsiveTable",
                      "text": "ResponsiveTable",
                    },
                    Object {
                      "key": "TreeTable",
                      "text": "TreeTable",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "const": "AnalyticalTable",
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                    "enum": Array [
                      "AnalyticalTable",
                      "GridTable",
                      "ResponsiveTable",
                      "TreeTable",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "type",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Enables full screen mode for this table. This adds a button to the table toolbar which opens the table in a full screen dialog.",
                  "displayName": "Enable Full Screen",
                  "name": "enableFullScreen",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Enables full screen mode for this table. This adds a button to the table toolbar which opens the table in a full screen dialog.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "enableFullScreen",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
                  "displayName": "Enable Paste",
                  "name": "enablePaste",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "enablePaste",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                  "displayName": "Enable Mass Edit",
                  "name": "enableMassEdit",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "enableMassEdit",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
                  "displayName": "Selection Mode",
                  "name": "selectionMode",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Auto",
                      "text": "Auto",
                    },
                    Object {
                      "key": "Multi",
                      "text": "Multi",
                    },
                    Object {
                      "key": "None",
                      "text": "None",
                    },
                    Object {
                      "key": "Single",
                      "text": "Single",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
                    "enum": Array [
                      "Auto",
                      "Multi",
                      "None",
                      "Single",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "selectionMode",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                  "displayName": "Select All",
                  "name": "selectAll",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "selectAll",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "You can define how many items can be selected at a time using the selectionLimit.",
                  "displayName": "Selection Limit",
                  "name": "selectionLimit",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "selectionLimit",
                  ],
                  "type": "number",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                  "displayName": "Enable Export",
                  "name": "enableExport",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "enableExport",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Determines whether the content density for ui.table is condensed.",
                  "displayName": "Condensed Table Layout",
                  "name": "condensedTableLayout",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "condensedTableLayout",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                  "displayName": "Hierarchy Qualifier",
                  "name": "hierarchyQualifier",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "hierarchyQualifier",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                  "displayName": "Disable Copy To Clipboard",
                  "name": "disableCopyToClipboard",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "disableCopyToClipboard",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines how the table handles the visible rows. Does not apply to responsive tables. Allowed values are Auto and Fixed.
 - Fixed: The table always has as many rows as defined in the rowCount property.
 - Auto (default): The number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the rowCount property.",
                  "displayName": "Row Count Mode",
                  "name": "rowCountMode",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Auto",
                      "text": "Auto",
                    },
                    Object {
                      "key": "Fixed",
                      "text": "Fixed",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines how the table handles the visible rows. Does not apply to responsive tables. Allowed values are Auto and Fixed.
 - Fixed: The table always has as many rows as defined in the rowCount property.
 - Auto (default): The number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the rowCount property.",
                    "enum": Array [
                      "Auto",
                      "Fixed",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "rowCountMode",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Number of rows to be displayed in the table.",
                  "displayName": "Row Count",
                  "name": "rowCount",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Number of rows to be displayed in the table.",
                    "minimum": 0,
                    "type": "number",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "rowCount",
                  ],
                  "type": "number",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the page behavior when a new record is created.",
                  "displayName": "creationMode",
                  "name": "creationMode",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The name property of TableCreationMode defines the creation mode; possible values are:
- NewPage: The create action leads to a new page.
- InlineCreationRows: No create button will be rendered, an empty row is directly given.
- Inline: The create action leads to a new row at the table (not recommended, use InlineCreationRows instead).
The default is \\"NewPage\\".",
                      "displayName": "Name",
                      "name": "name",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "Inline",
                          "text": "Inline",
                        },
                        Object {
                          "key": "InlineCreationRows",
                          "text": "InlineCreationRows",
                        },
                        Object {
                          "key": "NewPage",
                          "text": "NewPage",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The name property of TableCreationMode defines the creation mode; possible values are:
- NewPage: The create action leads to a new page.
- InlineCreationRows: No create button will be rendered, an empty row is directly given.
- Inline: The create action leads to a new row at the table (not recommended, use InlineCreationRows instead).
The default is \\"NewPage\\".",
                        "enum": Array [
                          "Inline",
                          "InlineCreationRows",
                          "NewPage",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "creationMode",
                        "name",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "In case of inline creation mode you can decide if the new row will be created at the end of the table, or direcly after the currently selected table. The default value is \\"true\\".",
                      "displayName": "Create At End",
                      "name": "createAtEnd",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "In case of inline creation mode you can decide if the new row will be created at the end of the table, or direcly after the currently selected table. The default value is \\"true\\".",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "creationMode",
                        "createAtEnd",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Supported starting SAPUI5 version 1.111.0, If set to 'true', the empty rows will be hidden when editing an existing object. Selecting the table's Create button will display the empty rows. The default value is \\"true\\".",
                      "displayName": "Inline Creation Rows Hidden In Edit Mode",
                      "name": "inlineCreationRowsHiddenInEditMode",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Supported starting SAPUI5 version 1.111.0, If set to 'true', the empty rows will be hidden when editing an existing object. Selecting the table's Create button will display the empty rows. The default value is \\"true\\".",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "creationMode",
                        "inlineCreationRowsHiddenInEditMode",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the page behavior when a new record is created.",
                    "properties": Object {
                      "createAtEnd": Object {
                        "artifactType": "Manifest",
                        "description": "In case of inline creation mode you can decide if the new row will be created at the end of the table, or direcly after the currently selected table. The default value is \\"true\\".",
                        "type": "boolean",
                      },
                      "inlineCreationRowsHiddenInEditMode": Object {
                        "artifactType": "Manifest",
                        "description": "Supported starting SAPUI5 version 1.111.0, If set to 'true', the empty rows will be hidden when editing an existing object. Selecting the table's Create button will display the empty rows. The default value is \\"true\\".",
                        "type": "boolean",
                      },
                      "name": Object {
                        "$ref": "#/definitions/TableCreationModeType",
                        "artifactType": "Manifest",
                        "description": "The name property of TableCreationMode defines the creation mode; possible values are:
- NewPage: The create action leads to a new page.
- InlineCreationRows: No create button will be rendered, an empty row is directly given.
- Inline: The create action leads to a new row at the table (not recommended, use InlineCreationRows instead).
The default is \\"NewPage\\".",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "creationMode",
                  ],
                  "type": "object",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                  "displayName": "personalization",
                  "name": "personalization",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines whether the user can add and remove columns to a given table.",
                      "displayName": "Column",
                      "name": "column",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can add and remove columns to a given table.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "personalization",
                        "column",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines whether the user can sort a given table.",
                      "displayName": "Sort",
                      "name": "sort",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can sort a given table.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "personalization",
                        "sort",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines whether the user can filter data of a given table.",
                      "displayName": "Filter",
                      "name": "filter",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can filter data of a given table.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "personalization",
                        "filter",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                    "properties": Object {
                      "column": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can add and remove columns to a given table.",
                        "type": "boolean",
                      },
                      "filter": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can filter data of a given table.",
                        "type": "boolean",
                      },
                      "sort": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can sort a given table.",
                        "type": "boolean",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "personalization",
                  ],
                  "type": "object",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "With quickVariantSelection, you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                  "displayName": "quickVariantSelection",
                  "name": "quickVariantSelection",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.",
                      "displayName": "Hide Table Title",
                      "name": "hideTableTitle",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "quickVariantSelection",
                        "hideTableTitle",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
                      "displayName": "Show Counts",
                      "name": "showCounts",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "quickVariantSelection",
                        "showCounts",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "List of annotation paths referring to SelectionVariant annotations.",
                      "displayName": "paths",
                      "name": "paths",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "List of annotation paths referring to SelectionVariant annotations.",
                        "items": Object {
                          "$ref": "#/definitions/AnnotationPathAsObject<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                        },
                        "type": "array",
                      },
                      "schemaPath": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "quickVariantSelection",
                        "paths",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "With quickVariantSelection, you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                    "properties": Object {
                      "hideTableTitle": Object {
                        "artifactType": "Manifest",
                        "description": "You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.",
                        "type": "boolean",
                      },
                      "paths": Object {
                        "artifactType": "Manifest",
                        "description": "List of annotation paths referring to SelectionVariant annotations.",
                        "items": Object {
                          "$ref": "#/definitions/AnnotationPathAsObject<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                        },
                        "type": "array",
                      },
                      "showCounts": Object {
                        "artifactType": "Manifest",
                        "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
                        "type": "boolean",
                      },
                    },
                    "required": Array [
                      "paths",
                    ],
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "quickVariantSelection",
                  ],
                  "type": "object",
                  "value": undefined,
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "enableMassEdit",
                  "name": "enableMassEdit",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                      "displayName": "visibleFields",
                      "name": "visibleFields",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                        "items": Object {
                          "enum": Array [
                            "BookingID",
                            "BookingDate",
                            "CustomerID",
                            "AirlineID",
                            "ConnectionID",
                            "FlightDate",
                            "FlightPrice",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                        "uniqueItems": true,
                      },
                      "schemaPath": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "enableMassEdit",
                        "visibleFields",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                      "displayName": "ignoredFields",
                      "name": "ignoredFields",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                        "items": Object {
                          "enum": Array [
                            "BookingID",
                            "BookingDate",
                            "CustomerID",
                            "AirlineID",
                            "ConnectionID",
                            "FlightDate",
                            "FlightPrice",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                        "uniqueItems": true,
                      },
                      "schemaPath": Array [
                        "sections",
                        "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                        "table",
                        "enableMassEdit",
                        "ignoredFields",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "ignoredFields": Object {
                        "artifactType": "Manifest",
                        "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                        "items": Object {
                          "enum": Array [
                            "BookingID",
                            "BookingDate",
                            "CustomerID",
                            "AirlineID",
                            "ConnectionID",
                            "FlightDate",
                            "FlightPrice",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                        "uniqueItems": true,
                      },
                      "visibleFields": Object {
                        "artifactType": "Manifest",
                        "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                        "items": Object {
                          "enum": Array [
                            "BookingID",
                            "BookingDate",
                            "CustomerID",
                            "AirlineID",
                            "ConnectionID",
                            "FlightDate",
                            "FlightPrice",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                        "uniqueItems": true,
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "sections",
                    "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                    "table",
                    "enableMassEdit",
                  ],
                  "type": "object",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem",
                "controlProperty": "type",
                "description": "Table",
                "isViewNode": true,
                "properties": Object {
                  "columns": Object {
                    "$ref": "#/definitions/_Booking::@com.sap.vocabularies.UI.v1.LineItem",
                  },
                  "condensedTableLayout": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
                    "type": "boolean",
                  },
                  "creationMode": Object {
                    "$ref": "#/definitions/TableCreationModeOP",
                    "artifactType": "Manifest",
                    "description": "Defines the page behavior when a new record is created.",
                  },
                  "disableCopyToClipboard": Object {
                    "artifactType": "Manifest",
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "enableExport": Object {
                    "artifactType": "Manifest",
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
                    "type": "boolean",
                  },
                  "enableFullScreen": Object {
                    "artifactType": "Manifest",
                    "description": "Enables full screen mode for this table. This adds a button to the table toolbar which opens the table in a full screen dialog.",
                    "type": "boolean",
                  },
                  "enableMassEdit": Object {
                    "anyOf": Array [
                      Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "ignoredFields": Object {
                            "artifactType": "Manifest",
                            "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                            "items": Object {
                              "enum": Array [
                                "BookingID",
                                "BookingDate",
                                "CustomerID",
                                "AirlineID",
                                "ConnectionID",
                                "FlightDate",
                                "FlightPrice",
                              ],
                              "type": "string",
                            },
                            "type": "array",
                            "uniqueItems": true,
                          },
                          "visibleFields": Object {
                            "artifactType": "Manifest",
                            "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                            "items": Object {
                              "enum": Array [
                                "BookingID",
                                "BookingDate",
                                "CustomerID",
                                "AirlineID",
                                "ConnectionID",
                                "FlightDate",
                                "FlightPrice",
                              ],
                              "type": "string",
                            },
                            "type": "array",
                            "uniqueItems": true,
                          },
                        },
                        "type": "object",
                      },
                      Object {
                        "type": "boolean",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                  },
                  "enablePaste": Object {
                    "artifactType": "Manifest",
                    "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
                    "type": "boolean",
                  },
                  "hierarchyQualifier": Object {
                    "artifactType": "Manifest",
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
                    "type": "string",
                  },
                  "personalization": Object {
                    "$ref": "#/definitions/PersonalizationTypeOP",
                    "artifactType": "Manifest",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                  },
                  "quickVariantSelection": Object {
                    "$ref": "#/definitions/QuickVariantSelectionV4OP<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "artifactType": "Manifest",
                    "description": "With quickVariantSelection, you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                  },
                  "rowCount": Object {
                    "artifactType": "Manifest",
                    "description": "Number of rows to be displayed in the table.",
                    "minimum": 0,
                    "type": "number",
                  },
                  "rowCountMode": Object {
                    "$ref": "#/definitions/RowCountMode",
                    "artifactType": "Manifest",
                    "description": "Defines how the table handles the visible rows. Does not apply to responsive tables. Allowed values are Auto and Fixed.
 - Fixed: The table always has as many rows as defined in the rowCount property.
 - Auto (default): The number of rows is changed by the table automatically. It will then adjust its row count to the space it is allowed to cover (limited by the surrounding container) but it cannot have less than defined in the rowCount property.",
                  },
                  "selectAll": Object {
                    "artifactType": "Manifest",
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                  },
                  "selectionLimit": Object {
                    "artifactType": "Manifest",
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                  },
                  "selectionMode": Object {
                    "$ref": "#/definitions/SelectionMode",
                    "artifactType": "Manifest",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
                  },
                  "toolBar": Object {
                    "$ref": "#/definitions/ObjectPageToolBar<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                    "description": "Tool Bar",
                  },
                  "type": Object {
                    "artifactType": "Manifest",
                    "const": "AnalyticalTable",
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                    "enum": Array [
                      "AnalyticalTable",
                    ],
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType",
                "type": "object",
              },
              "text": "Table",
              "title": "_Booking",
              "type": undefined,
              "value": Object {
                "columns": Object {
                  "CustomColumns": Object {
                    "header": "CustomColumns",
                    "position": Object {
                      "anchor": "DataField::BookingDate",
                      "placement": "After",
                    },
                    "template": "project1.ext.fragment.CustomColumns",
                  },
                },
                "toolBar": Object {
                  "actions": Object {},
                },
              },
            },
          ],
          "id": "outline-node-sections-_Booking::@com.sap.vocabularies.UI.v1.LineItem-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": "sections",
          },
          "path": Array [
            "sections",
            "_Booking::@com.sap.vocabularies.UI.v1.LineItem",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/1",
            "description": "Booking",
            "isViewNode": true,
            "keys": Array [
              Object {
                "name": "ID",
                "value": "Booking",
              },
            ],
            "properties": Object {
              "table": Object {
                "anyOf": Array [
                  Object {
                    "$ref": "#/definitions/ObjectPageAnalyticalTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                  },
                  Object {
                    "$ref": "#/definitions/ObjectPageGridTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                  },
                  Object {
                    "$ref": "#/definitions/ObjectPageResponsiveTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                  },
                  Object {
                    "$ref": "#/definitions/ObjectPageTreeTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
                  },
                ],
              },
            },
            "propertyIndex": 2,
            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType",
            "title": "Facet ID: Booking",
            "type": "object",
          },
          "text": "Booking",
          "title": "Booking",
          "type": undefined,
          "value": Object {
            "table": Object {
              "columns": Object {
                "CustomColumns": Object {
                  "header": "CustomColumns",
                  "position": Object {
                    "anchor": "DataField::BookingDate",
                    "placement": "After",
                  },
                  "template": "project1.ext.fragment.CustomColumns",
                },
              },
              "toolBar": Object {
                "actions": Object {},
              },
            },
          },
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [
                            Object {
                              "additionalText": undefined,
                              "annotationNodeId": undefined,
                              "children": Array [],
                              "id": "outline-node-sections-GroupSection-subsections-@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1-form-actions-SubSectionActipon-node",
                              "moveProps": Object {
                                "allowedChildTypes": undefined,
                                "allowedParents": Array [],
                                "movable": true,
                                "type": "actions",
                              },
                              "path": Array [
                                "sections",
                                "GroupSection",
                                "subsections",
                                "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                                "form",
                                "actions",
                                "SubSectionActipon",
                              ],
                              "properties": Array [
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                                  "displayName": "Text",
                                  "name": "text",
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                                    "i18nClassification": "COL: Custom action text",
                                    "type": "string",
                                  },
                                  "schemaPath": Array [
                                    "sections",
                                    "GroupSection",
                                    "subsections",
                                    "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                                    "form",
                                    "actions",
                                    "SubSectionActipon",
                                    "text",
                                  ],
                                  "type": "string",
                                  "value": "SubSectionActipon",
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Relevant for extension actions; allows the definition of a target action handler.",
                                  "displayName": "Press",
                                  "name": "press",
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                                    "type": "string",
                                  },
                                  "schemaPath": Array [
                                    "sections",
                                    "GroupSection",
                                    "subsections",
                                    "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                                    "form",
                                    "actions",
                                    "SubSectionActipon",
                                    "press",
                                  ],
                                  "type": "string",
                                  "value": "project1.ext.controller.SubSectionActipon.onSubSectionActipon",
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Defines if the action button is visible.",
                                  "displayName": "Visible",
                                  "name": "visible",
                                  "schema": Object {
                                    "enum": Array [
                                      false,
                                      true,
                                      "{ui>/isEditable}",
                                      "{= !\${ui>/isEditable}}",
                                    ],
                                  },
                                  "schemaPath": Array [
                                    "sections",
                                    "GroupSection",
                                    "subsections",
                                    "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                                    "form",
                                    "actions",
                                    "SubSectionActipon",
                                    "visible",
                                  ],
                                  "type": "string",
                                  "value": true,
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Defines if the action is enabled. The default value is true.",
                                  "displayName": "Enabled",
                                  "name": "enabled",
                                  "schema": Object {
                                    "enum": Array [
                                      false,
                                      true,
                                      "{ui>/isEditable}",
                                      "{= !\${ui>/isEditable}}",
                                    ],
                                  },
                                  "schemaPath": Array [
                                    "sections",
                                    "GroupSection",
                                    "subsections",
                                    "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                                    "form",
                                    "actions",
                                    "SubSectionActipon",
                                    "enabled",
                                  ],
                                  "type": "string",
                                  "value": true,
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Defines the position of the action relative to the anchor action.",
                                  "displayName": "position",
                                  "name": "position",
                                  "properties": Array [
                                    Object {
                                      "artifactType": "Manifest",
                                      "description": "The key of another action to be used as placement anchor.",
                                      "displayName": "Anchor",
                                      "name": "anchor",
                                      "options": Array [
                                        Object {
                                          "key": "",
                                          "reset": true,
                                          "text": "",
                                        },
                                        Object {
                                          "key": "SubSectionActipon",
                                          "text": "SubSectionActipon",
                                        },
                                      ],
                                      "schema": Object {
                                        "artifactType": "Manifest",
                                        "description": "The key of another action to be used as placement anchor.",
                                        "oneOf": Array [
                                          Object {
                                            "bundle": "ui5",
                                            "const": "SubSectionActipon",
                                            "custom": true,
                                            "description": "SubSectionActipon",
                                            "hidden": true,
                                          },
                                        ],
                                        "type": "string",
                                      },
                                      "schemaPath": Array [
                                        "sections",
                                        "GroupSection",
                                        "subsections",
                                        "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                                        "form",
                                        "actions",
                                        "SubSectionActipon",
                                        "position",
                                        "anchor",
                                      ],
                                      "type": "string",
                                      "value": undefined,
                                    },
                                    Object {
                                      "artifactType": "Manifest",
                                      "description": "Define the placement, either before or after the anchor action.",
                                      "displayName": "Placement",
                                      "name": "placement",
                                      "options": Array [
                                        Object {
                                          "key": "",
                                          "text": "",
                                        },
                                        Object {
                                          "key": "After",
                                          "text": "After",
                                        },
                                        Object {
                                          "key": "Before",
                                          "text": "Before",
                                        },
                                      ],
                                      "schema": Object {
                                        "artifactType": "Manifest",
                                        "description": "Define the placement, either before or after the anchor action.",
                                        "enum": Array [
                                          "After",
                                          "Before",
                                        ],
                                        "type": "string",
                                      },
                                      "schemaPath": Array [
                                        "sections",
                                        "GroupSection",
                                        "subsections",
                                        "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                                        "form",
                                        "actions",
                                        "SubSectionActipon",
                                        "position",
                                        "placement",
                                      ],
                                      "type": "string",
                                      "value": undefined,
                                    },
                                  ],
                                  "schema": Object {
                                    "additionalProperties": false,
                                    "artifactType": "Manifest",
                                    "description": "Defines the position of the action relative to the anchor action.",
                                    "properties": Object {
                                      "anchor": Object {
                                        "artifactType": "Manifest",
                                        "description": "The key of another action to be used as placement anchor.",
                                        "oneOf": Array [
                                          Object {
                                            "bundle": "ui5",
                                            "const": "SubSectionActipon",
                                            "custom": true,
                                            "description": "SubSectionActipon",
                                          },
                                        ],
                                        "type": "string",
                                      },
                                      "placement": Object {
                                        "$ref": "#/definitions/ActionPlacement",
                                        "artifactType": "Manifest",
                                        "description": "Define the placement, either before or after the anchor action.",
                                      },
                                    },
                                    "required": Array [
                                      "placement",
                                    ],
                                    "type": "object",
                                  },
                                  "schemaPath": Array [
                                    "sections",
                                    "GroupSection",
                                    "subsections",
                                    "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                                    "form",
                                    "actions",
                                    "SubSectionActipon",
                                    "position",
                                  ],
                                  "type": "object",
                                  "value": undefined,
                                },
                              ],
                              "schema": Object {
                                "actionType": "Custom",
                                "additionalProperties": false,
                                "description": "SubSectionActipon",
                                "isViewNode": true,
                                "keys": Array [
                                  Object {
                                    "name": "Key",
                                    "value": "SubSectionActipon",
                                  },
                                ],
                                "properties": Object {
                                  "enabled": Object {
                                    "anyOf": Array [
                                      Object {
                                        "enum": Array [
                                          false,
                                          true,
                                          "{ui>/isEditable}",
                                          "{= !\${ui>/isEditable}}",
                                        ],
                                      },
                                      Object {
                                        "type": "string",
                                      },
                                    ],
                                    "artifactType": "Manifest",
                                    "description": "Defines if the action is enabled. The default value is true.",
                                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                                  },
                                  "position": Object {
                                    "$ref": "#/definitions/CustomActionPositionOP<TravelType::Form::SubSection1>",
                                    "artifactType": "Manifest",
                                    "description": "Defines the position of the action relative to the anchor action.",
                                  },
                                  "press": Object {
                                    "artifactType": "Manifest",
                                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                                    "type": "string",
                                  },
                                  "text": Object {
                                    "artifactType": "Manifest",
                                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                                    "i18nClassification": "COL: Custom action text",
                                    "type": "string",
                                  },
                                  "visible": Object {
                                    "anyOf": Array [
                                      Object {
                                        "enum": Array [
                                          false,
                                          true,
                                          "{ui>/isEditable}",
                                          "{= !\${ui>/isEditable}}",
                                        ],
                                      },
                                      Object {
                                        "type": "string",
                                      },
                                    ],
                                    "artifactType": "Manifest",
                                    "description": "Defines if the action button is visible.",
                                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                                  },
                                },
                                "propertyIndex": 0,
                                "required": Array [
                                  "press",
                                  "text",
                                ],
                                "type": "object",
                              },
                              "text": "SubSectionActipon",
                              "title": "SubSectionActipon",
                              "type": "customAction",
                              "value": Object {
                                "enabled": true,
                                "press": "project1.ext.controller.SubSectionActipon.onSubSectionActipon",
                                "text": "SubSectionActipon",
                                "visible": true,
                              },
                            },
                          ],
                          "id": "outline-node-sections-GroupSection-subsections-@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1-form-actions-node",
                          "moveProps": Object {
                            "allowedChildTypes": Array [
                              "actions",
                            ],
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "actions",
                          },
                          "path": Array [
                            "sections",
                            "GroupSection",
                            "subsections",
                            "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                            "form",
                            "actions",
                          ],
                          "properties": Array [],
                          "schema": Object {
                            "additionalProperties": Object {
                              "$ref": "#/definitions/CustomFormActionOP<TravelType::Form::SubSection1>",
                            },
                            "description": "Actions",
                            "isViewNode": true,
                            "properties": Object {
                              "SubSectionActipon": Object {
                                "$ref": "#/definitions/CustomFormActionOP<TravelType::Form::SubSection1>",
                                "actionType": "Custom",
                                "description": "SubSectionActipon",
                                "keys": Array [
                                  Object {
                                    "name": "Key",
                                    "value": "SubSectionActipon",
                                  },
                                ],
                                "propertyIndex": 0,
                              },
                            },
                            "type": "object",
                          },
                          "text": "Actions",
                          "title": undefined,
                          "type": undefined,
                          "value": Object {
                            "SubSectionActipon": Object {
                              "enabled": true,
                              "press": "project1.ext.controller.SubSectionActipon.onSubSectionActipon",
                              "text": "SubSectionActipon",
                              "visible": true,
                            },
                          },
                        },
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [
                            Object {
                              "additionalText": undefined,
                              "annotationNodeId": undefined,
                              "children": Array [],
                              "id": "outline-node-sections-GroupSection-subsections-@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1-form-fields-DataField::AgencyName-node",
                              "moveProps": Object {
                                "allowedChildTypes": undefined,
                                "allowedParents": undefined,
                                "movable": false,
                                "type": "fields",
                              },
                              "path": Array [
                                "sections",
                                "GroupSection",
                                "subsections",
                                "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                                "form",
                                "fields",
                                "DataField::AgencyName",
                              ],
                              "properties": Array [],
                              "schema": Object {
                                "additionalProperties": false,
                                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1/Data/0",
                                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                                "dataType": "String",
                                "description": "AgencyName",
                                "isViewNode": true,
                                "keys": Array [
                                  Object {
                                    "name": "Value",
                                    "value": "AgencyName",
                                  },
                                ],
                                "properties": Object {},
                                "propertyIndex": 0,
                                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "type": "object",
                              },
                              "text": "AgencyName",
                              "title": "AgencyName",
                              "type": undefined,
                              "value": undefined,
                            },
                          ],
                          "id": "outline-node-sections-GroupSection-subsections-@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1-form-fields-node",
                          "moveProps": Object {
                            "allowedChildTypes": Array [
                              "fields",
                            ],
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "fields",
                          },
                          "path": Array [
                            "sections",
                            "GroupSection",
                            "subsections",
                            "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                            "form",
                            "fields",
                          ],
                          "properties": Array [],
                          "schema": Object {
                            "additionalProperties": false,
                            "description": "Fields",
                            "isViewNode": true,
                            "properties": Object {
                              "DataField::AgencyName": Object {
                                "$ref": "#/definitions/TravelType::Form::SubSection1::DataField::AgencyName",
                                "propertyIndex": 0,
                              },
                            },
                            "type": "object",
                          },
                          "text": "Fields",
                          "title": undefined,
                          "type": undefined,
                          "value": undefined,
                        },
                      ],
                      "id": "outline-node-sections-GroupSection-subsections-@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1-form-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "GroupSection",
                        "subsections",
                        "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                        "form",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                        "description": "Form",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Target",
                            "value": "FieldGroup#SubSection1",
                          },
                        ],
                        "properties": Object {
                          "actions": Object {
                            "$ref": "#/definitions/SectionActions<TravelType::Form::SubSection1>",
                          },
                          "fields": Object {
                            "$ref": "#/definitions/SectionFields<TravelType::Form::SubSection1>",
                          },
                        },
                        "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "type": "object",
                      },
                      "text": "Form",
                      "title": undefined,
                      "type": undefined,
                      "value": Object {
                        "actions": Object {
                          "SubSectionActipon": Object {
                            "enabled": true,
                            "press": "project1.ext.controller.SubSectionActipon.onSubSectionActipon",
                            "text": "SubSectionActipon",
                            "visible": true,
                          },
                        },
                      },
                    },
                  ],
                  "id": "outline-node-sections-GroupSection-subsections-@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "sections",
                  },
                  "path": Array [
                    "sections",
                    "GroupSection",
                    "subsections",
                    "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/2/Facets/0",
                    "description": "Sub Section 1",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "ID",
                        "value": "SubSection1",
                      },
                    ],
                    "properties": Object {
                      "form": Object {
                        "$ref": "#/definitions/SectionForm<TravelType::Form::SubSection1>",
                      },
                    },
                    "propertyIndex": 0,
                    "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                    "title": "Facet ID: SubSection1",
                    "type": "object",
                  },
                  "text": "Sub Section 1",
                  "title": "SubSection1",
                  "type": undefined,
                  "value": Object {
                    "form": Object {
                      "actions": Object {
                        "SubSectionActipon": Object {
                          "enabled": true,
                          "press": "project1.ext.controller.SubSectionActipon.onSubSectionActipon",
                          "text": "SubSectionActipon",
                          "visible": true,
                        },
                      },
                    },
                  },
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-GroupSection-subsections-CustomSubSection-controls-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "GroupSection",
                        "subsections",
                        "CustomSubSection",
                        "controls",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": false,
                        "description": "Custom Extension Fragment",
                        "metadata": Object {
                          "filePath": "ext\\\\fragment\\\\CustomSubSection.fragment.xml",
                        },
                        "properties": Object {
                          "$filePath": Object {
                            "hidden": true,
                            "type": "string",
                          },
                          "$schema": Object {
                            "hidden": true,
                            "type": "string",
                          },
                        },
                      },
                      "text": undefined,
                      "title": undefined,
                      "type": undefined,
                      "value": undefined,
                    },
                  ],
                  "id": "outline-node-sections-GroupSection-subsections-CustomSubSection-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": Array [],
                    "dropRestricted": true,
                    "movable": false,
                    "type": "sections",
                  },
                  "path": Array [
                    "sections",
                    "GroupSection",
                    "subsections",
                    "CustomSubSection",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The path to the XML template containing the section control.",
                      "displayName": "Fragment Name",
                      "name": "fragmentName",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The path to the XML template containing the section control.",
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "GroupSection",
                        "subsections",
                        "CustomSubSection",
                        "fragmentName",
                      ],
                      "type": "string",
                      "value": "project1.ext.fragment.CustomSubSection",
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Use the key of another section as a placement anchor.",
                      "displayName": "Anchor",
                      "name": "relatedFacet",
                      "options": Array [
                        Object {
                          "key": "",
                          "reset": true,
                          "text": "",
                        },
                        Object {
                          "key": "SubSection1",
                          "text": "SubSection1",
                        },
                        Object {
                          "key": "CustomSubSection",
                          "text": "CustomSubSection",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Use the key of another section as a placement anchor.",
                        "displayName": "Anchor",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "SubSection1",
                            "description": "Sub Section 1",
                            "hidden": true,
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "CustomSubSection",
                            "custom": true,
                            "description": "Custom Sub Section",
                            "hidden": true,
                          },
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "GroupSection",
                        "subsections",
                        "CustomSubSection",
                        "relatedFacet",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Define the placement, either before or after the anchor section.",
                      "displayName": "Placement",
                      "name": "relativePosition",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "After",
                          "text": "After",
                        },
                        Object {
                          "key": "Before",
                          "text": "Before",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor section.",
                        "displayName": "Placement",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "GroupSection",
                        "subsections",
                        "CustomSubSection",
                        "relativePosition",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "The label of a custom section, preferably as an i18n key.",
                      "displayName": "Title",
                      "name": "title",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The label of a custom section, preferably as an i18n key.",
                        "i18nClassification": "TIT: Custom section title",
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "sections",
                        "GroupSection",
                        "subsections",
                        "CustomSubSection",
                        "title",
                      ],
                      "type": "string",
                      "value": "Custom Sub Section",
                    },
                  ],
                  "schema": Object {
                    "actionType": "Custom",
                    "additionalProperties": false,
                    "description": "Custom Sub Section",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Key",
                        "value": "CustomSubSection",
                      },
                    ],
                    "properties": Object {
                      "controls": Object {
                        "type": "object",
                      },
                      "fragmentName": Object {
                        "artifactType": "Manifest",
                        "description": "The path to the XML template containing the section control.",
                        "type": "string",
                      },
                      "relatedFacet": Object {
                        "artifactType": "Manifest",
                        "description": "Use the key of another section as a placement anchor.",
                        "displayName": "Anchor",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "SubSection1",
                            "description": "Sub Section 1",
                            "hidden": true,
                          },
                          Object {
                            "bundle": "ui5",
                            "const": "CustomSubSection",
                            "custom": true,
                            "description": "Custom Sub Section",
                          },
                        ],
                        "type": "string",
                      },
                      "relativePosition": Object {
                        "$ref": "#/definitions/SectionPosition",
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor section.",
                      },
                      "title": Object {
                        "artifactType": "Manifest",
                        "description": "The label of a custom section, preferably as an i18n key.",
                        "i18nClassification": "TIT: Custom section title",
                        "type": "string",
                      },
                    },
                    "propertyIndex": 1,
                    "required": Array [
                      "fragmentName",
                      "title",
                    ],
                    "type": "object",
                  },
                  "text": "Custom Sub Section",
                  "title": undefined,
                  "type": "customSection",
                  "value": Object {
                    "controls": Object {},
                    "fragmentName": "project1.ext.fragment.CustomSubSection",
                    "title": "Custom Sub Section",
                  },
                },
              ],
              "id": "outline-node-sections-GroupSection-subsections-node",
              "moveProps": Object {
                "allowedChildTypes": Array [
                  "sections",
                ],
                "allowedParents": undefined,
                "movable": false,
                "type": "sections",
              },
              "path": Array [
                "sections",
                "GroupSection",
                "subsections",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/ObjectPageCustomSubSectionFragment<GroupSection>",
                },
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/2",
                "description": "Subsections",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "ID",
                    "value": "GroupSection",
                  },
                ],
                "properties": Object {
                  "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1": Object {
                    "$ref": "#/definitions/ObjectPageSectionForm<@com.sap.vocabularies.UI.v1.FieldGroup::SubSection1>",
                    "propertyIndex": 0,
                  },
                  "CustomSubSection": Object {
                    "$ref": "#/definitions/ObjectPageCustomSubSectionFragment<GroupSection>",
                    "actionType": "Custom",
                    "description": "Custom Sub Section",
                    "keys": Array [
                      Object {
                        "name": "Key",
                        "value": "CustomSubSection",
                      },
                    ],
                    "propertyIndex": 1,
                  },
                },
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "type": "object",
              },
              "text": "Subsections",
              "title": undefined,
              "type": undefined,
              "value": Object {
                "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1": Object {
                  "form": Object {
                    "actions": Object {
                      "SubSectionActipon": Object {
                        "enabled": true,
                        "press": "project1.ext.controller.SubSectionActipon.onSubSectionActipon",
                        "text": "SubSectionActipon",
                        "visible": true,
                      },
                    },
                  },
                },
                "CustomSubSection": Object {
                  "controls": Object {},
                  "fragmentName": "project1.ext.fragment.CustomSubSection",
                  "title": "Custom Sub Section",
                },
              },
            },
          ],
          "id": "outline-node-sections-GroupSection-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": "sections",
          },
          "path": Array [
            "sections",
            "GroupSection",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/2",
            "description": "Group Section",
            "isViewNode": true,
            "keys": Array [
              Object {
                "name": "ID",
                "value": "GroupSection",
              },
            ],
            "properties": Object {
              "subsections": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/ObjectPageCustomSubSectionFragment<GroupSection>",
                },
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/2",
                "description": "Subsections",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "ID",
                    "value": "GroupSection",
                  },
                ],
                "properties": Object {
                  "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1": Object {
                    "$ref": "#/definitions/ObjectPageSectionForm<@com.sap.vocabularies.UI.v1.FieldGroup::SubSection1>",
                    "propertyIndex": 0,
                  },
                  "CustomSubSection": Object {
                    "$ref": "#/definitions/ObjectPageCustomSubSectionFragment<GroupSection>",
                    "actionType": "Custom",
                    "description": "Custom Sub Section",
                    "keys": Array [
                      Object {
                        "name": "Key",
                        "value": "CustomSubSection",
                      },
                    ],
                    "propertyIndex": 1,
                  },
                },
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "type": "object",
              },
            },
            "propertyIndex": 3,
            "title": "Facet ID: GroupSection",
            "type": "object",
          },
          "text": "Group Section",
          "title": "GroupSection",
          "type": undefined,
          "value": Object {
            "subsections": Object {
              "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1": Object {
                "form": Object {
                  "actions": Object {
                    "SubSectionActipon": Object {
                      "enabled": true,
                      "press": "project1.ext.controller.SubSectionActipon.onSubSectionActipon",
                      "text": "SubSectionActipon",
                      "visible": true,
                    },
                  },
                },
              },
              "CustomSubSection": Object {
                "controls": Object {},
                "fragmentName": "project1.ext.fragment.CustomSubSection",
                "title": "Custom Sub Section",
              },
            },
          },
        },
      ],
      "id": "outline-node-sections-node",
      "moveProps": Object {
        "allowedChildTypes": Array [
          "sections",
        ],
        "allowedParents": undefined,
        "movable": false,
        "type": "sections",
      },
      "path": Array [
        "sections",
      ],
      "properties": Array [],
      "schema": Object {
        "additionalProperties": Object {
          "$ref": "#/definitions/ObjectPageCustomSectionFragment",
        },
        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets",
        "description": "Sections",
        "isViewNode": true,
        "properties": Object {
          "@com.sap.vocabularies.UI.v1.Identification": Object {
            "$ref": "#/definitions/ObjectPageSectionForm<@com.sap.vocabularies.UI.v1.Identification>",
            "propertyIndex": 0,
          },
          "CustomSection": Object {
            "$ref": "#/definitions/ObjectPageCustomSectionFragment<CustomSection>",
            "actionType": "Custom",
            "description": "CustomSection",
            "keys": Array [
              Object {
                "name": "Key",
                "value": "CustomSection",
              },
            ],
            "propertyIndex": 1,
          },
          "GroupSection": Object {
            "additionalProperties": false,
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/2",
            "description": "Group Section",
            "isViewNode": true,
            "keys": Array [
              Object {
                "name": "ID",
                "value": "GroupSection",
              },
            ],
            "properties": Object {
              "subsections": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/ObjectPageCustomSubSectionFragment<GroupSection>",
                },
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Facets/2",
                "description": "Subsections",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "ID",
                    "value": "GroupSection",
                  },
                ],
                "properties": Object {
                  "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1": Object {
                    "$ref": "#/definitions/ObjectPageSectionForm<@com.sap.vocabularies.UI.v1.FieldGroup::SubSection1>",
                    "propertyIndex": 0,
                  },
                  "CustomSubSection": Object {
                    "$ref": "#/definitions/ObjectPageCustomSubSectionFragment<GroupSection>",
                    "actionType": "Custom",
                    "description": "Custom Sub Section",
                    "keys": Array [
                      Object {
                        "name": "Key",
                        "value": "CustomSubSection",
                      },
                    ],
                    "propertyIndex": 1,
                  },
                },
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "type": "object",
              },
            },
            "propertyIndex": 3,
            "title": "Facet ID: GroupSection",
            "type": "object",
          },
          "_Booking::@com.sap.vocabularies.UI.v1.LineItem": Object {
            "$ref": "#/definitions/ObjectPageSectionTableV4<_Booking::@com.sap.vocabularies.UI.v1.LineItem>",
            "propertyIndex": 2,
          },
        },
        "propertyIndex": 2,
        "type": "object",
      },
      "text": "Sections",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "CustomSection": Object {
          "actions": Object {
            "CustomSectionAction": Object {
              "enabled": true,
              "press": "project1.ext.controller.CustomSectionAction.CustomSectionAction",
              "text": "CustomSectionAction",
              "visible": true,
            },
          },
          "controls": Object {
            "FilterBar": Object {
              "id": "FilterBar",
              "metaPath": "_Booking/@com.sap.vocabularies.UI.v1.SelectionFields#filterBarMacro",
            },
          },
          "fragmentName": "project1.ext.fragment.CustomSection",
          "relatedFacet": "Travel",
          "relativePosition": "After",
          "title": "CustomSection",
        },
        "GroupSection": Object {
          "subsections": Object {
            "@com.sap.vocabularies.UI.v1.FieldGroup#SubSection1": Object {
              "form": Object {
                "actions": Object {
                  "SubSectionActipon": Object {
                    "enabled": true,
                    "press": "project1.ext.controller.SubSectionActipon.onSubSectionActipon",
                    "text": "SubSectionActipon",
                    "visible": true,
                  },
                },
              },
            },
            "CustomSubSection": Object {
              "controls": Object {},
              "fragmentName": "project1.ext.fragment.CustomSubSection",
              "title": "Custom Sub Section",
            },
          },
        },
        "_Booking::@com.sap.vocabularies.UI.v1.LineItem": Object {
          "table": Object {
            "columns": Object {
              "CustomColumns": Object {
                "header": "CustomColumns",
                "position": Object {
                  "anchor": "DataField::BookingDate",
                  "placement": "After",
                },
                "template": "project1.ext.fragment.CustomColumns",
              },
            },
            "toolBar": Object {
              "actions": Object {},
            },
          },
        },
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-footer-actions-CustomFooterAction-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": Array [],
                "movable": true,
                "type": "actions",
              },
              "path": Array [
                "footer",
                "actions",
                "CustomFooterAction",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                  "displayName": "Text",
                  "name": "text",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "footer",
                    "actions",
                    "CustomFooterAction",
                    "text",
                  ],
                  "type": "string",
                  "value": "CustomFooterAction",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Relevant for extension actions; allows the definition of a target action handler.",
                  "displayName": "Press",
                  "name": "press",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "footer",
                    "actions",
                    "CustomFooterAction",
                    "press",
                  ],
                  "type": "string",
                  "value": "project1.ext.controller.CustomFooterAction.onFooterAction",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines if the action button is visible.",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/isEditable}",
                      "{= !\${ui>/isEditable}}",
                    ],
                  },
                  "schemaPath": Array [
                    "footer",
                    "actions",
                    "CustomFooterAction",
                    "visible",
                  ],
                  "type": "string",
                  "value": true,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines if the action is enabled. The default value is true.",
                  "displayName": "Enabled",
                  "name": "enabled",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/isEditable}",
                      "{= !\${ui>/isEditable}}",
                    ],
                  },
                  "schemaPath": Array [
                    "footer",
                    "actions",
                    "CustomFooterAction",
                    "enabled",
                  ],
                  "type": "string",
                  "value": true,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the position of the action relative to the anchor action.",
                  "displayName": "position",
                  "name": "position",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The key of another action to be used as placement anchor.",
                      "displayName": "Anchor",
                      "name": "anchor",
                      "options": Array [
                        Object {
                          "key": "",
                          "reset": true,
                          "text": "",
                        },
                        Object {
                          "key": "CustomFooterAction",
                          "text": "CustomFooterAction",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another action to be used as placement anchor.",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "CustomFooterAction",
                            "custom": true,
                            "description": "CustomFooterAction",
                            "hidden": true,
                          },
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "footer",
                        "actions",
                        "CustomFooterAction",
                        "position",
                        "anchor",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Define the placement, either before or after the anchor action.",
                      "displayName": "Placement",
                      "name": "placement",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "After",
                          "text": "After",
                        },
                        Object {
                          "key": "Before",
                          "text": "Before",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor action.",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "footer",
                        "actions",
                        "CustomFooterAction",
                        "position",
                        "placement",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the position of the action relative to the anchor action.",
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another action to be used as placement anchor.",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "CustomFooterAction",
                            "custom": true,
                            "description": "CustomFooterAction",
                          },
                        ],
                        "type": "string",
                      },
                      "placement": Object {
                        "$ref": "#/definitions/ActionPlacement",
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor action.",
                      },
                    },
                    "required": Array [
                      "placement",
                    ],
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "footer",
                    "actions",
                    "CustomFooterAction",
                    "position",
                  ],
                  "type": "object",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "actionType": "Custom",
                "additionalProperties": false,
                "description": "CustomFooterAction",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "CustomFooterAction",
                  },
                ],
                "properties": Object {
                  "enabled": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                          "{ui>/isEditable}",
                          "{= !\${ui>/isEditable}}",
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines if the action is enabled. The default value is true.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "position": Object {
                    "$ref": "#/definitions/CustomFooterActionPositionOP",
                    "artifactType": "Manifest",
                    "description": "Defines the position of the action relative to the anchor action.",
                  },
                  "press": Object {
                    "artifactType": "Manifest",
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "type": "string",
                  },
                  "text": Object {
                    "artifactType": "Manifest",
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "type": "string",
                  },
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                          "{ui>/isEditable}",
                          "{= !\${ui>/isEditable}}",
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines if the action button is visible.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                },
                "propertyIndex": 0,
                "required": Array [
                  "press",
                  "text",
                ],
                "type": "object",
              },
              "text": "CustomFooterAction",
              "title": "CustomFooterAction",
              "type": "customAction",
              "value": Object {
                "enabled": true,
                "press": "project1.ext.controller.CustomFooterAction.onFooterAction",
                "text": "CustomFooterAction",
                "visible": true,
              },
            },
          ],
          "id": "outline-node-footer-actions-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "footer",
            "actions",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/CustomFooterActionOP",
            },
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.Identification",
            "description": "Actions",
            "isViewNode": true,
            "properties": Object {
              "CustomFooterAction": Object {
                "$ref": "#/definitions/CustomFooterActionOP",
                "actionType": "Custom",
                "description": "CustomFooterAction",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "CustomFooterAction",
                  },
                ],
                "propertyIndex": 0,
              },
            },
            "type": "object",
          },
          "text": "Actions",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "CustomFooterAction": Object {
              "enabled": true,
              "press": "project1.ext.controller.CustomFooterAction.onFooterAction",
              "text": "CustomFooterAction",
              "visible": true,
            },
          },
        },
      ],
      "id": "outline-node-footer-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "footer",
      ],
      "properties": Array [],
      "schema": Object {
        "additionalProperties": false,
        "description": "Footer",
        "isViewNode": true,
        "properties": Object {
          "actions": Object {
            "$ref": "#/definitions/FooterActions",
          },
        },
        "propertyIndex": 3,
        "type": "object",
      },
      "text": "Footer",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "actions": Object {
          "CustomFooterAction": Object {
            "enabled": true,
            "press": "project1.ext.controller.CustomFooterAction.onFooterAction",
            "text": "CustomFooterAction",
            "visible": true,
          },
        },
      },
    },
  ],
  "id": "outline-noderoot-node",
  "moveProps": undefined,
  "path": Array [],
  "properties": Array [
    Object {
      "artifactType": "Manifest",
      "description": "Determines whether variant management is enabled for tables:
- None (default): Variant management is disabled.
- Control: Variant management can be enabled individually for each control using personalization.",
      "displayName": "Variant Management",
      "name": "variantManagement",
      "options": Array [
        Object {
          "key": "",
          "text": "",
        },
        Object {
          "key": "Control",
          "text": "Control",
        },
        Object {
          "key": "None",
          "text": "None",
        },
      ],
      "schema": Object {
        "artifactType": "Manifest",
        "description": "Determines whether variant management is enabled for tables:
- None (default): Variant management is disabled.
- Control: Variant management can be enabled individually for each control using personalization.",
        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f26d42bea11c4deda82c7a2e00c9bc05",
        "enum": Array [
          "Control",
          "None",
        ],
        "type": "string",
      },
      "schemaPath": Array [
        "variantManagement",
      ],
      "type": "string",
      "value": undefined,
    },
  ],
  "root": true,
  "schema": undefined,
  "text": "Root",
  "title": undefined,
  "type": "rootNode",
  "value": undefined,
}
`;

exports[`getTree getTree - ObjectPage page V2 1`] = `
Object {
  "additionalText": undefined,
  "annotationNodeId": Array [],
  "children": Array [
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities::SEPMRA_C_PD_ProductCopy-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities::SEPMRA_C_PD_ProductCopy",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Allows you to define if the action button is visible on the screen.",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/editable}",
                      "{= !\${ui>/editable}}",
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities::SEPMRA_C_PD_ProductCopy",
                    "visible",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "The text of the button tooltip, preferably as an i18n key.",
                  "displayName": "Tooltip",
                  "name": "tooltip",
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.uxap.ObjectPageHeaderActionButton",
                    "description": "The text of the button tooltip, preferably as an i18n key.",
                    "i18nClassification": "ACT: Text for tooltip of button.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities::SEPMRA_C_PD_ProductCopy",
                    "tooltip",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "An icon to be displayed as a graphical element within the button.
This can be an image or an icon from the Icon Explorer (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
                  "displayName": "Icon",
                  "name": "icon",
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.uxap.ObjectPageHeaderActionButton",
                    "description": "An icon to be displayed as a graphical element within the button.
This can be an image or an icon from the Icon Explorer (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities::SEPMRA_C_PD_ProductCopy",
                    "icon",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "An alternative icon for the active (depressed) state of the button.
This can be an image or an icon from the Icon Explorer (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
                  "displayName": "Active Icon",
                  "name": "activeIcon",
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.uxap.ObjectPageHeaderActionButton",
                    "description": "An alternative icon for the active (depressed) state of the button.
This can be an image or an icon from the Icon Explorer (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities::SEPMRA_C_PD_ProductCopy",
                    "activeIcon",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the Button type.",
                  "displayName": "Type",
                  "name": "type",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Accept",
                      "text": "Accept",
                    },
                    Object {
                      "key": "Attention",
                      "text": "Attention",
                    },
                    Object {
                      "key": "Back",
                      "text": "Back",
                    },
                    Object {
                      "key": "Critical",
                      "text": "Critical",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Emphasized",
                      "text": "Emphasized",
                    },
                    Object {
                      "key": "Ghost",
                      "text": "Ghost",
                    },
                    Object {
                      "key": "Negative",
                      "text": "Negative",
                    },
                    Object {
                      "key": "Neutral",
                      "text": "Neutral",
                    },
                    Object {
                      "key": "Reject",
                      "text": "Reject",
                    },
                    Object {
                      "key": "Success",
                      "text": "Success",
                    },
                    Object {
                      "key": "Transparent",
                      "text": "Transparent",
                    },
                    Object {
                      "key": "Unstyled",
                      "text": "Unstyled",
                    },
                    Object {
                      "key": "Up",
                      "text": "Up",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.uxap.ObjectPageHeaderActionButton",
                    "description": "Defines the Button type.",
                    "enum": Array [
                      "Accept",
                      "Attention",
                      "Back",
                      "Critical",
                      "Default",
                      "Emphasized",
                      "Ghost",
                      "Negative",
                      "Neutral",
                      "Reject",
                      "Success",
                      "Transparent",
                      "Unstyled",
                      "Up",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities::SEPMRA_C_PD_ProductCopy",
                    "type",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "actionType": "Annotation",
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.Identification/1",
                "description": "Copy",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Action",
                    "value": "SEPMRA_C_PD_ProductCopy",
                  },
                ],
                "properties": Object {
                  "activeIcon": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.uxap.ObjectPageHeaderActionButton",
                    "description": "An alternative icon for the active (depressed) state of the button.
This can be an image or an icon from the Icon Explorer (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
                    "type": "string",
                  },
                  "icon": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.uxap.ObjectPageHeaderActionButton",
                    "description": "An icon to be displayed as a graphical element within the button.
This can be an image or an icon from the Icon Explorer (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
                    "type": "string",
                  },
                  "tooltip": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.uxap.ObjectPageHeaderActionButton",
                    "description": "The text of the button tooltip, preferably as an i18n key.",
                    "i18nClassification": "ACT: Text for tooltip of button.",
                    "type": "string",
                  },
                  "type": Object {
                    "$ref": "#/definitions/ButtonType",
                    "artifactType": "FlexChange",
                    "controlType": "sap.uxap.ObjectPageHeaderActionButton",
                    "description": "Defines the Button type.",
                  },
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                          "{ui>/editable}",
                          "{= !\${ui>/editable}}",
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.uxap.ObjectPageHeaderActionButton",
                    "description": "Allows you to define if the action button is visible on the screen.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                },
                "target": "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities",
                "type": "object",
              },
              "text": "Copy",
              "title": "SEPMRA_C_PD_ProductCopy",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-UpAndDownNavigation-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "UpAndDownNavigation",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Allows you to define if the button is visible on the screen.",
                  "displayName": "Visible",
                  "name": "visible",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Button",
                    "description": "Allows you to define if the button is visible on the screen.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "UpAndDownNavigation",
                    "visible",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "actionType": "Standard",
                "additionalProperties": false,
                "description": "Up and Down Navigation",
                "isViewNode": true,
                "properties": Object {
                  "visible": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Button",
                    "description": "Allows you to define if the button is visible on the screen.",
                    "type": "boolean",
                  },
                },
                "type": "object",
              },
              "text": "Up and Down Navigation",
              "title": "UpAndDownNavigation",
              "type": undefined,
              "value": Object {},
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-Share-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "Share",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Allows you to define if the button is visible on the screen.",
                  "displayName": "Visible",
                  "name": "visible",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Button",
                    "description": "Allows you to define if the button is visible on the screen.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "Share",
                    "visible",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "actionType": "Standard",
                "additionalProperties": false,
                "description": "Share",
                "isViewNode": true,
                "properties": Object {
                  "visible": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Button",
                    "description": "Allows you to define if the button is visible on the screen.",
                    "type": "boolean",
                  },
                },
                "type": "object",
              },
              "text": "Share",
              "title": "Share",
              "type": undefined,
              "value": Object {},
            },
          ],
          "id": "outline-node-header-actions-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "header",
            "actions",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.Identification",
            "description": "Actions",
            "isViewNode": true,
            "properties": Object {
              "SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities::SEPMRA_C_PD_ProductCopy": Object {
                "$ref": "#/definitions/ObjectPageHeaderAction<SEPMRA_PROD_MAN.SEPMRA_PROD_MAN_Entities::SEPMRA_C_PD_ProductCopy>",
              },
              "Share": Object {
                "$ref": "#/definitions/ObjectPageHeaderActionStandard<ShareOP>",
              },
              "UpAndDownNavigation": Object {
                "$ref": "#/definitions/ObjectPageHeaderActionStandard<UpAndDownNavigationOP>",
              },
            },
            "type": "object",
          },
          "text": "Actions",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "Share": Object {},
            "UpAndDownNavigation": Object {},
          },
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-sections-@com.sap.vocabularies.UI.v1.FieldGroup::HeaderInformation-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "sections",
              },
              "path": Array [
                "header",
                "sections",
                "@com.sap.vocabularies.UI.v1.FieldGroup::HeaderInformation",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Specifies whether the facet is visible or not",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/editable}",
                      "{= !\${ui>/editable}}",
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "@com.sap.vocabularies.UI.v1.FieldGroup::HeaderInformation",
                    "visible",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.HeaderFacets/0",
                "dataType": "FieldGroup",
                "description": "General Information",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "ID",
                    "value": "FieldGroup::HeaderInformation",
                  },
                ],
                "properties": Object {
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                          "{ui>/editable}",
                          "{= !\${ui>/editable}}",
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.VBox",
                    "description": "Specifies whether the facet is visible or not",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                },
                "title": "com.sap.vocabularies.UI.v1.FieldGroup::HeaderInformation",
                "type": "object",
              },
              "text": "General Information",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-sections-@com.sap.vocabularies.UI.v1.FieldGroup::ProductHeaderText-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "sections",
              },
              "path": Array [
                "header",
                "sections",
                "@com.sap.vocabularies.UI.v1.FieldGroup::ProductHeaderText",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Specifies whether the facet is visible or not",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/editable}",
                      "{= !\${ui>/editable}}",
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "@com.sap.vocabularies.UI.v1.FieldGroup::ProductHeaderText",
                    "visible",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.HeaderFacets/1",
                "dataType": "FieldGroup",
                "description": "Description",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "ID",
                    "value": "FieldGroup::ProductHeaderText",
                  },
                ],
                "properties": Object {
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                          "{ui>/editable}",
                          "{= !\${ui>/editable}}",
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.VBox",
                    "description": "Specifies whether the facet is visible or not",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                },
                "title": "com.sap.vocabularies.UI.v1.FieldGroup::ProductHeaderText",
                "type": "object",
              },
              "text": "Description",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-sections-to_ProductStock::@com.sap.vocabularies.UI.v1.DataPoint::StockAvailability-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "sections",
              },
              "path": Array [
                "header",
                "sections",
                "to_ProductStock::@com.sap.vocabularies.UI.v1.DataPoint::StockAvailability",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Specifies whether the facet is visible or not",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/editable}",
                      "{= !\${ui>/editable}}",
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "to_ProductStock::@com.sap.vocabularies.UI.v1.DataPoint::StockAvailability",
                    "visible",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.HeaderFacets/2",
                "dataType": "DataPoint",
                "description": "Availability",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "ID",
                    "value": "to_ProductStock::DataPoint::StockAvailability",
                  },
                ],
                "properties": Object {
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                          "{ui>/editable}",
                          "{= !\${ui>/editable}}",
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.VBox",
                    "description": "Specifies whether the facet is visible or not",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                },
                "title": "to_ProductStock::com.sap.vocabularies.UI.v1.DataPoint::StockAvailability::DataPoint",
                "type": "object",
              },
              "text": "Availability",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-sections-@com.sap.vocabularies.UI.v1.DataPoint::Price-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "sections",
              },
              "path": Array [
                "header",
                "sections",
                "@com.sap.vocabularies.UI.v1.DataPoint::Price",
              ],
              "properties": Array [
                Object {
                  "artifactType": "FlexChange",
                  "description": "Specifies whether the facet is visible or not",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/editable}",
                      "{= !\${ui>/editable}}",
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "sections",
                    "@com.sap.vocabularies.UI.v1.DataPoint::Price",
                    "visible",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.HeaderFacets/3",
                "dataType": "DataPoint",
                "description": "Price",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "ID",
                    "value": "DataPoint::Price",
                  },
                ],
                "properties": Object {
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                          "{ui>/editable}",
                          "{= !\${ui>/editable}}",
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.VBox",
                    "description": "Specifies whether the facet is visible or not",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                },
                "title": "com.sap.vocabularies.UI.v1.DataPoint::Price::DataPoint",
                "type": "object",
              },
              "text": "Price",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-header-sections-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "sections",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "sections",
          },
          "path": Array [
            "header",
            "sections",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.HeaderFacets",
            "description": "Header Sections",
            "isViewNode": true,
            "properties": Object {
              "@com.sap.vocabularies.UI.v1.DataPoint::Price": Object {
                "$ref": "#/definitions/ObjectPageHeaderSectionDataPoint<@com.sap.vocabularies.UI.v1.DataPoint::Price>",
              },
              "@com.sap.vocabularies.UI.v1.FieldGroup::HeaderInformation": Object {
                "$ref": "#/definitions/ObjectPageHeaderSectionForm<@com.sap.vocabularies.UI.v1.FieldGroup::HeaderInformation>",
              },
              "@com.sap.vocabularies.UI.v1.FieldGroup::ProductHeaderText": Object {
                "$ref": "#/definitions/ObjectPageHeaderSectionForm<@com.sap.vocabularies.UI.v1.FieldGroup::ProductHeaderText>",
              },
              "to_ProductStock::@com.sap.vocabularies.UI.v1.DataPoint::StockAvailability": Object {
                "$ref": "#/definitions/ObjectPageHeaderSectionDataPoint<to_ProductStock::@com.sap.vocabularies.UI.v1.DataPoint::StockAvailability>",
              },
            },
            "type": "object",
          },
          "text": "Header Sections",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
      ],
      "id": "outline-node-header-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "header",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Set showRelatedApps to true to show the navigation button for related apps.",
          "displayName": "Show Related Apps",
          "name": "showRelatedApps",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Set showRelatedApps to true to show the navigation button for related apps.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "header",
            "showRelatedApps",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Set editableHeaderContent to true to make the header fields editable.",
          "displayName": "Editable Header Content",
          "name": "editableHeaderContent",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Set editableHeaderContent to true to make the header fields editable.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "header",
            "editableHeaderContent",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Set simpleHeaderFacets to true to use simpler header facets.",
          "displayName": "Simple Header Facets",
          "name": "simpleHeaderFacets",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Set simpleHeaderFacets to true to use simpler header facets.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "header",
            "simpleHeaderFacets",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "With displayShape you can define the shape of the avatar.",
          "displayName": "Display Shape",
          "name": "displayShape",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "Circle",
              "text": "Circle",
            },
            Object {
              "key": "Square",
              "text": "Square",
            },
          ],
          "schema": Object {
            "description": "Types of shape for the {@link sap.m.Avatar} control.",
            "enum": Array [
              "Circle",
              "Square",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "header",
            "displayShape",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Enables the carousel header on the desktop",
          "displayName": "Show Header As Carousel On Desktop",
          "name": "showHeaderAsCarouselOnDesktop",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Enables the carousel header on the desktop",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/17dbd5b7a61e4cdcb079062e976cd63f",
            "type": "boolean",
          },
          "schemaPath": Array [
            "header",
            "showHeaderAsCarouselOnDesktop",
          ],
          "type": "boolean",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.HeaderInfo",
        "description": "Header",
        "isViewNode": true,
        "properties": Object {
          "actions": Object {
            "$ref": "#/definitions/ObjectPageHeaderActions",
          },
          "displayShape": Object {
            "anyOf": Array [
              Object {
                "$ref": "#/definitions/AvatarShape",
              },
              Object {
                "type": "string",
              },
            ],
            "artifactType": "FlexChange",
            "controlType": "sap.f.Avatar",
            "description": "With displayShape you can define the shape of the avatar.",
            "pattern": "^(Circle|Square)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
          },
          "editableHeaderContent": Object {
            "artifactType": "Manifest",
            "description": "Set editableHeaderContent to true to make the header fields editable.",
            "type": "boolean",
          },
          "sections": Object {
            "$ref": "#/definitions/HeaderSections",
          },
          "showHeaderAsCarouselOnDesktop": Object {
            "artifactType": "Manifest",
            "description": "Enables the carousel header on the desktop",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/17dbd5b7a61e4cdcb079062e976cd63f",
            "type": "boolean",
          },
          "showRelatedApps": Object {
            "artifactType": "Manifest",
            "description": "Set showRelatedApps to true to show the navigation button for related apps.",
            "type": "boolean",
          },
          "simpleHeaderFacets": Object {
            "artifactType": "Manifest",
            "description": "Set simpleHeaderFacets to true to use simpler header facets.",
            "type": "boolean",
          },
        },
        "propertyIndex": 0,
        "type": "object",
      },
      "text": "Header",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "actions": Object {
          "Share": Object {},
          "UpAndDownNavigation": Object {},
        },
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [],
      "id": "outline-node-layout-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "layout",
      ],
      "properties": Array [
        Object {
          "artifactType": "FlexChange",
          "description": "Determines the visibility of the Header content.",
          "displayName": "Show Header Content",
          "name": "showHeaderContent",
          "schema": Object {
            "enum": Array [
              false,
              true,
              "{ui>/editable}",
              "{= !\${ui>/editable}}",
            ],
          },
          "schemaPath": Array [
            "layout",
            "showHeaderContent",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "Determines whether the navigation bar (anchor bar) is displayed.",
          "displayName": "Show Anchor Bar",
          "name": "showAnchorBar",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.uxap.ObjectPageLayout",
            "description": "Determines whether the navigation bar (anchor bar) is displayed.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "layout",
            "showAnchorBar",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "Determines whether the navigation mode is tab-based instead of based on the default anchor bar.",
          "displayName": "Use Icon Tab Bar",
          "name": "useIconTabBar",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.uxap.ObjectPageLayout",
            "description": "Determines whether the navigation mode is tab-based instead of based on the default anchor bar.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "layout",
            "useIconTabBar",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "FlexChange",
          "description": "Determines whether header content will always be expanded on the desktop.",
          "displayName": "Always Show Content Header",
          "name": "alwaysShowContentHeader",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.uxap.ObjectPageLayout",
            "description": "Determines whether header content will always be expanded on the desktop.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "layout",
            "alwaysShowContentHeader",
          ],
          "type": "boolean",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "description": "Page Layout",
        "isViewNode": true,
        "properties": Object {
          "alwaysShowContentHeader": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.uxap.ObjectPageLayout",
            "description": "Determines whether header content will always be expanded on the desktop.",
            "type": "boolean",
          },
          "showAnchorBar": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.uxap.ObjectPageLayout",
            "description": "Determines whether the navigation bar (anchor bar) is displayed.",
            "type": "boolean",
          },
          "showHeaderContent": Object {
            "anyOf": Array [
              Object {
                "enum": Array [
                  false,
                  true,
                  "{ui>/editable}",
                  "{= !\${ui>/editable}}",
                ],
              },
              Object {
                "type": "string",
              },
            ],
            "artifactType": "FlexChange",
            "controlType": "sap.uxap.ObjectPageLayout",
            "description": "Determines the visibility of the Header content.",
            "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
          },
          "useIconTabBar": Object {
            "artifactType": "FlexChange",
            "controlType": "sap.uxap.ObjectPageLayout",
            "description": "Determines whether the navigation mode is tab-based instead of based on the default anchor bar.",
            "type": "boolean",
          },
        },
        "type": "object",
      },
      "text": "Page Layout",
      "title": undefined,
      "type": undefined,
      "value": undefined,
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData-form-actions-node",
                  "moveProps": Object {
                    "allowedChildTypes": Array [
                      "actions",
                    ],
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "sections",
                    "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                    "form",
                    "actions",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": false,
                    "description": "Actions",
                    "isViewNode": true,
                    "properties": Object {},
                    "type": "object",
                  },
                  "text": "Actions",
                  "title": undefined,
                  "type": undefined,
                  "value": undefined,
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData-form-fields-ProductBaseUnit-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                        "form",
                        "fields",
                        "ProductBaseUnit",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines if the field is visible on the screen.",
                          "displayName": "Visible",
                          "name": "visible",
                          "schema": Object {
                            "enum": Array [
                              false,
                              true,
                              "{ui>/editable}",
                              "{= !\${ui>/editable}}",
                            ],
                          },
                          "schemaPath": Array [
                            "sections",
                            "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                            "form",
                            "fields",
                            "ProductBaseUnit",
                            "visible",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.FieldGroup#TechnicalData/Data/0",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "Base Unit",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "ProductBaseUnit",
                          },
                        ],
                        "properties": Object {
                          "visible": Object {
                            "anyOf": Array [
                              Object {
                                "enum": Array [
                                  false,
                                  true,
                                  "{ui>/editable}",
                                  "{= !\${ui>/editable}}",
                                ],
                              },
                              Object {
                                "type": "string",
                              },
                            ],
                            "artifactType": "FlexChange",
                            "controlType": "sap.ui.comp.smartform.GroupElement",
                            "description": "Defines if the field is visible on the screen.",
                            "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                          },
                        },
                        "propertyIndex": 0,
                        "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType",
                        "type": "object",
                      },
                      "text": "Base Unit",
                      "title": "ProductBaseUnit",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData-form-fields-Height-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                        "form",
                        "fields",
                        "Height",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines if the field is visible on the screen.",
                          "displayName": "Visible",
                          "name": "visible",
                          "schema": Object {
                            "enum": Array [
                              false,
                              true,
                              "{ui>/editable}",
                              "{= !\${ui>/editable}}",
                            ],
                          },
                          "schemaPath": Array [
                            "sections",
                            "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                            "form",
                            "fields",
                            "Height",
                            "visible",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.FieldGroup#TechnicalData/Data/1",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Decimal",
                        "description": "Height",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "Height",
                          },
                        ],
                        "properties": Object {
                          "visible": Object {
                            "anyOf": Array [
                              Object {
                                "enum": Array [
                                  false,
                                  true,
                                  "{ui>/editable}",
                                  "{= !\${ui>/editable}}",
                                ],
                              },
                              Object {
                                "type": "string",
                              },
                            ],
                            "artifactType": "FlexChange",
                            "controlType": "sap.ui.comp.smartform.GroupElement",
                            "description": "Defines if the field is visible on the screen.",
                            "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                          },
                        },
                        "propertyIndex": 1,
                        "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType",
                        "type": "object",
                      },
                      "text": "Height",
                      "title": "Height",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData-form-fields-Width-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                        "form",
                        "fields",
                        "Width",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines if the field is visible on the screen.",
                          "displayName": "Visible",
                          "name": "visible",
                          "schema": Object {
                            "enum": Array [
                              false,
                              true,
                              "{ui>/editable}",
                              "{= !\${ui>/editable}}",
                            ],
                          },
                          "schemaPath": Array [
                            "sections",
                            "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                            "form",
                            "fields",
                            "Width",
                            "visible",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.FieldGroup#TechnicalData/Data/2",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Decimal",
                        "description": "Width",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "Width",
                          },
                        ],
                        "properties": Object {
                          "visible": Object {
                            "anyOf": Array [
                              Object {
                                "enum": Array [
                                  false,
                                  true,
                                  "{ui>/editable}",
                                  "{= !\${ui>/editable}}",
                                ],
                              },
                              Object {
                                "type": "string",
                              },
                            ],
                            "artifactType": "FlexChange",
                            "controlType": "sap.ui.comp.smartform.GroupElement",
                            "description": "Defines if the field is visible on the screen.",
                            "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                          },
                        },
                        "propertyIndex": 2,
                        "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType",
                        "type": "object",
                      },
                      "text": "Width",
                      "title": "Width",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData-form-fields-Depth-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                        "form",
                        "fields",
                        "Depth",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines if the field is visible on the screen.",
                          "displayName": "Visible",
                          "name": "visible",
                          "schema": Object {
                            "enum": Array [
                              false,
                              true,
                              "{ui>/editable}",
                              "{= !\${ui>/editable}}",
                            ],
                          },
                          "schemaPath": Array [
                            "sections",
                            "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                            "form",
                            "fields",
                            "Depth",
                            "visible",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.FieldGroup#TechnicalData/Data/3",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Decimal",
                        "description": "Depth",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "Depth",
                          },
                        ],
                        "properties": Object {
                          "visible": Object {
                            "anyOf": Array [
                              Object {
                                "enum": Array [
                                  false,
                                  true,
                                  "{ui>/editable}",
                                  "{= !\${ui>/editable}}",
                                ],
                              },
                              Object {
                                "type": "string",
                              },
                            ],
                            "artifactType": "FlexChange",
                            "controlType": "sap.ui.comp.smartform.GroupElement",
                            "description": "Defines if the field is visible on the screen.",
                            "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                          },
                        },
                        "propertyIndex": 3,
                        "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType",
                        "type": "object",
                      },
                      "text": "Depth",
                      "title": "Depth",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData-form-fields-Weight-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "fields",
                      },
                      "path": Array [
                        "sections",
                        "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                        "form",
                        "fields",
                        "Weight",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines if the field is visible on the screen.",
                          "displayName": "Visible",
                          "name": "visible",
                          "schema": Object {
                            "enum": Array [
                              false,
                              true,
                              "{ui>/editable}",
                              "{= !\${ui>/editable}}",
                            ],
                          },
                          "schemaPath": Array [
                            "sections",
                            "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                            "form",
                            "fields",
                            "Weight",
                            "visible",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.FieldGroup#TechnicalData/Data/4",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Decimal",
                        "description": "Weight",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "Weight",
                          },
                        ],
                        "properties": Object {
                          "visible": Object {
                            "anyOf": Array [
                              Object {
                                "enum": Array [
                                  false,
                                  true,
                                  "{ui>/editable}",
                                  "{= !\${ui>/editable}}",
                                ],
                              },
                              Object {
                                "type": "string",
                              },
                            ],
                            "artifactType": "FlexChange",
                            "controlType": "sap.ui.comp.smartform.GroupElement",
                            "description": "Defines if the field is visible on the screen.",
                            "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                          },
                        },
                        "propertyIndex": 4,
                        "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType",
                        "type": "object",
                      },
                      "text": "Weight",
                      "title": "Weight",
                      "type": undefined,
                      "value": undefined,
                    },
                  ],
                  "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData-form-fields-node",
                  "moveProps": Object {
                    "allowedChildTypes": Array [
                      "fields",
                    ],
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "fields",
                  },
                  "path": Array [
                    "sections",
                    "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                    "form",
                    "fields",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": false,
                    "description": "Fields",
                    "isViewNode": true,
                    "properties": Object {
                      "Depth": Object {
                        "$ref": "#/definitions/Field<SEPMRA_C_PD_ProductType::Form::TechnicalData::Depth>",
                        "propertyIndex": 3,
                      },
                      "Height": Object {
                        "$ref": "#/definitions/Field<SEPMRA_C_PD_ProductType::Form::TechnicalData::Height>",
                        "propertyIndex": 1,
                      },
                      "ProductBaseUnit": Object {
                        "$ref": "#/definitions/Field<SEPMRA_C_PD_ProductType::Form::TechnicalData::ProductBaseUnit>",
                        "propertyIndex": 0,
                      },
                      "Weight": Object {
                        "$ref": "#/definitions/Field<SEPMRA_C_PD_ProductType::Form::TechnicalData::Weight>",
                        "propertyIndex": 4,
                      },
                      "Width": Object {
                        "$ref": "#/definitions/Field<SEPMRA_C_PD_ProductType::Form::TechnicalData::Width>",
                        "propertyIndex": 2,
                      },
                    },
                    "type": "object",
                  },
                  "text": "Fields",
                  "title": undefined,
                  "type": undefined,
                  "value": undefined,
                },
              ],
              "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData-form-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "sections",
                "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                "form",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.FieldGroup#TechnicalData",
                "description": "Form",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Target",
                    "value": "FieldGroup#TechnicalData",
                  },
                ],
                "properties": Object {
                  "actions": Object {
                    "$ref": "#/definitions/SectionActions<SEPMRA_C_PD_ProductType::Form::TechnicalData>",
                  },
                  "fields": Object {
                    "$ref": "#/definitions/SectionFields<SEPMRA_C_PD_ProductType::Form::TechnicalData>",
                  },
                },
                "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType",
                "type": "object",
              },
              "text": "Form",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-sections-@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": "sections",
          },
          "path": Array [
            "sections",
            "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
          ],
          "properties": Array [
            Object {
              "artifactType": "FlexChange",
              "description": "Defines if this section should be visible.",
              "displayName": "Visible",
              "name": "visible",
              "schema": Object {
                "enum": Array [
                  false,
                  true,
                  "{ui>/editable}",
                  "{= !\${ui>/editable}}",
                ],
              },
              "schemaPath": Array [
                "sections",
                "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                "visible",
              ],
              "type": "string",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.Facets/0",
            "description": "Technical Data",
            "isViewNode": true,
            "keys": Array [
              Object {
                "name": "ID",
                "value": "FieldGroup::TechnicalData",
              },
            ],
            "properties": Object {
              "form": Object {
                "$ref": "#/definitions/SectionForm<SEPMRA_C_PD_ProductType::Form::TechnicalData>",
              },
              "visible": Object {
                "anyOf": Array [
                  Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/editable}",
                      "{= !\${ui>/editable}}",
                    ],
                  },
                  Object {
                    "type": "string",
                  },
                ],
                "artifactType": "FlexChange",
                "controlType": "sap.uxap.ObjectPageSection",
                "description": "Defines if this section should be visible.",
                "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
              },
            },
            "title": "com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
            "type": "object",
          },
          "text": "Technical Data",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [],
          "id": "outline-node-sections-custom section-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": Array [],
            "movable": true,
            "type": "sections",
          },
          "path": Array [
            "sections",
            "custom",
            0,
          ],
          "properties": Array [
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Class Name",
              "name": "className",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "sap.ui.core.mvc.View",
                  "text": "sap.ui.core.mvc.View",
                },
                Object {
                  "key": "sap.ui.core.Fragment",
                  "text": "sap.ui.core.Fragment",
                },
              ],
              "schema": Object {
                "const": "sap.ui.core.mvc.View",
                "enum": Array [
                  "sap.ui.core.mvc.View",
                  "sap.ui.core.Fragment",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "sections",
                "custom",
                0,
                "className",
              ],
              "type": "string",
              "value": "sap.ui.core.Fragment",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "View Name",
              "name": "viewName",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "sections",
                "custom",
                0,
                "viewName",
              ],
              "type": "string",
              "value": undefined,
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Type",
              "name": "type",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "HTML",
                  "text": "HTML",
                },
                Object {
                  "key": "JSON",
                  "text": "JSON",
                },
                Object {
                  "key": "XML",
                  "text": "XML",
                },
              ],
              "schema": Object {
                "enum": Array [
                  "HTML",
                  "JSON",
                  "XML",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "sections",
                "custom",
                0,
                "type",
              ],
              "type": "string",
              "value": "XML",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Related Facet",
              "name": "relatedFacet",
              "options": Array [
                Object {
                  "key": "",
                  "reset": true,
                  "text": "",
                },
                Object {
                  "key": "com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                  "text": "com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                },
                Object {
                  "key": "ProductReviewFacetID",
                  "text": "ProductReviewFacetID",
                },
                Object {
                  "key": "ProductSmartChartFacetID",
                  "text": "ProductSmartChartFacetID",
                },
              ],
              "schema": Object {
                "oneOf": Array [
                  Object {
                    "bundle": "ui5",
                    "const": "com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
                    "description": "Technical Data",
                  },
                  Object {
                    "bundle": "ui5",
                    "const": "ProductReviewFacetID",
                    "description": "Reviews",
                  },
                  Object {
                    "bundle": "ui5",
                    "const": "ProductSmartChartFacetID",
                    "description": "Sales Data",
                  },
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "sections",
                "custom",
                0,
                "relatedFacet",
              ],
              "type": "string",
              "value": "com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Relative Position",
              "name": "relativePosition",
              "options": Array [
                Object {
                  "key": "",
                  "text": "",
                },
                Object {
                  "key": "AfterFacet",
                  "text": "AfterFacet",
                },
                Object {
                  "key": "BeforeFacet",
                  "text": "BeforeFacet",
                },
                Object {
                  "key": "ReplaceFacet",
                  "text": "ReplaceFacet",
                },
              ],
              "schema": Object {
                "enum": Array [
                  "AfterFacet",
                  "BeforeFacet",
                  "ReplaceFacet",
                ],
                "type": "string",
              },
              "schemaPath": Array [
                "sections",
                "custom",
                0,
                "relativePosition",
              ],
              "type": "string",
              "value": "AfterFacet",
            },
            Object {
              "artifactType": undefined,
              "description": "The label of the custom section, preferably as an i18n key.",
              "displayName": "Title",
              "name": "title",
              "schema": Object {
                "description": "The label of the custom section, preferably as an i18n key.",
                "i18nClassification": "TIT: Custom section title",
                "type": "string",
              },
              "schemaPath": Array [
                "sections",
                "custom",
                0,
                "title",
              ],
              "type": "string",
              "value": "custom section",
            },
            Object {
              "artifactType": undefined,
              "description": "",
              "displayName": "Fragment Name",
              "name": "fragmentName",
              "schema": Object {
                "type": "string",
              },
              "schemaPath": Array [
                "sections",
                "custom",
                0,
                "fragmentName",
              ],
              "type": "string",
              "value": "fev2.ext.fragment.CustomSection",
            },
          ],
          "schema": Object {},
          "text": "custom section",
          "title": undefined,
          "type": "customSection",
          "value": undefined,
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-ProductReviewFacetID-table-toolBar-actions-node",
                      "moveProps": Object {
                        "allowedChildTypes": Array [
                          "actions",
                        ],
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "actions",
                      },
                      "path": Array [
                        "sections",
                        "ProductReviewFacetID",
                        "table",
                        "toolBar",
                        "actions",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": false,
                        "description": "Actions",
                        "isViewNode": true,
                        "properties": Object {},
                        "type": "object",
                      },
                      "text": "Actions",
                      "title": undefined,
                      "type": undefined,
                      "value": undefined,
                    },
                  ],
                  "id": "outline-node-sections-ProductReviewFacetID-table-toolBar-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": undefined,
                  },
                  "path": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "toolBar",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType/@com.sap.vocabularies.UI.v1.LineItem",
                    "description": "Tool Bar",
                    "isViewNode": true,
                    "properties": Object {
                      "actions": Object {
                        "$ref": "#/definitions/Actions<ProductReviewFacetID>",
                      },
                    },
                    "required": Array [
                      "actions",
                    ],
                    "type": "object",
                  },
                  "text": "Tool Bar",
                  "title": undefined,
                  "type": undefined,
                  "value": undefined,
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-ProductReviewFacetID-table-columns-DataFieldForAnnotation:::sTarget::@com.sap.vocabularies.UI.v1.DataPoint#ReviewRatingValue-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "ProductReviewFacetID",
                        "table",
                        "columns",
                        "DataFieldForAnnotation:::sTarget::@com.sap.vocabularies.UI.v1.DataPoint#ReviewRatingValue",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines the width of the column.",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the width of the column.",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "ProductReviewFacetID",
                            "table",
                            "columns",
                            "DataFieldForAnnotation:::sTarget::@com.sap.vocabularies.UI.v1.DataPoint#ReviewRatingValue",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines the horizontal alignment of the column content.",
                          "displayName": "H Align",
                          "name": "hAlign",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Begin",
                              "text": "Begin",
                            },
                            Object {
                              "key": "Center",
                              "text": "Center",
                            },
                            Object {
                              "key": "End",
                              "text": "End",
                            },
                            Object {
                              "key": "Initial",
                              "text": "Initial",
                            },
                            Object {
                              "key": "Left",
                              "text": "Left",
                            },
                            Object {
                              "key": "Right",
                              "text": "Right",
                            },
                          ],
                          "schema": Object {
                            "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                            "enum": Array [
                              "Begin",
                              "Center",
                              "End",
                              "Initial",
                              "Left",
                              "Right",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "ProductReviewFacetID",
                            "table",
                            "columns",
                            "DataFieldForAnnotation:::sTarget::@com.sap.vocabularies.UI.v1.DataPoint#ReviewRatingValue",
                            "hAlign",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType/@com.sap.vocabularies.UI.v1.LineItem/0",
                        "dataType": "Rating",
                        "description": "Rating",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Target",
                            "value": "UI.DataPoint#ReviewRatingValue",
                          },
                        ],
                        "properties": Object {
                          "hAlign": Object {
                            "anyOf": Array [
                              Object {
                                "$ref": "#/definitions/TextAlign",
                              },
                              Object {
                                "type": "string",
                              },
                            ],
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the horizontal alignment of the column content.",
                            "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                          },
                          "width": Object {
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the width of the column.",
                            "type": "string",
                          },
                        },
                        "propertyIndex": 0,
                        "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType",
                        "type": "object",
                      },
                      "text": "Rating",
                      "title": "sTarget::@com.sap.vocabularies.UI.v1.DataPoint#ReviewRatingValue",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-ProductReviewFacetID-table-columns-ContactPerson-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "ProductReviewFacetID",
                        "table",
                        "columns",
                        "ContactPerson",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines the width of the column.",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the width of the column.",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "ProductReviewFacetID",
                            "table",
                            "columns",
                            "ContactPerson",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines the horizontal alignment of the column content.",
                          "displayName": "H Align",
                          "name": "hAlign",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Begin",
                              "text": "Begin",
                            },
                            Object {
                              "key": "Center",
                              "text": "Center",
                            },
                            Object {
                              "key": "End",
                              "text": "End",
                            },
                            Object {
                              "key": "Initial",
                              "text": "Initial",
                            },
                            Object {
                              "key": "Left",
                              "text": "Left",
                            },
                            Object {
                              "key": "Right",
                              "text": "Right",
                            },
                          ],
                          "schema": Object {
                            "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                            "enum": Array [
                              "Begin",
                              "Center",
                              "End",
                              "Initial",
                              "Left",
                              "Right",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "ProductReviewFacetID",
                            "table",
                            "columns",
                            "ContactPerson",
                            "hAlign",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType/@com.sap.vocabularies.UI.v1.LineItem/1",
                        "dataType": "String",
                        "description": "Person",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "ContactPerson",
                          },
                        ],
                        "properties": Object {
                          "hAlign": Object {
                            "anyOf": Array [
                              Object {
                                "$ref": "#/definitions/TextAlign",
                              },
                              Object {
                                "type": "string",
                              },
                            ],
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the horizontal alignment of the column content.",
                            "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                          },
                          "width": Object {
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the width of the column.",
                            "type": "string",
                          },
                        },
                        "propertyIndex": 1,
                        "type": "object",
                      },
                      "text": "Person",
                      "title": "ContactPerson",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-ProductReviewFacetID-table-columns-ReviewDate-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "ProductReviewFacetID",
                        "table",
                        "columns",
                        "ReviewDate",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines the width of the column.",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the width of the column.",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "ProductReviewFacetID",
                            "table",
                            "columns",
                            "ReviewDate",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines the horizontal alignment of the column content.",
                          "displayName": "H Align",
                          "name": "hAlign",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Begin",
                              "text": "Begin",
                            },
                            Object {
                              "key": "Center",
                              "text": "Center",
                            },
                            Object {
                              "key": "End",
                              "text": "End",
                            },
                            Object {
                              "key": "Initial",
                              "text": "Initial",
                            },
                            Object {
                              "key": "Left",
                              "text": "Left",
                            },
                            Object {
                              "key": "Right",
                              "text": "Right",
                            },
                          ],
                          "schema": Object {
                            "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                            "enum": Array [
                              "Begin",
                              "Center",
                              "End",
                              "Initial",
                              "Left",
                              "Right",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "ProductReviewFacetID",
                            "table",
                            "columns",
                            "ReviewDate",
                            "hAlign",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType/@com.sap.vocabularies.UI.v1.LineItem/2",
                        "dataType": "DateTime",
                        "description": "Date",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "ReviewDate",
                          },
                        ],
                        "properties": Object {
                          "hAlign": Object {
                            "anyOf": Array [
                              Object {
                                "$ref": "#/definitions/TextAlign",
                              },
                              Object {
                                "type": "string",
                              },
                            ],
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the horizontal alignment of the column content.",
                            "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                          },
                          "width": Object {
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the width of the column.",
                            "type": "string",
                          },
                        },
                        "propertyIndex": 2,
                        "type": "object",
                      },
                      "text": "Date",
                      "title": "ReviewDate",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-ProductReviewFacetID-table-columns-ReviewPostText-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "ProductReviewFacetID",
                        "table",
                        "columns",
                        "ReviewPostText",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines the width of the column.",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the width of the column.",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "ProductReviewFacetID",
                            "table",
                            "columns",
                            "ReviewPostText",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines the horizontal alignment of the column content.",
                          "displayName": "H Align",
                          "name": "hAlign",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Begin",
                              "text": "Begin",
                            },
                            Object {
                              "key": "Center",
                              "text": "Center",
                            },
                            Object {
                              "key": "End",
                              "text": "End",
                            },
                            Object {
                              "key": "Initial",
                              "text": "Initial",
                            },
                            Object {
                              "key": "Left",
                              "text": "Left",
                            },
                            Object {
                              "key": "Right",
                              "text": "Right",
                            },
                          ],
                          "schema": Object {
                            "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                            "enum": Array [
                              "Begin",
                              "Center",
                              "End",
                              "Initial",
                              "Left",
                              "Right",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "ProductReviewFacetID",
                            "table",
                            "columns",
                            "ReviewPostText",
                            "hAlign",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType/@com.sap.vocabularies.UI.v1.LineItem/3",
                        "dataType": "String",
                        "description": "Review Text",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "ReviewPostText",
                          },
                        ],
                        "properties": Object {
                          "hAlign": Object {
                            "anyOf": Array [
                              Object {
                                "$ref": "#/definitions/TextAlign",
                              },
                              Object {
                                "type": "string",
                              },
                            ],
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the horizontal alignment of the column content.",
                            "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                          },
                          "width": Object {
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the width of the column.",
                            "type": "string",
                          },
                        },
                        "propertyIndex": 3,
                        "type": "object",
                      },
                      "text": "Review Text",
                      "title": "ReviewPostText",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-sections-ProductReviewFacetID-table-columns-DataFieldForAnnotation:::sTarget::@com.sap.vocabularies.UI.v1.DataPoint#NumberOfAffirmativeAnswers-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "sections",
                        "ProductReviewFacetID",
                        "table",
                        "columns",
                        "DataFieldForAnnotation:::sTarget::@com.sap.vocabularies.UI.v1.DataPoint#NumberOfAffirmativeAnswers",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines the width of the column.",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the width of the column.",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "ProductReviewFacetID",
                            "table",
                            "columns",
                            "DataFieldForAnnotation:::sTarget::@com.sap.vocabularies.UI.v1.DataPoint#NumberOfAffirmativeAnswers",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "FlexChange",
                          "description": "Defines the horizontal alignment of the column content.",
                          "displayName": "H Align",
                          "name": "hAlign",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Begin",
                              "text": "Begin",
                            },
                            Object {
                              "key": "Center",
                              "text": "Center",
                            },
                            Object {
                              "key": "End",
                              "text": "End",
                            },
                            Object {
                              "key": "Initial",
                              "text": "Initial",
                            },
                            Object {
                              "key": "Left",
                              "text": "Left",
                            },
                            Object {
                              "key": "Right",
                              "text": "Right",
                            },
                          ],
                          "schema": Object {
                            "description": "Configuration options for text alignments.

This enum is part of the 'sap/ui/core/library' module export and must be accessed by the property 'TextAlign'.",
                            "enum": Array [
                              "Begin",
                              "Center",
                              "End",
                              "Initial",
                              "Left",
                              "Right",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "sections",
                            "ProductReviewFacetID",
                            "table",
                            "columns",
                            "DataFieldForAnnotation:::sTarget::@com.sap.vocabularies.UI.v1.DataPoint#NumberOfAffirmativeAnswers",
                            "hAlign",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType/@com.sap.vocabularies.UI.v1.LineItem/4",
                        "dataType": "Progress",
                        "description": "Helpful",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Target",
                            "value": "UI.DataPoint#NumberOfAffirmativeAnswers",
                          },
                        ],
                        "properties": Object {
                          "hAlign": Object {
                            "anyOf": Array [
                              Object {
                                "$ref": "#/definitions/TextAlign",
                              },
                              Object {
                                "type": "string",
                              },
                            ],
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the horizontal alignment of the column content.",
                            "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                          },
                          "width": Object {
                            "artifactType": "FlexChange",
                            "controlType": "sap.m.Column",
                            "description": "Defines the width of the column.",
                            "type": "string",
                          },
                        },
                        "propertyIndex": 4,
                        "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType",
                        "type": "object",
                      },
                      "text": "Helpful",
                      "title": "sTarget::@com.sap.vocabularies.UI.v1.DataPoint#NumberOfAffirmativeAnswers",
                      "type": undefined,
                      "value": undefined,
                    },
                  ],
                  "id": "outline-node-sections-ProductReviewFacetID-table-columns-node",
                  "moveProps": Object {
                    "allowedChildTypes": Array [
                      "actions",
                    ],
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "columns",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": false,
                    "description": "Columns",
                    "isViewNode": true,
                    "properties": Object {
                      "ContactPerson": Object {
                        "$ref": "#/definitions/TableColumn",
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType/@com.sap.vocabularies.UI.v1.LineItem/1",
                        "dataType": "String",
                        "description": "Person",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "ContactPerson",
                          },
                        ],
                        "propertyIndex": 1,
                      },
                      "DataFieldForAnnotation:::sTarget::@com.sap.vocabularies.UI.v1.DataPoint#NumberOfAffirmativeAnswers": Object {
                        "$ref": "#/definitions/TableColumn",
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType/@com.sap.vocabularies.UI.v1.LineItem/4",
                        "dataType": "Progress",
                        "description": "Helpful",
                        "keys": Array [
                          Object {
                            "name": "Target",
                            "value": "UI.DataPoint#NumberOfAffirmativeAnswers",
                          },
                        ],
                        "propertyIndex": 4,
                        "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType",
                      },
                      "DataFieldForAnnotation:::sTarget::@com.sap.vocabularies.UI.v1.DataPoint#ReviewRatingValue": Object {
                        "$ref": "#/definitions/TableColumn",
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType/@com.sap.vocabularies.UI.v1.LineItem/0",
                        "dataType": "Rating",
                        "description": "Rating",
                        "keys": Array [
                          Object {
                            "name": "Target",
                            "value": "UI.DataPoint#ReviewRatingValue",
                          },
                        ],
                        "propertyIndex": 0,
                        "target": "SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType",
                      },
                      "ReviewDate": Object {
                        "$ref": "#/definitions/TableColumn",
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType/@com.sap.vocabularies.UI.v1.LineItem/2",
                        "dataType": "DateTime",
                        "description": "Date",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "ReviewDate",
                          },
                        ],
                        "propertyIndex": 2,
                      },
                      "ReviewPostText": Object {
                        "$ref": "#/definitions/TableColumn",
                        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ReviewPostType/@com.sap.vocabularies.UI.v1.LineItem/3",
                        "dataType": "String",
                        "description": "Review Text",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "ReviewPostText",
                          },
                        ],
                        "propertyIndex": 3,
                      },
                      "custom": Object {
                        "$ref": "#/definitions/TableCustomColumns<SEPMRA_C_PD_ReviewPost><ProductReviewFacetID><ProductReviewFacetIDReviews>",
                      },
                    },
                    "type": "object",
                  },
                  "text": "Columns",
                  "title": undefined,
                  "type": undefined,
                  "value": undefined,
                },
              ],
              "id": "outline-node-sections-ProductReviewFacetID-table-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "sections",
                "ProductReviewFacetID",
                "table",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Single selection in tables is enabled by default. If you want, you can enable multi-select.",
                  "displayName": "Multi Select",
                  "name": "multiSelect",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether multi-select is enabled for tables. By default, you can only single-select.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "multiSelect",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Specifies the type of table.",
                  "displayName": "Type",
                  "name": "type",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "ResponsiveTable",
                      "text": "ResponsiveTable",
                    },
                    Object {
                      "key": "AnalyticalTable",
                      "text": "AnalyticalTable",
                    },
                    Object {
                      "key": "GridTable",
                      "text": "GridTable",
                    },
                    Object {
                      "key": "TreeTable",
                      "text": "TreeTable",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "const": "ResponsiveTable",
                    "description": "Specifies the type of table.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
                    "enum": Array [
                      "ResponsiveTable",
                      "AnalyticalTable",
                      "GridTable",
                      "TreeTable",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "type",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Set this property to true if you want items to be selectable when clicked rather than after the selection control has been set.",
                  "displayName": "Include Item In Selection",
                  "name": "includeItemInSelection",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Table",
                    "description": "Set this property to true if you want items to be selectable when clicked rather than after the selection control has been set.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "includeItemInSelection",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the layout the table pop-in rows are rendered in.",
                  "displayName": "Popin Layout",
                  "name": "popinLayout",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Block",
                      "text": "Block",
                    },
                    Object {
                      "key": "GridLarge",
                      "text": "GridLarge",
                    },
                    Object {
                      "key": "GridSmall",
                      "text": "GridSmall",
                    },
                  ],
                  "schema": Object {
                    "description": "Defines the layout options of the table popins.

This enum is part of the 'sap/m/library' module export and must be accessed by the property 'PopinLayout'.",
                    "enum": Array [
                      "Block",
                      "GridLarge",
                      "GridSmall",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "popinLayout",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.",
                  "displayName": "Growing Threshold",
                  "name": "growingThreshold",
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Table",
                    "description": "Defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.",
                    "type": "number",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "growingThreshold",
                  ],
                  "type": "number",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "You can set the following values for this property:
- creationRows: Used to enable empty rows mode. In create or edit mode an empty row is added to the table.
- creationRowsHiddenInEditMode: Like \\"creationRows\\", but in edit mode the empty row will only be shown when the user clicks the Create button. This option is available starting with SAPUI5 version 1.110.
- inline: In create or edit mode, the users can use the Create button to add new entries to the table. We recommend to use \\"creationRows\\" instead.
By default no empty row is provided and the Create button automatically navigates to the item's object page for the newly created entry.",
                  "displayName": "Create Mode",
                  "name": "createMode",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "creationRows",
                      "text": "creationRows",
                    },
                    Object {
                      "key": "creationRowsHiddenInEditMode",
                      "text": "creationRowsHiddenInEditMode",
                    },
                    Object {
                      "key": "inline",
                      "text": "inline",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "You can set the following values for this property:
- creationRows: Used to enable empty rows mode. In create or edit mode an empty row is added to the table.
- creationRowsHiddenInEditMode: Like \\"creationRows\\", but in edit mode the empty row will only be shown when the user clicks the Create button. This option is available starting with SAPUI5 version 1.110.
- inline: In create or edit mode, the users can use the Create button to add new entries to the table. We recommend to use \\"creationRows\\" instead.
By default no empty row is provided and the Create button automatically navigates to the item's object page for the newly created entry.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/cfb04f0c58e7409992feb4c91aa9410b",
                    "enum": Array [
                      "creationRows",
                      "creationRowsHiddenInEditMode",
                      "inline",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "createMode",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "When new data is loaded, the number of lines is restricted to the specified limit. The default value is 200.
If selectAll is true, the selection limit is not evaluated.",
                  "displayName": "Selection Limit",
                  "name": "selectionLimit",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "When new data is loaded, the number of lines is restricted to the specified limit. The default value is 200.
If selectAll is true, the selection limit is not evaluated.",
                    "type": "number",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "selectionLimit",
                  ],
                  "type": "number",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "If createMode is set to inline, you can use this setting to disable the default sort order.",
                  "displayName": "Disable Default Inline Create Sort",
                  "name": "disableDefaultInlineCreateSort",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "If createMode is set to inline, you can use this setting to disable the default sort order.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "disableDefaultInlineCreateSort",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
                  "displayName": "Use Export To Excel",
                  "name": "useExportToExcel",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.ui.comp.smarttable.SmartTable",
                    "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "useExportToExcel",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.",
                  "displayName": "Export Type",
                  "name": "exportType",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "GW",
                      "text": "GW",
                    },
                    Object {
                      "key": "UI5Client",
                      "text": "UI5Client",
                    },
                    Object {
                      "key": "UI5ClientPDF",
                      "text": "UI5ClientPDF",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.ui.comp.smarttable.SmartTable",
                    "description": "Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.",
                    "enum": Array [
                      "GW",
                      "UI5Client",
                      "UI5ClientPDF",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "exportType",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.",
                  "displayName": "Editable",
                  "name": "editable",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.ui.comp.smarttable.SmartTable",
                    "description": "With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "editable",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "FlexChange",
                  "description": "Determines the visibility of the Paste button in the table toolbar. By default, the Paste button is available if the page is in edit mode.
If this property is set to False, the Paste button is removed.
Note: We don't recommend setting this property to True, because it results in the Paste button being visible even when it does not have a function. For example, in display mode.",
                  "displayName": "Show Paste Button",
                  "name": "showPasteButton",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.ui.comp.smarttable.SmartTable",
                    "description": "Determines the visibility of the Paste button in the table toolbar. By default, the Paste button is available if the page is in edit mode.
If this property is set to False, the Paste button is removed.
Note: We don't recommend setting this property to True, because it results in the Paste button being visible even when it does not have a function. For example, in display mode.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/f6a8fd2812d9442a9bba2f6fb296c42e",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "showPasteButton",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "If set to true, the Copy to Clipboard button is shown in the table toolbar.
By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured for the corresponding table.",
                  "displayName": "Copy",
                  "name": "copy",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "If set to true, the Copy to Clipboard button is shown in the table toolbar.
By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured for the corresponding table.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "copy",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
                  "displayName": "Select All",
                  "name": "selectAll",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "selectAll",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Set this property to true to enable variant management for the table.",
                  "displayName": "Variant Management",
                  "name": "variantManagement",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Set this property to true to enable variant management for the table.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "variantManagement",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Used to enable inline deletion in a responsive table in list report and object pages.",
                  "displayName": "Inline Delete",
                  "name": "inlineDelete",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Used to enable inline deletion in a responsive table in list report and object pages.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "inlineDelete",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.",
                  "displayName": "Condensed Table Layout",
                  "name": "condensedTableLayout",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "condensedTableLayout",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "You can enable the creation of objects that have a maximum of eight data fields through a dialog in the list report page.",
                  "displayName": "createWithParameterDialog",
                  "name": "createWithParameterDialog",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "",
                      "displayName": "fields",
                      "name": "fields",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "items": Object {
                          "enum": Array [
                            "Delete_ac",
                            "Dislike_ac",
                            "Like_ac",
                            "Update_ac",
                            "ProductReviewPostUUID",
                            "ProductReviewUUID",
                            "Product",
                            "ReviewPostTitle",
                            "ReviewPostText",
                            "ReviewRatingValue",
                            "NumberOfAffirmativeAnswers",
                            "TotalNumberOfAnswers",
                            "ReviewDate",
                            "ContactPerson",
                            "IsReviewOfCurrentUser",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "schemaPath": Array [
                        "sections",
                        "ProductReviewFacetID",
                        "table",
                        "createWithParameterDialog",
                        "fields",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "You can enable the creation of objects that have a maximum of eight data fields through a dialog in the list report page.",
                    "properties": Object {
                      "fields": Object {
                        "artifactType": "Manifest",
                        "items": Object {
                          "enum": Array [
                            "Delete_ac",
                            "Dislike_ac",
                            "Like_ac",
                            "Update_ac",
                            "ProductReviewPostUUID",
                            "ProductReviewUUID",
                            "Product",
                            "ReviewPostTitle",
                            "ReviewPostText",
                            "ReviewRatingValue",
                            "NumberOfAffirmativeAnswers",
                            "TotalNumberOfAnswers",
                            "ReviewDate",
                            "ContactPerson",
                            "IsReviewOfCurrentUser",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                      },
                    },
                    "required": Array [
                      "fields",
                    ],
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "createWithParameterDialog",
                  ],
                  "type": "object",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "With quickVariantSelection, you can activate the multiple view feature. This feature links to variants that you have added to your annotations.",
                  "displayName": "quickVariantSelection",
                  "name": "quickVariantSelection",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "To show the number of records available, set showCounts to true.",
                      "displayName": "Show Counts",
                      "name": "showCounts",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "To show the number of records available, set showCounts to true.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "sections",
                        "ProductReviewFacetID",
                        "table",
                        "quickVariantSelection",
                        "showCounts",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "The variants section contains a set of entries that point to a SelectionVariant or a SelectionPresentationVariant annotation.",
                      "displayName": "variants",
                      "name": "variants",
                      "schema": Object {
                        "additionalProperties": Object {
                          "$ref": "#/definitions/QuickVariant<ProductReviewFacetID>",
                        },
                        "artifactType": "Manifest",
                        "description": "The variants section contains a set of entries that point to a SelectionVariant or a SelectionPresentationVariant annotation.",
                        "patternProperties": Object {
                          "^[0-9]+$": Object {
                            "$ref": "#/definitions/QuickVariant<ProductReviewFacetID>",
                          },
                        },
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "sections",
                        "ProductReviewFacetID",
                        "table",
                        "quickVariantSelection",
                        "variants",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "With quickVariantSelection, you can activate the multiple view feature. This feature links to variants that you have added to your annotations.",
                    "properties": Object {
                      "showCounts": Object {
                        "artifactType": "Manifest",
                        "description": "To show the number of records available, set showCounts to true.",
                        "type": "boolean",
                      },
                      "variants": Object {
                        "additionalProperties": Object {
                          "$ref": "#/definitions/QuickVariant<ProductReviewFacetID>",
                        },
                        "artifactType": "Manifest",
                        "description": "The variants section contains a set of entries that point to a SelectionVariant or a SelectionPresentationVariant annotation.",
                        "patternProperties": Object {
                          "^[0-9]+$": Object {
                            "$ref": "#/definitions/QuickVariant<ProductReviewFacetID>",
                          },
                        },
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "variants",
                    ],
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductReviewFacetID",
                    "table",
                    "quickVariantSelection",
                  ],
                  "type": "object",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.Facets/1",
                "controlProperty": "type",
                "description": "Table",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "ID",
                    "value": "ProductReviewFacetID",
                  },
                ],
                "properties": Object {
                  "columns": Object {
                    "$ref": "#/definitions/ProductReviewFacetID",
                    "description": "Columns",
                  },
                  "copy": Object {
                    "artifactType": "Manifest",
                    "description": "If set to true, the Copy to Clipboard button is shown in the table toolbar.
By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured for the corresponding table.",
                    "type": "boolean",
                  },
                  "createMode": Object {
                    "$ref": "#/definitions/CreateMode",
                    "artifactType": "Manifest",
                    "description": "You can set the following values for this property:
- creationRows: Used to enable empty rows mode. In create or edit mode an empty row is added to the table.
- creationRowsHiddenInEditMode: Like \\"creationRows\\", but in edit mode the empty row will only be shown when the user clicks the Create button. This option is available starting with SAPUI5 version 1.110.
- inline: In create or edit mode, the users can use the Create button to add new entries to the table. We recommend to use \\"creationRows\\" instead.
By default no empty row is provided and the Create button automatically navigates to the item's object page for the newly created entry.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/cfb04f0c58e7409992feb4c91aa9410b",
                  },
                  "createWithParameterDialog": Object {
                    "$ref": "#/definitions/Fields4DialogOP",
                    "artifactType": "Manifest",
                    "description": "You can enable the creation of objects that have a maximum of eight data fields through a dialog in the list report page.",
                  },
                  "disableDefaultInlineCreateSort": Object {
                    "artifactType": "Manifest",
                    "description": "If createMode is set to inline, you can use this setting to disable the default sort order.",
                    "type": "boolean",
                  },
                  "editable": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.ui.comp.smarttable.SmartTable",
                    "description": "With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.",
                    "type": "boolean",
                  },
                  "exportType": Object {
                    "$ref": "#/definitions/smarttable.ExportType",
                    "artifactType": "FlexChange",
                    "controlType": "sap.ui.comp.smarttable.SmartTable",
                    "description": "Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.",
                  },
                  "growingThreshold": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Table",
                    "description": "Defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.",
                    "type": "number",
                  },
                  "includeItemInSelection": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Table",
                    "description": "Set this property to true if you want items to be selectable when clicked rather than after the selection control has been set.",
                    "type": "boolean",
                  },
                  "multiSelect": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether multi-select is enabled for tables. By default, you can only single-select.",
                    "type": "boolean",
                  },
                  "popinLayout": Object {
                    "anyOf": Array [
                      Object {
                        "$ref": "#/definitions/PopinLayout",
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "FlexChange",
                    "controlType": "sap.m.Table",
                    "description": "Defines the layout the table pop-in rows are rendered in.",
                    "pattern": "^(Block|GridLarge|GridSmall)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "quickVariantSelection": Object {
                    "$ref": "#/definitions/QuickVariantSelectionOP<ProductReviewFacetID>",
                    "artifactType": "Manifest",
                    "description": "With quickVariantSelection, you can activate the multiple view feature. This feature links to variants that you have added to your annotations.",
                  },
                  "selectAll": Object {
                    "artifactType": "Manifest",
                    "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
                    "type": "boolean",
                  },
                  "selectionLimit": Object {
                    "artifactType": "Manifest",
                    "description": "When new data is loaded, the number of lines is restricted to the specified limit. The default value is 200.
If selectAll is true, the selection limit is not evaluated.",
                    "type": "number",
                  },
                  "showPasteButton": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.ui.comp.smarttable.SmartTable",
                    "description": "Determines the visibility of the Paste button in the table toolbar. By default, the Paste button is available if the page is in edit mode.
If this property is set to False, the Paste button is removed.
Note: We don't recommend setting this property to True, because it results in the Paste button being visible even when it does not have a function. For example, in display mode.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/f6a8fd2812d9442a9bba2f6fb296c42e",
                    "type": "boolean",
                  },
                  "toolBar": Object {
                    "$ref": "#/definitions/ObjectPageToolBar<ProductReviewFacetID>",
                    "description": "Tool Bar",
                  },
                  "type": Object {
                    "artifactType": "Manifest",
                    "const": "ResponsiveTable",
                    "description": "Specifies the type of table.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
                    "enum": Array [
                      "ResponsiveTable",
                    ],
                    "type": "string",
                  },
                  "useExportToExcel": Object {
                    "artifactType": "FlexChange",
                    "controlType": "sap.ui.comp.smarttable.SmartTable",
                    "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
                    "type": "boolean",
                  },
                  "variantManagement": Object {
                    "artifactType": "Manifest",
                    "description": "Set this property to true to enable variant management for the table.",
                    "type": "boolean",
                  },
                },
                "title": "Facet ID: ProductReviewFacetID",
                "type": "object",
              },
              "text": "Table",
              "title": "ProductReviewFacetID",
              "type": undefined,
              "value": Object {},
            },
          ],
          "id": "outline-node-sections-ProductReviewFacetID-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": "sections",
          },
          "path": Array [
            "sections",
            "ProductReviewFacetID",
          ],
          "properties": Array [
            Object {
              "artifactType": "FlexChange",
              "description": "Defines if this section should be visible.",
              "displayName": "Visible",
              "name": "visible",
              "schema": Object {
                "enum": Array [
                  false,
                  true,
                  "{ui>/editable}",
                  "{= !\${ui>/editable}}",
                ],
              },
              "schemaPath": Array [
                "sections",
                "ProductReviewFacetID",
                "visible",
              ],
              "type": "string",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.Facets/1",
            "description": "Reviews",
            "isViewNode": true,
            "keys": Array [
              Object {
                "name": "ID",
                "value": "ProductReviewFacetID",
              },
            ],
            "properties": Object {
              "table": Object {
                "anyOf": Array [
                  Object {
                    "$ref": "#/definitions/ObjectPageResponsiveTableWithMultiSelect<ProductReviewFacetID>",
                  },
                  Object {
                    "$ref": "#/definitions/ObjectPageResponsiveTableWithInlineDelete<ProductReviewFacetID>",
                  },
                  Object {
                    "$ref": "#/definitions/ObjectPageAnalyticalTable<ProductReviewFacetID>",
                  },
                  Object {
                    "$ref": "#/definitions/ObjectPageGridTable<ProductReviewFacetID>",
                  },
                  Object {
                    "$ref": "#/definitions/ObjectPageTreeTable<ProductReviewFacetID>",
                  },
                ],
              },
              "visible": Object {
                "anyOf": Array [
                  Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/editable}",
                      "{= !\${ui>/editable}}",
                    ],
                  },
                  Object {
                    "type": "string",
                  },
                ],
                "artifactType": "FlexChange",
                "controlType": "sap.uxap.ObjectPageSection",
                "description": "Defines if this section should be visible.",
                "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
              },
            },
            "title": "Facet ID: ProductReviewFacetID",
            "type": "object",
          },
          "text": "Reviews",
          "title": "ProductReviewFacetID",
          "type": undefined,
          "value": Object {
            "table": Object {},
          },
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-sections-ProductSmartChartFacetID-chart-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "sections",
                "ProductSmartChartFacetID",
                "chart",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "Enables variant management for charts in an object page.",
                  "displayName": "Variant Management",
                  "name": "variantManagement",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Enables variant management for charts in an object page.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "sections",
                    "ProductSmartChartFacetID",
                    "chart",
                    "variantManagement",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "description": "Chart",
                "isViewNode": true,
                "properties": Object {
                  "variantManagement": Object {
                    "artifactType": "Manifest",
                    "description": "Enables variant management for charts in an object page.",
                    "type": "boolean",
                  },
                },
                "type": "object",
              },
              "text": "Chart",
              "title": undefined,
              "type": undefined,
              "value": Object {},
            },
          ],
          "id": "outline-node-sections-ProductSmartChartFacetID-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": "sections",
          },
          "path": Array [
            "sections",
            "ProductSmartChartFacetID",
          ],
          "properties": Array [
            Object {
              "artifactType": "FlexChange",
              "description": "Defines if this section should be visible.",
              "displayName": "Visible",
              "name": "visible",
              "schema": Object {
                "enum": Array [
                  false,
                  true,
                  "{ui>/editable}",
                  "{= !\${ui>/editable}}",
                ],
              },
              "schemaPath": Array [
                "sections",
                "ProductSmartChartFacetID",
                "visible",
              ],
              "type": "string",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.Facets/2",
            "description": "Sales Data",
            "isViewNode": true,
            "keys": Array [
              Object {
                "name": "ID",
                "value": "ProductSmartChartFacetID",
              },
            ],
            "properties": Object {
              "chart": Object {
                "$ref": "#/definitions/ObjectPageChart",
              },
              "visible": Object {
                "anyOf": Array [
                  Object {
                    "enum": Array [
                      false,
                      true,
                      "{ui>/editable}",
                      "{= !\${ui>/editable}}",
                    ],
                  },
                  Object {
                    "type": "string",
                  },
                ],
                "artifactType": "FlexChange",
                "controlType": "sap.uxap.ObjectPageSection",
                "description": "Defines if this section should be visible.",
                "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
              },
            },
            "title": "Facet ID: ProductSmartChartFacetID",
            "type": "object",
          },
          "text": "Sales Data",
          "title": "ProductSmartChartFacetID",
          "type": undefined,
          "value": Object {
            "chart": Object {},
          },
        },
      ],
      "id": "outline-node-sections-node",
      "moveProps": Object {
        "allowedChildTypes": Array [
          "sections",
        ],
        "allowedParents": undefined,
        "movable": false,
        "type": "sections",
      },
      "path": Array [
        "sections",
      ],
      "properties": Array [],
      "schema": Object {
        "additionalProperties": false,
        "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.Facets",
        "description": "Sections",
        "isViewNode": true,
        "properties": Object {
          "@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData": Object {
            "$ref": "#/definitions/ObjectPageSectionFormV2<@com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData>",
          },
          "ProductReviewFacetID": Object {
            "$ref": "#/definitions/ObjectPageSectionTableV2<ProductReviewFacetID>",
          },
          "ProductSmartChartFacetID": Object {
            "$ref": "#/definitions/ObjectPageSectionChartV2<ProductSmartChartFacetID>",
          },
          "custom": Object {
            "items": Object {
              "anyOf": Array [
                Object {
                  "$ref": "#/definitions/ObjectPageCustomSectionView",
                },
                Object {
                  "$ref": "#/definitions/ObjectPageCustomSectionFragment",
                },
              ],
            },
            "type": "array",
          },
        },
        "propertyIndex": 1,
        "type": "object",
      },
      "text": "Sections",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "ProductReviewFacetID": Object {
          "table": Object {},
        },
        "ProductSmartChartFacetID": Object {
          "chart": Object {},
        },
        "custom": Array [
          Object {
            "className": "sap.ui.core.Fragment",
            "fragmentName": "fev2.ext.fragment.CustomSection",
            "relatedFacet": "com.sap.vocabularies.UI.v1.FieldGroup::TechnicalData",
            "relativePosition": "AfterFacet",
            "title": "custom section",
            "type": "XML",
          },
        ],
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [],
          "id": "outline-node-footer-actions-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "footer",
            "actions",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/SEPMRA_PROD_MAN.SEPMRA_C_PD_ProductType/@com.sap.vocabularies.UI.v1.Identification",
            "description": "Actions",
            "isViewNode": true,
            "properties": Object {},
            "type": "object",
          },
          "text": "Actions",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
      ],
      "id": "outline-node-footer-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "footer",
      ],
      "properties": Array [],
      "schema": Object {
        "additionalProperties": false,
        "description": "Footer",
        "isViewNode": true,
        "properties": Object {
          "actions": Object {
            "$ref": "#/definitions/FooterActions",
          },
        },
        "propertyIndex": 2,
        "type": "object",
      },
      "text": "Footer",
      "title": undefined,
      "type": undefined,
      "value": Object {},
    },
  ],
  "id": "outline-noderoot-node",
  "moveProps": undefined,
  "path": Array [],
  "properties": Array [
    Object {
      "artifactType": "Manifest",
      "description": "Set showConfirmationOnDraftActivate to true to enable a confirmation before a save if you have pending warnings.",
      "displayName": "Show Confirmation On Draft Activate",
      "name": "showConfirmationOnDraftActivate",
      "options": Array [
        Object {
          "key": undefined,
          "text": "",
        },
        Object {
          "key": true,
          "text": "True",
        },
        Object {
          "key": false,
          "text": "False",
        },
      ],
      "schema": Object {
        "artifactType": "Manifest",
        "description": "Set showConfirmationOnDraftActivate to true to enable a confirmation before a save if you have pending warnings.",
        "type": "boolean",
      },
      "schemaPath": Array [
        "showConfirmationOnDraftActivate",
      ],
      "type": "boolean",
      "value": undefined,
    },
    Object {
      "artifactType": "Manifest",
      "description": "If you set this property to true, the navigation chevron is hidden in case the launchpad indicates that the user has no authorization to navigate.",
      "displayName": "Hide Chevron For Unauthorized Ext Nav",
      "name": "hideChevronForUnauthorizedExtNav",
      "options": Array [
        Object {
          "key": undefined,
          "text": "",
        },
        Object {
          "key": true,
          "text": "True",
        },
        Object {
          "key": false,
          "text": "False",
        },
      ],
      "schema": Object {
        "artifactType": "Manifest",
        "description": "If you set this property to true, the navigation chevron is hidden in case the launchpad indicates that the user has no authorization to navigate.",
        "type": "boolean",
      },
      "schemaPath": Array [
        "hideChevronForUnauthorizedExtNav",
      ],
      "type": "boolean",
      "value": undefined,
    },
    Object {
      "artifactType": "Manifest",
      "description": "Restricts deep linking to certain object page levels.",
      "displayName": "Allow Deep Linking",
      "name": "allowDeepLinking",
      "options": Array [
        Object {
          "key": undefined,
          "text": "",
        },
        Object {
          "key": true,
          "text": "True",
        },
        Object {
          "key": false,
          "text": "False",
        },
      ],
      "schema": Object {
        "artifactType": "Manifest",
        "description": "Restricts deep linking to certain object page levels.",
        "type": "boolean",
      },
      "schemaPath": Array [
        "allowDeepLinking",
      ],
      "type": "boolean",
      "value": undefined,
    },
    Object {
      "artifactType": "Manifest",
      "description": "If you set navToListOnSave to true, the application will navigate back to the list on a save.",
      "displayName": "Nav To List On Save",
      "name": "navToListOnSave",
      "options": Array [
        Object {
          "key": undefined,
          "text": "",
        },
        Object {
          "key": true,
          "text": "True",
        },
        Object {
          "key": false,
          "text": "False",
        },
      ],
      "schema": Object {
        "artifactType": "Manifest",
        "description": "If you set navToListOnSave to true, the application will navigate back to the list on a save.",
        "type": "boolean",
      },
      "schemaPath": Array [
        "navToListOnSave",
      ],
      "type": "boolean",
      "value": undefined,
    },
    Object {
      "artifactType": "Manifest",
      "description": "If this flag is set, then during inbound navigation to flexible column layout application, if the navigation context points to a unique object, the object page is opened in full screen mode.",
      "displayName": "Default Layout Type If External Navigation",
      "name": "defaultLayoutTypeIfExternalNavigation",
      "options": Array [
        Object {
          "key": "",
          "text": "",
        },
        Object {
          "key": "MidColumnFullScreen",
          "text": "MidColumnFullScreen",
        },
      ],
      "schema": Object {
        "artifactType": "Manifest",
        "const": "MidColumnFullScreen",
        "description": "If this flag is set, then during inbound navigation to flexible column layout application, if the navigation context points to a unique object, the object page is opened in full screen mode.",
        "enum": Array [
          "MidColumnFullScreen",
        ],
        "type": "string",
      },
      "schemaPath": Array [
        "defaultLayoutTypeIfExternalNavigation",
      ],
      "type": "string",
      "value": "MidColumnFullScreen",
    },
    Object {
      "artifactType": "Manifest",
      "description": "Settings for all tables of the object page.",
      "displayName": "globalTableSettings",
      "name": "globalTableSettings",
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Use type to define the default table type (can be overridden by specific tables).",
          "displayName": "Type",
          "name": "type",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "AnalyticalTable",
              "text": "AnalyticalTable",
            },
            Object {
              "key": "GridTable",
              "text": "GridTable",
            },
            Object {
              "key": "ResponsiveTable",
              "text": "ResponsiveTable",
            },
            Object {
              "key": "TreeTable",
              "text": "TreeTable",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Use type to define the default table type (can be overridden by specific tables).",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
            "enum": Array [
              "AnalyticalTable",
              "GridTable",
              "ResponsiveTable",
              "TreeTable",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "globalTableSettings",
            "type",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Single selection in tables is enabled by default. You can enable multi-select by setting this property to true.",
          "displayName": "Multi Select",
          "name": "multiSelect",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Single selection in tables is enabled by default. You can enable multi-select by setting this property to true.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "globalTableSettings",
            "multiSelect",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.",
          "displayName": "Condensed Table Layout",
          "name": "condensedTableLayout",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "globalTableSettings",
            "condensedTableLayout",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Used to enable inline deletion in a responsive table.",
          "displayName": "Inline Delete",
          "name": "inlineDelete",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Used to enable inline deletion in a responsive table.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "globalTableSettings",
            "inlineDelete",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
          "displayName": "Select All",
          "name": "selectAll",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "globalTableSettings",
            "selectAll",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Set this property to true to enable variant management for the table.",
          "displayName": "Variant Management",
          "name": "variantManagement",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Set this property to true to enable variant management for the table.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "globalTableSettings",
            "variantManagement",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "If copy is set to true, the Copy button is shown in the table toolbar.",
          "displayName": "Copy",
          "name": "copy",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "If copy is set to true, the Copy button is shown in the table toolbar.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "globalTableSettings",
            "copy",
          ],
          "type": "boolean",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "artifactType": "Manifest",
        "description": "Settings for all tables of the object page.",
        "properties": Object {
          "condensedTableLayout": Object {
            "artifactType": "Manifest",
            "description": "For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.",
            "type": "boolean",
          },
          "copy": Object {
            "artifactType": "Manifest",
            "description": "If copy is set to true, the Copy button is shown in the table toolbar.",
            "type": "boolean",
          },
          "inlineDelete": Object {
            "artifactType": "Manifest",
            "description": "Used to enable inline deletion in a responsive table.",
            "type": "boolean",
          },
          "multiSelect": Object {
            "artifactType": "Manifest",
            "description": "Single selection in tables is enabled by default. You can enable multi-select by setting this property to true.",
            "type": "boolean",
          },
          "selectAll": Object {
            "artifactType": "Manifest",
            "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
            "type": "boolean",
          },
          "type": Object {
            "$ref": "#/definitions/TableTypeV2",
            "artifactType": "Manifest",
            "description": "Use type to define the default table type (can be overridden by specific tables).",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
          },
          "variantManagement": Object {
            "artifactType": "Manifest",
            "description": "Set this property to true to enable variant management for the table.",
            "type": "boolean",
          },
        },
        "type": "object",
      },
      "schemaPath": Array [
        "globalTableSettings",
      ],
      "type": "object",
      "value": undefined,
    },
    Object {
      "artifactType": "Manifest",
      "description": "Settings for all charts on an object page.",
      "displayName": "globalChartSettings",
      "name": "globalChartSettings",
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Enables variant management for charts in an object page.",
          "displayName": "Variant Management",
          "name": "variantManagement",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Enables variant management for charts in an object page.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "globalChartSettings",
            "variantManagement",
          ],
          "type": "boolean",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "artifactType": "Manifest",
        "description": "Settings for all charts on an object page.",
        "properties": Object {
          "variantManagement": Object {
            "artifactType": "Manifest",
            "description": "Enables variant management for charts in an object page.",
            "type": "boolean",
          },
        },
        "type": "object",
      },
      "schemaPath": Array [
        "globalChartSettings",
      ],
      "type": "object",
      "value": undefined,
    },
  ],
  "root": true,
  "schema": undefined,
  "text": "Root",
  "title": undefined,
  "type": "rootNode",
  "value": undefined,
}
`;

exports[`getTree getTree - chart ListReport page 1`] = `
Object {
  "additionalText": undefined,
  "annotationNodeId": Array [],
  "children": Array [
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [],
          "id": "outline-node-header-actions-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "header",
            "actions",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/CustomHeaderAction",
            },
            "description": "Actions",
            "isViewNode": true,
            "properties": Object {},
            "type": "object",
          },
          "text": "Actions",
          "title": undefined,
          "type": undefined,
          "value": Object {},
        },
      ],
      "id": "outline-node-header-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "header",
      ],
      "properties": Array [],
      "schema": Object {
        "additionalProperties": false,
        "description": "Header",
        "isViewNode": true,
        "properties": Object {
          "actions": Object {
            "$ref": "#/definitions/HeaderActions",
          },
        },
        "propertyIndex": 0,
        "type": "object",
      },
      "text": "Header",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "actions": Object {},
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::to_Agency_AgencyID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::to_Agency_AgencyID",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.SelectionFields/0",
                "annotationType": "PropertyPath",
                "dataType": "String",
                "description": "{i18n>AgencyID}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_Agency_AgencyID",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 0,
                "target": "TravelService.Travel",
                "type": "object",
              },
              "text": "{i18n>AgencyID}",
              "title": "to_Agency_AgencyID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::to_Customer_CustomerID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::to_Customer_CustomerID",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.SelectionFields/1",
                "annotationType": "PropertyPath",
                "dataType": "String",
                "description": "{i18n>CustomerID}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_Customer_CustomerID",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 1,
                "target": "TravelService.Travel",
                "type": "object",
              },
              "text": "{i18n>CustomerID}",
              "title": "to_Customer_CustomerID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::TravelStatus_code-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::TravelStatus_code",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.SelectionFields/2",
                "annotationType": "PropertyPath",
                "dataType": "String",
                "description": "{i18n>TravelStatus}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TravelStatus_code",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 2,
                "target": "TravelService.Travel",
                "type": "object",
              },
              "text": "{i18n>TravelStatus}",
              "title": "TravelStatus_code",
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-filterBar-selectionFields-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "filterBar",
            "selectionFields",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/CustomFilterField",
            },
            "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.SelectionFields",
            "description": "Filter Fields",
            "isViewNode": true,
            "properties": Object {
              "SelectionField::TravelStatus_code": Object {
                "$ref": "#/definitions/SelectionField::TravelStatus_code",
                "propertyIndex": 2,
              },
              "SelectionField::to_Agency_AgencyID": Object {
                "$ref": "#/definitions/SelectionField::to_Agency_AgencyID",
                "propertyIndex": 0,
              },
              "SelectionField::to_Customer_CustomerID": Object {
                "$ref": "#/definitions/SelectionField::to_Customer_CustomerID",
                "propertyIndex": 1,
              },
            },
            "type": "object",
          },
          "text": "Filter Fields",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
      ],
      "id": "outline-node-filterBar-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "filterBar",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Allows you to hide the filter bar.",
          "displayName": "Hide Filter Bar",
          "name": "hideFilterBar",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Allows you to hide the filter bar.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bd7590569c74c61a0124c6e370030f6",
            "type": "boolean",
          },
          "schemaPath": Array [
            "filterBar",
            "hideFilterBar",
          ],
          "type": "boolean",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "description": "Filter Bar",
        "isViewNode": true,
        "properties": Object {
          "hideFilterBar": Object {
            "artifactType": "Manifest",
            "description": "Allows you to hide the filter bar.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bd7590569c74c61a0124c6e370030f6",
            "type": "boolean",
          },
          "initialLayout": Object {
            "$ref": "#/definitions/InitialLayoutType",
            "artifactType": "Manifest",
            "description": "Allows you to specify the default filter mode on the initial load.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
            "hidden": true,
          },
          "layout": Object {
            "$ref": "#/definitions/LayoutType",
            "artifactType": "Manifest",
            "description": "Allows you to specify the layout of the filter bar.
- Compact: This setting shows filter fields in compact mode.
- CompactVisual: This setting shows filter fields in both compact and visual modes.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
            "hidden": true,
          },
          "selectionFields": Object {
            "anyOf": Array [
              Object {
                "$ref": "#/definitions/SelectionFields",
              },
              Object {
                "$ref": "#/definitions/CompactFilters",
              },
            ],
            "isViewNode": true,
          },
          "visualFilters": Object {
            "$ref": "#/definitions/VisualFilters",
          },
        },
        "propertyIndex": 1,
        "type": "object",
      },
      "text": "Filter Bar",
      "title": undefined,
      "type": undefined,
      "value": Object {},
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-chart-toolBar-actions-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "chart",
                "toolBar",
                "actions",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "description": "Actions",
                "isViewNode": true,
                "properties": Object {},
                "type": "object",
              },
              "text": "Actions",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-chart-toolBar-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "chart",
            "toolBar",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "description": "Chart Toolbar",
            "isViewNode": true,
            "properties": Object {
              "actions": Object {
                "$ref": "#/definitions/Actions<ALPChart>",
              },
            },
            "required": Array [
              "actions",
            ],
            "type": "object",
          },
          "text": "Chart Toolbar",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
      ],
      "id": "outline-node-chart-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "chart",
      ],
      "properties": Array [],
      "schema": Object {
        "additionalProperties": false,
        "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.Chart#alpChart",
        "artifactType": "Manifest",
        "description": "Chart",
        "isViewNode": true,
        "key": "primary",
        "keys": Array [
          Object {
            "name": "Key",
            "value": "primary",
          },
        ],
        "properties": Object {
          "annotationPath": Object {
            "description": "The primary annotation path can be either UI.Chart, UI.PresentationVariant, or UI.SelectionPresentationVariant.",
            "hidden": true,
            "type": "string",
          },
          "toolBar": Object {
            "$ref": "#/definitions/ViewChartToolBar",
            "description": "Chart Toolbar",
          },
        },
        "propertyIndex": 2,
        "required": Array [
          "annotationPath",
        ],
        "title": "Chart",
        "type": "object",
      },
      "text": "Chart",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "annotationPath": "com.sap.vocabularies.UI.v1.Chart#alpChart",
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-DataFieldForAction::TravelService.acceptTravel-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "DataFieldForAction::TravelService.acceptTravel",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Enables single selection for a bound action.",
                      "displayName": "Enable On Select",
                      "name": "enableOnSelect",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "multi",
                          "text": "multi",
                        },
                        Object {
                          "key": "single",
                          "text": "single",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::TravelService.acceptTravel",
                        "enableOnSelect",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Settings that control the behavior after creating a new entry.",
                      "displayName": "afterExecution",
                      "name": "afterExecution",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                          "displayName": "Navigate To Instance",
                          "name": "navigateToInstance",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::TravelService.acceptTravel",
                            "afterExecution",
                            "navigateToInstance",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                          "displayName": "Enable Auto Scroll",
                          "name": "enableAutoScroll",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::TravelService.acceptTravel",
                            "afterExecution",
                            "enableAutoScroll",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                        "properties": Object {
                          "enableAutoScroll": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "navigateToInstance": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::TravelService.acceptTravel",
                        "afterExecution",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/0",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "{i18n>AcceptTravel}",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "acceptTravel",
                      },
                    ],
                    "properties": Object {
                      "afterExecution": Object {
                        "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                      },
                      "enableOnSelect": Object {
                        "$ref": "#/definitions/SelectType",
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                      },
                    },
                    "propertyIndex": 0,
                    "target": "TravelService",
                    "type": "object",
                  },
                  "text": "{i18n>AcceptTravel}",
                  "title": "acceptTravel",
                  "type": undefined,
                  "value": undefined,
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-DataFieldForAction::TravelService.rejectTravel-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "DataFieldForAction::TravelService.rejectTravel",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Enables single selection for a bound action.",
                      "displayName": "Enable On Select",
                      "name": "enableOnSelect",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "multi",
                          "text": "multi",
                        },
                        Object {
                          "key": "single",
                          "text": "single",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::TravelService.rejectTravel",
                        "enableOnSelect",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Settings that control the behavior after creating a new entry.",
                      "displayName": "afterExecution",
                      "name": "afterExecution",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                          "displayName": "Navigate To Instance",
                          "name": "navigateToInstance",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::TravelService.rejectTravel",
                            "afterExecution",
                            "navigateToInstance",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                          "displayName": "Enable Auto Scroll",
                          "name": "enableAutoScroll",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::TravelService.rejectTravel",
                            "afterExecution",
                            "enableAutoScroll",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                        "properties": Object {
                          "enableAutoScroll": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "navigateToInstance": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::TravelService.rejectTravel",
                        "afterExecution",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/1",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "{i18n>RejectTravel}",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "rejectTravel",
                      },
                    ],
                    "properties": Object {
                      "afterExecution": Object {
                        "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                      },
                      "enableOnSelect": Object {
                        "$ref": "#/definitions/SelectType",
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                      },
                    },
                    "propertyIndex": 1,
                    "target": "TravelService",
                    "type": "object",
                  },
                  "text": "{i18n>RejectTravel}",
                  "title": "rejectTravel",
                  "type": undefined,
                  "value": undefined,
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [],
                  "id": "outline-node-table-toolBar-actions-DataFieldForAction::TravelService.deductDiscount-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "toolBar",
                    "actions",
                    "DataFieldForAction::TravelService.deductDiscount",
                  ],
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Enables single selection for a bound action.",
                      "displayName": "Enable On Select",
                      "name": "enableOnSelect",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "multi",
                          "text": "multi",
                        },
                        Object {
                          "key": "single",
                          "text": "single",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                        "enum": Array [
                          "multi",
                          "single",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::TravelService.deductDiscount",
                        "enableOnSelect",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Settings that control the behavior after creating a new entry.",
                      "displayName": "afterExecution",
                      "name": "afterExecution",
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                          "displayName": "Navigate To Instance",
                          "name": "navigateToInstance",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::TravelService.deductDiscount",
                            "afterExecution",
                            "navigateToInstance",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                          "displayName": "Enable Auto Scroll",
                          "name": "enableAutoScroll",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::TravelService.deductDiscount",
                            "afterExecution",
                            "enableAutoScroll",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                        "properties": Object {
                          "enableAutoScroll": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                            "type": "boolean",
                          },
                          "navigateToInstance": Object {
                            "artifactType": "Manifest",
                            "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "schemaPath": Array [
                        "table",
                        "toolBar",
                        "actions",
                        "DataFieldForAction::TravelService.deductDiscount",
                        "afterExecution",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/2",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "{i18n>DeductDiscount}",
                    "isViewNode": true,
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "deductDiscount",
                      },
                    ],
                    "properties": Object {
                      "afterExecution": Object {
                        "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                        "artifactType": "Manifest",
                        "description": "Settings that control the behavior after creating a new entry.",
                      },
                      "enableOnSelect": Object {
                        "$ref": "#/definitions/SelectType",
                        "artifactType": "Manifest",
                        "description": "Enables single selection for a bound action.",
                      },
                    },
                    "propertyIndex": 2,
                    "target": "TravelService",
                    "type": "object",
                  },
                  "text": "{i18n>DeductDiscount}",
                  "title": "deductDiscount",
                  "type": undefined,
                  "value": undefined,
                },
              ],
              "id": "outline-node-table-toolBar-actions-node",
              "moveProps": Object {
                "allowedChildTypes": Array [
                  "actions",
                ],
                "allowedParents": undefined,
                "movable": false,
                "type": "actions",
              },
              "path": Array [
                "table",
                "toolBar",
                "actions",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": Object {
                  "$ref": "#/definitions/CustomTableAction",
                },
                "description": "Actions",
                "isViewNode": true,
                "properties": Object {
                  "DataFieldForAction::TravelService.acceptTravel": Object {
                    "$ref": "#/definitions/ToolBarAction<TravelService.acceptTravel>",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "{i18n>AcceptTravel}",
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "acceptTravel",
                      },
                    ],
                    "propertyIndex": 0,
                    "target": "TravelService",
                  },
                  "DataFieldForAction::TravelService.deductDiscount": Object {
                    "$ref": "#/definitions/ToolBarAction<TravelService.deductDiscount>",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "{i18n>DeductDiscount}",
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "deductDiscount",
                      },
                    ],
                    "propertyIndex": 2,
                    "target": "TravelService",
                  },
                  "DataFieldForAction::TravelService.rejectTravel": Object {
                    "$ref": "#/definitions/ToolBarAction<TravelService.rejectTravel>",
                    "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                    "dataType": "DataFieldForAction",
                    "description": "{i18n>RejectTravel}",
                    "keys": Array [
                      Object {
                        "name": "Action",
                        "value": "rejectTravel",
                      },
                    ],
                    "propertyIndex": 1,
                    "target": "TravelService",
                  },
                },
                "type": "object",
              },
              "text": "Actions",
              "title": undefined,
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-table-toolBar-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "table",
            "toolBar",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": false,
            "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem",
            "description": "Table Toolbar",
            "isViewNode": true,
            "properties": Object {
              "actions": Object {
                "$ref": "#/definitions/Actions<LineItems>",
              },
            },
            "required": Array [
              "actions",
            ],
            "type": "object",
          },
          "text": "Table Toolbar",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::TravelID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::TravelID",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TravelID",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TravelID",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TravelID",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/3",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Int32",
                "description": "{i18n>TravelID}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TravelID",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 0,
                "type": "object",
              },
              "text": "{i18n>TravelID}",
              "title": "TravelID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::to_Agency_AgencyID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::to_Agency_AgencyID",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::to_Agency_AgencyID",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::to_Agency_AgencyID",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::to_Agency_AgencyID",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/4",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "{i18n>AgencyID}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_Agency_AgencyID",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 1,
                "type": "object",
              },
              "text": "{i18n>AgencyID}",
              "title": "to_Agency_AgencyID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::to_Customer_CustomerID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::to_Customer_CustomerID",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::to_Customer_CustomerID",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::to_Customer_CustomerID",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::to_Customer_CustomerID",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/5",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "{i18n>CustomerID}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_Customer_CustomerID",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 2,
                "type": "object",
              },
              "text": "{i18n>CustomerID}",
              "title": "to_Customer_CustomerID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::BeginDate-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::BeginDate",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::BeginDate",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::BeginDate",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::BeginDate",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/6",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Date",
                "description": "{i18n>BeginDate}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "BeginDate",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 3,
                "type": "object",
              },
              "text": "{i18n>BeginDate}",
              "title": "BeginDate",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::EndDate-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::EndDate",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::EndDate",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::EndDate",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::EndDate",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/7",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Date",
                "description": "{i18n>EndDate}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "EndDate",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 4,
                "type": "object",
              },
              "text": "{i18n>EndDate}",
              "title": "EndDate",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::BookingFee-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::BookingFee",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::BookingFee",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::BookingFee",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::BookingFee",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/8",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Decimal",
                "description": "{i18n>BookingFee}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "BookingFee",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 5,
                "type": "object",
              },
              "text": "{i18n>BookingFee}",
              "title": "BookingFee",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::TotalPrice-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::TotalPrice",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TotalPrice",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TotalPrice",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TotalPrice",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/9",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Decimal",
                "description": "{i18n>TotalPrice}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TotalPrice",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 6,
                "type": "object",
              },
              "text": "{i18n>TotalPrice}",
              "title": "TotalPrice",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-columns-DataField::TravelStatus_code-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "table",
                "columns",
                "DataField::TravelStatus_code",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                  "displayName": "Width",
                  "name": "width",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TravelStatus_code",
                    "width",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  "displayName": "Availability",
                  "name": "availability",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Adaptation",
                      "text": "Adaptation",
                    },
                    Object {
                      "key": "Default",
                      "text": "Default",
                    },
                    Object {
                      "key": "Hidden",
                      "text": "Hidden",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                    "enum": Array [
                      "Adaptation",
                      "Default",
                      "Hidden",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TravelStatus_code",
                    "availability",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "columns",
                    "DataField::TravelStatus_code",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/10",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "{i18n>TravelStatus}",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TravelStatus_code",
                  },
                ],
                "properties": Object {
                  "availability": Object {
                    "$ref": "#/definitions/Availability",
                    "artifactType": "Manifest",
                    "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                  },
                  "width": Object {
                    "artifactType": "Manifest",
                    "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                    "type": "string",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "propertyIndex": 7,
                "type": "object",
              },
              "text": "{i18n>TravelStatus}",
              "title": "TravelStatus_code",
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-table-columns-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "table",
            "columns",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/TableCustomColumn",
            },
            "description": "Columns",
            "isViewNode": true,
            "properties": Object {
              "DataField::BeginDate": Object {
                "$ref": "#/definitions/ViewTableColumn",
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/6",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Date",
                "description": "{i18n>BeginDate}",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "BeginDate",
                  },
                ],
                "propertyIndex": 3,
              },
              "DataField::BookingFee": Object {
                "$ref": "#/definitions/ViewTableColumn",
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/8",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Decimal",
                "description": "{i18n>BookingFee}",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "BookingFee",
                  },
                ],
                "propertyIndex": 5,
              },
              "DataField::EndDate": Object {
                "$ref": "#/definitions/ViewTableColumn",
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/7",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Date",
                "description": "{i18n>EndDate}",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "EndDate",
                  },
                ],
                "propertyIndex": 4,
              },
              "DataField::TotalPrice": Object {
                "$ref": "#/definitions/ViewTableColumn",
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/9",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Decimal",
                "description": "{i18n>TotalPrice}",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TotalPrice",
                  },
                ],
                "propertyIndex": 6,
              },
              "DataField::TravelID": Object {
                "$ref": "#/definitions/ViewTableColumn",
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/3",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "Int32",
                "description": "{i18n>TravelID}",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TravelID",
                  },
                ],
                "propertyIndex": 0,
              },
              "DataField::TravelStatus_code": Object {
                "$ref": "#/definitions/ViewTableColumn",
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/10",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "{i18n>TravelStatus}",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TravelStatus_code",
                  },
                ],
                "propertyIndex": 7,
              },
              "DataField::to_Agency_AgencyID": Object {
                "$ref": "#/definitions/ViewTableColumn",
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/4",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "{i18n>AgencyID}",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_Agency_AgencyID",
                  },
                ],
                "propertyIndex": 1,
              },
              "DataField::to_Customer_CustomerID": Object {
                "$ref": "#/definitions/ViewTableColumn",
                "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem/5",
                "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                "dataType": "String",
                "description": "{i18n>CustomerID}",
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "to_Customer_CustomerID",
                  },
                ],
                "propertyIndex": 2,
              },
            },
            "type": "object",
          },
          "text": "Columns",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
      ],
      "id": "outline-node-table-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "table",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically,  as defined by the standard variant.
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
          "displayName": "Initial Load",
          "name": "initialLoad",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "Auto",
              "text": "Auto",
            },
            Object {
              "key": "Disabled",
              "text": "Disabled",
            },
            Object {
              "key": "Enabled",
              "text": "Enabled",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically,  as defined by the standard variant.
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/9f4e1192f1384b85bc160288e17f69c4",
            "enum": Array [
              "Auto",
              "Disabled",
              "Enabled",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "initialLoad",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
          "displayName": "Type",
          "name": "type",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "AnalyticalTable",
              "text": "AnalyticalTable",
            },
            Object {
              "key": "GridTable",
              "text": "GridTable",
            },
            Object {
              "key": "ResponsiveTable",
              "text": "ResponsiveTable",
            },
            Object {
              "key": "TreeTable",
              "text": "TreeTable",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
            "enum": Array [
              "AnalyticalTable",
              "GridTable",
              "ResponsiveTable",
              "TreeTable",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "type",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
          "displayName": "Selection Mode",
          "name": "selectionMode",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "Auto",
              "text": "Auto",
            },
            Object {
              "key": "Multi",
              "text": "Multi",
            },
            Object {
              "key": "None",
              "text": "None",
            },
            Object {
              "key": "Single",
              "text": "Single",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
            "enum": Array [
              "Auto",
              "Multi",
              "None",
              "Single",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "selectionMode",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
          "displayName": "Select All",
          "name": "selectAll",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "selectAll",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "You can define how many items can be selected at a time using the selectionLimit.",
          "displayName": "Selection Limit",
          "name": "selectionLimit",
          "schema": Object {
            "artifactType": "Manifest",
            "description": "You can define how many items can be selected at a time using the selectionLimit.",
            "type": "number",
          },
          "schemaPath": Array [
            "table",
            "selectionLimit",
          ],
          "type": "number",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
          "displayName": "Enable Export",
          "name": "enableExport",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "enableExport",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines whether the content density for ui.table is condensed.",
          "displayName": "Condensed Table Layout",
          "name": "condensedTableLayout",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the content density for ui.table is condensed.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "condensedTableLayout",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
          "displayName": "Hierarchy Qualifier",
          "name": "hierarchyQualifier",
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "hierarchyQualifier",
          ],
          "type": "string",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
          "displayName": "Width Including Column Header",
          "name": "widthIncludingColumnHeader",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "widthIncludingColumnHeader",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
          "displayName": "Disable Copy To Clipboard",
          "name": "disableCopyToClipboard",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "disableCopyToClipboard",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
          "displayName": "Enable Mass Edit",
          "name": "enableMassEdit",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "type": "boolean",
          },
          "schemaPath": Array [
            "table",
            "enableMassEdit",
          ],
          "type": "boolean",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
          "displayName": "personalization",
          "name": "personalization",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "Defines whether the user can add and remove columns to a given table.",
              "displayName": "Column",
              "name": "column",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can add and remove columns to a given table.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "personalization",
                "column",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "Defines whether the user can sort a given table.",
              "displayName": "Sort",
              "name": "sort",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can sort a given table.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "personalization",
                "sort",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "Defines whether the user can filter data of a given table.",
              "displayName": "Filter",
              "name": "filter",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can filter data of a given table.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "personalization",
                "filter",
              ],
              "type": "boolean",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
            "properties": Object {
              "column": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can add and remove columns to a given table.",
                "type": "boolean",
              },
              "filter": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can filter data of a given table.",
                "type": "boolean",
              },
              "sort": Object {
                "artifactType": "Manifest",
                "description": "Defines whether the user can sort a given table.",
                "type": "boolean",
              },
            },
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "personalization",
          ],
          "type": "object",
          "value": undefined,
        },
        Object {
          "artifactType": "Manifest",
          "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
          "displayName": "quickVariantSelection",
          "name": "quickVariantSelection",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "Determines whether the table title is hidden and the tab titles are displayed.",
              "displayName": "Hide Table Title",
              "name": "hideTableTitle",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Determines whether the table title is hidden and the tab titles are displayed.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelection",
                "hideTableTitle",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "Determines whether the entry view counts are shown.",
              "displayName": "Show Counts",
              "name": "showCounts",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "Determines whether the entry view counts are shown.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelection",
                "showCounts",
              ],
              "type": "boolean",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "List of annotation paths referring to SelectionVariant annotations.",
              "displayName": "paths",
              "name": "paths",
              "schema": Object {
                "artifactType": "Manifest",
                "description": "List of annotation paths referring to SelectionVariant annotations.",
                "items": Object {
                  "$ref": "#/definitions/AnnotationPathAsObject",
                },
                "type": "array",
              },
              "schemaPath": Array [
                "table",
                "quickVariantSelection",
                "paths",
              ],
              "type": "object",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "artifactType": "Manifest",
            "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
            "properties": Object {
              "hideTableTitle": Object {
                "artifactType": "Manifest",
                "description": "Determines whether the table title is hidden and the tab titles are displayed.",
                "type": "boolean",
              },
              "paths": Object {
                "artifactType": "Manifest",
                "description": "List of annotation paths referring to SelectionVariant annotations.",
                "items": Object {
                  "$ref": "#/definitions/AnnotationPathAsObject",
                },
                "type": "array",
              },
              "showCounts": Object {
                "artifactType": "Manifest",
                "description": "Determines whether the entry view counts are shown.",
                "type": "boolean",
              },
            },
            "required": Array [
              "paths",
            ],
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "quickVariantSelection",
          ],
          "type": "object",
          "value": undefined,
        },
        Object {
          "artifactType": undefined,
          "description": "",
          "displayName": "enableMassEdit",
          "name": "enableMassEdit",
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
              "displayName": "visibleFields",
              "name": "visibleFields",
              "schema": Object {
                "artifactType": "Manifest",
                "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                "items": Object {
                  "enum": Array [
                    "TravelID",
                    "to_Agency_AgencyID",
                    "to_Customer_CustomerID",
                    "BeginDate",
                    "EndDate",
                    "BookingFee",
                    "TotalPrice",
                    "TravelStatus_code",
                  ],
                  "type": "string",
                },
                "type": "array",
                "uniqueItems": true,
              },
              "schemaPath": Array [
                "table",
                "enableMassEdit",
                "visibleFields",
              ],
              "type": "object",
              "value": undefined,
            },
            Object {
              "artifactType": "Manifest",
              "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
              "displayName": "ignoredFields",
              "name": "ignoredFields",
              "schema": Object {
                "artifactType": "Manifest",
                "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                "items": Object {
                  "enum": Array [
                    "TravelID",
                    "to_Agency_AgencyID",
                    "to_Customer_CustomerID",
                    "BeginDate",
                    "EndDate",
                    "BookingFee",
                    "TotalPrice",
                    "TravelStatus_code",
                  ],
                  "type": "string",
                },
                "type": "array",
                "uniqueItems": true,
              },
              "schemaPath": Array [
                "table",
                "enableMassEdit",
                "ignoredFields",
              ],
              "type": "object",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": false,
            "properties": Object {
              "ignoredFields": Object {
                "artifactType": "Manifest",
                "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                "items": Object {
                  "enum": Array [
                    "TravelID",
                    "to_Agency_AgencyID",
                    "to_Customer_CustomerID",
                    "BeginDate",
                    "EndDate",
                    "BookingFee",
                    "TotalPrice",
                    "TravelStatus_code",
                  ],
                  "type": "string",
                },
                "type": "array",
                "uniqueItems": true,
              },
              "visibleFields": Object {
                "artifactType": "Manifest",
                "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                "items": Object {
                  "enum": Array [
                    "TravelID",
                    "to_Agency_AgencyID",
                    "to_Customer_CustomerID",
                    "BeginDate",
                    "EndDate",
                    "BookingFee",
                    "TotalPrice",
                    "TravelStatus_code",
                  ],
                  "type": "string",
                },
                "type": "array",
                "uniqueItems": true,
              },
            },
            "type": "object",
          },
          "schemaPath": Array [
            "table",
            "enableMassEdit",
          ],
          "type": "object",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "annotationPath": "/TravelService.Travel/@com.sap.vocabularies.UI.v1.LineItem",
        "artifactType": "Manifest",
        "description": "Table",
        "isViewNode": true,
        "key": "secondary",
        "keys": Array [
          Object {
            "name": "Key",
            "value": "secondary",
          },
        ],
        "properties": Object {
          "annotationPath": Object {
            "artifactType": "Manifest",
            "description": "The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.",
            "hidden": true,
            "type": "string",
          },
          "columns": Object {
            "$ref": "#/definitions/LineItems",
          },
          "condensedTableLayout": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the content density for ui.table is condensed.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
            "type": "boolean",
          },
          "disableCopyToClipboard": Object {
            "artifactType": "Manifest",
            "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
            "type": "boolean",
          },
          "enableExport": Object {
            "artifactType": "Manifest",
            "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
            "type": "boolean",
          },
          "enableMassEdit": Object {
            "anyOf": Array [
              Object {
                "additionalProperties": false,
                "properties": Object {
                  "ignoredFields": Object {
                    "artifactType": "Manifest",
                    "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "items": Object {
                      "enum": Array [
                        "TravelID",
                        "to_Agency_AgencyID",
                        "to_Customer_CustomerID",
                        "BeginDate",
                        "EndDate",
                        "BookingFee",
                        "TotalPrice",
                        "TravelStatus_code",
                      ],
                      "type": "string",
                    },
                    "type": "array",
                    "uniqueItems": true,
                  },
                  "visibleFields": Object {
                    "artifactType": "Manifest",
                    "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                    "items": Object {
                      "enum": Array [
                        "TravelID",
                        "to_Agency_AgencyID",
                        "to_Customer_CustomerID",
                        "BeginDate",
                        "EndDate",
                        "BookingFee",
                        "TotalPrice",
                        "TravelStatus_code",
                      ],
                      "type": "string",
                    },
                    "type": "array",
                    "uniqueItems": true,
                  },
                },
                "type": "object",
              },
              Object {
                "type": "boolean",
              },
            ],
            "artifactType": "Manifest",
            "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
          },
          "hierarchyQualifier": Object {
            "artifactType": "Manifest",
            "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
            "type": "string",
          },
          "initialLoad": Object {
            "$ref": "#/definitions/InitialLoadType",
            "artifactType": "Manifest",
            "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically,  as defined by the standard variant.
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/9f4e1192f1384b85bc160288e17f69c4",
          },
          "personalization": Object {
            "$ref": "#/definitions/ViewPersonalizationType",
            "artifactType": "Manifest",
            "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
          },
          "quickVariantSelection": Object {
            "$ref": "#/definitions/QuickVariantSelectionV4",
            "artifactType": "Manifest",
            "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
          },
          "selectAll": Object {
            "artifactType": "Manifest",
            "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
            "type": "boolean",
          },
          "selectionLimit": Object {
            "artifactType": "Manifest",
            "description": "You can define how many items can be selected at a time using the selectionLimit.",
            "type": "number",
          },
          "selectionMode": Object {
            "$ref": "#/definitions/SelectionMode",
            "artifactType": "Manifest",
            "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
          },
          "toolBar": Object {
            "$ref": "#/definitions/ToolBar<LineItems>",
            "description": "Table Toolbar",
          },
          "type": Object {
            "$ref": "#/definitions/TableTypeV4",
            "artifactType": "Manifest",
            "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
          },
          "widthIncludingColumnHeader": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
            "type": "boolean",
          },
        },
        "propertyIndex": 3,
        "required": Array [
          "annotationPath",
        ],
        "title": "Table",
        "type": "object",
      },
      "text": "Table",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "annotationPath": "com.sap.vocabularies.UI.v1.SelectionPresentationVariant#tableView",
      },
    },
  ],
  "id": "outline-noderoot-node",
  "moveProps": undefined,
  "path": Array [],
  "properties": Array [
    Object {
      "artifactType": "Manifest",
      "description": "variantManagement defines how the variant management of page personalizations is controlled.
- None - No variant management by default.
- Control - Individual personalizations for each control.",
      "displayName": "Variant Management",
      "name": "variantManagement",
      "options": Array [
        Object {
          "key": "",
          "text": "",
        },
        Object {
          "key": "Control",
          "text": "Control",
        },
        Object {
          "key": "None",
          "text": "None",
        },
        Object {
          "key": "Page",
          "text": "Page",
        },
      ],
      "schema": Object {
        "artifactType": "Manifest",
        "description": "variantManagement defines how the variant management of page personalizations is controlled.
- None - No variant management by default.
- Control - Individual personalizations for each control.",
        "enum": Array [
          "Control",
          "None",
          "Page",
        ],
        "type": "string",
      },
      "schemaPath": Array [
        "variantManagement",
      ],
      "type": "string",
      "value": "Page",
    },
    Object {
      "artifactType": "Manifest",
      "description": "Defines the initial view mode:
- primary: This property loads the app in chart-only view.
- secondary: This property loads the app in table-only view.
- both: This property loads the app in hybrid view.",
      "displayName": "Default Path",
      "name": "defaultPath",
      "options": Array [
        Object {
          "key": "",
          "text": "",
        },
        Object {
          "key": "both",
          "text": "both",
        },
        Object {
          "key": "primary",
          "text": "primary",
        },
        Object {
          "key": "secondary",
          "text": "secondary",
        },
      ],
      "schema": Object {
        "artifactType": "Manifest",
        "description": "Defines the initial view mode:
- primary: This property loads the app in chart-only view.
- secondary: This property loads the app in table-only view.
- both: This property loads the app in hybrid view.",
        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/2a9df06673d34f72b238549d49da8bfb",
        "enum": Array [
          "both",
          "primary",
          "secondary",
        ],
        "type": "string",
      },
      "schemaPath": Array [
        "defaultPath",
      ],
      "type": "string",
      "value": "both",
    },
  ],
  "root": true,
  "schema": undefined,
  "text": "Root",
  "title": undefined,
  "type": "rootNode",
  "value": undefined,
}
`;

exports[`getTree getTree - multiview ListReport page 1`] = `
Object {
  "additionalText": undefined,
  "annotationNodeId": Array [],
  "children": Array [
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-header-actions-TestHeaderAction-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": Array [],
                "movable": true,
                "type": "actions",
              },
              "path": Array [
                "header",
                "actions",
                "TestHeaderAction",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                  "displayName": "Text",
                  "name": "text",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction",
                    "text",
                  ],
                  "type": "string",
                  "value": "TestHeaderAction",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Relevant for extension actions; allows the definition of a target action handler.",
                  "displayName": "Press",
                  "name": "press",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction",
                    "press",
                  ],
                  "type": "string",
                  "value": "project1.ext.controller.TestHeaderAction.onHeaderAction",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines if the action button is visible.",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction",
                    "visible",
                  ],
                  "type": "string",
                  "value": true,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines if the action is enabled. The default value is true.",
                  "displayName": "Enabled",
                  "name": "enabled",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                    ],
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction",
                    "enabled",
                  ],
                  "type": "string",
                  "value": true,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the position of the action relative to other actions.",
                  "displayName": "position",
                  "name": "position",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The key of another action to be used as placement anchor.",
                      "displayName": "Anchor",
                      "name": "anchor",
                      "options": Array [
                        Object {
                          "key": "",
                          "reset": true,
                          "text": "",
                        },
                        Object {
                          "key": "TestHeaderAction",
                          "text": "TestHeaderAction",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another action to be used as placement anchor.",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "TestHeaderAction",
                            "custom": true,
                            "description": "TestHeaderAction",
                            "hidden": true,
                          },
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "TestHeaderAction",
                        "position",
                        "anchor",
                      ],
                      "type": "string",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Define the placement, either before or after the anchor action.",
                      "displayName": "Placement",
                      "name": "placement",
                      "options": Array [
                        Object {
                          "key": "",
                          "text": "",
                        },
                        Object {
                          "key": "After",
                          "text": "After",
                        },
                        Object {
                          "key": "Before",
                          "text": "Before",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor action.",
                        "enum": Array [
                          "After",
                          "Before",
                        ],
                        "type": "string",
                      },
                      "schemaPath": Array [
                        "header",
                        "actions",
                        "TestHeaderAction",
                        "position",
                        "placement",
                      ],
                      "type": "string",
                      "value": "After",
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the position of the action relative to other actions.",
                    "properties": Object {
                      "anchor": Object {
                        "artifactType": "Manifest",
                        "description": "The key of another action to be used as placement anchor.",
                        "oneOf": Array [
                          Object {
                            "bundle": "ui5",
                            "const": "TestHeaderAction",
                            "custom": true,
                            "description": "TestHeaderAction",
                          },
                        ],
                        "type": "string",
                      },
                      "placement": Object {
                        "$ref": "#/definitions/ActionPlacement",
                        "artifactType": "Manifest",
                        "description": "Define the placement, either before or after the anchor action.",
                      },
                    },
                    "required": Array [
                      "placement",
                    ],
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "header",
                    "actions",
                    "TestHeaderAction",
                    "position",
                  ],
                  "type": "object",
                  "value": Object {
                    "placement": "After",
                  },
                },
              ],
              "schema": Object {
                "actionType": "Custom",
                "additionalProperties": false,
                "description": "TestHeaderAction",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "TestHeaderAction",
                  },
                ],
                "properties": Object {
                  "enabled": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines if the action is enabled. The default value is true.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "position": Object {
                    "$ref": "#/definitions/CustomHeaderActionPosition",
                    "artifactType": "Manifest",
                    "description": "Defines the position of the action relative to other actions.",
                  },
                  "press": Object {
                    "artifactType": "Manifest",
                    "description": "Relevant for extension actions; allows the definition of a target action handler.",
                    "type": "string",
                  },
                  "text": Object {
                    "artifactType": "Manifest",
                    "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                    "i18nClassification": "COL: Custom action text",
                    "type": "string",
                  },
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines if the action button is visible.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                },
                "propertyIndex": 0,
                "required": Array [
                  "press",
                  "text",
                ],
                "type": "object",
              },
              "text": "TestHeaderAction",
              "title": "TestHeaderAction",
              "type": "customAction",
              "value": Object {
                "enabled": true,
                "position": Object {
                  "placement": "After",
                },
                "press": "project1.ext.controller.TestHeaderAction.onHeaderAction",
                "text": "TestHeaderAction",
                "visible": true,
              },
            },
          ],
          "id": "outline-node-header-actions-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "actions",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "actions",
          },
          "path": Array [
            "header",
            "actions",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/CustomHeaderAction",
            },
            "description": "Actions",
            "isViewNode": true,
            "properties": Object {
              "TestHeaderAction": Object {
                "$ref": "#/definitions/CustomHeaderAction",
                "actionType": "Custom",
                "description": "TestHeaderAction",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "TestHeaderAction",
                  },
                ],
                "propertyIndex": 0,
              },
            },
            "type": "object",
          },
          "text": "Actions",
          "title": undefined,
          "type": undefined,
          "value": Object {
            "TestHeaderAction": Object {
              "enabled": true,
              "position": Object {
                "placement": "After",
              },
              "press": "project1.ext.controller.TestHeaderAction.onHeaderAction",
              "text": "TestHeaderAction",
              "visible": true,
            },
          },
        },
      ],
      "id": "outline-node-header-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "header",
      ],
      "properties": Array [],
      "schema": Object {
        "additionalProperties": false,
        "description": "Header",
        "isViewNode": true,
        "properties": Object {
          "actions": Object {
            "$ref": "#/definitions/HeaderActions",
          },
        },
        "propertyIndex": 0,
        "type": "object",
      },
      "text": "Header",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "actions": Object {
          "TestHeaderAction": Object {
            "enabled": true,
            "position": Object {
              "placement": "After",
            },
            "press": "project1.ext.controller.TestHeaderAction.onHeaderAction",
            "text": "TestHeaderAction",
            "visible": true,
          },
        },
      },
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": undefined,
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::TravelID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::TravelID",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.SelectionFields/0",
                "annotationType": "PropertyPath",
                "dataType": "String",
                "description": "TravelID",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "TravelID",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 0,
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "type": "object",
              },
              "text": "TravelID",
              "title": "TravelID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::AgencyID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::AgencyID",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.SelectionFields/1",
                "annotationType": "PropertyPath",
                "dataType": "String",
                "description": "AgencyID",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "AgencyID",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 1,
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "type": "object",
              },
              "text": "AgencyID",
              "title": "AgencyID",
              "type": undefined,
              "value": undefined,
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-filterBar-selectionFields-SelectionField::CustomerID-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": undefined,
              },
              "path": Array [
                "filterBar",
                "selectionFields",
                "SelectionField::CustomerID",
              ],
              "properties": Array [],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.SelectionFields/2",
                "annotationType": "PropertyPath",
                "dataType": "String",
                "description": "Kunden ID",
                "isViewNode": true,
                "keys": Array [
                  Object {
                    "name": "Value",
                    "value": "CustomerID",
                  },
                ],
                "properties": Object {},
                "propertyIndex": 2,
                "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                "type": "object",
              },
              "text": "Kunden ID",
              "title": "CustomerID",
              "type": undefined,
              "value": undefined,
            },
          ],
          "id": "outline-node-filterBar-selectionFields-node",
          "moveProps": Object {
            "allowedChildTypes": undefined,
            "allowedParents": undefined,
            "movable": false,
            "type": undefined,
          },
          "path": Array [
            "filterBar",
            "selectionFields",
          ],
          "properties": Array [],
          "schema": Object {
            "additionalProperties": Object {
              "$ref": "#/definitions/CustomFilterField",
            },
            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.SelectionFields",
            "description": "Filter Fields",
            "isViewNode": true,
            "properties": Object {
              "SelectionField::AgencyID": Object {
                "$ref": "#/definitions/SelectionField::AgencyID",
                "propertyIndex": 1,
              },
              "SelectionField::CustomerID": Object {
                "$ref": "#/definitions/SelectionField::CustomerID",
                "propertyIndex": 2,
              },
              "SelectionField::TravelID": Object {
                "$ref": "#/definitions/SelectionField::TravelID",
                "propertyIndex": 0,
              },
            },
            "type": "object",
          },
          "text": "Filter Fields",
          "title": undefined,
          "type": undefined,
          "value": undefined,
        },
      ],
      "id": "outline-node-filterBar-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "filterBar",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Allows you to hide the filter bar.",
          "displayName": "Hide Filter Bar",
          "name": "hideFilterBar",
          "options": Array [
            Object {
              "key": undefined,
              "text": "",
            },
            Object {
              "key": true,
              "text": "True",
            },
            Object {
              "key": false,
              "text": "False",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Allows you to hide the filter bar.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bd7590569c74c61a0124c6e370030f6",
            "type": "boolean",
          },
          "schemaPath": Array [
            "filterBar",
            "hideFilterBar",
          ],
          "type": "boolean",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "description": "Filter Bar",
        "isViewNode": true,
        "properties": Object {
          "hideFilterBar": Object {
            "artifactType": "Manifest",
            "description": "Allows you to hide the filter bar.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bd7590569c74c61a0124c6e370030f6",
            "type": "boolean",
          },
          "initialLayout": Object {
            "$ref": "#/definitions/InitialLayoutType",
            "artifactType": "Manifest",
            "description": "Allows you to specify the default filter mode on the initial load.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
            "hidden": true,
          },
          "layout": Object {
            "$ref": "#/definitions/LayoutType",
            "artifactType": "Manifest",
            "description": "Allows you to specify the layout of the filter bar.
- Compact: This setting shows filter fields in compact mode.
- CompactVisual: This setting shows filter fields in both compact and visual modes.",
            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2",
            "hidden": true,
          },
          "selectionFields": Object {
            "anyOf": Array [
              Object {
                "$ref": "#/definitions/SelectionFields",
              },
              Object {
                "$ref": "#/definitions/CompactFilters",
              },
            ],
            "isViewNode": true,
          },
          "visualFilters": Object {
            "$ref": "#/definitions/VisualFilters",
          },
        },
        "propertyIndex": 1,
        "type": "object",
      },
      "text": "Filter Bar",
      "title": undefined,
      "type": undefined,
      "value": Object {},
    },
    Object {
      "additionalText": undefined,
      "annotationNodeId": undefined,
      "children": Array [
        Object {
          "additionalText": undefined,
          "annotationNodeId": Array [],
          "children": Array [
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-table-views-tableView-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "actions",
                          },
                          "path": Array [
                            "table",
                            "views",
                            "tableView",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          ],
                          "properties": Array [
                            Object {
                              "artifactType": "Manifest",
                              "description": "Enables single selection for a bound action",
                              "displayName": "Enable On Select",
                              "name": "enableOnSelect",
                              "options": Array [
                                Object {
                                  "key": "",
                                  "text": "",
                                },
                                Object {
                                  "key": "multi",
                                  "text": "multi",
                                },
                                Object {
                                  "key": "single",
                                  "text": "single",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                                "enum": Array [
                                  "multi",
                                  "single",
                                ],
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "enableOnSelect",
                              ],
                              "type": "string",
                              "value": undefined,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Settings that control the behavior after creating a new entry.",
                              "displayName": "afterExecution",
                              "name": "afterExecution",
                              "properties": Array [
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                  "displayName": "Navigate To Instance",
                                  "name": "navigateToInstance",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "navigateToInstance",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                  "displayName": "Enable Auto Scroll",
                                  "name": "enableAutoScroll",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "enableAutoScroll",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                              ],
                              "schema": Object {
                                "additionalProperties": false,
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                                "properties": Object {
                                  "enableAutoScroll": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "navigateToInstance": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "afterExecution",
                              ],
                              "type": "object",
                              "value": undefined,
                            },
                          ],
                          "schema": Object {
                            "additionalProperties": false,
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/8",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Create Draft",
                            "isViewNode": true,
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "createTravelDraft",
                              },
                            ],
                            "properties": Object {
                              "afterExecution": Object {
                                "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                              },
                              "enableOnSelect": Object {
                                "$ref": "#/definitions/SelectType",
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                              },
                            },
                            "propertyIndex": 0,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                            "type": "object",
                          },
                          "text": "Create Draft",
                          "title": "createTravelDraft",
                          "type": undefined,
                          "value": undefined,
                        },
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-table-views-tableView-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "actions",
                          },
                          "path": Array [
                            "table",
                            "views",
                            "tableView",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          ],
                          "properties": Array [
                            Object {
                              "artifactType": "Manifest",
                              "description": "Enables single selection for a bound action",
                              "displayName": "Enable On Select",
                              "name": "enableOnSelect",
                              "options": Array [
                                Object {
                                  "key": "",
                                  "text": "",
                                },
                                Object {
                                  "key": "multi",
                                  "text": "multi",
                                },
                                Object {
                                  "key": "single",
                                  "text": "single",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                                "enum": Array [
                                  "multi",
                                  "single",
                                ],
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "enableOnSelect",
                              ],
                              "type": "string",
                              "value": undefined,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Settings that control the behavior after creating a new entry.",
                              "displayName": "afterExecution",
                              "name": "afterExecution",
                              "properties": Array [
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                  "displayName": "Navigate To Instance",
                                  "name": "navigateToInstance",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "navigateToInstance",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                  "displayName": "Enable Auto Scroll",
                                  "name": "enableAutoScroll",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "enableAutoScroll",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                              ],
                              "schema": Object {
                                "additionalProperties": false,
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                                "properties": Object {
                                  "enableAutoScroll": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "navigateToInstance": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "afterExecution",
                              ],
                              "type": "object",
                              "value": undefined,
                            },
                          ],
                          "schema": Object {
                            "additionalProperties": false,
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/9",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Check Travel",
                            "isViewNode": true,
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "Check",
                              },
                            ],
                            "properties": Object {
                              "afterExecution": Object {
                                "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                              },
                              "enableOnSelect": Object {
                                "$ref": "#/definitions/SelectType",
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                              },
                            },
                            "propertyIndex": 1,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                            "type": "object",
                          },
                          "text": "Check Travel",
                          "title": "Check",
                          "type": undefined,
                          "value": undefined,
                        },
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-table-views-tableView-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "actions",
                          },
                          "path": Array [
                            "table",
                            "views",
                            "tableView",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          ],
                          "properties": Array [
                            Object {
                              "artifactType": "Manifest",
                              "description": "Enables single selection for a bound action",
                              "displayName": "Enable On Select",
                              "name": "enableOnSelect",
                              "options": Array [
                                Object {
                                  "key": "",
                                  "text": "",
                                },
                                Object {
                                  "key": "multi",
                                  "text": "multi",
                                },
                                Object {
                                  "key": "single",
                                  "text": "single",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                                "enum": Array [
                                  "multi",
                                  "single",
                                ],
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "enableOnSelect",
                              ],
                              "type": "string",
                              "value": undefined,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Settings that control the behavior after creating a new entry.",
                              "displayName": "afterExecution",
                              "name": "afterExecution",
                              "properties": Array [
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                  "displayName": "Navigate To Instance",
                                  "name": "navigateToInstance",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "navigateToInstance",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                  "displayName": "Enable Auto Scroll",
                                  "name": "enableAutoScroll",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "enableAutoScroll",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                              ],
                              "schema": Object {
                                "additionalProperties": false,
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                                "properties": Object {
                                  "enableAutoScroll": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "navigateToInstance": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "afterExecution",
                              ],
                              "type": "object",
                              "value": undefined,
                            },
                          ],
                          "schema": Object {
                            "additionalProperties": false,
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/10",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Template Draft",
                            "isViewNode": true,
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "createDraftTemplate",
                              },
                            ],
                            "properties": Object {
                              "afterExecution": Object {
                                "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                              },
                              "enableOnSelect": Object {
                                "$ref": "#/definitions/SelectType",
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                              },
                            },
                            "propertyIndex": 2,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                            "type": "object",
                          },
                          "text": "Template Draft",
                          "title": "createDraftTemplate",
                          "type": undefined,
                          "value": undefined,
                        },
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-table-views-tableView-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "actions",
                          },
                          "path": Array [
                            "table",
                            "views",
                            "tableView",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          ],
                          "properties": Array [
                            Object {
                              "artifactType": "Manifest",
                              "description": "Enables single selection for a bound action",
                              "displayName": "Enable On Select",
                              "name": "enableOnSelect",
                              "options": Array [
                                Object {
                                  "key": "",
                                  "text": "",
                                },
                                Object {
                                  "key": "multi",
                                  "text": "multi",
                                },
                                Object {
                                  "key": "single",
                                  "text": "single",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                                "enum": Array [
                                  "multi",
                                  "single",
                                ],
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "enableOnSelect",
                              ],
                              "type": "string",
                              "value": undefined,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Settings that control the behavior after creating a new entry.",
                              "displayName": "afterExecution",
                              "name": "afterExecution",
                              "properties": Array [
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                  "displayName": "Navigate To Instance",
                                  "name": "navigateToInstance",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "navigateToInstance",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                  "displayName": "Enable Auto Scroll",
                                  "name": "enableAutoScroll",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "enableAutoScroll",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                              ],
                              "schema": Object {
                                "additionalProperties": false,
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                                "properties": Object {
                                  "enableAutoScroll": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "navigateToInstance": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "afterExecution",
                              ],
                              "type": "object",
                              "value": undefined,
                            },
                          ],
                          "schema": Object {
                            "additionalProperties": false,
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/11",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Template Active",
                            "isViewNode": true,
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "createActiveTemplate",
                              },
                            ],
                            "properties": Object {
                              "afterExecution": Object {
                                "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                              },
                              "enableOnSelect": Object {
                                "$ref": "#/definitions/SelectType",
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                              },
                            },
                            "propertyIndex": 3,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                            "type": "object",
                          },
                          "text": "Template Active",
                          "title": "createActiveTemplate",
                          "type": undefined,
                          "value": undefined,
                        },
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-table-views-tableView-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "actions",
                          },
                          "path": Array [
                            "table",
                            "views",
                            "tableView",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          ],
                          "properties": Array [
                            Object {
                              "artifactType": "Manifest",
                              "description": "Enables single selection for a bound action",
                              "displayName": "Enable On Select",
                              "name": "enableOnSelect",
                              "options": Array [
                                Object {
                                  "key": "",
                                  "text": "",
                                },
                                Object {
                                  "key": "multi",
                                  "text": "multi",
                                },
                                Object {
                                  "key": "single",
                                  "text": "single",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                                "enum": Array [
                                  "multi",
                                  "single",
                                ],
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "enableOnSelect",
                              ],
                              "type": "string",
                              "value": undefined,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Settings that control the behavior after creating a new entry.",
                              "displayName": "afterExecution",
                              "name": "afterExecution",
                              "properties": Array [
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                  "displayName": "Navigate To Instance",
                                  "name": "navigateToInstance",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "navigateToInstance",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                  "displayName": "Enable Auto Scroll",
                                  "name": "enableAutoScroll",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "enableAutoScroll",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                              ],
                              "schema": Object {
                                "additionalProperties": false,
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                                "properties": Object {
                                  "enableAutoScroll": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "navigateToInstance": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "afterExecution",
                              ],
                              "type": "object",
                              "value": undefined,
                            },
                          ],
                          "schema": Object {
                            "additionalProperties": false,
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/12",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Deduct Discount",
                            "isViewNode": true,
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "deductDiscount",
                              },
                            ],
                            "properties": Object {
                              "afterExecution": Object {
                                "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                              },
                              "enableOnSelect": Object {
                                "$ref": "#/definitions/SelectType",
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                              },
                            },
                            "propertyIndex": 4,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                            "type": "object",
                          },
                          "text": "Deduct Discount",
                          "title": "deductDiscount",
                          "type": undefined,
                          "value": undefined,
                        },
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-table-views-tableView-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "actions",
                          },
                          "path": Array [
                            "table",
                            "views",
                            "tableView",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          ],
                          "properties": Array [
                            Object {
                              "artifactType": "Manifest",
                              "description": "Enables single selection for a bound action",
                              "displayName": "Enable On Select",
                              "name": "enableOnSelect",
                              "options": Array [
                                Object {
                                  "key": "",
                                  "text": "",
                                },
                                Object {
                                  "key": "multi",
                                  "text": "multi",
                                },
                                Object {
                                  "key": "single",
                                  "text": "single",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                                "enum": Array [
                                  "multi",
                                  "single",
                                ],
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "enableOnSelect",
                              ],
                              "type": "string",
                              "value": undefined,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Settings that control the behavior after creating a new entry.",
                              "displayName": "afterExecution",
                              "name": "afterExecution",
                              "properties": Array [
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                  "displayName": "Navigate To Instance",
                                  "name": "navigateToInstance",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "navigateToInstance",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                  "displayName": "Enable Auto Scroll",
                                  "name": "enableAutoScroll",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "enableAutoScroll",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                              ],
                              "schema": Object {
                                "additionalProperties": false,
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                                "properties": Object {
                                  "enableAutoScroll": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "navigateToInstance": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "afterExecution",
                              ],
                              "type": "object",
                              "value": undefined,
                            },
                          ],
                          "schema": Object {
                            "additionalProperties": false,
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/13",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Set To New",
                            "isViewNode": true,
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "setToNew",
                              },
                            ],
                            "properties": Object {
                              "afterExecution": Object {
                                "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                              },
                              "enableOnSelect": Object {
                                "$ref": "#/definitions/SelectType",
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                              },
                            },
                            "propertyIndex": 5,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                            "type": "object",
                          },
                          "text": "Set To New",
                          "title": "setToNew",
                          "type": undefined,
                          "value": undefined,
                        },
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-table-views-tableView-toolBar-actions-TableAction-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": Array [],
                            "movable": true,
                            "type": "actions",
                          },
                          "path": Array [
                            "table",
                            "views",
                            "tableView",
                            "toolBar",
                            "actions",
                            "TableAction",
                          ],
                          "properties": Array [
                            Object {
                              "artifactType": "Manifest",
                              "description": "Indicates whether the action requires a selection of items.",
                              "displayName": "Requires Selection",
                              "name": "requiresSelection",
                              "options": Array [
                                Object {
                                  "key": undefined,
                                  "text": "",
                                },
                                Object {
                                  "key": true,
                                  "text": "True",
                                },
                                Object {
                                  "key": false,
                                  "text": "False",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Indicates whether the action requires a selection of items.",
                                "type": "boolean",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "TableAction",
                                "requiresSelection",
                              ],
                              "type": "boolean",
                              "value": false,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                              "displayName": "Text",
                              "name": "text",
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                                "i18nClassification": "COL: Custom action text",
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "TableAction",
                                "text",
                              ],
                              "type": "string",
                              "value": "TableAction",
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Relevant for extension actions; allows the definition of a target action handler.",
                              "displayName": "Press",
                              "name": "press",
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Relevant for extension actions; allows the definition of a target action handler.",
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "TableAction",
                                "press",
                              ],
                              "type": "string",
                              "value": "project1.ext.controller.TableAction.TableAction",
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Defines if the action button is visible.",
                              "displayName": "Visible",
                              "name": "visible",
                              "schema": Object {
                                "enum": Array [
                                  false,
                                  true,
                                ],
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "TableAction",
                                "visible",
                              ],
                              "type": "string",
                              "value": true,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Defines if the action is enabled. The default value is true.",
                              "displayName": "Enabled",
                              "name": "enabled",
                              "schema": Object {
                                "enum": Array [
                                  false,
                                  true,
                                ],
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "TableAction",
                                "enabled",
                              ],
                              "type": "string",
                              "value": true,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Defines the position of the action relative to other actions.",
                              "displayName": "position",
                              "name": "position",
                              "properties": Array [
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "The key of another action to be used as placement anchor.",
                                  "displayName": "Anchor",
                                  "name": "anchor",
                                  "options": Array [
                                    Object {
                                      "key": "",
                                      "reset": true,
                                      "text": "",
                                    },
                                    Object {
                                      "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                      "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    },
                                    Object {
                                      "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                      "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    },
                                    Object {
                                      "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                      "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    },
                                    Object {
                                      "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                      "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    },
                                    Object {
                                      "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                      "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    },
                                    Object {
                                      "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                      "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    },
                                    Object {
                                      "key": "TableAction",
                                      "text": "TableAction",
                                    },
                                    Object {
                                      "key": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                      "text": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "The key of another action to be used as placement anchor.",
                                    "oneOf": Array [
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Create Draft",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Check Travel",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Template Draft",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Template Active",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Deduct Discount",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Set To New",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "TableAction",
                                        "custom": true,
                                        "description": "TableAction",
                                        "hidden": true,
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Set To Booked",
                                      },
                                    ],
                                    "type": "string",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "TableAction",
                                    "position",
                                    "anchor",
                                  ],
                                  "type": "string",
                                  "value": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Define the placement, either before or after the anchor action.",
                                  "displayName": "Placement",
                                  "name": "placement",
                                  "options": Array [
                                    Object {
                                      "key": "",
                                      "text": "",
                                    },
                                    Object {
                                      "key": "After",
                                      "text": "After",
                                    },
                                    Object {
                                      "key": "Before",
                                      "text": "Before",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Define the placement, either before or after the anchor action.",
                                    "enum": Array [
                                      "After",
                                      "Before",
                                    ],
                                    "type": "string",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "TableAction",
                                    "position",
                                    "placement",
                                  ],
                                  "type": "string",
                                  "value": "After",
                                },
                              ],
                              "schema": Object {
                                "additionalProperties": false,
                                "artifactType": "Manifest",
                                "description": "Defines the position of the action relative to other actions.",
                                "properties": Object {
                                  "anchor": Object {
                                    "artifactType": "Manifest",
                                    "description": "The key of another action to be used as placement anchor.",
                                    "oneOf": Array [
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Create Draft",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Check Travel",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Template Draft",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Template Active",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Deduct Discount",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Set To New",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "TableAction",
                                        "custom": true,
                                        "description": "TableAction",
                                      },
                                      Object {
                                        "bundle": "ui5",
                                        "const": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                        "description": "Set To Booked",
                                      },
                                    ],
                                    "type": "string",
                                  },
                                  "placement": Object {
                                    "$ref": "#/definitions/ActionPlacement",
                                    "artifactType": "Manifest",
                                    "description": "Define the placement, either before or after the anchor action.",
                                  },
                                },
                                "required": Array [
                                  "placement",
                                ],
                                "type": "object",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "TableAction",
                                "position",
                              ],
                              "type": "object",
                              "value": Object {
                                "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "placement": "After",
                              },
                            },
                          ],
                          "schema": Object {
                            "actionType": "Custom",
                            "additionalProperties": false,
                            "description": "TableAction",
                            "keys": Array [
                              Object {
                                "name": "Key",
                                "value": "TableAction",
                              },
                            ],
                            "properties": Object {
                              "enabled": Object {
                                "anyOf": Array [
                                  Object {
                                    "enum": Array [
                                      false,
                                      true,
                                    ],
                                  },
                                  Object {
                                    "type": "string",
                                  },
                                ],
                                "artifactType": "Manifest",
                                "description": "Defines if the action is enabled. The default value is true.",
                                "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                              },
                              "position": Object {
                                "$ref": "#/definitions/ViewCustomActionPosition<LineItemsOfView::tableView>",
                                "artifactType": "Manifest",
                                "description": "Defines the position of the action relative to other actions.",
                              },
                              "press": Object {
                                "artifactType": "Manifest",
                                "description": "Relevant for extension actions; allows the definition of a target action handler.",
                                "type": "string",
                              },
                              "requiresSelection": Object {
                                "artifactType": "Manifest",
                                "description": "Indicates whether the action requires a selection of items.",
                                "type": "boolean",
                              },
                              "text": Object {
                                "artifactType": "Manifest",
                                "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                                "i18nClassification": "COL: Custom action text",
                                "type": "string",
                              },
                              "visible": Object {
                                "anyOf": Array [
                                  Object {
                                    "enum": Array [
                                      false,
                                      true,
                                    ],
                                  },
                                  Object {
                                    "type": "string",
                                  },
                                ],
                                "artifactType": "Manifest",
                                "description": "Defines if the action button is visible.",
                                "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                              },
                            },
                            "propertyIndex": 6,
                            "required": Array [
                              "press",
                              "text",
                            ],
                            "type": "object",
                          },
                          "text": "TableAction",
                          "title": "TableAction",
                          "type": "customAction",
                          "value": Object {
                            "enabled": true,
                            "position": Object {
                              "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                              "placement": "After",
                            },
                            "press": "project1.ext.controller.TableAction.TableAction",
                            "requiresSelection": false,
                            "text": "TableAction",
                            "visible": true,
                          },
                        },
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-table-views-tableView-toolBar-actions-DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": undefined,
                            "movable": false,
                            "type": "actions",
                          },
                          "path": Array [
                            "table",
                            "views",
                            "tableView",
                            "toolBar",
                            "actions",
                            "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          ],
                          "properties": Array [
                            Object {
                              "artifactType": "Manifest",
                              "description": "Enables single selection for a bound action",
                              "displayName": "Enable On Select",
                              "name": "enableOnSelect",
                              "options": Array [
                                Object {
                                  "key": "",
                                  "text": "",
                                },
                                Object {
                                  "key": "multi",
                                  "text": "multi",
                                },
                                Object {
                                  "key": "single",
                                  "text": "single",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                                "enum": Array [
                                  "multi",
                                  "single",
                                ],
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "enableOnSelect",
                              ],
                              "type": "string",
                              "value": undefined,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Settings that control the behavior after creating a new entry.",
                              "displayName": "afterExecution",
                              "name": "afterExecution",
                              "properties": Array [
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                  "displayName": "Navigate To Instance",
                                  "name": "navigateToInstance",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "navigateToInstance",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                  "displayName": "Enable Auto Scroll",
                                  "name": "enableAutoScroll",
                                  "options": Array [
                                    Object {
                                      "key": undefined,
                                      "text": "",
                                    },
                                    Object {
                                      "key": true,
                                      "text": "True",
                                    },
                                    Object {
                                      "key": false,
                                      "text": "False",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView",
                                    "toolBar",
                                    "actions",
                                    "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                    "afterExecution",
                                    "enableAutoScroll",
                                  ],
                                  "type": "boolean",
                                  "value": undefined,
                                },
                              ],
                              "schema": Object {
                                "additionalProperties": false,
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                                "properties": Object {
                                  "enableAutoScroll": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
                                    "type": "boolean",
                                  },
                                  "navigateToInstance": Object {
                                    "artifactType": "Manifest",
                                    "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
                                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "toolBar",
                                "actions",
                                "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                                "afterExecution",
                              ],
                              "type": "object",
                              "value": undefined,
                            },
                          ],
                          "schema": Object {
                            "additionalProperties": false,
                            "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/14",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Set To Booked",
                            "isViewNode": true,
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "setToBooked",
                              },
                            ],
                            "properties": Object {
                              "afterExecution": Object {
                                "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
                                "artifactType": "Manifest",
                                "description": "Settings that control the behavior after creating a new entry.",
                              },
                              "enableOnSelect": Object {
                                "$ref": "#/definitions/SelectType",
                                "artifactType": "Manifest",
                                "description": "Enables single selection for a bound action",
                              },
                            },
                            "propertyIndex": 7,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                            "type": "object",
                          },
                          "text": "Set To Booked",
                          "title": "setToBooked",
                          "type": undefined,
                          "value": undefined,
                        },
                      ],
                      "id": "outline-node-table-views-tableView-toolBar-actions-node",
                      "moveProps": Object {
                        "allowedChildTypes": Array [
                          "actions",
                        ],
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "actions",
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView",
                        "toolBar",
                        "actions",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": Object {
                          "$ref": "#/definitions/ViewTableCustomAction<LineItemsOfView::tableView>",
                        },
                        "description": "Actions",
                        "isViewNode": true,
                        "properties": Object {
                          "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                            "$ref": "#/definitions/ViewToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.Check::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Check Travel",
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "Check",
                              },
                            ],
                            "propertyIndex": 1,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                          },
                          "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                            "$ref": "#/definitions/ViewToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createActiveTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Template Active",
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "createActiveTemplate",
                              },
                            ],
                            "propertyIndex": 3,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                          },
                          "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                            "$ref": "#/definitions/ViewToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createDraftTemplate::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Template Draft",
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "createDraftTemplate",
                              },
                            ],
                            "propertyIndex": 2,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                          },
                          "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                            "$ref": "#/definitions/ViewToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.createTravelDraft::Collection::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Create Draft",
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "createTravelDraft",
                              },
                            ],
                            "propertyIndex": 0,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                          },
                          "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                            "$ref": "#/definitions/ViewToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.deductDiscount::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Deduct Discount",
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "deductDiscount",
                              },
                            ],
                            "propertyIndex": 4,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                          },
                          "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                            "$ref": "#/definitions/ViewToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToBooked::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Set To Booked",
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "setToBooked",
                              },
                            ],
                            "propertyIndex": 7,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                          },
                          "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType": Object {
                            "$ref": "#/definitions/ViewToolBarAction<com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType>",
                            "annotationType": "com.sap.vocabularies.UI.v1.DataFieldForAction",
                            "dataType": "DataFieldForAction",
                            "description": "Set To New",
                            "keys": Array [
                              Object {
                                "name": "Action",
                                "value": "setToNew",
                              },
                            ],
                            "propertyIndex": 5,
                            "target": "com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001",
                          },
                          "TableAction": Object {
                            "$ref": "#/definitions/ViewTableCustomAction<LineItemsOfView::tableView>",
                            "actionType": "Custom",
                            "description": "TableAction",
                            "keys": Array [
                              Object {
                                "name": "Key",
                                "value": "TableAction",
                              },
                            ],
                            "propertyIndex": 6,
                          },
                        },
                        "type": "object",
                      },
                      "text": "Actions",
                      "title": undefined,
                      "type": undefined,
                      "value": Object {
                        "TableAction": Object {
                          "enabled": true,
                          "position": Object {
                            "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                            "placement": "After",
                          },
                          "press": "project1.ext.controller.TableAction.TableAction",
                          "requiresSelection": false,
                          "text": "TableAction",
                          "visible": true,
                        },
                      },
                    },
                  ],
                  "id": "outline-node-table-views-tableView-toolBar-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": undefined,
                  },
                  "path": Array [
                    "table",
                    "views",
                    "tableView",
                    "toolBar",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem",
                    "description": "Table Toolbar",
                    "isViewNode": true,
                    "properties": Object {
                      "actions": Object {
                        "$ref": "#/definitions/Actions<LineItemsOfView::tableView>",
                      },
                    },
                    "required": Array [
                      "actions",
                    ],
                    "type": "object",
                  },
                  "text": "Table Toolbar",
                  "title": undefined,
                  "type": undefined,
                  "value": Object {
                    "actions": Object {
                      "TableAction": Object {
                        "enabled": true,
                        "position": Object {
                          "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                          "placement": "After",
                        },
                        "press": "project1.ext.controller.TableAction.TableAction",
                        "requiresSelection": false,
                        "text": "TableAction",
                        "visible": true,
                      },
                    },
                  },
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-table-views-tableView-columns-DataField::TravelID-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView",
                        "columns",
                        "DataField::TravelID",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::TravelID",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::TravelID",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::TravelID",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/0",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "TravelID",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "TravelID",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 0,
                        "type": "object",
                      },
                      "text": "TravelID",
                      "title": "TravelID",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-table-views-tableView-columns-DataField::AgencyID-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView",
                        "columns",
                        "DataField::AgencyID",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::AgencyID",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::AgencyID",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::AgencyID",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/1",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "AgencyID",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "AgencyID",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 1,
                        "type": "object",
                      },
                      "text": "AgencyID",
                      "title": "AgencyID",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-table-views-tableView-columns-TestCustomColumn-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": Array [],
                        "movable": true,
                        "type": undefined,
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView",
                        "columns",
                        "TestCustomColumn",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "The header appears in the table as a header, as well as in the add and remove dialogs.",
                          "displayName": "Header",
                          "name": "header",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "The header appears in the table as a header, as well as in the add and remove dialogs.",
                            "i18nClassification": "COL: Custom column header text",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "TestCustomColumn",
                            "header",
                          ],
                          "type": "string",
                          "value": "TestCustomColumn",
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "TestCustomColumn",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines a target fragment.",
                          "displayName": "Template",
                          "name": "template",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines a target fragment.",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "TestCustomColumn",
                            "template",
                          ],
                          "type": "string",
                          "value": "project1.ext.fragment.TestCustomColumn",
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Aligns the header as well as the content horizontally.",
                          "displayName": "Horizontal Align",
                          "name": "horizontalAlign",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Begin",
                              "text": "Begin",
                            },
                            Object {
                              "key": "Center",
                              "text": "Center",
                            },
                            Object {
                              "key": "End",
                              "text": "End",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Aligns the header as well as the content horizontally.",
                            "enum": Array [
                              "Begin",
                              "Center",
                              "End",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "TestCustomColumn",
                            "horizontalAlign",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
- Default: it will be shown by default in the table.
- Adaptation: it will initially not be shown in the table but be available via end user adaptation
- Hidden: the column is neither available in the table nor in adaptation",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
- Default: it will be shown by default in the table.
- Adaptation: it will initially not be shown in the table but be available via end user adaptation
- Hidden: the column is neither available in the table nor in adaptation",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "TestCustomColumn",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines the position of the column relative to other columns.",
                          "displayName": "position",
                          "name": "position",
                          "properties": Array [
                            Object {
                              "artifactType": "Manifest",
                              "description": "The key of another column to be used as placement anchor.",
                              "displayName": "Anchor",
                              "name": "anchor",
                              "options": Array [
                                Object {
                                  "key": "",
                                  "text": "",
                                },
                                Object {
                                  "key": "DataField::TravelID",
                                  "text": "DataField::TravelID",
                                },
                                Object {
                                  "key": "DataField::AgencyID",
                                  "text": "DataField::AgencyID",
                                },
                                Object {
                                  "key": "DataField::CustomerID",
                                  "text": "DataField::CustomerID",
                                },
                                Object {
                                  "key": "DataField::BeginDate",
                                  "text": "DataField::BeginDate",
                                },
                                Object {
                                  "key": "DataField::EndDate",
                                  "text": "DataField::EndDate",
                                },
                                Object {
                                  "key": "DataField::TotalPrice",
                                  "text": "DataField::TotalPrice",
                                },
                                Object {
                                  "key": "DataField::Memo",
                                  "text": "DataField::Memo",
                                },
                                Object {
                                  "key": "DataField::Status",
                                  "text": "DataField::Status",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "The key of another column to be used as placement anchor.",
                                "enum": Array [
                                  "DataField::TravelID",
                                  "DataField::AgencyID",
                                  "DataField::CustomerID",
                                  "DataField::BeginDate",
                                  "DataField::EndDate",
                                  "DataField::TotalPrice",
                                  "DataField::Memo",
                                  "DataField::Status",
                                ],
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "columns",
                                "TestCustomColumn",
                                "position",
                                "anchor",
                              ],
                              "type": "string",
                              "value": "DataField::AgencyID",
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Define the placement, either before or after the anchor column.",
                              "displayName": "Placement",
                              "name": "placement",
                              "options": Array [
                                Object {
                                  "key": "",
                                  "text": "",
                                },
                                Object {
                                  "key": "After",
                                  "text": "After",
                                },
                                Object {
                                  "key": "Before",
                                  "text": "Before",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Define the placement, either before or after the anchor column.",
                                "enum": Array [
                                  "After",
                                  "Before",
                                ],
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView",
                                "columns",
                                "TestCustomColumn",
                                "position",
                                "placement",
                              ],
                              "type": "string",
                              "value": "After",
                            },
                          ],
                          "schema": Object {
                            "additionalProperties": false,
                            "artifactType": "Manifest",
                            "description": "Defines the position of the column relative to other columns.",
                            "properties": Object {
                              "anchor": Object {
                                "artifactType": "Manifest",
                                "description": "The key of another column to be used as placement anchor.",
                                "enum": Array [
                                  "DataField::TravelID",
                                  "DataField::AgencyID",
                                  "TestCustomColumn",
                                  "DataField::CustomerID",
                                  "DataField::BeginDate",
                                  "DataField::EndDate",
                                  "DataField::TotalPrice",
                                  "DataField::Memo",
                                  "DataField::Status",
                                ],
                                "type": "string",
                              },
                              "placement": Object {
                                "$ref": "#/definitions/Placement",
                                "artifactType": "Manifest",
                                "description": "Define the placement, either before or after the anchor column.",
                              },
                            },
                            "required": Array [
                              "placement",
                            ],
                            "type": "object",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "TestCustomColumn",
                            "position",
                          ],
                          "type": "object",
                          "value": Object {
                            "anchor": "DataField::AgencyID",
                            "placement": "After",
                          },
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.
Once clicked, a list of properties that can be sorted by are displayed.",
                          "displayName": "properties",
                          "name": "properties",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.
Once clicked, a list of properties that can be sorted by are displayed.",
                            "items": Object {
                              "enum": Array [
                                "TravelID",
                                "AgencyID",
                                "CustomerID",
                                "BeginDate",
                                "EndDate",
                                "TotalPrice",
                                "Memo",
                                "Status",
                              ],
                              "type": "string",
                            },
                            "type": "array",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "TestCustomColumn",
                            "properties",
                          ],
                          "type": "object",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "actionType": "Custom",
                        "additionalProperties": false,
                        "description": "TestCustomColumn",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Key",
                            "value": "TestCustomColumn",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
- Default: it will be shown by default in the table.
- Adaptation: it will initially not be shown in the table but be available via end user adaptation
- Hidden: the column is neither available in the table nor in adaptation",
                          },
                          "header": Object {
                            "artifactType": "Manifest",
                            "description": "The header appears in the table as a header, as well as in the add and remove dialogs.",
                            "i18nClassification": "COL: Custom column header text",
                            "type": "string",
                          },
                          "horizontalAlign": Object {
                            "$ref": "#/definitions/HorizontalAlign",
                            "artifactType": "Manifest",
                            "description": "Aligns the header as well as the content horizontally.",
                          },
                          "position": Object {
                            "$ref": "#/definitions/ViewPosition<LineItemsOfView::tableView>",
                            "artifactType": "Manifest",
                            "description": "Defines the position of the column relative to other columns.",
                          },
                          "properties": Object {
                            "artifactType": "Manifest",
                            "description": "If provided and sorting for the table is enabled, the custom column header can be clicked.
Once clicked, a list of properties that can be sorted by are displayed.",
                            "items": Object {
                              "enum": Array [
                                "TravelID",
                                "AgencyID",
                                "CustomerID",
                                "BeginDate",
                                "EndDate",
                                "TotalPrice",
                                "Memo",
                                "Status",
                              ],
                              "type": "string",
                            },
                            "type": "array",
                          },
                          "template": Object {
                            "artifactType": "Manifest",
                            "description": "Defines a target fragment.",
                            "type": "string",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                        },
                        "propertyIndex": 2,
                        "required": Array [
                          "header",
                          "template",
                        ],
                        "type": "object",
                      },
                      "text": "TestCustomColumn",
                      "title": "TestCustomColumn",
                      "type": "customColumn",
                      "value": Object {
                        "header": "TestCustomColumn",
                        "position": Object {
                          "anchor": "DataField::AgencyID",
                          "placement": "After",
                        },
                        "template": "project1.ext.fragment.TestCustomColumn",
                      },
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-table-views-tableView-columns-DataField::CustomerID-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView",
                        "columns",
                        "DataField::CustomerID",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::CustomerID",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::CustomerID",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::CustomerID",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/2",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "Kunden ID",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "CustomerID",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 3,
                        "type": "object",
                      },
                      "text": "Kunden ID",
                      "title": "CustomerID",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-table-views-tableView-columns-DataField::BeginDate-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView",
                        "columns",
                        "DataField::BeginDate",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::BeginDate",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::BeginDate",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::BeginDate",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/3",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Date",
                        "description": "BeginDate",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "BeginDate",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 4,
                        "type": "object",
                      },
                      "text": "BeginDate",
                      "title": "BeginDate",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-table-views-tableView-columns-DataField::EndDate-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView",
                        "columns",
                        "DataField::EndDate",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::EndDate",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::EndDate",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::EndDate",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/4",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Date",
                        "description": "EndDate",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "EndDate",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 5,
                        "type": "object",
                      },
                      "text": "EndDate",
                      "title": "EndDate",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-table-views-tableView-columns-DataField::TotalPrice-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView",
                        "columns",
                        "DataField::TotalPrice",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::TotalPrice",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::TotalPrice",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::TotalPrice",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/5",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Decimal",
                        "description": "TotalPrice",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "TotalPrice",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 6,
                        "type": "object",
                      },
                      "text": "TotalPrice",
                      "title": "TotalPrice",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-table-views-tableView-columns-DataField::Memo-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView",
                        "columns",
                        "DataField::Memo",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::Memo",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::Memo",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::Memo",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/6",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "Memo",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "Memo",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 7,
                        "type": "object",
                      },
                      "text": "Memo",
                      "title": "Memo",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-table-views-tableView-columns-DataField::Status-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView",
                        "columns",
                        "DataField::Status",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::Status",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::Status",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView",
                            "columns",
                            "DataField::Status",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/7",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "Status",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "Status",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 8,
                        "type": "object",
                      },
                      "text": "Status",
                      "title": "Status",
                      "type": undefined,
                      "value": undefined,
                    },
                  ],
                  "id": "outline-node-table-views-tableView-columns-node",
                  "moveProps": Object {
                    "allowedChildTypes": Array [
                      "actions",
                    ],
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "views",
                    "tableView",
                    "columns",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": Object {
                      "$ref": "#/definitions/ViewTableCustomColumn<LineItemsOfView::tableView>",
                    },
                    "description": "Columns",
                    "isViewNode": true,
                    "properties": Object {
                      "DataField::AgencyID": Object {
                        "$ref": "#/definitions/ViewTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/1",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "AgencyID",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "AgencyID",
                          },
                        ],
                        "propertyIndex": 1,
                      },
                      "DataField::BeginDate": Object {
                        "$ref": "#/definitions/ViewTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/3",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Date",
                        "description": "BeginDate",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "BeginDate",
                          },
                        ],
                        "propertyIndex": 4,
                      },
                      "DataField::CustomerID": Object {
                        "$ref": "#/definitions/ViewTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/2",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "Kunden ID",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "CustomerID",
                          },
                        ],
                        "propertyIndex": 3,
                      },
                      "DataField::EndDate": Object {
                        "$ref": "#/definitions/ViewTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/4",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Date",
                        "description": "EndDate",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "EndDate",
                          },
                        ],
                        "propertyIndex": 5,
                      },
                      "DataField::Memo": Object {
                        "$ref": "#/definitions/ViewTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/6",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "Memo",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "Memo",
                          },
                        ],
                        "propertyIndex": 7,
                      },
                      "DataField::Status": Object {
                        "$ref": "#/definitions/ViewTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/7",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "Status",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "Status",
                          },
                        ],
                        "propertyIndex": 8,
                      },
                      "DataField::TotalPrice": Object {
                        "$ref": "#/definitions/ViewTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/5",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Decimal",
                        "description": "TotalPrice",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "TotalPrice",
                          },
                        ],
                        "propertyIndex": 6,
                      },
                      "DataField::TravelID": Object {
                        "$ref": "#/definitions/ViewTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem/0",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "TravelID",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "TravelID",
                          },
                        ],
                        "propertyIndex": 0,
                      },
                      "TestCustomColumn": Object {
                        "$ref": "#/definitions/ViewTableCustomColumn<LineItemsOfView::tableView>",
                        "actionType": "Custom",
                        "description": "TestCustomColumn",
                        "keys": Array [
                          Object {
                            "name": "Key",
                            "value": "TestCustomColumn",
                          },
                        ],
                        "propertyIndex": 2,
                      },
                    },
                    "type": "object",
                  },
                  "text": "Columns",
                  "title": undefined,
                  "type": undefined,
                  "value": Object {
                    "TestCustomColumn": Object {
                      "header": "TestCustomColumn",
                      "position": Object {
                        "anchor": "DataField::AgencyID",
                        "placement": "After",
                      },
                      "template": "project1.ext.fragment.TestCustomColumn",
                    },
                  },
                },
              ],
              "id": "outline-node-table-views-tableView-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "views",
              },
              "path": Array [
                "table",
                "views",
                "tableView",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "The tab keeps the default LineItem ID (without the key), so the variant is applied to it.",
                  "displayName": "Keep Previous Personalization",
                  "name": "keepPreviousPersonalization",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The tab keeps the default LineItem ID (without the key), so the variant is applied to it.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "keepPreviousPersonalization",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines whether the view is visible.",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                    ],
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "visible",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                  "displayName": "Type",
                  "name": "type",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "AnalyticalTable",
                      "text": "AnalyticalTable",
                    },
                    Object {
                      "key": "GridTable",
                      "text": "GridTable",
                    },
                    Object {
                      "key": "ResponsiveTable",
                      "text": "ResponsiveTable",
                    },
                    Object {
                      "key": "TreeTable",
                      "text": "TreeTable",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                    "enum": Array [
                      "AnalyticalTable",
                      "GridTable",
                      "ResponsiveTable",
                      "TreeTable",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "type",
                  ],
                  "type": "string",
                  "value": "ResponsiveTable",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
                  "displayName": "Selection Mode",
                  "name": "selectionMode",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Auto",
                      "text": "Auto",
                    },
                    Object {
                      "key": "Multi",
                      "text": "Multi",
                    },
                    Object {
                      "key": "None",
                      "text": "None",
                    },
                    Object {
                      "key": "Single",
                      "text": "Single",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
                    "enum": Array [
                      "Auto",
                      "Multi",
                      "None",
                      "Single",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "selectionMode",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                  "displayName": "Select All",
                  "name": "selectAll",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "selectAll",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "You can define how many items can be selected at a time using the selectionLimit.",
                  "displayName": "Selection Limit",
                  "name": "selectionLimit",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "selectionLimit",
                  ],
                  "type": "number",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                  "displayName": "Enable Export",
                  "name": "enableExport",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "enableExport",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Determines whether the content density for ui.table is condensed.",
                  "displayName": "Condensed Table Layout",
                  "name": "condensedTableLayout",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "condensedTableLayout",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                  "displayName": "Hierarchy Qualifier",
                  "name": "hierarchyQualifier",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "hierarchyQualifier",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                  "displayName": "Disable Copy To Clipboard",
                  "name": "disableCopyToClipboard",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "disableCopyToClipboard",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                  "displayName": "Enable Mass Edit",
                  "name": "enableMassEdit",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "enableMassEdit",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                  "displayName": "personalization",
                  "name": "personalization",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines whether the user can add and remove columns to a given table.",
                      "displayName": "Column",
                      "name": "column",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can add and remove columns to a given table.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView",
                        "personalization",
                        "column",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines whether the user can sort a given table.",
                      "displayName": "Sort",
                      "name": "sort",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can sort a given table.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView",
                        "personalization",
                        "sort",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines whether the user can filter data of a given table.",
                      "displayName": "Filter",
                      "name": "filter",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can filter data of a given table.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView",
                        "personalization",
                        "filter",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                    "properties": Object {
                      "column": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can add and remove columns to a given table.",
                        "type": "boolean",
                      },
                      "filter": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can filter data of a given table.",
                        "type": "boolean",
                      },
                      "sort": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can sort a given table.",
                        "type": "boolean",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "personalization",
                  ],
                  "type": "object",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                  "displayName": "quickVariantSelection",
                  "name": "quickVariantSelection",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Determines whether the table title is hidden and the tab titles are displayed.",
                      "displayName": "Hide Table Title",
                      "name": "hideTableTitle",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Determines whether the table title is hidden and the tab titles are displayed.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView",
                        "quickVariantSelection",
                        "hideTableTitle",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Determines whether the entry view counts are shown.",
                      "displayName": "Show Counts",
                      "name": "showCounts",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Determines whether the entry view counts are shown.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView",
                        "quickVariantSelection",
                        "showCounts",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "List of annotation paths referring to SelectionVariant annotations.",
                      "displayName": "paths",
                      "name": "paths",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "List of annotation paths referring to SelectionVariant annotations.",
                        "items": Object {
                          "$ref": "#/definitions/AnnotationPathAsObject",
                        },
                        "type": "array",
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView",
                        "quickVariantSelection",
                        "paths",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                    "properties": Object {
                      "hideTableTitle": Object {
                        "artifactType": "Manifest",
                        "description": "Determines whether the table title is hidden and the tab titles are displayed.",
                        "type": "boolean",
                      },
                      "paths": Object {
                        "artifactType": "Manifest",
                        "description": "List of annotation paths referring to SelectionVariant annotations.",
                        "items": Object {
                          "$ref": "#/definitions/AnnotationPathAsObject",
                        },
                        "type": "array",
                      },
                      "showCounts": Object {
                        "artifactType": "Manifest",
                        "description": "Determines whether the entry view counts are shown.",
                        "type": "boolean",
                      },
                    },
                    "required": Array [
                      "paths",
                    ],
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "quickVariantSelection",
                  ],
                  "type": "object",
                  "value": undefined,
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "enableMassEdit",
                  "name": "enableMassEdit",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                      "displayName": "visibleFields",
                      "name": "visibleFields",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                        "items": Object {
                          "enum": Array [
                            "TravelID",
                            "AgencyID",
                            "CustomerID",
                            "BeginDate",
                            "EndDate",
                            "TotalPrice",
                            "Memo",
                            "Status",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                        "uniqueItems": true,
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView",
                        "enableMassEdit",
                        "visibleFields",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                      "displayName": "ignoredFields",
                      "name": "ignoredFields",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                        "items": Object {
                          "enum": Array [
                            "TravelID",
                            "AgencyID",
                            "CustomerID",
                            "BeginDate",
                            "EndDate",
                            "TotalPrice",
                            "Memo",
                            "Status",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                        "uniqueItems": true,
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView",
                        "enableMassEdit",
                        "ignoredFields",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "ignoredFields": Object {
                        "artifactType": "Manifest",
                        "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                        "items": Object {
                          "enum": Array [
                            "TravelID",
                            "AgencyID",
                            "CustomerID",
                            "BeginDate",
                            "EndDate",
                            "TotalPrice",
                            "Memo",
                            "Status",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                        "uniqueItems": true,
                      },
                      "visibleFields": Object {
                        "artifactType": "Manifest",
                        "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                        "items": Object {
                          "enum": Array [
                            "TravelID",
                            "AgencyID",
                            "CustomerID",
                            "BeginDate",
                            "EndDate",
                            "TotalPrice",
                            "Memo",
                            "Status",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                        "uniqueItems": true,
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView",
                    "enableMassEdit",
                  ],
                  "type": "object",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.LineItem",
                "artifactType": "Manifest",
                "description": "Table View",
                "isViewNode": true,
                "key": "tableView",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "tableView",
                  },
                ],
                "properties": Object {
                  "annotationPath": Object {
                    "artifactType": "Manifest",
                    "description": "The annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.",
                    "hidden": true,
                    "type": "string",
                  },
                  "columns": Object {
                    "$ref": "#/definitions/LineItemsOfView::tableView",
                    "description": "Columns",
                  },
                  "condensedTableLayout": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
                    "type": "boolean",
                  },
                  "disableCopyToClipboard": Object {
                    "artifactType": "Manifest",
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "enableExport": Object {
                    "artifactType": "Manifest",
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
                    "type": "boolean",
                  },
                  "enableMassEdit": Object {
                    "anyOf": Array [
                      Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "ignoredFields": Object {
                            "artifactType": "Manifest",
                            "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                            "items": Object {
                              "enum": Array [
                                "TravelID",
                                "AgencyID",
                                "CustomerID",
                                "BeginDate",
                                "EndDate",
                                "TotalPrice",
                                "Memo",
                                "Status",
                              ],
                              "type": "string",
                            },
                            "type": "array",
                            "uniqueItems": true,
                          },
                          "visibleFields": Object {
                            "artifactType": "Manifest",
                            "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                            "items": Object {
                              "enum": Array [
                                "TravelID",
                                "AgencyID",
                                "CustomerID",
                                "BeginDate",
                                "EndDate",
                                "TotalPrice",
                                "Memo",
                                "Status",
                              ],
                              "type": "string",
                            },
                            "type": "array",
                            "uniqueItems": true,
                          },
                        },
                        "type": "object",
                      },
                      Object {
                        "type": "boolean",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                  },
                  "entitySet": Object {
                    "artifactType": "Manifest",
                    "description": "Each table can be based on a different entitySet.",
                    "hidden": true,
                    "type": "string",
                  },
                  "hierarchyQualifier": Object {
                    "artifactType": "Manifest",
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
                    "type": "string",
                  },
                  "index": Object {
                    "artifactType": "Manifest",
                    "hidden": true,
                    "type": "number",
                  },
                  "keepPreviousPersonalization": Object {
                    "artifactType": "Manifest",
                    "description": "The tab keeps the default LineItem ID (without the key), so the variant is applied to it.",
                    "type": "boolean",
                  },
                  "key": Object {
                    "artifactType": "Manifest",
                    "description": "Unique tab identifier.",
                    "hidden": true,
                    "type": "string",
                  },
                  "personalization": Object {
                    "$ref": "#/definitions/ViewPersonalizationType",
                    "artifactType": "Manifest",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                  },
                  "quickVariantSelection": Object {
                    "$ref": "#/definitions/QuickVariantSelectionV4",
                    "artifactType": "Manifest",
                    "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                  },
                  "selectAll": Object {
                    "artifactType": "Manifest",
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                  },
                  "selectionLimit": Object {
                    "artifactType": "Manifest",
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                  },
                  "selectionMode": Object {
                    "$ref": "#/definitions/SelectionMode",
                    "artifactType": "Manifest",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
                  },
                  "toolBar": Object {
                    "$ref": "#/definitions/ToolBar<LineItemsOfView::tableView>",
                    "description": "Table Toolbar",
                  },
                  "type": Object {
                    "$ref": "#/definitions/TableTypeV4",
                    "artifactType": "Manifest",
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                  },
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines whether the view is visible.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "required": Array [
                  "annotationPath",
                  "index",
                  "key",
                ],
                "title": "Table View (key: tableView)",
                "type": "object",
              },
              "text": "Table View",
              "title": undefined,
              "type": undefined,
              "value": Object {
                "annotationPath": "com.sap.vocabularies.UI.v1.SelectionPresentationVariant#tableView",
                "columns": Object {
                  "TestCustomColumn": Object {
                    "header": "TestCustomColumn",
                    "position": Object {
                      "anchor": "DataField::AgencyID",
                      "placement": "After",
                    },
                    "template": "project1.ext.fragment.TestCustomColumn",
                  },
                },
                "index": 0,
                "key": "tableView",
                "toolBar": Object {
                  "actions": Object {
                    "TableAction": Object {
                      "enabled": true,
                      "position": Object {
                        "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                        "placement": "After",
                      },
                      "press": "project1.ext.controller.TableAction.TableAction",
                      "requiresSelection": false,
                      "text": "TableAction",
                      "visible": true,
                    },
                  },
                },
                "type": "ResponsiveTable",
              },
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [
                        Object {
                          "additionalText": undefined,
                          "annotationNodeId": undefined,
                          "children": Array [],
                          "id": "outline-node-table-views-tableView1-toolBar-actions-CustomActionInView-node",
                          "moveProps": Object {
                            "allowedChildTypes": undefined,
                            "allowedParents": Array [],
                            "movable": true,
                            "type": "actions",
                          },
                          "path": Array [
                            "table",
                            "views",
                            "tableView1",
                            "toolBar",
                            "actions",
                            "CustomActionInView",
                          ],
                          "properties": Array [
                            Object {
                              "artifactType": "Manifest",
                              "description": "Indicates whether the action requires a selection of items.",
                              "displayName": "Requires Selection",
                              "name": "requiresSelection",
                              "options": Array [
                                Object {
                                  "key": undefined,
                                  "text": "",
                                },
                                Object {
                                  "key": true,
                                  "text": "True",
                                },
                                Object {
                                  "key": false,
                                  "text": "False",
                                },
                              ],
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Indicates whether the action requires a selection of items.",
                                "type": "boolean",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView1",
                                "toolBar",
                                "actions",
                                "CustomActionInView",
                                "requiresSelection",
                              ],
                              "type": "boolean",
                              "value": false,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                              "displayName": "Text",
                              "name": "text",
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                                "i18nClassification": "COL: Custom action text",
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView1",
                                "toolBar",
                                "actions",
                                "CustomActionInView",
                                "text",
                              ],
                              "type": "string",
                              "value": "CustomActionInView",
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Relevant for extension actions; allows the definition of a target action handler.",
                              "displayName": "Press",
                              "name": "press",
                              "schema": Object {
                                "artifactType": "Manifest",
                                "description": "Relevant for extension actions; allows the definition of a target action handler.",
                                "type": "string",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView1",
                                "toolBar",
                                "actions",
                                "CustomActionInView",
                                "press",
                              ],
                              "type": "string",
                              "value": "project1.ext.controller.CustomActionInView.onCustomActionInView",
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Defines if the action button is visible.",
                              "displayName": "Visible",
                              "name": "visible",
                              "schema": Object {
                                "enum": Array [
                                  false,
                                  true,
                                ],
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView1",
                                "toolBar",
                                "actions",
                                "CustomActionInView",
                                "visible",
                              ],
                              "type": "string",
                              "value": true,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Defines if the action is enabled. The default value is true.",
                              "displayName": "Enabled",
                              "name": "enabled",
                              "schema": Object {
                                "enum": Array [
                                  false,
                                  true,
                                ],
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView1",
                                "toolBar",
                                "actions",
                                "CustomActionInView",
                                "enabled",
                              ],
                              "type": "string",
                              "value": true,
                            },
                            Object {
                              "artifactType": "Manifest",
                              "description": "Defines the position of the action relative to other actions.",
                              "displayName": "position",
                              "name": "position",
                              "properties": Array [
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "The key of another action to be used as placement anchor.",
                                  "displayName": "Anchor",
                                  "name": "anchor",
                                  "options": Array [
                                    Object {
                                      "key": "",
                                      "reset": true,
                                      "text": "",
                                    },
                                    Object {
                                      "key": "CustomActionInView",
                                      "text": "CustomActionInView",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "The key of another action to be used as placement anchor.",
                                    "oneOf": Array [
                                      Object {
                                        "bundle": "ui5",
                                        "const": "CustomActionInView",
                                        "custom": true,
                                        "description": "CustomActionInView",
                                        "hidden": true,
                                      },
                                    ],
                                    "type": "string",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView1",
                                    "toolBar",
                                    "actions",
                                    "CustomActionInView",
                                    "position",
                                    "anchor",
                                  ],
                                  "type": "string",
                                  "value": undefined,
                                },
                                Object {
                                  "artifactType": "Manifest",
                                  "description": "Define the placement, either before or after the anchor action.",
                                  "displayName": "Placement",
                                  "name": "placement",
                                  "options": Array [
                                    Object {
                                      "key": "",
                                      "text": "",
                                    },
                                    Object {
                                      "key": "After",
                                      "text": "After",
                                    },
                                    Object {
                                      "key": "Before",
                                      "text": "Before",
                                    },
                                  ],
                                  "schema": Object {
                                    "artifactType": "Manifest",
                                    "description": "Define the placement, either before or after the anchor action.",
                                    "enum": Array [
                                      "After",
                                      "Before",
                                    ],
                                    "type": "string",
                                  },
                                  "schemaPath": Array [
                                    "table",
                                    "views",
                                    "tableView1",
                                    "toolBar",
                                    "actions",
                                    "CustomActionInView",
                                    "position",
                                    "placement",
                                  ],
                                  "type": "string",
                                  "value": undefined,
                                },
                              ],
                              "schema": Object {
                                "additionalProperties": false,
                                "artifactType": "Manifest",
                                "description": "Defines the position of the action relative to other actions.",
                                "properties": Object {
                                  "anchor": Object {
                                    "artifactType": "Manifest",
                                    "description": "The key of another action to be used as placement anchor.",
                                    "oneOf": Array [
                                      Object {
                                        "bundle": "ui5",
                                        "const": "CustomActionInView",
                                        "custom": true,
                                        "description": "CustomActionInView",
                                      },
                                    ],
                                    "type": "string",
                                  },
                                  "placement": Object {
                                    "$ref": "#/definitions/ActionPlacement",
                                    "artifactType": "Manifest",
                                    "description": "Define the placement, either before or after the anchor action.",
                                  },
                                },
                                "required": Array [
                                  "placement",
                                ],
                                "type": "object",
                              },
                              "schemaPath": Array [
                                "table",
                                "views",
                                "tableView1",
                                "toolBar",
                                "actions",
                                "CustomActionInView",
                                "position",
                              ],
                              "type": "object",
                              "value": undefined,
                            },
                          ],
                          "schema": Object {
                            "actionType": "Custom",
                            "additionalProperties": false,
                            "description": "CustomActionInView",
                            "keys": Array [
                              Object {
                                "name": "Key",
                                "value": "CustomActionInView",
                              },
                            ],
                            "properties": Object {
                              "enabled": Object {
                                "anyOf": Array [
                                  Object {
                                    "enum": Array [
                                      false,
                                      true,
                                    ],
                                  },
                                  Object {
                                    "type": "string",
                                  },
                                ],
                                "artifactType": "Manifest",
                                "description": "Defines if the action is enabled. The default value is true.",
                                "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                              },
                              "position": Object {
                                "$ref": "#/definitions/ViewCustomActionPosition<LineItemsOfView::tableView1>",
                                "artifactType": "Manifest",
                                "description": "Defines the position of the action relative to other actions.",
                              },
                              "press": Object {
                                "artifactType": "Manifest",
                                "description": "Relevant for extension actions; allows the definition of a target action handler.",
                                "type": "string",
                              },
                              "requiresSelection": Object {
                                "artifactType": "Manifest",
                                "description": "Indicates whether the action requires a selection of items.",
                                "type": "boolean",
                              },
                              "text": Object {
                                "artifactType": "Manifest",
                                "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
                                "i18nClassification": "COL: Custom action text",
                                "type": "string",
                              },
                              "visible": Object {
                                "anyOf": Array [
                                  Object {
                                    "enum": Array [
                                      false,
                                      true,
                                    ],
                                  },
                                  Object {
                                    "type": "string",
                                  },
                                ],
                                "artifactType": "Manifest",
                                "description": "Defines if the action button is visible.",
                                "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                              },
                            },
                            "propertyIndex": 0,
                            "required": Array [
                              "press",
                              "text",
                            ],
                            "type": "object",
                          },
                          "text": "CustomActionInView",
                          "title": "CustomActionInView",
                          "type": "customAction",
                          "value": Object {
                            "enabled": true,
                            "press": "project1.ext.controller.CustomActionInView.onCustomActionInView",
                            "requiresSelection": false,
                            "text": "CustomActionInView",
                            "visible": true,
                          },
                        },
                      ],
                      "id": "outline-node-table-views-tableView1-toolBar-actions-node",
                      "moveProps": Object {
                        "allowedChildTypes": Array [
                          "actions",
                        ],
                        "allowedParents": undefined,
                        "movable": false,
                        "type": "actions",
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView1",
                        "toolBar",
                        "actions",
                      ],
                      "properties": Array [],
                      "schema": Object {
                        "additionalProperties": Object {
                          "$ref": "#/definitions/ViewTableCustomAction<LineItemsOfView::tableView1>",
                        },
                        "description": "Actions",
                        "isViewNode": true,
                        "properties": Object {
                          "CustomActionInView": Object {
                            "$ref": "#/definitions/ViewTableCustomAction<LineItemsOfView::tableView1>",
                            "actionType": "Custom",
                            "description": "CustomActionInView",
                            "keys": Array [
                              Object {
                                "name": "Key",
                                "value": "CustomActionInView",
                              },
                            ],
                            "propertyIndex": 0,
                          },
                        },
                        "type": "object",
                      },
                      "text": "Actions",
                      "title": undefined,
                      "type": undefined,
                      "value": Object {
                        "CustomActionInView": Object {
                          "enabled": true,
                          "press": "project1.ext.controller.CustomActionInView.onCustomActionInView",
                          "requiresSelection": false,
                          "text": "CustomActionInView",
                          "visible": true,
                        },
                      },
                    },
                  ],
                  "id": "outline-node-table-views-tableView1-toolBar-node",
                  "moveProps": Object {
                    "allowedChildTypes": undefined,
                    "allowedParents": undefined,
                    "movable": false,
                    "type": undefined,
                  },
                  "path": Array [
                    "table",
                    "views",
                    "tableView1",
                    "toolBar",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": false,
                    "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableView",
                    "description": "Table Toolbar",
                    "isViewNode": true,
                    "properties": Object {
                      "actions": Object {
                        "$ref": "#/definitions/Actions<LineItemsOfView::tableView1>",
                      },
                    },
                    "required": Array [
                      "actions",
                    ],
                    "type": "object",
                  },
                  "text": "Table Toolbar",
                  "title": undefined,
                  "type": undefined,
                  "value": Object {
                    "actions": Object {
                      "CustomActionInView": Object {
                        "enabled": true,
                        "press": "project1.ext.controller.CustomActionInView.onCustomActionInView",
                        "requiresSelection": false,
                        "text": "CustomActionInView",
                        "visible": true,
                      },
                    },
                  },
                },
                Object {
                  "additionalText": undefined,
                  "annotationNodeId": undefined,
                  "children": Array [
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-table-views-tableView1-columns-DataField::AirlineName-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView1",
                        "columns",
                        "DataField::AirlineName",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView1",
                            "columns",
                            "DataField::AirlineName",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView1",
                            "columns",
                            "DataField::AirlineName",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView1",
                            "columns",
                            "DataField::AirlineName",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableView/0",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "AirlineName",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "AirlineName",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 0,
                        "type": "object",
                      },
                      "text": "AirlineName",
                      "title": "AirlineName",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-table-views-tableView1-columns-DataField::BookingDate-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView1",
                        "columns",
                        "DataField::BookingDate",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView1",
                            "columns",
                            "DataField::BookingDate",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView1",
                            "columns",
                            "DataField::BookingDate",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView1",
                            "columns",
                            "DataField::BookingDate",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableView/1",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Date",
                        "description": "BookingDate",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "BookingDate",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 1,
                        "type": "object",
                      },
                      "text": "BookingDate",
                      "title": "BookingDate",
                      "type": undefined,
                      "value": undefined,
                    },
                    Object {
                      "additionalText": undefined,
                      "annotationNodeId": undefined,
                      "children": Array [],
                      "id": "outline-node-table-views-tableView1-columns-DataField::BookingID-node",
                      "moveProps": Object {
                        "allowedChildTypes": undefined,
                        "allowedParents": undefined,
                        "movable": false,
                        "type": undefined,
                      },
                      "path": Array [
                        "table",
                        "views",
                        "tableView1",
                        "columns",
                        "DataField::BookingID",
                      ],
                      "properties": Array [
                        Object {
                          "artifactType": "Manifest",
                          "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                          "displayName": "Width",
                          "name": "width",
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView1",
                            "columns",
                            "DataField::BookingID",
                            "width",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          "displayName": "Availability",
                          "name": "availability",
                          "options": Array [
                            Object {
                              "key": "",
                              "text": "",
                            },
                            Object {
                              "key": "Adaptation",
                              "text": "Adaptation",
                            },
                            Object {
                              "key": "Default",
                              "text": "Default",
                            },
                            Object {
                              "key": "Hidden",
                              "text": "Hidden",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                            "enum": Array [
                              "Adaptation",
                              "Default",
                              "Hidden",
                            ],
                            "type": "string",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView1",
                            "columns",
                            "DataField::BookingID",
                            "availability",
                          ],
                          "type": "string",
                          "value": undefined,
                        },
                        Object {
                          "artifactType": "Manifest",
                          "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                          "displayName": "Width Including Column Header",
                          "name": "widthIncludingColumnHeader",
                          "options": Array [
                            Object {
                              "key": undefined,
                              "text": "",
                            },
                            Object {
                              "key": true,
                              "text": "True",
                            },
                            Object {
                              "key": false,
                              "text": "False",
                            },
                          ],
                          "schema": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                          "schemaPath": Array [
                            "table",
                            "views",
                            "tableView1",
                            "columns",
                            "DataField::BookingID",
                            "widthIncludingColumnHeader",
                          ],
                          "type": "boolean",
                          "value": undefined,
                        },
                      ],
                      "schema": Object {
                        "additionalProperties": false,
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableView/2",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "BookingID",
                        "isViewNode": true,
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "BookingID",
                          },
                        ],
                        "properties": Object {
                          "availability": Object {
                            "$ref": "#/definitions/Availability",
                            "artifactType": "Manifest",
                            "description": "Defines where the column should be shown.
Default: it will be shown by default in the table.
Adaptation: it will initially not be shown in the table but be available via end user adaptation.
Hidden: the column is neither available in the table nor in adaptation.",
                          },
                          "width": Object {
                            "artifactType": "Manifest",
                            "description": "A string type that represents CSS size values.
Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
                            "type": "string",
                          },
                          "widthIncludingColumnHeader": Object {
                            "artifactType": "Manifest",
                            "description": "By default, the column width is calculated based on the type of the content. You can include the column header in the width calculation using the widthIncludingColumnHeader setting in the manifest.json.",
                            "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                            "type": "boolean",
                          },
                        },
                        "propertyIndex": 2,
                        "type": "object",
                      },
                      "text": "BookingID",
                      "title": "BookingID",
                      "type": undefined,
                      "value": undefined,
                    },
                  ],
                  "id": "outline-node-table-views-tableView1-columns-node",
                  "moveProps": Object {
                    "allowedChildTypes": Array [
                      "actions",
                    ],
                    "allowedParents": undefined,
                    "movable": false,
                    "type": "actions",
                  },
                  "path": Array [
                    "table",
                    "views",
                    "tableView1",
                    "columns",
                  ],
                  "properties": Array [],
                  "schema": Object {
                    "additionalProperties": Object {
                      "$ref": "#/definitions/ViewTableCustomColumn<LineItemsOfView::tableView1>",
                    },
                    "description": "Columns",
                    "isViewNode": true,
                    "properties": Object {
                      "DataField::AirlineName": Object {
                        "$ref": "#/definitions/ViewTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableView/0",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "AirlineName",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "AirlineName",
                          },
                        ],
                        "propertyIndex": 0,
                      },
                      "DataField::BookingDate": Object {
                        "$ref": "#/definitions/ViewTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableView/1",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "Date",
                        "description": "BookingDate",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "BookingDate",
                          },
                        ],
                        "propertyIndex": 1,
                      },
                      "DataField::BookingID": Object {
                        "$ref": "#/definitions/ViewTableColumn",
                        "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableView/2",
                        "annotationType": "com.sap.vocabularies.UI.v1.DataField",
                        "dataType": "String",
                        "description": "BookingID",
                        "keys": Array [
                          Object {
                            "name": "Value",
                            "value": "BookingID",
                          },
                        ],
                        "propertyIndex": 2,
                      },
                    },
                    "type": "object",
                  },
                  "text": "Columns",
                  "title": undefined,
                  "type": undefined,
                  "value": undefined,
                },
              ],
              "id": "outline-node-table-views-tableView1-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": undefined,
                "movable": false,
                "type": "views",
              },
              "path": Array [
                "table",
                "views",
                "tableView1",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "The tab keeps the default LineItem ID (without the key), so the variant is applied to it.",
                  "displayName": "Keep Previous Personalization",
                  "name": "keepPreviousPersonalization",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The tab keeps the default LineItem ID (without the key), so the variant is applied to it.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "keepPreviousPersonalization",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines whether the view is visible.",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                    ],
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "visible",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                  "displayName": "Type",
                  "name": "type",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "AnalyticalTable",
                      "text": "AnalyticalTable",
                    },
                    Object {
                      "key": "GridTable",
                      "text": "GridTable",
                    },
                    Object {
                      "key": "ResponsiveTable",
                      "text": "ResponsiveTable",
                    },
                    Object {
                      "key": "TreeTable",
                      "text": "TreeTable",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                    "enum": Array [
                      "AnalyticalTable",
                      "GridTable",
                      "ResponsiveTable",
                      "TreeTable",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "type",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
                  "displayName": "Selection Mode",
                  "name": "selectionMode",
                  "options": Array [
                    Object {
                      "key": "",
                      "text": "",
                    },
                    Object {
                      "key": "Auto",
                      "text": "Auto",
                    },
                    Object {
                      "key": "Multi",
                      "text": "Multi",
                    },
                    Object {
                      "key": "None",
                      "text": "None",
                    },
                    Object {
                      "key": "Single",
                      "text": "Single",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
                    "enum": Array [
                      "Auto",
                      "Multi",
                      "None",
                      "Single",
                    ],
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "selectionMode",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                  "displayName": "Select All",
                  "name": "selectAll",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "selectAll",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "You can define how many items can be selected at a time using the selectionLimit.",
                  "displayName": "Selection Limit",
                  "name": "selectionLimit",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "selectionLimit",
                  ],
                  "type": "number",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                  "displayName": "Enable Export",
                  "name": "enableExport",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "enableExport",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Determines whether the content density for ui.table is condensed.",
                  "displayName": "Condensed Table Layout",
                  "name": "condensedTableLayout",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "condensedTableLayout",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                  "displayName": "Hierarchy Qualifier",
                  "name": "hierarchyQualifier",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "hierarchyQualifier",
                  ],
                  "type": "string",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                  "displayName": "Width Including Column Header",
                  "name": "widthIncludingColumnHeader",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "widthIncludingColumnHeader",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                  "displayName": "Disable Copy To Clipboard",
                  "name": "disableCopyToClipboard",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "disableCopyToClipboard",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                  "displayName": "Enable Mass Edit",
                  "name": "enableMassEdit",
                  "options": Array [
                    Object {
                      "key": undefined,
                      "text": "",
                    },
                    Object {
                      "key": true,
                      "text": "True",
                    },
                    Object {
                      "key": false,
                      "text": "False",
                    },
                  ],
                  "schema": Object {
                    "type": "boolean",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "enableMassEdit",
                  ],
                  "type": "boolean",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                  "displayName": "personalization",
                  "name": "personalization",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines whether the user can add and remove columns to a given table.",
                      "displayName": "Column",
                      "name": "column",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can add and remove columns to a given table.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView1",
                        "personalization",
                        "column",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines whether the user can sort a given table.",
                      "displayName": "Sort",
                      "name": "sort",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can sort a given table.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView1",
                        "personalization",
                        "sort",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Defines whether the user can filter data of a given table.",
                      "displayName": "Filter",
                      "name": "filter",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can filter data of a given table.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView1",
                        "personalization",
                        "filter",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                    "properties": Object {
                      "column": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can add and remove columns to a given table.",
                        "type": "boolean",
                      },
                      "filter": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can filter data of a given table.",
                        "type": "boolean",
                      },
                      "sort": Object {
                        "artifactType": "Manifest",
                        "description": "Defines whether the user can sort a given table.",
                        "type": "boolean",
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "personalization",
                  ],
                  "type": "object",
                  "value": undefined,
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                  "displayName": "quickVariantSelection",
                  "name": "quickVariantSelection",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "Determines whether the table title is hidden and the tab titles are displayed.",
                      "displayName": "Hide Table Title",
                      "name": "hideTableTitle",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Determines whether the table title is hidden and the tab titles are displayed.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView1",
                        "quickVariantSelection",
                        "hideTableTitle",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "Determines whether the entry view counts are shown.",
                      "displayName": "Show Counts",
                      "name": "showCounts",
                      "options": Array [
                        Object {
                          "key": undefined,
                          "text": "",
                        },
                        Object {
                          "key": true,
                          "text": "True",
                        },
                        Object {
                          "key": false,
                          "text": "False",
                        },
                      ],
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "Determines whether the entry view counts are shown.",
                        "type": "boolean",
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView1",
                        "quickVariantSelection",
                        "showCounts",
                      ],
                      "type": "boolean",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "List of annotation paths referring to SelectionVariant annotations.",
                      "displayName": "paths",
                      "name": "paths",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "List of annotation paths referring to SelectionVariant annotations.",
                        "items": Object {
                          "$ref": "#/definitions/AnnotationPathAsObject",
                        },
                        "type": "array",
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView1",
                        "quickVariantSelection",
                        "paths",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "artifactType": "Manifest",
                    "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                    "properties": Object {
                      "hideTableTitle": Object {
                        "artifactType": "Manifest",
                        "description": "Determines whether the table title is hidden and the tab titles are displayed.",
                        "type": "boolean",
                      },
                      "paths": Object {
                        "artifactType": "Manifest",
                        "description": "List of annotation paths referring to SelectionVariant annotations.",
                        "items": Object {
                          "$ref": "#/definitions/AnnotationPathAsObject",
                        },
                        "type": "array",
                      },
                      "showCounts": Object {
                        "artifactType": "Manifest",
                        "description": "Determines whether the entry view counts are shown.",
                        "type": "boolean",
                      },
                    },
                    "required": Array [
                      "paths",
                    ],
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "quickVariantSelection",
                  ],
                  "type": "object",
                  "value": undefined,
                },
                Object {
                  "artifactType": undefined,
                  "description": "",
                  "displayName": "enableMassEdit",
                  "name": "enableMassEdit",
                  "properties": Array [
                    Object {
                      "artifactType": "Manifest",
                      "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                      "displayName": "visibleFields",
                      "name": "visibleFields",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                        "items": Object {
                          "enum": Array [
                            "AirlineName",
                            "BookingDate",
                            "BookingID",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                        "uniqueItems": true,
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView1",
                        "enableMassEdit",
                        "visibleFields",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                    Object {
                      "artifactType": "Manifest",
                      "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                      "displayName": "ignoredFields",
                      "name": "ignoredFields",
                      "schema": Object {
                        "artifactType": "Manifest",
                        "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                        "items": Object {
                          "enum": Array [
                            "AirlineName",
                            "BookingDate",
                            "BookingID",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                        "uniqueItems": true,
                      },
                      "schemaPath": Array [
                        "table",
                        "views",
                        "tableView1",
                        "enableMassEdit",
                        "ignoredFields",
                      ],
                      "type": "object",
                      "value": undefined,
                    },
                  ],
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "ignoredFields": Object {
                        "artifactType": "Manifest",
                        "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                        "items": Object {
                          "enum": Array [
                            "AirlineName",
                            "BookingDate",
                            "BookingID",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                        "uniqueItems": true,
                      },
                      "visibleFields": Object {
                        "artifactType": "Manifest",
                        "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                        "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                        "items": Object {
                          "enum": Array [
                            "AirlineName",
                            "BookingDate",
                            "BookingID",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                        "uniqueItems": true,
                      },
                    },
                    "type": "object",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "tableView1",
                    "enableMassEdit",
                  ],
                  "type": "object",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.LineItem#tableView",
                "artifactType": "Manifest",
                "description": "Table View Booking",
                "entitySet": "Booking",
                "isViewNode": true,
                "key": "tableView1",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "tableView1",
                  },
                ],
                "navigationProperty": "_Booking",
                "properties": Object {
                  "annotationPath": Object {
                    "artifactType": "Manifest",
                    "description": "The annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.",
                    "hidden": true,
                    "type": "string",
                  },
                  "columns": Object {
                    "$ref": "#/definitions/LineItemsOfView::tableView1",
                    "description": "Columns",
                  },
                  "condensedTableLayout": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the content density for ui.table is condensed.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
                    "type": "boolean",
                  },
                  "disableCopyToClipboard": Object {
                    "artifactType": "Manifest",
                    "description": "Determines the visibility of the Copy to Clipboard button. By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                  "enableExport": Object {
                    "artifactType": "Manifest",
                    "description": "Defines whether the Export button is displayed in the table toolbar. The default value is true.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
                    "type": "boolean",
                  },
                  "enableMassEdit": Object {
                    "anyOf": Array [
                      Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "ignoredFields": Object {
                            "artifactType": "Manifest",
                            "description": "The 'ignoredFields' property lets you hide specific fields from the mass edit dialog, even if these fields are displayed in the table.",
                            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                            "items": Object {
                              "enum": Array [
                                "AirlineName",
                                "BookingDate",
                                "BookingID",
                              ],
                              "type": "string",
                            },
                            "type": "array",
                            "uniqueItems": true,
                          },
                          "visibleFields": Object {
                            "artifactType": "Manifest",
                            "description": "The 'visibleFields' property lets you specify which fields are available in the mass edit dialog.",
                            "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                            "items": Object {
                              "enum": Array [
                                "AirlineName",
                                "BookingDate",
                                "BookingID",
                              ],
                              "type": "string",
                            },
                            "type": "array",
                            "uniqueItems": true,
                          },
                        },
                        "type": "object",
                      },
                      Object {
                        "type": "boolean",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Mass editing allows end users to simultaneously change multiple objects that share the same editable properties.",
                    "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/965ef5b2895641bc9b6cd44f1bd0eb4d",
                  },
                  "entitySet": Object {
                    "artifactType": "Manifest",
                    "description": "Each table can be based on a different entitySet.",
                    "hidden": true,
                    "type": "string",
                  },
                  "hierarchyQualifier": Object {
                    "artifactType": "Manifest",
                    "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
                    "type": "string",
                  },
                  "index": Object {
                    "artifactType": "Manifest",
                    "hidden": true,
                    "type": "number",
                  },
                  "keepPreviousPersonalization": Object {
                    "artifactType": "Manifest",
                    "description": "The tab keeps the default LineItem ID (without the key), so the variant is applied to it.",
                    "type": "boolean",
                  },
                  "key": Object {
                    "artifactType": "Manifest",
                    "description": "Unique tab identifier.",
                    "hidden": true,
                    "type": "string",
                  },
                  "personalization": Object {
                    "$ref": "#/definitions/ViewPersonalizationType",
                    "artifactType": "Manifest",
                    "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.
By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \\"Column\\", \\"Sort\\" and \\"Filter\\" accordingly.
Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
                  },
                  "quickVariantSelection": Object {
                    "$ref": "#/definitions/QuickVariantSelectionV4",
                    "artifactType": "Manifest",
                    "description": "With quickVariantSelection you can switch to multiple views (single table mode). It links to a SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) that you have added to your annotations.",
                  },
                  "selectAll": Object {
                    "artifactType": "Manifest",
                    "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
                    "type": "boolean",
                  },
                  "selectionLimit": Object {
                    "artifactType": "Manifest",
                    "description": "You can define how many items can be selected at a time using the selectionLimit.",
                    "type": "number",
                  },
                  "selectionMode": Object {
                    "$ref": "#/definitions/SelectionMode",
                    "artifactType": "Manifest",
                    "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.
- Auto: This type is deprecated. Choose any of the following modes:
- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar.
- Single: This type allows single table selection if relevant actions are available in the toolbar.
- None: No table selection is possible in display mode.",
                  },
                  "toolBar": Object {
                    "$ref": "#/definitions/ToolBar<LineItemsOfView::tableView1>",
                    "description": "Table Toolbar",
                  },
                  "type": Object {
                    "$ref": "#/definitions/TableTypeV4",
                    "artifactType": "Manifest",
                    "description": "Defines the table type. Note: Grid tables, analytical tables, and tree tables aren't rendered on small-screen devices. Responsive tables are shown instead.",
                  },
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines whether the view is visible.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                  "widthIncludingColumnHeader": Object {
                    "artifactType": "Manifest",
                    "description": "Determines whether the column header is included in the column width calculation. By default, the column width is calculated based on the type of the content.",
                    "descriptionSrcURL": "https://ui5.sap.com/#/topic/c0f6592a592e47f9bb6d09900de47412",
                    "type": "boolean",
                  },
                },
                "required": Array [
                  "annotationPath",
                  "index",
                  "key",
                ],
                "title": "Table View (key: tableView1)",
                "type": "object",
              },
              "text": "Table View Booking",
              "title": undefined,
              "type": undefined,
              "value": Object {
                "annotationPath": "com.sap.vocabularies.UI.v1.SelectionPresentationVariant#tableView",
                "entitySet": "Booking",
                "index": 1,
                "key": "tableView1",
                "toolBar": Object {
                  "actions": Object {
                    "CustomActionInView": Object {
                      "enabled": true,
                      "press": "project1.ext.controller.CustomActionInView.onCustomActionInView",
                      "requiresSelection": false,
                      "text": "CustomActionInView",
                      "visible": true,
                    },
                  },
                },
              },
            },
            Object {
              "additionalText": undefined,
              "annotationNodeId": undefined,
              "children": Array [],
              "id": "outline-node-table-views-CustomView-node",
              "moveProps": Object {
                "allowedChildTypes": undefined,
                "allowedParents": Array [],
                "movable": true,
                "type": "views",
              },
              "path": Array [
                "table",
                "views",
                "CustomView",
              ],
              "properties": Array [
                Object {
                  "artifactType": "Manifest",
                  "description": "View title (localization supported).",
                  "displayName": "Label",
                  "name": "label",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "View title (localization supported).",
                    "i18nClassification": "TIT: Custom view title",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "CustomView",
                    "label",
                  ],
                  "type": "string",
                  "value": "CustomView",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "The name contains sap.app.id as a prefix, followed by the path in the app/webapp folder and the name of the XML view.",
                  "displayName": "Template",
                  "name": "template",
                  "schema": Object {
                    "artifactType": "Manifest",
                    "description": "The name contains sap.app.id as a prefix, followed by the path in the app/webapp folder and the name of the XML view.",
                    "type": "string",
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "CustomView",
                    "template",
                  ],
                  "type": "string",
                  "value": "project1.ext.fragment.CustomView",
                },
                Object {
                  "artifactType": "Manifest",
                  "description": "Defines whether the view is visible.",
                  "displayName": "Visible",
                  "name": "visible",
                  "schema": Object {
                    "enum": Array [
                      false,
                      true,
                    ],
                  },
                  "schemaPath": Array [
                    "table",
                    "views",
                    "CustomView",
                    "visible",
                  ],
                  "type": "string",
                  "value": undefined,
                },
              ],
              "schema": Object {
                "additionalProperties": false,
                "annotationPath": "customView(CustomView)",
                "artifactType": "Manifest",
                "description": "View (CustomView)",
                "isViewNode": true,
                "key": "CustomView",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "CustomView",
                  },
                ],
                "properties": Object {
                  "index": Object {
                    "artifactType": "Manifest",
                    "hidden": true,
                    "type": "number",
                  },
                  "key": Object {
                    "artifactType": "Manifest",
                    "description": "Unique tab identifier.",
                    "hidden": true,
                    "type": "string",
                  },
                  "label": Object {
                    "artifactType": "Manifest",
                    "description": "View title (localization supported).",
                    "i18nClassification": "TIT: Custom view title",
                    "type": "string",
                  },
                  "template": Object {
                    "artifactType": "Manifest",
                    "description": "The name contains sap.app.id as a prefix, followed by the path in the app/webapp folder and the name of the XML view.",
                    "type": "string",
                  },
                  "visible": Object {
                    "anyOf": Array [
                      Object {
                        "enum": Array [
                          false,
                          true,
                        ],
                      },
                      Object {
                        "type": "string",
                      },
                    ],
                    "artifactType": "Manifest",
                    "description": "Defines whether the view is visible.",
                    "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$",
                  },
                },
                "required": Array [
                  "index",
                  "key",
                  "template",
                ],
                "title": "CustomView",
                "type": "object",
              },
              "text": "CustomView",
              "title": undefined,
              "type": undefined,
              "value": Object {
                "index": 2,
                "key": "CustomView",
                "label": "CustomView",
                "template": "project1.ext.fragment.CustomView",
              },
            },
          ],
          "id": "outline-node-table-views-node",
          "moveProps": Object {
            "allowedChildTypes": Array [
              "views",
            ],
            "allowedParents": undefined,
            "movable": false,
            "type": "views",
          },
          "path": Array [
            "table",
            "views",
          ],
          "properties": Array [
            Object {
              "artifactType": "Manifest",
              "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
              "displayName": "Show Counts",
              "name": "showCounts",
              "options": Array [
                Object {
                  "key": undefined,
                  "text": "",
                },
                Object {
                  "key": true,
                  "text": "True",
                },
                Object {
                  "key": false,
                  "text": "False",
                },
              ],
              "schema": Object {
                "artifactType": "Manifest",
                "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
                "type": "boolean",
              },
              "schemaPath": Array [
                "table",
                "views",
                "showCounts",
              ],
              "type": "boolean",
              "value": undefined,
            },
          ],
          "schema": Object {
            "additionalProperties": Object {
              "anyOf": Array [
                Object {
                  "$ref": "#/definitions/LRTableView",
                },
                Object {
                  "$ref": "#/definitions/LRChartView",
                },
                Object {
                  "$ref": "#/definitions/TableViewExtension",
                },
                Object {
                  "type": "boolean",
                },
              ],
            },
            "description": "Views",
            "isViewNode": true,
            "properties": Object {
              "CustomView": Object {
                "$ref": "#/definitions/TableViewExtension",
                "artifactType": "Manifest",
                "description": "View (CustomView)",
                "isViewNode": true,
                "key": "CustomView",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "CustomView",
                  },
                ],
                "title": "CustomView",
              },
              "showCounts": Object {
                "artifactType": "Manifest",
                "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
                "type": "boolean",
              },
              "tableView": Object {
                "$ref": "#/definitions/LRTableView<tableView>",
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType/@com.sap.vocabularies.UI.v1.SelectionPresentationVariant#tableView",
                "artifactType": "Manifest",
                "description": "Table View",
                "isViewNode": true,
                "key": "tableView",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "tableView",
                  },
                ],
                "title": "Table View (key: tableView)",
              },
              "tableView1": Object {
                "$ref": "#/definitions/LRTableView<tableView1>",
                "annotationPath": "/com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.BookingType/@com.sap.vocabularies.UI.v1.SelectionPresentationVariant#tableView",
                "artifactType": "Manifest",
                "description": "Table View Booking",
                "isViewNode": true,
                "key": "tableView1",
                "keys": Array [
                  Object {
                    "name": "Key",
                    "value": "tableView1",
                  },
                ],
                "title": "Table View (key: tableView1)",
              },
            },
            "type": "object",
          },
          "text": "Views",
          "title": undefined,
          "type": "views",
          "value": Object {
            "CustomView": Object {
              "index": 2,
              "key": "CustomView",
              "label": "CustomView",
              "template": "project1.ext.fragment.CustomView",
            },
            "tableView": Object {
              "annotationPath": "com.sap.vocabularies.UI.v1.SelectionPresentationVariant#tableView",
              "columns": Object {
                "TestCustomColumn": Object {
                  "header": "TestCustomColumn",
                  "position": Object {
                    "anchor": "DataField::AgencyID",
                    "placement": "After",
                  },
                  "template": "project1.ext.fragment.TestCustomColumn",
                },
              },
              "index": 0,
              "key": "tableView",
              "toolBar": Object {
                "actions": Object {
                  "TableAction": Object {
                    "enabled": true,
                    "position": Object {
                      "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                      "placement": "After",
                    },
                    "press": "project1.ext.controller.TableAction.TableAction",
                    "requiresSelection": false,
                    "text": "TableAction",
                    "visible": true,
                  },
                },
              },
              "type": "ResponsiveTable",
            },
            "tableView1": Object {
              "annotationPath": "com.sap.vocabularies.UI.v1.SelectionPresentationVariant#tableView",
              "entitySet": "Booking",
              "index": 1,
              "key": "tableView1",
              "toolBar": Object {
                "actions": Object {
                  "CustomActionInView": Object {
                    "enabled": true,
                    "press": "project1.ext.controller.CustomActionInView.onCustomActionInView",
                    "requiresSelection": false,
                    "text": "CustomActionInView",
                    "visible": true,
                  },
                },
              },
            },
          },
        },
      ],
      "id": "outline-node-table-node",
      "moveProps": Object {
        "allowedChildTypes": undefined,
        "allowedParents": undefined,
        "movable": false,
        "type": undefined,
      },
      "path": Array [
        "table",
      ],
      "properties": Array [
        Object {
          "artifactType": "Manifest",
          "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically, as defined by the standard variant
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
          "displayName": "Initial Load",
          "name": "initialLoad",
          "options": Array [
            Object {
              "key": "",
              "text": "",
            },
            Object {
              "key": "Auto",
              "text": "Auto",
            },
            Object {
              "key": "Disabled",
              "text": "Disabled",
            },
            Object {
              "key": "Enabled",
              "text": "Enabled",
            },
          ],
          "schema": Object {
            "artifactType": "Manifest",
            "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically, as defined by the standard variant
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/9f4e1192f1384b85bc160288e17f69c4",
            "enum": Array [
              "Auto",
              "Disabled",
              "Enabled",
            ],
            "type": "string",
          },
          "schemaPath": Array [
            "table",
            "initialLoad",
          ],
          "type": "string",
          "value": undefined,
        },
      ],
      "schema": Object {
        "additionalProperties": false,
        "description": "Table",
        "isViewNode": true,
        "properties": Object {
          "annotationPath": Object {
            "artifactType": "Manifest",
            "description": "The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.",
            "hidden": true,
            "type": "string",
          },
          "initialLoad": Object {
            "$ref": "#/definitions/InitialLoadType",
            "artifactType": "Manifest",
            "description": "Determines whether the data in the table is automatically loaded.
- Auto (default): Data is loaded automatically if a default filter value has been set in the filter bar.
- Enabled: Data is loaded automatically, as defined by the standard variant
- Disabled: Data is not loaded automatically. Users have to click the Go button.",
            "descriptionSrcURL": "https://ui5.sap.com/#/topic/9f4e1192f1384b85bc160288e17f69c4",
          },
          "views": Object {
            "$ref": "#/definitions/MultiTableModeV4",
          },
        },
        "propertyIndex": 3,
        "type": "object",
      },
      "text": "Table",
      "title": undefined,
      "type": undefined,
      "value": Object {
        "views": Object {
          "CustomView": Object {
            "index": 2,
            "key": "CustomView",
            "label": "CustomView",
            "template": "project1.ext.fragment.CustomView",
          },
          "tableView": Object {
            "annotationPath": "com.sap.vocabularies.UI.v1.SelectionPresentationVariant#tableView",
            "columns": Object {
              "TestCustomColumn": Object {
                "header": "TestCustomColumn",
                "position": Object {
                  "anchor": "DataField::AgencyID",
                  "placement": "After",
                },
                "template": "project1.ext.fragment.TestCustomColumn",
              },
            },
            "index": 0,
            "key": "tableView",
            "toolBar": Object {
              "actions": Object {
                "TableAction": Object {
                  "enabled": true,
                  "position": Object {
                    "anchor": "DataFieldForAction::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.setToNew::com.sap.gateway.srvd.dmo.sd_travel_mdsk.v0001.TravelType",
                    "placement": "After",
                  },
                  "press": "project1.ext.controller.TableAction.TableAction",
                  "requiresSelection": false,
                  "text": "TableAction",
                  "visible": true,
                },
              },
            },
            "type": "ResponsiveTable",
          },
          "tableView1": Object {
            "annotationPath": "com.sap.vocabularies.UI.v1.SelectionPresentationVariant#tableView",
            "entitySet": "Booking",
            "index": 1,
            "key": "tableView1",
            "toolBar": Object {
              "actions": Object {
                "CustomActionInView": Object {
                  "enabled": true,
                  "press": "project1.ext.controller.CustomActionInView.onCustomActionInView",
                  "requiresSelection": false,
                  "text": "CustomActionInView",
                  "visible": true,
                },
              },
            },
          },
        },
      },
    },
  ],
  "id": "outline-noderoot-node",
  "moveProps": undefined,
  "path": Array [],
  "properties": Array [
    Object {
      "artifactType": "Manifest",
      "description": "variantManagement defines how the variant management of page personalizations is controlled.
- None - No variant management by default.
- Control - Individual personalizations for each control.",
      "displayName": "Variant Management",
      "name": "variantManagement",
      "options": Array [
        Object {
          "key": "",
          "text": "",
        },
        Object {
          "key": "Control",
          "text": "Control",
        },
        Object {
          "key": "None",
          "text": "None",
        },
        Object {
          "key": "Page",
          "text": "Page",
        },
      ],
      "schema": Object {
        "artifactType": "Manifest",
        "description": "variantManagement defines how the variant management of page personalizations is controlled.
- None - No variant management by default.
- Control - Individual personalizations for each control.",
        "enum": Array [
          "Control",
          "None",
          "Page",
        ],
        "type": "string",
      },
      "schemaPath": Array [
        "variantManagement",
      ],
      "type": "string",
      "value": "Page",
    },
  ],
  "root": true,
  "schema": undefined,
  "text": "Root",
  "title": undefined,
  "type": "rootNode",
  "value": undefined,
}
`;
