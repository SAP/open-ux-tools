[
  {
    "id": "sap-fiori-elements-for-odata-v4-feature-showcase",
    "name": "SAP Fiori elements for OData V4 Feature Showcase",
    "description": "[![REUSE status](https://api.reuse.software/badge/github.com/SAP-samples/fiori-elements-feature-showcase)](https://api.reuse.software/info/github.com/SAP-samples/fiori-elements-feature-showcase)",
    "category": "list-report",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": [
        "[List Report](#list-report)",
        "[General Features](#general-features)",
        "[Configure Draft](#configure-draft)",
        "[Replacing Standard UI Texts](#replacing-standard-ui-texts)",
        "[Custom Actions](#custom-actions)",
        "[Invoking CAP actions out of a Custom Action](#invoking-cap-actions-out-of-a-custom-action)",
        "[Header Area](#header-area-list-report)",
        "[Enabling Variant Management](#enabling-variant-management)",
        "[Define Filters](#define-filters)",
        "[Default Values](#default-values)",
        "[Hide filters](#hide-filters)",
        "[Filter facets](#filter-facets)",
        "[Selection Fields](#selection-fields)",
        "[Mandatory filter fields](#mandatory-filter-fields)",
        "[Enable semantic dates for filter fields of type Date](#enable-semantic-dates-for-filter-fields-of-type-date)",
        "[Case insensitive filtering](#case-insensitive-filtering)",
        "[Value Help](#value-help)",
        "[Dependent Filtering (Value Help)](#dependent-filtering-value-help)",
        "[Custom Filter](#custom-filter)",
        "[Custom Actions](#custom-actions-global-list-report)",
        "[Content Area](#content-area-list-report)",
        "[Configuring Tables](#configuring-tables)",
        "[Actions](#actions)",
        "[Side Effects of actions](#side-effects-of-actions)",
        "[Value Help for action parameter](#value-help-for-action-parameter)",
        "[Default Value for action parameter](#default-value-for-action-parameter)",
        "[Action Drop down menu](#action-drop-down-menu)",
        "[Dynamic CRUD Restrictions](#dynamic-crud-restrictions)",
        "[Navigation Button](#navigation-button)",
        "[Critical Actions](#critical-actions)",
        "[Message Toasts](#message-toasts)",
        "[Custom Actions](#custom-actions-table-list-report)",
        "[Setting the Table Type](#setting-the-table-type)",
        "[Multiple Views](#multiple-views)",
        "[Single table mode](#single-table-mode)",
        "[Multiple table mode](#multiple-table-mode)",
        "[Selection Variant](#selection-variant)",
        "[Selection Presentation Variant](#selection-presentation-variant)",
        "[Creation Dialog](#creation-dialog)",
        "[Defining the Default Sort Order](#defining-the-default-sort-order)",
        "[Enabling Multiple Selection in Tables](#enabling-multiple-selection-in-tables)",
        "[Handling Semantic Key Fields](#handling-semantic-key-fields)",
        "[Highlighting Line Items Based on Criticality](#highlighting-line-items-based-on-criticality)",
        "[Adding a Rating Indicator to a Table](#adding-a-rating-indicator-to-a-table)",
        "[Adding a Progress Indicator to a Table](#adding-a-progress-indicator-to-a-table)",
        "[Adding a field with a tooltip to a Table](#adding-a-field-with-a-tooltip-to-a-table)",
        "[Adding a Smart Micro Chart to a Table](#adding-a-smart-micro-chart-to-a-table)",
        "[Adding a Contact Quick View to a Table](#adding-a-contact-quick-view-to-a-table)",
        "[Adding a Quick View Facet to a Table](#adding-a-quick-view-facet-to-a-table)",
        "[Links to the apps of the entity](#links-to-the-apps-of-the-entity)",
        "[Adding Multiple Fields to one Column in Responsive Tables](#adding-multiple-fields-to-one-column-in-responsive-tables)",
        "[Adding Images to a table](#adding-images-to-a-table)",
        "[Adding Currency or UoM Fields to a table](#adding-currency-or-uom-fields-to-a-table)",
        "[Add custom column (Extensibility)](#add-custom-column-extensibility)",
        "[Object Page](#object-page)",
        "[General Features](#general-features-object-page)",
        "[Annotations for data fields](#annotations-for-data-fields)",
        "[Communication properties](#communication-properties)",
        "[Time and Date](#time-and-date)",
        "[Multi line text](#multi-line-text)",
        "[Placeholder values](#placeholder-values)",
        "[Replacing Standard UI Texts](#replacing-standard-ui-texts)",
        "[Custom Actions](#custom-actions)",
        "[Invoking CAP actions out of a Custom Action](#invoking-cap-actions-out-of-a-custom-action)",
        "[Header Area](#header-area-object-page)",
        "[Title and Subtitle](#title-and-subtitle)",
        "[Actions](#object-page-actions)",
        "[Custom Actions](#custom-actions-object-page-header)",
        "[Header Facets](#header-facets)",
        "[Plain Text](#plain-text)",
        "[Header Field Group Facet](#header-field-group-facet)",
        "[Custom Field](#custom-field)",
        "[Address facet](#address-facet)",
        "[Data Points](#data-points)",
        "[Rating](#rating)",
        "[Progress](#progress)",
        "[Key value](#key-value)",
        "[Micro chart facet](#micro-chart-facet)",
        "[Area Micro Chart](#area-micro-chart)",
        "[Bullet Micro Chart](#bullet-micro-chart)",
        "[Radial Micro Chart](#radial-micro-chart)",
        "[Line Micro Chart](#line-micro-chart)",
        "[Column Micro Chart](#column-micro-chart)",
        "[Harvey Micro Chart](#harvey-micro-chart)",
        "[Stacked Bar Micro Chart](#stacked-bar-micro-chart)",
        "[Comparison Micro Chart](#comparison-micro-chart)",
        "[Header Custom Facet](#Header-custom-facet)",
        "[Content Area](#content-area-object-page)",
        "[General features](#general-features-content-area-object-page)",
        "[Displaying Text and ID for Value help Input fields](#displaying-text-and-id-for-value-help-input-fields)",
        "[Hiding features](#hiding-features)",
        "[Preview](#preview)",
        "[Side Content](#side-content)",
        "[Forms](#forms)",
        "[Connected Fields](#connected-fields)",
        "[Custom Content](#custom-content)",
        "[Form Actions and Navigation](#form-actions-and-navigation)",
        "[Custom Actions](#custom-actions-object-page-section-form)",
        "[Table](#table)",
        "[Enable Variant Management](#enable-variant-management-object-page)",
        "[Enable Personalization (Filter, Sort, Columns)](#enable-personalization)",
        "[Enable Full Screen Mode](#enable-full-screen-mode)",
        "[Adding Titles to Object Page Tables](#adding-titles-to-object-page-tables)",
        "[Adding Segmented Buttons to a Table Toolbar](#adding-segmented-buttons-to-a-table-toolbar)",
        "[Enabling Inline Creation of Table Entries on Object Page](#enabling-inline-creation-of-table-entries-on-object-page)",
        "[Using the 'Export to Spreadsheet' Feature](#using-the-export-to-spreadsheet-feature)",
        "[Custom Actions](#custom-actions-object-page-section-table)",
        "[Chart](#chart)",
        "[Custom Section and Subsection](#custom-section-and-subsection)",
        "[Custom Subsection](#custom-subsection)",
        "[Footer Bar](#footer-bar)",
        "[Determining actions](#determining-actions)",
        "[Custom Actions](#custom-actions-object-page-footer)",
        "[Custom Object Page](#custom-object-page)"
      ]
    }
  },
  {
    "id": "live-mode",
    "name": "Live mode",
    "description": "With live mode the Go button is no longer shown on the UI, initial load is used and all filter changes are directly applied. Live mode can be enabled in the [manifest.json](app/featureShowcase/webapp/manifest.json) file.",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "flexible-column-layout",
    "name": "Flexible Column Layout",
    "description": "The Flexible Column Layout (FCL) enables the app, to display the Object Page and possibly a further Object Page next to the List Report on the same page instead of navigating to the next page.",
    "category": "list-report",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "configuring-navigation-",
    "name": "Configuring Navigation --->",
    "description": "",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "configure-draft",
    "name": "Configure Draft",
    "description": "The annotation `@odata.draft.enabled` adds the draft mode to an entity.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@odata.draft.enabled"],
      "cdsExample": "annotate service1.RootEntities with @odata.draft.enabled;",
      "notes": []
    }
  },
  {
    "id": "replacing-standard-ui-texts",
    "name": "Replacing Standard UI Texts",
    "description": "If wanted, the replacement of standard UI texts is possible.",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": [
        "`C_COMMON_DIALOG_OK` is the key for all entities.",
        "`C_TRANSACTION_HELPER_OBJECT_PAGE_CONFIRM_DELETE_WITH_OBJECTTITLE_SINGULAR|RootEntities` is the key for the \"RootEntities\" entity",
        "`C_OPERATIONS_ACTION_CONFIRM_MESSAGE|RootEntities|criticalAction` is the key for the \"criticalAction\" action of the \"RootEntities\" entity"
      ]
    }
  },
  {
    "id": "custom-actions",
    "name": "Custom Actions",
    "description": "With extensions points it is possible to add custom front-end actions to the UI at different places. Custom actions are added to the [manifest.json](app/featureShowcase/webapp/manifest.json) file. The location depends on where the action shall be visible on the UI.",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "invoking-cap-actions-out-of-a-custom-action",
    "name": "Invoking CAP actions out of a Custom Action",
    "description": "It is also possible to invoke CAP actions out of a JavaScript function using the \"invokeAction\" function of the SAP Fiori elements Edit flow API.",
    "category": "list-report",
    "area": "header",
    "subCategory": "actions",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "enabling-variant-management",
    "name": "Enabling Variant Management",
    "description": "Variant Management (saving the filter settings and the personalization of tables) is by default enabled. However with the annotation `\"variantManagement\": \"None\"` it can be disabled in the [manifest.json](app/featureShowcase/webapp/manifest.json).",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "define-filters",
    "name": "Define Filters",
    "description": "<i>Search term:</i> [`#FilterDefault`](../../search?q=FilterDefault), [`#HideFilter`](../../search?q=HideFilter),[`#FilterGrouping`](../../search?q=FilterGrouping), [`#VisibleFilters`](../../search?q=VisibleFilters), `#ValueHelps`, [`#DependentFilter`](../../search?q=DependentFilter)",
    "category": "general",
    "area": "content",
    "subCategory": "filters",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "default-values",
    "name": "Default Values",
    "description": "With the annotation `@Common.FilterDefaultValue` default values can be defined, like in [field-control.cds](app/featureShowcase/field-control.cds). This Annotation does not allow complex values and when switching variants, the annotation is no longer considered. For complex values the [UI.SelectionVariant](#selection-variant) annotation is a better solution.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@Common.FilterDefaultValue"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "hide-filters",
    "name": "Hide filters",
    "description": "To reduce the amount of available filters in a List Report, properties can be annotated with `@UI.HiddenFilter` to hide them. An example is in the file [field-control.cds](app/featureShowcase/field-control.cds).",
    "category": "list-report",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": ["@UI.HiddenFilter"],
      "cdsExample": "annotate service1.RootEntities {\n    ...\n    areaChartDeviationLowerBoundValue @UI.HiddenFilter;\n    areaChartDeviationUpperBoundValue @UI.HiddenFilter;\n    areaChartToleranceLowerBoundValue @UI.HiddenFilter;\n    areaChartToleranceUpperBoundValue @UI.HiddenFilter;\n    ...\n};",
      "notes": []
    }
  },
  {
    "id": "filter-facets",
    "name": "Filter facets",
    "description": "Another nice feature are `@UI.FilterFacets`, which allow one to structure the available properties of the entity into groups, so that filter adaptation is easier.",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": ["@UI.FilterFacets", "@UI.FieldGroup"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.FilterFacets : [\n        {\n            Target : '@UI.FieldGroup#chartData',\n            Label : '{i18n>chartData}',\n        },\n        {\n            Target : '@UI.FieldGroup#location',\n            Label : '{i18n>location}',\n        },\n    ],\n);\nannotate service.RootEntities with @(\n    UI.FieldGroup #chartData : {\n        Data  : [\n            {Value : integerValue},\n            {Value : targetValue},\n            {Value : forecastValue},\n            {Value : dimensions},\n            {Value : integerValue},\n        ]\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "selection-fields",
    "name": "Selection Fields",
    "description": "@UI.SelectionFields` is the annotation, which allows to specify an array of fields, which should by default be shown in the List Report filter bar as a filter, so that the user does not need to adapt the filters. The annotation is used in the [layout.cds](app/featureShowcase/layout.cds) file.",
    "category": "list-report",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": ["@UI.SelectionFields"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.SelectionFields : [\n        field,\n        fieldWithPrice,\n        criticality_code,\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "mandatory-filter-fields",
    "name": "Mandatory filter fields",
    "description": "With the annotation `@Capabilities.FilterRestrictions.RequiredProperties` an array of mandatory filter fields can be defined. In the Feature showcase only the property 'stringProperty' is required for demonstration purposes. The annotation can be found in the [capabilities.cds](app/featureShowcase/capabilities.cds) file.",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": ["@Capabilities.FilterRestrictions.RequiredProperties"],
      "cdsExample": "annotate service1.RootEntities with @(\n    ...\n    Capabilities.FilterRestrictions : {\n        ...\n        RequiredProperties : [\n            stringProperty \n        ],\n\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "enable-semantic-dates-for-filter-fields-of-type-date",
    "name": "Enable semantic dates for filter fields of type Date",
    "description": "<i>since UI5 Version: 1.99.0</i>",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": [
        "@Capabilities.FilterRestrictions.FilterExpressionRestrictions",
        "@com.sap.vocabularies.UI.v1.SelectionFields"
      ],
      "cdsExample": "annotate service1.RootEntities with @(\n    Capabilities.FilterRestrictions : {\n        FilterExpressionRestrictions : [\n            {\n                Property : 'validFrom',\n                AllowedExpressions : 'SingleRange'\n            }\n        ],\n        ...\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "case-insensitive-filtering",
    "name": "Case insensitive filtering",
    "description": "Case insensitive filtering can be activated with the annotation `@Capabilities.FilterFunctions` and the string 'tolower' as part of the array.",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": ["@Capabilities.FilterFunctions"],
      "cdsExample": "annotate service1 with @(\n    Capabilities.FilterFunctions : [\n        'tolower'\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "value-help",
    "name": "Value Help",
    "description": "While CAP delivers the value help for Code Lists out of the box. For other associations this is not the case. To get a value help for a filter (and for the corresponding field on the Object Page), the entity has to be annotated with `@Common.ValueList`.",
    "category": "object-page",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": ["@Common.ValueList", "@Common.ValueListWithFixedValues"],
      "cdsExample": "annotate schema.RootEntities with{\n    ...\n    contact @(Common : {\n        Text            : contact.name,\n        TextArrangement : #TextOnly,\n        ValueList       : {\n            Label          : '{i18n>customer}',\n            CollectionPath : 'Contacts',\n            Parameters     : [\n                {\n                    $Type             : 'Common.ValueListParameterInOut',\n                    ValueListProperty : 'ID',\n                    LocalDataProperty : contact_ID\n                },\n                {\n                    $Type: 'Common.ValueListParameterDisplayOnly',\n                    ValueListProperty: 'country_code',\n                },\n                {\n                    $Type: 'Common.ValueListParameterDisplayOnly',\n                    ValueListProperty: 'city',\n                }\n                \n            ]\n        }\n    });\n    ...\n};",
      "notes": []
    }
  },
  {
    "id": "dependent-filtering-value-help",
    "name": "Dependent Filtering (Value Help)",
    "description": "Dependent filtering can be achieved with an input parameter for the value help. An example would be with countries and regions. The value help for the region should only show regions of the selected country, which is another property of the entity.",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": [],
      "cdsExample": "annotate schema.RootEntities with{\n    ...\n    region @(Common : {\n        Text            : region.name,\n        TextArrangement : #TextFirst,\n        ValueListWithFixedValues: true,\n        ValueList       : {\n            Label          : '{i18n>Region}',\n            CollectionPath : 'Regions',\n            Parameters     : [\n                {\n                    $Type             : 'Common.ValueListParameterInOut',\n                    ValueListProperty : 'code',\n                    LocalDataProperty : region_code\n                },\n                {\n                    $Type: 'Common.ValueListParameterOut',\n                    ValueListProperty: 'name',\n                    LocalDataProperty : region.name,\n                },\n                //To only show the connected values\n                {\n                    $Type : 'Common.ValueListParameterFilterOnly',\n                    ValueListProperty : 'country_code',\n                },\n                {\n                    $Type : 'Common.ValueListParameterIn', //Input parameter used for filtering\n                    LocalDataProperty : country_code,\n                    ValueListProperty : 'country_code',\n                },\n                \n            ]\n        }\n    });\n};",
      "notes": []
    }
  },
  {
    "id": "adding-navigation-properties",
    "name": "Adding navigation properties",
    "description": "Navigation properties can be as well added to the filter bar. For this the navigation path has to be added to the `@UI.SelectionFields` annotation.",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": ["@UI.SelectionFields", "@com.sap.vocabularies.UI.v1.SelectionFields"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.SelectionFields : [\n        ...\n        childEntities1.criticalityValue_code\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "custom-filter",
    "name": "Custom Filter",
    "description": "Custom filter are useful, when the data value is in a special format, for example a rating. The implementation consists of multiple parts.",
    "category": "list-report",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.SelectionFields"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "custom-actions-global-list-report",
    "name": "Custom Actions (Global List Report)",
    "description": "With extension points custom actions can be added in the header area of the List Report.",
    "category": "list-report",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "configuring-tables",
    "name": "Configuring Tables",
    "description": "",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "actions",
    "name": "Actions",
    "description": "In CAP, actions can be bound to a specific entity or unbound and just be a part of the service. Bound actions can only be executed, when at least one entity is selected. Unbound actions can be executed anytime.",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@Core.OperationAvailable"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.LineItem : {\n        $value : [\n            ...\n            {\n                $Type : 'UI.DataFieldForAction',\n                Action : 'service1.changeCriticality',\n                Label : '{i18n>changeCriticality}',\n            },\n            ...\n        ],\n        ...\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "side-effects-of-actions",
    "name": "Side Effects of actions",
    "description": "If your action triggers changes on the entities, you need side effects so that the UI updates automatically. These side effect annotations have to be added to the action.",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@Common.SideEffects"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "value-help-for-action-parameter",
    "name": "Value Help for action parameter",
    "description": "Often properties of an entity have value helps, so that creating a new entity is easier and wrong inputs are reduced. Value helps for action parameters are also possible.",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "default-value-for-action-parameter",
    "name": "Default Value for action parameter",
    "description": "With the annotation `@UI.ParameterDefaultValue` a default value for the parameter is set.",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@UI.ParameterDefaultValue"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "action-drop-down-menu",
    "name": "Action Drop down menu",
    "description": "A dropdown menu to group actions is possible with an annotation in the [manifest.json](app/featureShowcase/webapp/manifest.json) file.",
    "category": "list-report",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.LineItem"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "dynamic-crud-restrictions",
    "name": "Dynamic CRUD Restrictions",
    "description": "The visibility of the \"Edit\", \"Create\" and \"Delete\" actions can be dynamically adjusted. For example the delete operation can be dependent on a field of the entity, through the annotation `@Capabilities.DeleteRestrictions`. Fixed values are also possible.",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@Capabilities.DeleteRestrictions", "@Capabilities.UpdateRestrictions", "@UI.UpdateHidden"],
      "cdsExample": "annotate service1.RootEntityVariants with @(\n    Capabilities.DeleteRestrictions : {\n        Deletable : deletePossible,\n    },\n    UI.UpdateHidden : updateHidden,\n    UI.CreateHidden: { $edmJson: { $Path: '/service1.EntityContainer/Singleton/createHidden' } },\n);",
      "notes": []
    }
  },
  {
    "id": "navigation-button",
    "name": "Navigation Button",
    "description": "A navigation action navigating to an associated entity can be added, through adding the `UI.DataFieldForIntentBasedNavigation` as a line item.",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": ["@UI.Importance"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.LineItem : {\n        $value : [\n            ...\n            {\n                $Type : 'UI.DataFieldForIntentBasedNavigation',\n                Label : '{i18n>inboundNavigation}',\n                SemanticObject : 'FeatureShowcaseChildEntity2',\n                Action : 'manage',\n                RequiresContext : true,\n                Inline : true,\n                IconUrl : 'sap-icon://cart',\n                Mapping : [\n                    {\n                        $Type : 'Common.SemanticObjectMappingType',\n                        LocalProperty : integerValue,\n                        SemanticObjectProperty : 'integerProperty',\n                    },\n                ],\n                ![@UI.Importance] : #High,\n            },\n            ...\n        ],\n        ...\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "critical-actions",
    "name": "Critical Actions",
    "description": "When an action is annotated with `@Common.IsActionCritical : true`, a popover will appear before invoking the action, asking the user if he/she is sure about invoking the selected action.",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@Common.IsActionCritical"],
      "cdsExample": "annotate service1.criticalAction with @(\n    Common.IsActionCritical : true\n);",
      "notes": []
    }
  },
  {
    "id": "message-toasts",
    "name": "Message Toasts",
    "description": "Message toasts are shown on the UI when the Backend sends a message with the severity equaling 1. If the severity is higher, a dialog will be shown.",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "custom-actions-table-list-report",
    "name": "Custom Actions (Table List Report)",
    "description": "With extension points custom actions can be added in the table toolbar of the List Report.",
    "category": "list-report",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.LineItem"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "setting-the-table-type",
    "name": "Setting the Table Type",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "list-report",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.LineItem"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "multiple-views",
    "name": "Multiple Views",
    "description": "With multiple views, you can display different selections and/or presentations of the entity set, without the need to set the filter manually.",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "single-table-mode",
    "name": "Single table mode",
    "description": "In the single table mode all views are displayed in the same table. You can switch between the views through a segmented button next to the table title. If you define more than three views, a drop down menu will be displayed instead. A restriction of the single table mode is, that you can change the selected entities (`@UI.SelectionVariant`), but not the presentation (`@UI.SelectionPresentationVariant`) of the entities, nor the entity set itself.",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": [
        "@UI.SelectionVariant",
        "@UI.SelectionPresentationVariant",
        "@com.sap.vocabularies.UI.v1.LineItem"
      ],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "multiple-table-mode",
    "name": "Multiple table mode",
    "description": "In multiple table mode, a icon tab bar will be rendered above the table to switch between the views. Each view has its own table with its own table tool bar and variant management (if activated), but only the table of the selected tab will be shown. Here you have the possibility to use the `@UI.SelectionPresentationVariant` annotation and there is the possibility to define another entity set to be displayed in a tab.",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": ["@UI.SelectionPresentationVariant"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "selection-variant",
    "name": "Selection Variant",
    "description": "With a selection variant, you can define how the fields of an entity set should be sorted. The \"Text\" property is the title of the view and the property \"SelectOptions\" contains all sorting parameters.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.SelectionVariant #variant1 : {\n        Text : '{i18n>SVariant1}',\n        SelectOptions : [\n            {\n                PropertyName : criticality_code,\n                Ranges : [\n                    {\n                        Sign : #I,\n                        High : 2,\n                        Option : #BT,\n                        Low : 0,\n                    },\n                ],\n            },\n        ],\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "selection-presentation-variant",
    "name": "Selection Presentation Variant",
    "description": "With a selection presentation variant a selection of entities and a presentation can be defined. The `PresentationVariant` currently supports the properties `SortOrder` and `Visualizations`. The selection and presentation variants are basically identical to their stand-alone counterparts, only the selection variant here does not include the text property.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.LineItem"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.SelectionPresentationVariant #SelectionPresentationVariant : {\n        Text : '{i18n>SelectionPresentationVariant}',\n        SelectionVariant : {\n            $Type : 'UI.SelectionVariantType',\n            SelectOptions : [\n                {\n                    PropertyName : criticality_code,\n                    Ranges : [\n                        {\n                            Sign : #I,\n                            Option : #GT,\n                            Low : 0,\n                        },\n                    ],\n                },\n            ],\n        },\n        PresentationVariant :{\n            SortOrder : [\n                {\n                    Property : fieldWithPrice,\n                    Descending : false,\n                },\n            ],\n            Visualizations : [\n                '@UI.LineItem#simplified',\n            ],\n        },\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "creation-dialog",
    "name": "Creation Dialog",
    "description": "When creating a new entity, a creation dialog will pop up for all fields, which are annotated with `@Core.Immutable`, because fields with this annotation cannot be updated and the value has to be provided during creation.",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@Core.Immutable"],
      "cdsExample": "annotate service1.RootEntities {\n    ...\n    stringProperty @Core.Immutable;\n    ...\n};",
      "notes": []
    }
  },
  {
    "id": "defining-the-default-sort-order",
    "name": "Defining the Default Sort Order",
    "description": "Use the `UI.PresentationVariant` annotation to define a default sort order. The attribute `Visualizations` defines, on which line items the sort order should be applied.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.LineItem"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.PresentationVariant :{\n        SortOrder : [\n            {\n                Property : field,\n                Descending : false,\n            },\n        ],\n        Visualizations : [\n            '@UI.LineItem',\n        ],\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "enabling-multiple-selection-in-tables",
    "name": "Enabling Multiple Selection in Tables",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "list-report",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.LineItem"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "handling-semantic-key-fields",
    "name": "Handling Semantic Key Fields",
    "description": "Semantic Key fields can be defined, with the annotation `Common.SemanticKey`, which consists of an Array of fields from the entity. The given fields will be displayed in bold, and when possible the editing status will be displayed. Currently this is only possible for the default DataField.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": "annotate service.RootEntities with @(\n    Common.SemanticKey : [ field ],\n);",
      "notes": []
    }
  },
  {
    "id": "highlighting-line-items-based-on-criticality",
    "name": "Highlighting Line Items Based on Criticality",
    "description": "Line items can be highlighted based on there criticality with the annotation `![@UI.Criticality]`. The annotation has to be a part of the `@UI.LineItem` annotation.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.Criticality", "@UI.LineItem"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.LineItem : {\n        $value : [\n            ...\n        ],\n        ![@UI.Criticality] : criticality_code, \n    },\n);",
      "notes": []
    }
  },
  {
    "id": "adding-a-rating-indicator-to-a-table",
    "name": "Adding a Rating Indicator to a Table",
    "description": "To add a rating indicator (stars) to the table, the entity needs to be annotated with `@UI.DataPoint`. The Value Property of the annotation defines, how many stars are visible. Values between x.25 and x.74 are displaced as a half star. The target property defines, how many stars are possible.",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@UI.DataPoint", "@Common.QuickInfo", "@UI.LineItem", "@UI.Importance"],
      "cdsExample": "annotate service.RootEntities with @(\n    ...\n    UI.DataPoint #ratingIndicator : {\n        Value : starsValue,\n        TargetValue : 4,\n        Visualization : #Rating,\n        Title : '{i18n>ratingIndicator}',\n        ![@Common.QuickInfo] : 'Tooltip via Common.QuickInfo',\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "adding-a-progress-indicator-to-a-table",
    "name": "Adding a Progress Indicator to a Table",
    "description": "To add a progress indicator to a table, the entity needs to be annotated with `@UI.DataPoint`. The value property defines the current progress and the target property the maximum progress. Additionally a criticality can be given, if wanted.",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@UI.DataPoint", "@UI.LineItem", "@UI.Importance"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.DataPoint #progressIndicator : {\n        Value : integerValue,\n        TargetValue : 100,\n        Visualization : #Progress,\n        Title : '{i18n>progressIndicator}',\n        //Criticality: criticality,\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "adding-a-field-with-a-tooltip-to-a-table",
    "name": "Adding a field with a tooltip to a Table",
    "description": "Fields can have a tooltip in the List Report through a work around.",
    "category": "list-report",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@Common.QuickInfo", "@UI.DataFieldForAnnotation", "@UI.DataPoint"],
      "cdsExample": "annotate service.RootEntities with @(\n    ...\n    UI.DataPoint #fieldWithTooltip : {\n        Value : dimensions,\n        ![@Common.QuickInfo] : '{i18n>Tooltip}',\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "adding-a-smart-micro-chart-to-a-table",
    "name": "Adding a Smart Micro Chart to a Table",
    "description": "To add a smart micro chart to a table you have again to define a `@UI.DataPoint`. In the case of a radial chart, the properties value and target value are mandatory and the criticality is optional.",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@UI.DataPoint", "@UI.Chart", "@UI.LineItem"],
      "cdsExample": "annotate service.RootEntities with @(\n    ...\n    UI.DataPoint #radialChart : { \n        Value : integerValue,\n        TargetValue : targetValue,\n        Criticality : criticality_code,\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "adding-a-contact-quick-view-to-a-table",
    "name": "Adding a Contact Quick View to a Table",
    "description": "To have a data field which shows a contact with a contact quick view, the contact quick view needs to be implemented first. An Example would be:",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@UI.LineItem", "@Communication.Contact"],
      "cdsExample": "annotate service1.Contacts with @(\n    Communication.Contact : {\n        fn   : name, //full name\n        kind : #org,\n        tel  : [{\n            uri  : phone,\n            type : #preferred\n        }],\n        adr  : [{\n            building : building,\n            country  : country.name,\n            street   : street,\n            locality : city,\n            code     : postCode,\n            type     : #preferred\n        }],\n    }\n);",
      "notes": []
    }
  },
  {
    "id": "adding-a-quick-view-facet-to-a-table",
    "name": "Adding a Quick View Facet to a Table",
    "description": "A quick view facet is a pop up, when you click on an entry in a column and get more information. Typically it is used in combination with associations to one, where the association name is displayed in the column and with a click on it, more information about the association entity can be consumed. To enable a quick view facet, the association entity needs to be annotated with `@UI.QuickViewFacet`. It is an array of reference facets, where you can reference field groups (a group of properties) to be shown in the quick view. For a better looking header of the quick view, the association entity gets typically also annotated with `@UI.HeaderInfo`.",
    "category": "general",
    "area": "header",
    "subCategory": "tables",
    "implementation": {
      "annotations": [
        "@UI.QuickViewFacet",
        "@UI.HeaderInfo",
        "@UI.FieldGroup",
        "@UI.LineItem",
        "@UI.Importance",
        "@Common.Text",
        "@Common.TextArrangement",
        "@title"
      ],
      "cdsExample": "annotate service1.ChildEntities2 with @(\n    UI.FieldGroup #data : {\n        Label : '{i18n>ChildEntity2}',\n        Data : [\n            {Value : field2},\n            {Value : integerProperty},\n            {Value : field4},\n        ],\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "links-to-the-apps-of-the-entity",
    "name": "Links to the apps of the entity",
    "description": "The quick view facet also shows links to the apps of the entity, when the entity is annotated with `@Common.SemanticObject`.",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@Common.SemanticObject"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "adding-multiple-fields-to-one-column-in-responsive-tables",
    "name": "Adding Multiple Fields to one Column in Responsive Tables",
    "description": "Multiple fields can be in one column, if a field group is added to table with the UI.DataFieldForAnnotation.",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@UI.LineItem", "@UI.FieldGroup", "@UI.Importance"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.FieldGroup #AdminData       : {\n        Data  : [\n            {Value : createdAt},\n            {Value : createdBy},\n            {Value : modifiedAt},\n            {Value : modifiedBy},\n        ]\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "adding-images-to-a-table",
    "name": "Adding Images to a table",
    "description": "Images are typically the first column in a table and help to visually guide the user. An image can be added to a table by just adding a normal data field to the line items.",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@UI.Importance", "@UI.IsImageURL"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.LineItem : {\n        $value : [\n            {\n                $Type : 'UI.DataField',\n                Value : imageUrl,\n                @UI.Importance : #High,\n            },\n            ...\n        ],\n        ...\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "adding-currency-or-uom-fields-to-a-table",
    "name": "Adding Currency or UoM Fields to a table",
    "description": "The special thing about currency or unit of measure fields is, that they have an additional field with the unit. In order to not have to add both properties to the table, and may risk, that through personalisation one might be not visible, the property with the value can be annotated with the unit.",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@Measures.Unit", "@Measures.ISOCurrency"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "add-custom-column-extensibility",
    "name": "Add custom column (Extensibility)",
    "description": "To fulfill business requirements, there might be the need, to add custom columns to a table. With the SAP Fiori elements extension points this is possible.",
    "category": "object-page",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.LineItem"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "annotations-for-data-fields",
    "name": "Annotations for data fields",
    "description": "",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "communication-properties",
    "name": "Communication properties",
    "description": "To display emails and phone numbers as a link, they are annotated with `@Communication.IsEmailAddress` or `@Communication.IsPhoneNumber`",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@Communication.IsEmailAddress", "@Communication.IsPhoneNumber", "@title"],
      "cdsExample": "annotate schema.RootEntities with{\n    ...\n    email                   @title : '{i18n>email}'                          @Communication.IsEmailAddress;\n    telephone               @title : '{i18n>telephone}'                      @Communication.IsPhoneNumber;\n    ...",
      "notes": []
    }
  },
  {
    "id": "time-and-date",
    "name": "Time and Date",
    "description": "SAP Fiori elements provides out of the box support for displaying and editing dates and times, as well as time stamps. No annotations are needed, the properties just need to have the corresponding data type.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "multi-line-text",
    "name": "Multi line text",
    "description": "<i>Search terms:</i> `#MultiLineText`, `\"formatOptions\"`",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.MultiLineText", "@title", "@com.sap.vocabularies.UI.v1.FieldGroup"],
      "cdsExample": "annotate schema.RootEntities with{\n    ...\n    description             @title : '{i18n>description}'                    @UI.MultiLineText;\n    ...\n};",
      "notes": []
    }
  },
  {
    "id": "placeholder-values",
    "name": "Placeholder values",
    "description": "With `@UI.Placeholder` a placeholder value can be defined, for when the field is in edit mode.",
    "category": "object-page",
    "area": "header",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.Placeholder", "@title"],
      "cdsExample": "annotate schema.RootEntities with {\n    ...\n    region @title : '{i18n>region}' @UI.Placeholder : 'Select a region';\n    ...\n};",
      "notes": []
    }
  },
  {
    "id": "title-and-subtitle",
    "name": "Title and Subtitle",
    "description": "The title and subtitle of an Object Page are defined with the annotation `@UI.HeaderInfo`.",
    "category": "object-page",
    "area": "header",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@UI.HeaderInfo"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.HeaderInfo :{\n        TypeName : '{i18n>RootEntities}',\n        TypeNamePlural : '{i18n>RootEntities.typeNamePlural}',\n        Title          : {\n            $Type : 'UI.DataField',\n            Value : field,\n        },\n        Description    : {\n            $Type : 'UI.DataField',\n            Value : '{i18n>RootEntities}',\n        },\n        ImageUrl : imageUrl,\n        TypeImageUrl : 'sap-icon://sales-order',\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "header-facets",
    "name": "Header Facets",
    "description": "The header facets are a collection of facets which are displayed in the header of an Object Page. Both `UI.ReferenceFacet` and `UI.CollectionFacet` are supported. The facets are added to the `@UI.HeaderFacets` annotation. Collection facets need to have an ID, to work properly.",
    "category": "object-page",
    "area": "header",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.HeaderFacets", "@UI.DataPoint"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.HeaderFacets : [\n        {\n            $Type : 'UI.ReferenceFacet',\n            Target : '@UI.DataPoint#fieldWithPrice',\n        },\n        {\n            $Type : 'UI.CollectionFacet',\n            Facets : [\n                ...\n            ],\n        },\n        ...\n    ],",
      "notes": []
    }
  },
  {
    "id": "plain-text",
    "name": "Plain Text",
    "description": "Plain text can be displayed, by adding a normal data field to a field group and use this field group as a target of a reference facet.",
    "category": "general",
    "area": "header",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.FieldGroup", "@UI.MultiLineText"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.HeaderFacets : [\n        ...\n        {\n            $Type : 'UI.ReferenceFacet',\n            Target : '@UI.FieldGroup#plainText',\n            Label : '{i18n>plainText}'\n        },\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "header-field-group-facet",
    "name": "Header Field Group Facet",
    "description": "Field groups can be part of a header.",
    "category": "list-report",
    "area": "header",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.FieldGroup", "@Communication.Contact"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.HeaderFacets : [\n        ...\n        {\n            $Type : 'UI.ReferenceFacet',\n            Target : '@UI.FieldGroup#HeaderData',\n            Label : '{i18n>HeaderData}'\n        },\n        ...\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "custom-field",
    "name": "Custom Field",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "general",
    "area": "header",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.FieldGroup"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "address-facet",
    "name": "Address Facet",
    "description": "The `@Communication.Address` annotation of an entity can be directly displayed. For this the label property of the annotation is used, therefore the label property needs to be fully formatted. Linebreaks can be achieved with '\\n'.",
    "category": "general",
    "area": "header",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@Communication.Address"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.HeaderFacets : [\n        ...\n        {\n            $Type : 'UI.ReferenceFacet',\n            Target : 'contact/@Communication.Address',\n            Label : '{i18n>Address}'\n        },\n        ...\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "data-points",
    "name": "Data Points",
    "description": "A data point represent a single point of data. Typically it is a number, but it can also be textual, like a status value.",
    "category": "general",
    "area": "header",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.DataPoint", "@Common.QucikInfo"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.HeaderFacets : [\n        ...\n        {\n            $Type : 'UI.ReferenceFacet',\n            Target : '@UI.DataPoint#progressIndicator',\n        },\n        ...\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "rating",
    "name": "Rating",
    "description": "With the Visualization property set to \"#Rating\" the data point will be displayed as filled stars. The \"TargetValue\" property sets the maximal amount of stars.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.DataPoint #ratingIndicator : {\n        Value : starsValue,\n        TargetValue : 4,\n        Visualization : #Rating,\n        Title : '{i18n>ratingIndicator}',\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "progress",
    "name": "Progress",
    "description": "With the Visualization property set to \"#Progress\" the data point will be displayed as a bar surrounded by a container. The \"TargetValue\" property is the maximal value. If the value is higher or equals the target value, the container is filled.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.DataPoint #progressIndicator : {\n        Value : integerValue,\n        TargetValue : 100,\n        Visualization : #Progress,\n        Title : '{i18n>progressIndicator}',\n        Criticality: criticality,\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "key-value",
    "name": "Key value",
    "description": "A key value data point is the default data point, when the \"Visualization\" property is not specified.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": "annotate service.RootEntities with @(\n    ...\n    UI.DataPoint #fieldWithPrice : {\n        Value : fieldWithPrice,\n        Title : '{i18n>fieldWithPrice}',\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "micro-chart-facet",
    "name": "Micro chart Facet",
    "description": "A micro chart facet consists of a title, a subtitle, a Microchart control, and a footer. <br/>The following Microchart controls are supported: Area, Bullet, Radial, Column, Line, Harvey, Stacked bar and Comparison micro chart. <br/>The micro chart is defined with the `@UI.Chart` annotation, which then is the target of a ReferenceFacet in the `@UI.HeaderFacets` annotation.",
    "category": "general",
    "area": "header",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.Chart", "@UI.HeaderFacets", "@UI.DataPoint", "@Measures.Unit"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.HeaderFacets : [\n        ...\n        {\n            $Type : 'UI.ReferenceFacet',\n            Target : '@UI.Chart#radialChart',\n        },\n        ...\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "area-micro-chart",
    "name": "Area Micro Chart",
    "description": "The area micro chart is a trend chart, which provides information for the actual and target value for a specified dimension.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.DataPoint"],
      "cdsExample": "annotate service.ChartDataEntities with @(\n    UI.Chart #areaChart : {\n        Title : '{i18n>areaChart}',\n        Description : '{i18n>ThisIsAMicroChart}',\n        ChartType : #Area,\n        Dimensions : [\n            dimensions,\n        ],\n        Measures : [\n            integerValue,\n        ],\n        MeasureAttributes : [\n            {\n                $Type : 'UI.ChartMeasureAttributeType',\n                Measure : integerValue,\n                Role : #Axis1,\n                DataPoint : '@UI.DataPoint#areaChart',\n            },\n        ],\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "bullet-micro-chart",
    "name": "Bullet Micro Chart",
    "description": "The bullet chart features a single measure and compares it to one or more other measures (e.g. value with target comparison). Both \"Criticality\" and \"CriticalityCalculation\" are supported, but if both are given \"Criticality\" overrides \"CriticalityCalculation\". The bullet chart does not support the criticality value of 5 (new item).",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.DataPoint"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.Chart #bulletChart : {\n        Title : '{i18n>bulletChart}',\n        Description : '{i18n>ThisIsAMicroChart}',\n        ChartType : #Bullet,\n        Dimensions : [\n            dimensions\n        ],\n        Measures : [\n            integerValue,\n        ],\n        MeasureAttributes : [\n            {\n                $Type : 'UI.ChartMeasureAttributeType',\n                Measure : integerValue,\n                Role : #Axis1,\n                DataPoint : '@UI.DataPoint#bulletChart',\n            },\n        ],\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "radial-micro-chart",
    "name": "Radial Micro Chart",
    "description": "The radial micro chart displays a single percentage value.",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@UI.DataPoint"],
      "cdsExample": "annotate service.RootEntities with @(\n    ...\n    UI.Chart #radialChart : {\n        Title : '{i18n>radialChart}',\n        Description : '{i18n>ThisIsAMicroChart}',\n        ChartType : #Donut,\n        Measures : [\n            integerValue,\n        ],\n        MeasureAttributes : [\n            {\n                $Type : 'UI.ChartMeasureAttributeType',\n                Measure : integerValue,\n                Role : #Axis1,\n                DataPoint : '@UI.DataPoint#radialChart',\n            },\n        ],\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "line-micro-chart",
    "name": "Line Micro Chart",
    "description": "The line chart displays a series of data points as a line. The bottom values are the border values of the dimension. The upper left value is the smallest value of the first measure property and the upper right value is the largest value of the last measure property. The shown unit of measure is from the first entry.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.DataPoint"],
      "cdsExample": "annotate service.ChartDataEntities with @(\n    ...\n    UI.Chart #lineChart : { \n        Title : '{i18n>lineChart}',\n        Description : '{i18n>ThisIsAMicroChart}',\n        ChartType : #Line,\n        Measures : [\n            integerValueWithUoM,\n            targetValue,\n        ],\n        Dimensions : [\n            dimensions,\n            dimensions\n        ],\n        MeasureAttributes : [\n            {\n                $Type : 'UI.ChartMeasureAttributeType',\n                Measure : integerValueWithUoM,\n                Role : #Axis2,\n                DataPoint : '@UI.DataPoint#lineChartWidth',\n            },\n            {\n                $Type : 'UI.ChartMeasureAttributeType',\n                Measure : targetValue,\n                Role : #Axis2,\n                DataPoint : '@UI.DataPoint#lineChartDepth',\n            },\n        ],\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "column-micro-chart",
    "name": "Column Micro Chart",
    "description": "A column chart uses vertical bars to compare values of a dimension.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.DataPoint"],
      "cdsExample": "annotate service.ChartDataEntities with @(\n    ...\n    UI.Chart #columnChart : { \n        Title : '{i18n>columnChart}',\n        Description : '{i18n>ThisIsAMicroChart}',\n        ChartType : #Column,\n        Measures : [\n            integerValue\n        ],\n        Dimensions : [\n            dimensions\n        ],\n        MeasureAttributes : [\n            {\n                $Type : 'UI.ChartMeasureAttributeType',\n                Measure : integerValue,\n                Role : #Axis1,\n                DataPoint : '@UI.DataPoint#dataPointForChart',\n            }\n        ]\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "harvey-micro-chart",
    "name": "Harvey Micro Chart",
    "description": "A harvey chart plots a single measure value against a maximum value.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.DataPoint"],
      "cdsExample": "annotate service.RootEntities with @(\n    ...\n    UI.Chart #harveyChart : {\n        Title : '{i18n>harveyChart}',\n        Description : '{i18n>ThisIsAMicroChart}',\n        ChartType : #Pie,\n        Measures : [\n            fieldWithPrice\n        ],\n        MeasureAttributes : [\n            {\n                $Type : 'UI.ChartMeasureAttributeType',\n                Role : #Axis1,\n                Measure: fieldWithPrice,\n                DataPoint : '@UI.DataPoint#harveyChart',\n            }\n        ]\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "stacked-bar-micro-chart",
    "name": "Stacked Bar Micro Chart",
    "description": "A stacked bar chart uses vertical bars to compare values of a dimension.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.DataPoint"],
      "cdsExample": "annotate service.ChartDataEntities with @(\n    ...\n    UI.Chart #stackedBarChart : { \n        Title : '{i18n>stackedBarChart}',\n        Description : '{i18n>ThisIsAMicroChart}',\n        ChartType : #BarStacked,\n        Measures : [\n            integerValue\n        ],\n        Dimensions : [\n            dimensions\n        ],\n        MeasureAttributes : [\n            {\n                $Type : 'UI.ChartMeasureAttributeType',\n                Measure : integerValue,\n                Role : #Axis1,\n                DataPoint : '@UI.DataPoint#dataPointForChart',\n            }\n        ]\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "comparison-micro-chart",
    "name": "Comparison Micro Chart",
    "description": "A comparison chart uses three horizontal bars to compare values of a dimension. If more values are defined in the dimension, they will only show up in the tooltip.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.DataPoint"],
      "cdsExample": "annotate service.ChartDataEntities with @(\n    ...\n    UI.Chart #comparisonChart : { \n        Title : '{i18n>comparisonChart}',\n        Description : '{i18n>ThisIsAMicroChart}',\n        ChartType : #Bar,\n        Measures : [\n            integerValue\n        ],\n        Dimensions : [\n            dimensions\n        ],\n        MeasureAttributes : [\n            {\n                $Type : 'UI.ChartMeasureAttributeType',\n                Measure : integerValue,\n                Role : #Axis1,\n                DataPoint : '@UI.DataPoint#dataPointForChart',\n            }\n        ]\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "header-custom-facet",
    "name": "Header Custom Facet",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "object-page",
    "area": "header",
    "subCategory": "tables",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "object-page-actions",
    "name": "Object Page Actions",
    "description": "Actions for the Object Page in general are referenced in the `@UI.Identification` annotation, which is an array of data fields. The actions are referenced as `UI.DataFieldForAction`. The criticality only supports the values 0 (normal), 1 (red) and 3 (green). For bound actions the Object Page content is passed and for unbound actions, no context is passed. Navigation actions are also possible.",
    "category": "object-page",
    "area": "header",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@UI.Identification"],
      "cdsExample": "annotate service.RootEntities with @(\n    ...\n    UI.Identification : [\n        {\n            $Type : 'UI.DataFieldForAction',\n            Action : 'service1.changeCriticality',\n            Label : '{i18n>changeCriticality}',\n            Criticality : criticality_code,\n        },\n        ...\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "custom-actions-object-page-header",
    "name": "Custom Actions (Object Page Header)",
    "description": "Custom actions on the Object Page are added in the [manifest.json](app/featureShowcase/webapp/manifest.json) file under \"options\"->\"settings\"->\"content\"->\"header\"->\"actions\".",
    "category": "object-page",
    "area": "header",
    "subCategory": "actions",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "navigation-from-header-facets",
    "name": "Navigation from Header Facets",
    "description": "It is possible to define in-page navigation or external navigation for data points, rating & progress indicators or micro chart facets of the header, so that the facet label will be rendered as a link.",
    "category": "general",
    "area": "header",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "inpage-navigation",
    "name": "In-page Navigation",
    "description": "For the In-page navigation the header facet has the \"navigation\" property. \"sectionId\" defines which section of the Object Page is the target und the \"subsectionId\" defines which subsection of this, if the section has subsections. If no subsection ID is specified, the routing goes to the first subsection.",
    "category": "object-page",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.DataPoint", "@UI.FieldGroup"],
      "cdsExample": "\"RootEntityObjectReport\": {\n    ...\n    \"options\": {\n        \"settings\": {\n            ...\n            \"controlConfiguration\": {\n                ...\n                \"@com.sap.vocabularies.UI.v1.DataPoint#progressIndicator\":{\n                    \"navigation\":{\n                        \"targetSections\":{\n                            \"sectionId\": \"sap.fe.featureShowcase.mainApp::RootEntityObjectReport--fe::FacetSection::chartData\",\n                            \"subSectionId\": \"sap.fe.featureShowcase.mainApp::RootEntityObjectReport--fe::FacetSubSection::advancedChartData\"\n                        }\n                    }\n                },\n                ...\n            },\n            ...\n        }\n    }\n},\n```\n```\nannotate service.RootEntities with @(\n    UI.Facets : [\n        ...\n        {\n            $Type : 'UI.CollectionFacet',\n            Label : '{i18n>chartData}',\n            ID  : 'chartDataCollection',\n            Facets : [\n                ...\n                {\n                    $Type : 'UI.ReferenceFacet',\n                    Target : '@UI.FieldGroup#advancedChartData',\n                    ID : 'advancedChartData',\n                    ...\n                },\n            ],\n        },\n        ...\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "external-navigation",
    "name": "External Navigation",
    "description": "The external navigation is implemented at two positions in the [manifest.json](app/featureShowcase/webapp/manifest.json) file.",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.DataPoint"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "toggling-the-editability-of-header-fields",
    "name": "Toggling the Editability of Header Fields",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "object-page",
    "area": "header",
    "subCategory": "tables",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "adding-subpages",
    "name": "Adding Subpages",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "object-page",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "enabling-the-related-apps-button",
    "name": "Enabling the Related Apps Button",
    "description": "With the property `\"showRelatedApps\": true` in the [manifest.json](app/featureShowcase/webapp/manifest.json) file, the header action row on the Object Page will include a button \"Related Apps\", if there are any related apps. This enables the user to quickly navigate to related apps. Related apps are those, with the same semantic object.",
    "category": "object-page",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@UI.Facet", "@UI.ReferenceFacet", "@UI.CollectionFacet"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "general-features-content-area-object-page",
    "name": "General features Content Area Object Page",
    "description": "<i>Search term:</i> [`#DisplayTextAndID`](../../search?q=DisplayTextAndID), [`#HidingContent`](../../search?q=HidingContent), [`#Preview`](../../search?q=Preview), [`#SideContent`](../../search?q=SideContent)",
    "category": "object-page",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "displaying-text-and-id-for-value-help-input-fields",
    "name": "Displaying Text and ID for Value help Input fields",
    "description": "Instead of showing unreadable long IDs, there is the option to replace the ID with another property value from the entity, for example a name property.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@Common.Text", "@Common.TextArrangement"],
      "cdsExample": "annotate schema.RootEntities with {\n    ...\n    criticality @Common.Text : criticality.name @Common.TextArrangement : #TextFirst;\n    ...\n};",
      "notes": []
    }
  },
  {
    "id": "hiding-features",
    "name": "Hiding features",
    "description": "Any header facet, section or data field can be hidden with the annotation `@UI.Hidden`. The annotation only supports boolean values. Expression bindings, e.g. a '!' are not possible.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.Hidden", "@UI.FieldGroup"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.Facets : [\n        ...\n        {\n            $Type : 'UI.ReferenceFacet',\n            Target : '@UI.FieldGroup#ShowWhenInEdit',\n            Label   : '{i18n>ShowWhenInEdit}',\n            ![@UI.Hidden]: IsActiveEntity,\n        },\n        ...\n        \n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "preview",
    "name": "Preview",
    "description": "A reference facet in a collection facet is not shown after loading the app, when the reference facet has the `![@UI.PartOfPreview]` annotation and it is set to false. The sub section is then hidden beneath a \"Show more\" button on the UI.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.PartOfPreview", "@UI.FieldGroup"],
      "cdsExample": "annotate service.RootEntities with @(\n    UI.Facets : [\n        ...\n        {\n            $Type : 'UI.CollectionFacet',\n            ...\n            Facets : [\n                ...\n                {\n                    $Type : 'UI.ReferenceFacet',\n                    Target : '@UI.FieldGroup#advancedChartData',\n                    ID : 'advancedChartData',\n                    Label : '{i18n>advancedChartData}',\n                    ![@UI.PartOfPreview] : false\n                },\n            ],\n        },\n        ...\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "side-content",
    "name": "Side Content",
    "description": "<i>Search terms:</i> [`#SideContent`](../../search?q=SideContent)",
    "category": "object-page",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "forms",
    "name": "Forms",
    "description": "A form is a group of fields. The `@UI.FieldGroup` annotation is used to group the fields. The field group is added to the `@UI.Facets` annotation to be displayed.",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@UI.FieldGroup", "@UI.Facets", "@title"],
      "cdsExample": "annotate service.RootEntities with @(\n    ...\n    UI.FieldGroup #ShowWhenInEdit       : {\n        Data  : [\n            {Value : field},\n            {Value : fieldWithCriticality},\n            {Value : fieldWithUoM},\n            {Value : fieldWithPrice},\n            {Value : criticality_code},\n            {Value : contact_ID},\n            {Value : association2one_ID},\n        ]\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "connected-fields",
    "name": "Connected Fields",
    "description": "When two fields are semantically connected, they can be displayed next to each other under one label, to show their data relation.",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@UI.ConnectedFields"],
      "cdsExample": "UI.ConnectedFields #ConnectedDates :{\n    Label : '{i18n>ConnectedField}',\n    Template : '{integerValue} / {targetValue}',\n    Data : {\n        integerValue : {\n            $Type : 'UI.DataField',\n            Value : integerValue,\n        },\n        targetValue : {\n            $Type : 'UI.DataField',\n            Value : targetValue,\n        },\n    },\n},\n```\nThe connected field is then referenced as a target of a data field for annotation, to be displayed in a form.\n```\nannotate service.RootEntities with @(\n    ...\n    UI.FieldGroup #Section : {\n        Data  : [\n            ...\n            {\n                $Type : 'UI.DataFieldForAnnotation',\n                Target : '@UI.ConnectedFields#ConnectedDates',\n            },\n            ...\n        ]\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "custom-content",
    "name": "Custom Content",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.FieldGroup"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "form-actions-and-navigation",
    "name": "Form Actions and Navigation",
    "description": "Forms can have their own actions, which show up in the upper right corner of the section by default. The actions and navigations are just added by adding the corresponding data field (\"DataFieldForAction\" or \"DataFieldForIntentBasedNavigation\") to the \"Data\" array of the field group from the form. If the action should be a part of the form toolbar instead of the section toolbar, the data field needs the additional property \"Inline : true\".",
    "category": "general",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@UI.Importance", "@UI.Emphasized"],
      "cdsExample": "annotate service.RootEntities with @(\n    ...\n    UI.FieldGroup #Section : {\n        Data  : [\n            ...\n            {\n                $Type : 'UI.DataFieldForIntentBasedNavigation',\n                Label : '{i18n>inboundNavigation}',\n                SemanticObject : 'FeatureShowcaseChildEntity2',\n                Action : 'manage',\n                RequiresContext : true,\n                IconUrl : 'sap-icon://cart',\n                Mapping : [\n                    {\n                        $Type : 'Common.SemanticObjectMappingType',\n                        LocalProperty : integerValue,\n                        SemanticObjectProperty : 'integerProperty',\n                    },\n                ],\n                ![@UI.Importance] : #High,\n            },\n            {\n                $Type : 'UI.DataFieldForAction',\n                Action : 'service1.EntityContainer/unboundAction',\n                Label : '{i18n>formActionEmphasized}',\n                ![@UI.Emphasized]   : true,\n            },\n            {\n                $Type   : 'UI.DataFieldForAction',\n                Action  : 'service1.changeProgress',\n                Label   : '{i18n>formAction}',\n                Inline  : true,\n            },\n        ]\n    },\n    ...\n);",
      "notes": []
    }
  },
  {
    "id": "custom-actions-object-page-section-form",
    "name": "Custom Actions (Object Page Section Form)",
    "description": "Custom actions can also be added to the section of a form on the Object Page. The qualifier for the section is the annotated ID.",
    "category": "object-page",
    "area": "footer",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.FieldGroup"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "table",
    "name": "Table",
    "description": "<i>Search terms:</i> `\"Control\"`, `\"personalization\"`, `\"enableFullScreen\"`, `#OPTableTitle`, `\"quickVariantSelection\"`, `\"creationMode\"`, `\"enableExport\"`",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@UI.LineItem"],
      "cdsExample": "annotate service1.ChildEntities3 with @(\n    UI.LineItem :[\n        {\n            $Type : 'UI.DataField',\n            Value : field,\n        },\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "enable-variant-management-object-page",
    "name": "Enable Variant Management Object Page",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "object-page",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "enable-personalization",
    "name": "Enable Personalization",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.LineItem"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "enable-full-screen-mode",
    "name": "Enable Full Screen Mode",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "general",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.LineItem"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "adding-titles-to-object-page-tables",
    "name": "Adding Titles to Object Page Tables",
    "description": "The title of an Object Page table is the \"TypeNamePlural\" property of the `@UI.HeaderInfo` annotation.",
    "category": "object-page",
    "area": "header",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@UI.HeaderInfo"],
      "cdsExample": "annotate service.ChildEntities1 with @(\n    UI.HeaderInfo :{\n        ...\n        TypeNamePlural : '{i18n>childEntities1.typeNamePlural}',\n        ...\n    },\n);",
      "notes": []
    }
  },
  {
    "id": "adding-segmented-buttons-to-a-table-toolbar",
    "name": "Adding Segmented Buttons to a Table Toolbar",
    "description": "The segmented button in the table toolbar is used to switch between different views. If more then 3 views are specified for the table, then the segmented button will be replaced by a dropdown button. The view variants are specified in the [manifest.json](app/featureShowcase/webapp/manifest.json) file in the \"tableSettings\" property of the line item, which is the data source for the table.",
    "category": "list-report",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.LineItem"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "enabling-inline-creation-of-table-entries-on-object-page",
    "name": "Enabling Inline Creation of Table Entries on Object Page",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "object-page",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.LineItem"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "using-the-export-to-spreadsheet-feature",
    "name": "Using the 'Export to Spreadsheet' Feature",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "object-page",
    "area": "content",
    "subCategory": "tables",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.LineItem"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "custom-actions-object-page-section-table",
    "name": "Custom Actions (Object Page Section Table)",
    "description": "Custom actions can also be added to a table toolbar which is part of a section on the Object Page.",
    "category": "object-page",
    "area": "content",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@com.sap.vocabularies.UI.v1.LineItem"],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "chart",
    "name": "Chart",
    "description": "As an alternative to micro charts in the header, charts are also possible as sections. However the implementation is more complex.",
    "category": "general",
    "area": "header",
    "subCategory": "filters",
    "implementation": {
      "annotations": [
        "@Aggregation.ApplySupported",
        "@Analytics.AggregatedProperties",
        "@Common.Label",
        "@UI.Chart",
        "@UI.Facets",
        "@UI.ValueCriticality"
      ],
      "cdsExample": "annotate service1.ChartDataEntities with @(\n    Aggregation.ApplySupported : {\n        Transformations          : [\n            'aggregate',\n            'topcount',\n            'bottomcount',\n            'identity',\n            'concat',\n            'groupby',\n            'filter',\n            'expand',\n            'top',\n            'skip',\n            'orderby',\n            'search'\n        ],\n        Rollup                   : #None,\n        PropertyRestrictions     : true,\n        GroupableProperties : [\n            dimensions,\n            criticality_code\n        ],\n        AggregatableProperties : [\n            {\n                $Type : 'Aggregation.AggregatablePropertyType',\n                Property : integerValue,\n                RecommendedAggregationMethod : 'average',\n                SupportedAggregationMethods : [\n                    'min',\n                    'max',\n                    'average'\n                ],\n            },\n        ],\n    }\n);",
      "notes": []
    }
  },
  {
    "id": "custom-section-and-subsection",
    "name": "Custom Section and Subsection",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "general",
    "area": "content",
    "subCategory": "general",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "custom-subsection",
    "name": "Custom Subsection",
    "description": "<i style=\"color:orange;\">INFO: </i>We recommend that you use [SAP Fiori tools](http://help.sap.com/disclaimer?site=https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US), which is a set of extensions for SAP Business Application Studio and Visual Studio Code, to configure the app using the Application Modeler tool. <br/>",
    "category": "general",
    "area": "footer",
    "subCategory": "tables",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  },
  {
    "id": "determining-actions",
    "name": "Determining actions",
    "description": "Determining actions are shown in the footer bar of the Object Page. These actions are part of the `@UI.Identification` array. The only difference to actions shown in the header is the additional property `Determining : true`.",
    "category": "object-page",
    "area": "footer",
    "subCategory": "actions",
    "implementation": {
      "annotations": ["@UI.Identification"],
      "cdsExample": "annotate service.RootEntities with @(\n    ...\n    UI.Identification : [\n        ...\n        {\n            $Type : 'UI.DataFieldForAction',\n            Action : 'service1.changeCriticality',\n            Label : '{i18n>changeCriticality}',\n            Determining : true,\n            Criticality : criticality_code,\n        },\n    ],\n);",
      "notes": []
    }
  },
  {
    "id": "custom-actions-object-page-footer",
    "name": "Custom Actions (Object Page Footer)",
    "description": "Of course, custom actions can also be added to the footer bar of the Object Page.",
    "category": "object-page",
    "area": "footer",
    "subCategory": "actions",
    "implementation": {
      "annotations": [],
      "cdsExample": null,
      "notes": []
    }
  }
]
