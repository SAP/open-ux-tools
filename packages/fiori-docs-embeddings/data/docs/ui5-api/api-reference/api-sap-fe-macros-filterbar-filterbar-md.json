{
  "id": "ui5-api-api-sap-fe-macros-filterbar-filterbar-md",
  "title": "sap.fe.macros.filterBar.FilterBar",
  "category": "api-reference",
  "path": "api/sap.fe.macros.filterBar.FilterBar.md",
  "lastModified": "2025-09-29T10:06:39.626Z",
  "tags": [
    "api-reference",
    "md",
    "sap",
    "macros",
    "filterBar",
    "FilterBar"
  ],
  "headers": [
    "sap.fe.macros.filterBar.FilterBar",
    "Methods",
    "getActiveFiltersText",
    "getCurrentVariantKey",
    "getFilterFieldEnabled",
    "getFilterFieldVisible",
    "getFilters",
    "getSelectionVariant",
    "setCurrentVariantKey",
    "setFilterFieldEnabled",
    "setFilterFieldVisible",
    "setFilterValues",
    "setSelectionVariant",
    "triggerSearch"
  ],
  "content": "# sap.fe.macros.filterBar.FilterBar\n\n<p>Usage example:\n<pre>\nsap.ui.require([\"sap/fe/macros/filterBar/FilterBar\"], function(FilterBar) {\n\t ...\n\t new FilterBar(\"MyFilterBar\", {metaPath:\"@com.sap.vocabularies.UI.v1.SelectionFields\"})\n})\n</pre><br/>This is currently an experimental API because the structure of the generated content will change to come closer to the FilterBar that you get out of templates.\nThe public method and property will not change but the internal structure will so be careful on your usage.\n</p>\n\n**Type:** class\n\n**Module:** sap/fe/macros/filterBar/FilterBar\n\n## Methods\n\n### getActiveFiltersText\n<p>Get the Active Filters Text Summary for the filter bar.</p>\n\n### getCurrentVariantKey\n<p>Gets the key of the current variant in the associated variant management.</p>\n\n### getFilterFieldEnabled\n<p>Determines whether the field is enabled or disabled.</p>\n\n### getFilterFieldVisible\n<p>Gets the visibility of a filter field.</p>\n\n### getFilters\n<p>Provides all the filters that are currently active\nalong with the search expression.</p>\n\n### getSelectionVariant\n<p>Get the selection variant from the filter bar.\nNote: This method returns all the filter values that are set in the filter bar, including the text from the search field (with $search as the property name). However, it doesn't return any filter field condition that uses a custom operator.</p>\n\n### setCurrentVariantKey\n<p>Sets the new selected variant in the associated variant management.</p>\n\n### setFilterFieldEnabled\n<p>Sets the enablement of the field.</p>\n\n### setFilterFieldVisible\n<p>Shows or hides any filter field from the filter bar.\nThe property will not be hidden inside the adaptation dialog and may be re-added.</p>\n\n### setFilterValues\n<p>Set the filter values for the given property in the filter bar.\nThe filter values can be either a single value or an array of values.\nEach filter value must be represented as a primitive value.</p>\n\n### setSelectionVariant\n<p>Sets <a target=\"_self\" href=\"api/sap.fe.navigation.SelectionVariant\">sap.fe.navigation.SelectionVariant</a> to the filter bar. Note: setSelectionVariant will clear existing filters and then apply the SelectionVariant values.\nNote: This method cannot set the search field text or any filter field condition that relies on a custom operator.</p>\n\n### triggerSearch\n<p>Triggers the API search on the filter bar.</p>\n\n",
  "excerpt": "sap.fe.macros.filterBar.FilterBar <p>Usage example: <pre> sap.ui.require([\"sap/fe/macros/filterBar/FilterBar\"], function(FilterBar) { \t ... \t new FilterBar(\"MyFilterBar\", {metaPath:\"@com.sap.vocabular...",
  "wordCount": 314,
  "version": "1.0.0",
  "source": "ui5-api",
  "sourceType": "json-api"
}