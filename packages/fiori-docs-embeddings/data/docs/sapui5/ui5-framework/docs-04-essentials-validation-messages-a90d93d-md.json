{
  "id": "sapui5-docs-04-essentials-validation-messages-a90d93d-md",
  "title": "Validation Messages",
  "category": "ui5-framework",
  "path": "docs/04_Essentials/validation-messages-a90d93d.md",
  "lastModified": "2025-09-01T18:17:10.554Z",
  "tags": [
    "ui5-framework",
    "md",
    "Validation",
    "Messages"
  ],
  "headers": [
    "Validation Messages",
    "Target",
    "Lifecycle",
    "Automatically Created Messages",
    "Manually Created Messages"
  ],
  "content": "<!-- loioa90d93df5a024e8bb18826b699c9aaa7 -->\n\n# Validation Messages\n\nValidation messages are either created by the framework and processed by the`sap.ui.core.message.ControlMessageProcessor` or manually by the application.\n\n\n\n<a name=\"loioa90d93df5a024e8bb18826b699c9aaa7__section_y31_smj_rhb\"/>\n\n## Target\n\nThe target of a validation message can be empty. In this case, the message has no specific target and is relevant for the whole application. If a target is set, the target is a string consisting of a control ID, a slash \\(\"/\"\\), and the name of the property to which the message applies.\n\nExample: `label0/text`\n\n\n\n<a name=\"loioa90d93df5a024e8bb18826b699c9aaa7__section_arh_tmj_rhb\"/>\n\n## Lifecycle\n\nValidation messages are added with a target referencing a control and its specific property. The messages are kept until a validation message for the property is created and assigned. If new data for the same property is received from the server, the validation messages are erased unless their `persistent` property is set to `true`.\n\n\n\n<a name=\"loioa90d93df5a024e8bb18826b699c9aaa7__section_w2c_jmj_rhb\"/>\n\n## Automatically Created Messages\n\nValidation messages are generated by the framework type validation when data changes. If a bound property has an assigned type, the validation can trigger the message creation. To activate the automatic message creation, the following options exist:\n\n-   Component:\n\n    You can activate the automatic message generation in the component metadata or as a parameter when instantiating the component as follows:\n\n    ```js\n    // \"UIComponent\" required from \"sap/ui/core/UIComponent\"\n    // \"ComponentContainer\" required from \"sap/ui/core/ComponentContainer\"\n    \n    UIComponent.extend(\"MyComponent\", {\n        metadata  : {\n            version  : \"1.0\" ,\n            handleValidation  : true\n        }\n    });\n    ```\n\n    ```js\n    var oComponentContainer = new ComponentContainer(\"MyComponentContainer\", {\n        name: \"MyComponent\",\n        id: \"myComponentId\",\n        handleValidation: true\n    });\n    ```\n\n-   Descriptor for Applications\n\n    You can activate the automatic message generation in the `\"sap.ui5\"` section of the `manifest.json` file as follows:\n\n    ```js\n    \"sap.ui5\": {\n           \"handleValidation\": true\n    }\n    ```\n\n-   Control\n\n    You can activate automatic message generation for controls by registering the control in the message manager as follows:\n\n    ```js\n    // \"Input\" required from \"sap/m/Input\"\n    // \"Float\" required from \"sap/ui/model/type/Float\"\n    // \"Messaging\" required from \"sap/ui/core/Messaging\"\n    \n    var oInput = new Input({\n        value: { path: \"/Products(1)/Price\", type: Float }\n    });\n    Messaging.registerObject(oInput, true);\n    ```\n\n    > ### Note:  \n    > If you don't set the second attribute of `Messaging.registerObject` to `true`, any validation / parse error event for the registered object is canceled without a message being generated. For more information, see [`Messaging.registerObject` in the API reference](https://ui5.sap.com/#/api/module:sap/ui/core/Messaging%23methods/sap/ui/core/Messaging.registerObject). \n\n\n\n\n## Manually Created Messages\n\nYou can also create validation messages manually and add them to the `sap/ui/core/Messaging` module. If you add the message to a control property that is bound and validated by a data binding type, your message gets deleted when new validation results from the type comes in. You can override this behavior by setting the `persistent` property of the message to `true`.\n\n```\n// \"ControlMessageProcessor\" required from module \"sap/ui/core/message/ControlMessageProcessor\"\n// \"Messaging\" required from module \"sap/ui/core/Messaging\"\n// \"Input\" required from module \"sap/m/Input\"\n// \"Float\" required from module \"sap/ui/model/type/Float\"\n// \"Message\" required from modle \"sap/ui/core/message/Message\"\nvar oMessageProcessor = new ControlMessageProcessor();\n\nMessaging.registerMessageProcessor(oMessageProcessor);\n\nvar oInput = new Input({\n    id: \"myInputId\",\n    value: { path: \"/Products(1)/Price\" , type: Float }\n});\n\nMessaging.addMessages(\n    new Message({\n        message: \"ZIP codes must have at least 23 digits\",\n        type: sap.ui.core.MessageType.Error,\n        target: \"myInputId/value\",\n        processor: oMessageProcessor\n     })\n);\n```\n\n**Related Information**  \n\n\n[API Reference: `sap.ui.core.ControlMessageProcessor`](https://ui5.sap.com/#/api/sap.ui.core.ControlMessageProcessor)\n\n[API Reference: `module:sap/ui/core/Messaging`](https://ui5.sap.com/#/api/module:sap/ui/core/Messaging)\n\n",
  "excerpt": "<!-- loioa90d93df5a024e8bb18826b699c9aaa7 --> Validation Messages Validation messages are either created by the framework and processed by thesap.ui.core.message.ControlMessageProcessor or manually by...",
  "wordCount": 517,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}