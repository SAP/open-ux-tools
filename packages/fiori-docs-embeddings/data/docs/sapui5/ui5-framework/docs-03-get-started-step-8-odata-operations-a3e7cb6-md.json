{
  "id": "sapui5-docs-03-get-started-step-8-odata-operations-a3e7cb6-md",
  "title": "Step 8: OData Operations",
  "category": "ui5-framework",
  "path": "docs/03_Get-Started/step-8-odata-operations-a3e7cb6.md",
  "lastModified": "2025-09-01T18:17:10.485Z",
  "tags": [
    "ui5-framework",
    "md",
    "Step",
    "OData",
    "Operations"
  ],
  "headers": [
    "Step 8: OData Operations",
    "Preview",
    "Coding",
    "webapp/controller/App.controller.js",
    "webapp/view/App.view.xml",
    "webapp/i18n/i18n.properties"
  ],
  "content": "<!-- loioa3e7cb6f671b4b839f37eb5f88429e41 -->\n\n# Step 8: OData Operations\n\nOur OData service provides one OData operation: the `ResetDataSource` action. In this step, we add a button that resets all data changes we made during the tutorial to their original state using this action.\n\n\n\n<a name=\"loioa3e7cb6f671b4b839f37eb5f88429e41__section_bt4_fxc_z1b\"/>\n\n## Preview\n\n  \n  \n**A Restart Tutorial button is added**\n\n![](images/Tutorial_OData_V4_Step_8_e518deb.png \"A Restart Tutorial button is added\")\n\n\n\n<a name=\"loioa3e7cb6f671b4b839f37eb5f88429e41__section_tsr_gxc_z1b\"/>\n\n## Coding\n\nYou can view and download all files at [OData V4 - Step 8](https://ui5.sap.com/#/entity/sap.ui.core.tutorial.odatav4/sample/sap.ui.core.tutorial.odatav4.08).\n\n\n\n<a name=\"loioa3e7cb6f671b4b839f37eb5f88429e41__section_pvc_fyc_z1b\"/>\n\n## webapp/controller/App.controller.js\n\n```js\n...\n\t\tonResetChanges : function () {\n\t\t\tthis.byId(\"peopleList\").getBinding(\"items\").resetChanges();\n\t\t\tthis._setUIChanges();\n\t\t},\n\n\t\tonResetDataSource : function () {\n\t\t\tvar oModel = this.getView().getModel(),\n\t\t\t\toOperation = oModel.bindContext(\"/ResetDataSource(...)\");\n\n\t\t\toOperation.invoke().then(function () {\n\t\t\t\t\toModel.refresh();\n\t\t\t\t\tMessageToast.show(this._getText(\"sourceResetSuccessMessage\"));\n\t\t\t\t}.bind(this), function (oError) {\n\t\t\t\t\tMessageBox.error(oError.message);\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\tonSave : function () {\n...\n\n```\n\nThe `onResetDataSource` event handler calls the `ResetDataSource` action, which is an action of the *TripPin* OData service that resets the data of the service to its original state.\n\nWe call that action by first creating a deferred operation binding on the model. The `(â€¦)` part of the binding syntax marks the binding as deferred. We use a deferred binding because we want to control when the action is invoked. Since it is deferred, we need to explicitly call its `invoke` method.\n\nThe invocation is asynchronous; the `invoke` method therefore returns a `Promise`. We attach simple success and error handlers to that `Promise` by calling its `then` method.\n\n> ### Note:  \n> Many of the methods in the OData V4 API of SAPUI5 return a `Promise` to manage asynchronous processing\n\n\n\n<a name=\"loioa3e7cb6f671b4b839f37eb5f88429e41__section_pp2_mxc_z1b\"/>\n\n## webapp/view/App.view.xml\n\n```xml\n<mvc:View\n\tcontrollerName=\"sap.ui.core.tutorial.odatav4.controller.App\"\n\tdisplayBlock=\"true\"\n\txmlns=\"sap.m\"\n\txmlns:mvc=\"sap.ui.core.mvc\">\n\t<Shell>\n\t\t<App busy=\"{appView>/busy}\" class=\"sapUiSizeCompact\">\n\t\t\t<pages>\n\t\t\t\t<Page title=\"{i18n>peoplePageTitle}\">\n\t\t\t\t\t<headerContent>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tid=\"resetChangesButton\"\n\t\t\t\t\t\t\ttext=\"{i18n>resetChangesButtonText}\"\n\t\t\t\t\t\t\tenabled=\"{= !${appView>/hasUIChanges}}\"\n\t\t\t\t\t\t\tpress=\"onResetDataSource\"\n\t\t\t\t\t\t\ttype=\"Emphasized\">\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</headerContent>\n...\n```\n\nWe add the **headerContent** aggregation to the **Page** and insert the new **Button**. We add the **onResetDataSource** event handler to the **press** event.\n\n\n\n<a name=\"loioa3e7cb6f671b4b839f37eb5f88429e41__section_kl4_d1x_4cb\"/>\n\n## webapp/i18n/i18n.properties\n\n```ini\n...\n# Toolbar\n...\n#XBUT: Button text for reset changes\nresetChangesButtonText=Restart Tutorial\n...\n# Messages\n...\n#XMSG: Message for changes reverted\nsourceResetSuccessMessage=All changes reverted back to start\n```\n\nWe add the missing texts to the properties file.\n\n\n\nAnd now we are done! We built a simple application with user data from an OData V4 service. We can display, edit, create, and delete users. And we use OData V4 features such as batch groups and automatic type detection.\n\n**Related Information**  \n\n\n[Bindings](../04_Essentials/bindings-54e0ddf.md \"Bindings connect SAPUI5 view elements to model data, allowing changes in the model to be reflected in the view element and vice versa.\")\n\n[OData Operations](../04_Essentials/odata-operations-b54f789.md \"The OData V4 model supports OData operations (ActionImport, FunctionImport, bound Actions and bound Functions). Unbound parameters are limited to primitive values.\")\n\n",
  "excerpt": "<!-- loioa3e7cb6f671b4b839f37eb5f88429e41 --> Step 8: OData Operations Our OData service provides one OData operation: the ResetDataSource action. In this step, we add a button that resets all data ch...",
  "wordCount": 435,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}