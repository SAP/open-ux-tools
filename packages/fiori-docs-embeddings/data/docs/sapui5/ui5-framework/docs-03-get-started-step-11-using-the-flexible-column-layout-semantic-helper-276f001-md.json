{
  "id": "sapui5-docs-03-get-started-step-11-using-the-flexible-column-layout-semantic-helper-276f001-md",
  "title": "Step 11: Using the Flexible Column Layout Semantic Helper",
  "category": "ui5-framework",
  "path": "docs/03_Get-Started/step-11-using-the-flexible-column-layout-semantic-helper-276f001.md",
  "lastModified": "2025-09-01T18:17:10.452Z",
  "tags": [
    "ui5-framework",
    "md",
    "Step",
    "Using",
    "the",
    "Flexible",
    "Column",
    "Layout",
    "Semantic",
    "Helper"
  ],
  "headers": [
    "Step 11: Using the Flexible Column Layout Semantic Helper",
    "Preview",
    "Coding",
    "webapp/Component.js \\[MODIFY\\]",
    "webapp/view/Detail.view.xml \\[MODIFY\\]",
    "webapp/controller/Detail.controller.js \\[MODIFY\\]",
    "webapp/view/DetailDetail.view.xml \\[MODIFY\\]",
    "webapp/controller/DetailDetail.controller.js \\[MODIFY\\]",
    "webapp/controller/List.controller.js \\[MODIFY\\]",
    "webapp/controller/App.controller.js \\[MODIFY\\]"
  ],
  "content": "<!-- loio276f001c5a934f6e8faedee6ea22aba1 -->\n\n# Step 11: Using the Flexible Column Layout Semantic Helper\n\nIn this step, we use the `sap.f.FlexibleColumnLayoutSemanticHelper` class to implement the recommended UX patterns for layout changes in the app.\n\n`FlexibleColumnLayout` gives you the freedom to implement any app logic that involves changing the layout \\(showing/hiding columns\\) as a result of the user's actions. However, there are certain UX patterns that are considered as optimal and are recommended for SAP Fiori apps. The `FlexibleColumnLayoutSemanticHelper` class helps you implement them by giving you tips about what layout to display when.\n\n> ### Note:  \n> Using this class is NOT mandatory in order to build an app with the `FlexibleColumnLayout`, but makes it easier to achieve the optimal UX recommended in the SAP Fiori design guidelines.\n\nFor more information, see [Flexible Column Layout Semantic Helper](../10_More_About_Controls/flexible-column-layout-semantic-helper-623b01e.md).\n\n\n\n<a name=\"loio276f001c5a934f6e8faedee6ea22aba1__section_yfh_d31_12b\"/>\n\n## Preview\n\n  \n  \n**List-detail-detail pattern using sap.f.FlexibleColumnLayoutSemanticHelper**\n\n![](images/With_Semantic_Helper_Fiori_2_0_Tutorial_fd98e0d.gif \"List-detail-detail pattern using sap.f.FlexibleColumnLayoutSemanticHelper\")\n\n\n\n<a name=\"loio276f001c5a934f6e8faedee6ea22aba1__section_fd2_4dd_lbb\"/>\n\n## Coding\n\nYou can view and download all files at [Flexible Column Layout App - Step 11](https://ui5.sap.com/#/sample/sap.f.tutorial.fcl.11/preview).\n\n\n\n<a name=\"loio276f001c5a934f6e8faedee6ea22aba1__section_zv4_spj_l4b\"/>\n\n## webapp/Component.js \\[MODIFY\\]\n\n```js\nsap.ui.define([\n\t'sap/ui/core/UIComponent',\n\t'sap/ui/model/json/JSONModel',\n\t'sap/f/FlexibleColumnLayoutSemanticHelper',\n\t'sap/f/library'\n], function(UIComponent, JSONModel, FlexibleColumnLayoutSemanticHelper, fioriLibrary) {\n\t'use strict';\n\n\treturn UIComponent.extend('sap.ui.demo.fcl.Component', {\n\n\t\tmetadata: {\n\t\t\tmanifest: 'json'\n\t\t},\n\n\t\tinit: function () {\n\t\t\tvar oModel,\n\t\t\t\toProductsModel,\n\t\t\t\toRouter;\n\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\toModel = new JSONModel();\n\t\t\tthis.setModel(oModel);\n\n\t\t\t// set products demo model on this sample\n\t\t\toProductsModel = new JSONModel(sap.ui.require.toUrl('sap/ui/demo/mock/products.json'));\n\t\t\toProductsModel.setSizeLimit(1000);\n\t\t\tthis.setModel(oProductsModel, 'products');\n\n\t\t\toRouter = this.getRouter();\n\t\t\toRouter.attachBeforeRouteMatched(this._onBeforeRouteMatched, this);\n\t\t\toRouter.initialize();\n\t\t},\n\n\t\tgetHelper: function () {\n\t\t\treturn this._getFcl().then(function(oFCL) {\n\t\t\t\tvar oSettings = {\n\t\t\t\t\tdefaultTwoColumnLayoutType: fioriLibrary.LayoutType.TwoColumnsMidExpanded,\n\t\t\t\t\tdefaultThreeColumnLayoutType: fioriLibrary.LayoutType.ThreeColumnsMidExpanded\n\t\t\t\t};\n\t\t\t\treturn (FlexibleColumnLayoutSemanticHelper.getInstanceFor(oFCL, oSettings));\n\t\t\t});\n\t\t},\n\n\t\t_onBeforeRouteMatched: function(oEvent) {\n\t\t\tvar oModel = this.getModel(),\n\t\t\t\tsLayout = oEvent.getParameters().arguments.layout,\n\t\t\t\toNextUIState;\n\n\t\t\t// If there is no layout parameter, query for the default level 0 layout (normally OneColumn)\n\t\t\tif (!sLayout) {\n\t\t\t\tthis.getHelper().then(function(oHelper) {\n\t\t\t\t\toNextUIState = oHelper.getNextUIState(0);\n\t\t\t\t\toModel.setProperty(\"/layout\", oNextUIState.layout);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toModel.setProperty(\"/layout\", sLayout);\n\t\t},\n\n\t\t_getFcl: function () {\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tvar oFCL = this.getRootControl().byId('flexibleColumnLayout');\n\t\t\t\tif (!oFCL) {\n\t\t\t\t\tthis.getRootControl().attachAfterInit(function(oEvent) {\n\t\t\t\t\t\tresolve(oEvent.getSource().byId('flexibleColumnLayout'));\n\t\t\t\t\t}, this);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(oFCL);\n\n\t\t\t}.bind(this));\n\t\t}\n\t});\n});\n```\n\nFirst, we add a `getHelper` function in the `Component.js` file in order to pass the default `sap.f.FlexibleColumnLayout` parameters.\n\n\n\n<a name=\"loio276f001c5a934f6e8faedee6ea22aba1__section_whp_rpj_l4b\"/>\n\n## webapp/view/Detail.view.xml \\[MODIFY\\]\n\n```xml\n\t\t\t\t...\n\t\t\t\t<snappedHeading>\n\t\t\t\t\t<m:FlexBox wrap=\"Wrap\" fitContainer=\"true\" alignItems=\"Center\">\n\t\t\t\t\t\t<m:FlexBox wrap=\"NoWrap\" fitContainer=\"true\" alignItems=\"Center\" class=\"sapUiTinyMarginEnd\">\n\t\t\t\t\t\t\t<m:Avatar\n\t\t\t\t\t\t\t\tsrc=\"https://ui5.sap.com/{products>ProductPicUrl}\"\n\t\t\t\t\t\t\t\tdisplaySize=\"S\"\n\t\t\t\t\t\t\t\tdisplayShape=\"Square\"\n\t\t\t\t\t\t\t\tclass=\"sapUiTinyMarginEnd\"/>\n\t\t\t\t\t\t\t<m:Title text=\"{products>Name}\" wrapping=\"true\"/>\n\t\t\t\t\t\t</m:FlexBox>\n\t\t\t\t\t</m:FlexBox>\n\t\t\t\t</snappedHeading>\n\n\t\t\t\t<navigationActions>\n\t\t\t\t\t<m:OverflowToolbarButton\n\t\t\t\t\t\ttype=\"Transparent\"\n\t\t\t\t\t\ticon=\"sap-icon://full-screen\"\n\t\t\t\t\t\tpress=\".handleFullScreen\"\n\t\t\t\t\t\ttooltip=\"Enter Full Screen Mode\"\n\t\t\t\t\t\tvisible=\"{= ${/actionButtonsInfo/midColumn/fullScreen} !== null }\"/>\n\t\t\t\t\t<m:OverflowToolbarButton\n\t\t\t\t\t\ttype=\"Transparent\"\n\t\t\t\t\t\ticon=\"sap-icon://exit-full-screen\"\n\t\t\t\t\t\tpress=\".handleExitFullScreen\"\n\t\t\t\t\t\ttooltip=\"Exit Full Screen Mode\"\n\t\t\t\t\t\tvisible=\"{= ${/actionButtonsInfo/midColumn/exitFullScreen} !== null }\"/>\n\t\t\t\t\t<m:OverflowToolbarButton\n\t\t\t\t\t\ttype=\"Transparent\"\n\t\t\t\t\t\ticon=\"sap-icon://decline\"\n\t\t\t\t\t\tpress=\".handleClose\"\n\t\t\t\t\t\ttooltip=\"Close column\"\n\t\t\t\t\t\tvisible=\"{= ${/actionButtonsInfo/midColumn/closeColumn} !== null }\"/>\n\t\t\t\t</navigationActions>\n\n\t\t\t\t<actions>\n\t\t\t\t\t<m:ToggleButton\n\t\t\t\t\t\ttext=\"Edit\"\n\t\t\t\t\t\ttype=\"Emphasized\"\n\t\t\t\t\t\tpress=\".onEditToggleButtonPress\"/>\n\t\t\t\t\t<m:Button\n\t\t\t\t\t\ttext=\"Delete\"\n\t\t\t\t\t\ttype=\"Transparent\"/>\n\t\t\t\t\t<m:Button\n\t\t\t\t\t\ttext=\"Copy\"\n\t\t\t\t\t\ttype=\"Transparent\"/>\n\t\t\t\t\t<m:Button\n\t\t\t\t\t\ticon=\"sap-icon://action\"\n\t\t\t\t\t\ttype=\"Transparent\"/>\n\t\t\t\t</actions>\n\t\t\t</ObjectPageDynamicHeaderTitle>\n\t\t</headerTitle>\n\t\t...\n```\n\nWe add navigation actions for entering and exiting fullscreen and closing the column for the detail page.\n\n\n\n<a name=\"loio276f001c5a934f6e8faedee6ea22aba1__section_f1n_qpj_l4b\"/>\n\n## webapp/controller/Detail.controller.js \\[MODIFY\\]\n\n```js\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\"\n], function (Controller) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"sap.ui.demo.fcl.controller.Detail\", {\n\t\tonInit: function () {\n\t\t\tthis.oOwnerComponent = this.getOwnerComponent();\n\n\t\t\tthis.oRouter = this.oOwnerComponent.getRouter();\n\t\t\tthis.oModel = this.oOwnerComponent.getModel();\n\n\t\t\tthis.oRouter.getRoute(\"list\").attachPatternMatched(this._onProductMatched, this);\n\t\t\tthis.oRouter.getRoute(\"detail\").attachPatternMatched(this._onProductMatched, this);\n\t\t\tthis.oRouter.getRoute(\"detailDetail\").attachPatternMatched(this._onProductMatched, this);\n\t\t},\n\n\t\tonSupplierPress: function (oEvent) {\n\t\t\tvar supplierPath = oEvent.getSource().getBindingContext(\"products\").getPath(),\n\t\t\t\tsupplier = supplierPath.split(\"/\").slice(-1).pop(),\n\t\t\t\toNextUIState;\n\n\t\t\tthis.oOwnerComponent.getHelper().then(function (oHelper) {\n\t\t\t\toNextUIState = oHelper.getNextUIState(2);\n\t\t\t\tthis.oRouter.navTo(\"detailDetail\", {\n\t\t\t\t\tlayout: oNextUIState.layout,\n\t\t\t\t\tsupplier: supplier,\n\t\t\t\t\tproduct: this._product\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t_onProductMatched: function (oEvent) {\n\t\t\tthis._product = oEvent.getParameter(\"arguments\").product || this._product || \"0\";\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: \"/ProductCollection/\" + this._product,\n\t\t\t\tmodel: \"products\"\n\t\t\t});\n\t\t},\n\n\t\tonEditToggleButtonPress: function() {\n\t\t\tvar oObjectPage = this.getView().byId(\"ObjectPageLayout\"),\n\t\t\t\tbCurrentShowFooterState = oObjectPage.getShowFooter();\n\n\t\t\toObjectPage.setShowFooter(!bCurrentShowFooterState);\n\t\t},\n\n\t\thandleFullScreen: function () {\n\t\t\tvar sNextLayout = this.oModel.getProperty(\"/actionButtonsInfo/midColumn/fullScreen\");\n\t\t\tthis.oRouter.navTo(\"detail\", {layout: sNextLayout, product: this._product});\n\t\t},\n\n\t\thandleExitFullScreen: function () {\n\t\t\tvar sNextLayout = this.oModel.getProperty(\"/actionButtonsInfo/midColumn/exitFullScreen\");\n\t\t\tthis.oRouter.navTo(\"detail\", {layout: sNextLayout, product: this._product});\n\t\t},\n\n\t\thandleClose: function () {\n\t\t\tvar sNextLayout = this.oModel.getProperty(\"/actionButtonsInfo/midColumn/closeColumn\");\n\t\t\tthis.oRouter.navTo(\"list\", {layout: sNextLayout});\n\t\t},\n\n\t\tonExit: function () {\n\t\t\tthis.oRouter.getRoute(\"list\").detachPatternMatched(this._onProductMatched, this);\n\t\t\tthis.oRouter.getRoute(\"detail\").detachPatternMatched(this._onProductMatched, this);\n\t\t}\n\t});\n});\n```\n\nWe create the handlers needed for the navigation actions.\n\n\n\n<a name=\"loio276f001c5a934f6e8faedee6ea22aba1__section_vjq_ppj_l4b\"/>\n\n## webapp/view/DetailDetail.view.xml \\[MODIFY\\]\n\n```xml\n<mvc:View\n\tcontrollerName=\"sap.ui.demo.fcl.controller.DetailDetail\"\n\txmlns=\"sap.f\"\n\txmlns:m=\"sap.m\"\n\txmlns:mvc=\"sap.ui.core.mvc\">\n\t<DynamicPage toggleHeaderOnTitleClick=\"false\">\n\t\t<title>\n\t\t\t<DynamicPageTitle>\n\t\t\t\t<heading>\n\t\t\t\t\t<m:FlexBox wrap=\"Wrap\" fitContainer=\"true\" alignItems=\"Center\">\n\t\t\t\t\t\t<m:Title text=\"{products>text}\" wrapping=\"true\" class=\"sapUiTinyMarginEnd\"/>\n\t\t\t\t\t</m:FlexBox>\n\t\t\t\t</heading>\n\n\t\t\t\t<navigationActions>\n\t\t\t\t\t<m:OverflowToolbarButton\n\t\t\t\t\t\ttype=\"Transparent\"\n\t\t\t\t\t\ticon=\"sap-icon://full-screen\"\n\t\t\t\t\t\tpress=\".handleFullScreen\"\n\t\t\t\t\t\ttooltip=\"Enter Full Screen Mode\"\n\t\t\t\t\t\tvisible=\"{= ${/actionButtonsInfo/endColumn/fullScreen} !== null }\"/>\n\t\t\t\t\t<m:OverflowToolbarButton\n\t\t\t\t\t\ttype=\"Transparent\"\n\t\t\t\t\t\ticon=\"sap-icon://exit-full-screen\"\n\t\t\t\t\t\tpress=\".handleExitFullScreen\"\n\t\t\t\t\t\ttooltip=\"Exit Full Screen Mode\"\n\t\t\t\t\t\tvisible=\"{= ${/actionButtonsInfo/endColumn/exitFullScreen} !== null }\"/>\n\t\t\t\t\t<m:OverflowToolbarButton\n\t\t\t\t\t\ttype=\"Transparent\"\n\t\t\t\t\t\ticon=\"sap-icon://decline\"\n\t\t\t\t\t\tpress=\".handleClose\"\n\t\t\t\t\t\ttooltip=\"Close column\"\n\t\t\t\t\t\tvisible=\"{= ${/actionButtonsInfo/endColumn/closeColumn} !== null }\"/>\n\t\t\t\t</navigationActions>\n\t\t\t</DynamicPageTitle>\n\t\t</title>\n\t\t<content>\n\t\t\t<m:Link text=\"Navigate to next page…\" press=\".handleAboutPress\"/>\n\t\t</content>\n\t</DynamicPage>\n</mvc:View>\n```\n\nAgain, we add navigation actions for entering and exiting fullscreen and closing the column for the detail-detail page.\n\n\n\n<a name=\"loio276f001c5a934f6e8faedee6ea22aba1__section_alt_4pj_l4b\"/>\n\n## webapp/controller/DetailDetail.controller.js \\[MODIFY\\]\n\n```js\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\"\n], function (Controller) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"sap.ui.demo.fcl.controller.DetailDetail\", {\n\t\tonInit: function () {\n\t\t\tthis.oOwnerComponent = this.getOwnerComponent();\n\n\t\t\tthis.oRouter = this.oOwnerComponent.getRouter();\n\t\t\tthis.oModel = this.oOwnerComponent.getModel();\n\n\t\t\tthis.oRouter.getRoute(\"detailDetail\").attachPatternMatched(this._onPatternMatch, this);\n\t\t},\n\n\t\thandleAboutPress: function () {\n\t\t\tvar oNextUIState;\n\t\t\tthis.oOwnerComponent.getHelper().then(function (oHelper) {\n\t\t\t\toNextUIState = oHelper.getNextUIState(3);\n\t\t\t\tthis.oRouter.navTo(\"page2\", {layout: oNextUIState.layout});\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t_onPatternMatch: function (oEvent) {\n\t\t\tthis._supplier = oEvent.getParameter(\"arguments\").supplier || this._supplier || \"0\";\n\t\t\tthis._product = oEvent.getParameter(\"arguments\").product || this._product || \"0\";\n\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: \"/ProductCollectionStats/Filters/1/values/\" + this._supplier,\n\t\t\t\tmodel: \"products\"\n\t\t\t});\n\t\t},\n\n\t\thandleFullScreen: function () {\n\t\t\tvar sNextLayout = this.oModel.getProperty(\"/actionButtonsInfo/endColumn/fullScreen\");\n\t\t\tthis.oRouter.navTo(\"detailDetail\", {layout: sNextLayout, product: this._product, supplier: this._supplier});\n\t\t},\n\n\t\thandleExitFullScreen: function () {\n\t\t\tvar sNextLayout = this.oModel.getProperty(\"/actionButtonsInfo/endColumn/exitFullScreen\");\n\t\t\tthis.oRouter.navTo(\"detailDetail\", {layout: sNextLayout, product: this._product, supplier: this._supplier});\n\t\t},\n\n\t\thandleClose: function () {\n\t\t\tvar sNextLayout = this.oModel.getProperty(\"/actionButtonsInfo/endColumn/closeColumn\");\n\t\t\tthis.oRouter.navTo(\"detail\", {layout: sNextLayout, product: this._product});\n\t\t},\n\n\t\tonExit: function () {\n\t\t\tthis.oRouter.getRoute(\"detailDetail\").detachPatternMatched(this._onPatternMatch, this);\n\t\t}\n\t});\n});\n```\n\nAnd respectively, we create the handlers needed for the navigation actions in the detail-detail controller.\n\n\n\n<a name=\"loio276f001c5a934f6e8faedee6ea22aba1__section_t4v_npj_l4b\"/>\n\n## webapp/controller/List.controller.js \\[MODIFY\\]\n\n```js\nsap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/ui/model/Sorter\",\n\t\"sap/m/MessageBox\"\n], function (Controller, Filter, FilterOperator, Sorter, MessageBox) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"sap.ui.demo.fcl.controller.List\", {\n\t\tonInit: function () {\n\t\t\tthis.oView = this.getView();\n\t\t\tthis._bDescendingSort = false;\n\t\t\tthis.oProductsTable = this.oView.byId(\"productsTable\");\n\t\t\tthis.oRouter = this.getOwnerComponent().getRouter();\n\t\t},\n\n\t\tonSearch: function (oEvent) {\n\t\t\tvar oTableSearchState = [],\n\t\t\t\tsQuery = oEvent.getParameter(\"query\");\n\n\t\t\tif (sQuery && sQuery.length > 0) {\n\t\t\t\toTableSearchState = [new Filter(\"Name\", FilterOperator.Contains, sQuery)];\n\t\t\t}\n\n\t\t\tthis.oProductsTable.getBinding(\"items\").filter(oTableSearchState, \"Application\");\n\t\t},\n\n\t\tonAdd: function () {\n\t\t\tMessageBox.information(\"This functionality is not ready yet.\", {title: \"Aw, Snap!\"});\n\t\t},\n\n\t\tonSort: function () {\n\t\t\tthis._bDescendingSort = !this._bDescendingSort;\n\t\t\tvar oBinding = this.oProductsTable.getBinding(\"items\"),\n\t\t\t\toSorter = new Sorter(\"Name\", this._bDescendingSort);\n\n\t\t\toBinding.sort(oSorter);\n\t\t},\n\n\t\tonListItemPress: function (oEvent) {\n\t\t\tvar productPath = oEvent.getSource().getBindingContext(\"products\").getPath(),\n\t\t\t\tproduct = productPath.split(\"/\").slice(-1).pop(),\n\t\t\t\toNextUIState;\n\t\t\tthis.getOwnerComponent().getHelper().then(function (oHelper) {\n\t\t\t\toNextUIState = oHelper.getNextUIState(1);\n\t\t\t\tthis.oRouter.navTo(\"detail\", {\n\t\t\t\t\tlayout: oNextUIState.layout,\n\t\t\t\t\tproduct: product\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t}\n\t});\n});\n```\n\nWe get the next layout from the semantic helper rather than hard coding them ourselves.\n\n\n\n<a name=\"loio276f001c5a934f6e8faedee6ea22aba1__section_rds_mpj_l4b\"/>\n\n## webapp/controller/App.controller.js \\[MODIFY\\]\n\n```js\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\"\n], function (Controller) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"sap.ui.demo.fcl.controller.App\", {\n\t\tonInit: function () {\n\t\t\tthis.oOwnerComponent = this.getOwnerComponent();\n\t\t\tthis.oRouter = this.oOwnerComponent.getRouter();\n\t\t\tthis.oRouter.attachRouteMatched(this.onRouteMatched, this);\n\t\t},\n\n\t\tonRouteMatched: function (oEvent) {\n\t\t\tvar sRouteName = oEvent.getParameter(\"name\"),\n\t\t\t\toArguments = oEvent.getParameter(\"arguments\");\n\n\t\t\tthis._updateUIElements();\n\n\t\t\t// Save the current route name\n\t\t\tthis.currentRouteName = sRouteName;\n\t\t\tthis.currentProduct = oArguments.product;\n\t\t\tthis.currentSupplier = oArguments.supplier;\n\t\t},\n\n\t\tonStateChanged: function (oEvent) {\n\t\t\tvar bIsNavigationArrow = oEvent.getParameter(\"isNavigationArrow\"),\n\t\t\t\tsLayout = oEvent.getParameter(\"layout\");\n\n\t\t\tthis._updateUIElements();\n\n\t\t\t// Replace the URL with the new layout if a navigation arrow was used\n\t\t\tif (bIsNavigationArrow) {\n\t\t\t\tthis.oRouter.navTo(this.currentRouteName, {layout: sLayout, product: this.currentProduct, supplier: this.currentSupplier}, true);\n\t\t\t}\n\t\t},\n\n\t\t// Update the close/fullscreen buttons visibility\n\t\t_updateUIElements: function () {\n\t\t\tvar oModel = this.oOwnerComponent.getModel(),\n\t\t\t\toUIState;\n\t\t\tthis.oOwnerComponent.getHelper().then(function(oHelper) {\n\t\t\t\toUIState = oHelper.getCurrentUIState();\n\t\t\t\toModel.setData(oUIState);\n\t\t\t});\n\t\t},\n\n\t\tonExit: function () {\n\t\t\tthis.oRouter.detachRouteMatched(this.onRouteMatched, this);\n\t\t\tthis.oRouter.detachBeforeRouteMatched(this.onBeforeRouteMatched, this);\n\t\t}\n\t});\n});\n```\n\nFinally, we create a function in the `App.controller.js` to update the visibility of the list, detail, and detail-detail pages.\n\n",
  "excerpt": "<!-- loio276f001c5a934f6e8faedee6ea22aba1 --> Step 11: Using the Flexible Column Layout Semantic Helper In this step, we use the sap.f.FlexibleColumnLayoutSemanticHelper class to implement the recomme...",
  "wordCount": 1149,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}