{
  "id": "sapui5-docs-09-developing-controls-implement-and-register-a-combine-change-handler-aa5ffcf-md",
  "title": "Implement and Register a *Combine* Change Handler",
  "category": "ui5-framework",
  "path": "docs/09_Developing_Controls/implement-and-register-a-combine-change-handler-aa5ffcf.md",
  "lastModified": "2025-09-01T18:17:10.677Z",
  "tags": [
    "ui5-framework",
    "md",
    "Implement",
    "and",
    "Register",
    "Combine",
    "Change",
    "Handler"
  ],
  "headers": [
    "Implement and Register a *Combine* Change Handler"
  ],
  "content": "<!-- loioaa5ffcf13b4c4e678ae129ad2561eca0 -->\n\n# Implement and Register a *Combine* Change Handler\n\nImplement and register a *combine* change type with its change handler to a control.\n\nFor the *combine* action, no default change handler exists, therefore, it's necessary to implement a change handler for combining controls \\(see [Writing a Custom Change Handler](writing-a-custom-change-handler-6a346a2.md)\\).\n\nThe change handler gets the following information from the SAPUI5 flexibility tool as change-specific information:\n\n\n<table>\n<tr>\n<th valign=\"top\">\n\nProperty\n\n</th>\n<th valign=\"top\">\n\nType\n\n</th>\n<th valign=\"top\">\n\nDescription\n\n</th>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`oSpecificChangeInfo`\n\n</td>\n<td valign=\"top\">\n\nObject\n\n</td>\n<td valign=\"top\">\n\nÂ \n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`oSpecificChangeInfo.source`\n\n</td>\n<td valign=\"top\">\n\n`sap.ui.core.Element`|Node\n\n</td>\n<td valign=\"top\">\n\nID of the control where the action is triggered.\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`oSpecificChangeInfo.combineElements`\n\n</td>\n<td valign=\"top\">\n\n`Array<sap.ui.core.Element`|Node`>`\n\n</td>\n<td valign=\"top\">\n\nArray of control IDs to be combined.\n\n</td>\n</tr>\n</table>\n\nFind an example on GitHub at [https://github.com/SAP/openui5/blob/master/src/sap.m/src/sap/m/changeHandler/CombineButtons.js](https://github.com/SAP/openui5/blob/master/src/sap.m/src/sap/m/changeHandler/CombineButtons.js).\n\n> ### Note:  \n> When creating new controls inside `applyChange()`, make sure to move the original controls into the dependents aggregation of a **container**. In our example, the original buttons are to be moved to the `dependents` aggregation of `sap.m.Bar`, not to the `dependents` aggregation of `sap.m.MenuItem`.\n> \n> Make sure that every new controls gets a stable ID, which is a prerequisite for UI adaptation.\n\nYou can then register it in the `library.js` file of the control's library, where you map the change type to the corresponding change handler and the control type. The change type for this action can be named `combineButtons`, for example. Register the change type for this action in the `<control>.flexibility.js` file. For more information, see [Registering Change Handlers for UI Changes](registering-change-handlers-for-ui-changes-d5f4de8.md).\n\n",
  "excerpt": "<!-- loioaa5ffcf13b4c4e678ae129ad2561eca0 --> Implement and Register a Combine Change Handler Implement and register a combine change type with its change handler to a control. For the combine action,...",
  "wordCount": 272,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}