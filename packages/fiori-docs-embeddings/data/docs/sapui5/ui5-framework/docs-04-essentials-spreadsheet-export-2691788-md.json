{
  "id": "sapui5-docs-04-essentials-spreadsheet-export-2691788-md",
  "title": "Spreadsheet Export",
  "category": "ui5-framework",
  "path": "docs/04_Essentials/spreadsheet-export-2691788.md",
  "lastModified": "2025-09-01T18:17:10.544Z",
  "tags": [
    "ui5-framework",
    "md",
    "Spreadsheet",
    "Export"
  ],
  "headers": [
    "Spreadsheet Export",
    "Overview",
    "Prerequisites",
    "Details",
    "Loading During Initialization",
    "Loading On Demand",
    "Supported Data Types",
    "Additional Settings on Export User Interface"
  ],
  "content": "<!-- loio2691788a08fc43f7bf269ea7c6336caf -->\n\n# Spreadsheet Export\n\nThe spreadsheet export allows you to export data to an Office Open XML spreadsheet.\n\n\n\n<a name=\"loio2691788a08fc43f7bf269ea7c6336caf__section_jk4_pxc_ffb\"/>\n\n## Overview\n\nThe spreadsheet export allows you to export your data to an Office Open XML document of category Spreadsheet \\(xlsx\\). You can export any type of content that has a tabular format, such as tables or lists.\n\nIf you use the `SmartTable` control to export data, you can also use different types of exports, the client export or the SAP Gateway export.\n\n> ### Tip:  \n> The `sap.ui.comp.smarttable.SmartTable` and `sap.ui.mdc.Table` controls offer you all the preconfigured content you need for the export. You can either simply use it without having to define any configuration yourself, or you can adapt the content to make it fit your own specific requirements. For other entitities, you have to define the configuration manually as described below.\n\n> ### Tip:  \n> If the export takes more than 5 minutes, we recommend to cancel the process and apply additional filter settings to reduce the amount of data that has to be exported.\n\n\n\n<a name=\"loio2691788a08fc43f7bf269ea7c6336caf__section_txq_sxc_ffb\"/>\n\n## Prerequisites\n\nIf you want to export data manually, without `SmartTable` or `Table` \\(`sap.ui.mdc`\\), you have to perform the following steps:\n\n1.  Load the `sap.ui.export.Spreadsheet` library within your controller coding.\n\n    You can load the library during the initialization of your controller or whenever needed.\n\n2.  Define the configuration for the export for the following objects:\n\n    -   Columns\n\n    -   Data sources\n\n    -   Additional properties that are used for processing the export \\(optional\\)\n\n    -   Hierarchical data, if required\n\n\n3.  Start the export process.\n\n\n\n\n<a name=\"loio2691788a08fc43f7bf269ea7c6336caf__section_ssv_jf3_ffb\"/>\n\n## Details\n\n\n\n### Loading During Initialization\n\nIf the library is loaded during the initialization of your controller, it is available across the whole lifecycle of the controller. All you need to do is add the library as a dependency to your existing `sap.ui.define` call. This mechanism ensures that the library is already loaded every time you use it. You don't need to take care of synchronous or asynchronous loading but the library is loaded even if an export is never triggered.\n\n```js\nsap.ui.define([\n    \"sap/ui/core/mvc/Controller\",\n    \"sap/ui/export/Spreadsheet\"\n], function(Controller, Spreadsheet) {\n    \"use strict\";\n \n    return Controller.extend(\"sample.Spreadsheet\", {\n \n        // Place your controller coding here\n \n    });\n});\n```\n\n\n\n### Loading On Demand\n\nIf the library is loaded on demand, it will only be available when it is actually needed \\(for example, when a user presses an export button\\). You have to request the library every time it is needed \\(although it will be loaded from the backend only once\\). This can be done by using `sap.ui.require` with a callback function. This is necessary to ensure that the library will be loaded asynchronously, but it requires more effort to implement the export because all the export steps need to be enwrapped by the callback function.\n\n```js\nsap.ui.define([\n    \"sap/ui/core/Lib\"\n    \"sap/ui/core/mvc/Controller\"\n], function(Library, Controller) {\n    \"use strict\";\n \n    return Controller.extend(\"sample.Spreadsheet\", {\n \n        onExport: function() {\n            // loadLibrary is only needed when the library is not added as a dependent in bootstrap or any other dependency mechanism used in your project.\n            var oExportLibLoadPromise = Library.load(\"sap.ui.export\");\n         \n            oExportLibLoadPromise.then(function() {\n                sap.ui.require([\"sap/ui/export/Spreadsheet\"], function(Spreadsheet) {\n \n                    // Place your export coding here\n \n                });\n            });\n        }\n    });\n});\n```\n\nFor more information, see the [API Reference: `sap.ui.require`](https://ui5.sap.com/#/api/sap.ui/properties). \n\n\n\n### Supported Data Types\n\nThe following data types are supported:\n\n-   [`String`](data-types-for-spreadsheet-export-283217d.md#loio283217d8f187401c8045723abc27e5e0__section_sg5_2z1_j3b)\n\n-   [`Boolean`](data-types-for-spreadsheet-export-283217d.md#loio283217d8f187401c8045723abc27e5e0__section_qwh_fmb_j3b)\n\n-   [`Number`](data-types-for-spreadsheet-export-283217d.md#loio283217d8f187401c8045723abc27e5e0__section_dnx_c3n_n3b)\n\n-   [`Date`](data-types-for-spreadsheet-export-283217d.md#loio283217d8f187401c8045723abc27e5e0__section_tg5_hyv_43b)\n\n-   [`DateTime`](data-types-for-spreadsheet-export-283217d.md#loio283217d8f187401c8045723abc27e5e0__section_tg5_hyv_43b)\n\n-   [`Time`](data-types-for-spreadsheet-export-283217d.md#loio283217d8f187401c8045723abc27e5e0__section_tg5_hyv_43b)\n\n-   [`Currency`](data-types-for-spreadsheet-export-283217d.md#loio283217d8f187401c8045723abc27e5e0__section_gdf_spn_n3b)\n\n-   [`Enumeration`](data-types-for-spreadsheet-export-283217d.md#loio283217d8f187401c8045723abc27e5e0__section_zw5_53x_43b)\n\n-   [`BigNumber`](data-types-for-spreadsheet-export-283217d.md#loio283217d8f187401c8045723abc27e5e0__section_fhw_hqx_43b)\n\n-   [`Percentage`](data-types-for-spreadsheet-export-283217d.md#loio283217d8f187401c8045723abc27e5e0__section_wxf_zjj_l4b)\n\n-   [`Timezone`](data-types-for-spreadsheet-export-283217d.md#loio283217d8f187401c8045723abc27e5e0__section_f2x_vc2_qyb)\n\n\n> ### Note:  \n> Currency values and numbers that cannot be represented in the standard format as defined by the *IEEE \\(Institute of Electrical and Electronics Engineers\\)* in the spreadsheet file because they are too large automatically use the `BigNumber` data type as a fallback option \\(standard IEEE 754\\). The number is then stored as `string` and represented using the international format with a comma as a thousands separator and a period for the decimal point.\n\nFor more information, see [Data Types for Spreadsheet Export](data-types-for-spreadsheet-export-283217d.md).\n\n\n\n### Additional Settings on Export User Interface\n\nIn addition to the regular `Export` dialog, the user can use the `Export As` dialog in the `SmartTable` or `Table` \\(`sap.ui.mdc`\\) control, which can be selected from a dropdown list next to the *Export Table* button, to define additional settings for the export.\n\nThe user can define the following for the exported file:\n\n-   File name\n\n-   File format\n\n    The file format has been predefined.\n\n-   Whether to show cells with more than one value in separate columns \\(*Split cells with multiple values*\\)\n\n    This option is used for columns that are based on text arrangements, currencies, and units of measure. For example, if both the name and the ID of a customer are displayed in one column, the exported file will show the customer data in two separate columns. This might result in duplicate columns if the file already contains columns with the same header name.\n\n-   Whether to show any available filter settings\n\n    If this option is selected, the exported file has an additional *Filter* sheet showing the filters that were set on the columns as well as in the `FilterBar` control. The filters shown in the exported file are the column labels. They are shown by default. If there is no column label, the property name is shown.\n\n\nThe `beforeExport` event also provides the additional export settings defined by the user \\(`userExportSettings` parameter\\). This parameter is always available and contains the settings currently valid for the export, so the application developers can decide which settings to use.\n\n> ### Note:  \n> The dialog with additional export settings is available for the client export of `SmartTable` only. For the SAP Gateway export, only the regular dialog is available with no additional options for export settings.\n\n**Related Information**  \n\n\n[API Reference: `sap.ui.export.Spreadsheet`](https://ui5.sap.com/#/api/sap.ui.export.Spreadsheet)\n\n[Samples](https://ui5.sap.com/#/entity/sap.ui.export.Spreadsheet)\n\n[API Reference: `sap.ui.export.EdmType`](https://ui5.sap.com/#/api/sap.ui.export.EdmType)\n\n[Spreadsheet Export Type Features](spreadsheet-export-type-features-e7f52f4.md \"The SmartTable control offers different types of exports with various features.\")\n\n",
  "excerpt": "<!-- loio2691788a08fc43f7bf269ea7c6336caf --> Spreadsheet Export The spreadsheet export allows you to export data to an Office Open XML spreadsheet. <a name=\"loio2691788a08fc43f7bf269ea7c6336caf__sect...",
  "wordCount": 968,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}