{
  "id": "sapui5-docs-04-essentials-custom-data-attaching-data-objects-to-controls-91f0c3e-md",
  "title": "Custom Data - Attaching Data Objects to Controls",
  "category": "ui5-framework",
  "path": "docs/04_Essentials/custom-data-attaching-data-objects-to-controls-91f0c3e.md",
  "lastModified": "2025-09-01T18:17:10.504Z",
  "tags": [
    "ui5-framework",
    "md",
    "Custom",
    "Data",
    "Attaching",
    "Objects",
    "Controls"
  ],
  "headers": [
    "Custom Data - Attaching Data Objects to Controls",
    "Setting and Retrieving Data",
    "Binding Data: Use in a List Binding",
    "Use in XML Views",
    "Use in JSON Views \\(deprecated\\)",
    "Use in HTML Views \\(deprecated\\)"
  ],
  "content": "<!-- loio91f0c3ee6f4d1014b6dd926db0e91070 -->\n\n# Custom Data - Attaching Data Objects to Controls\n\nSAPUI5 provides the `data()` method to attach data objects to controls.\n\nThe `data()` method is contained in `sap/ui/core/Element`. You can use this method to set and get data. The API is equivalent to `jQuery.data()`.\n\nThe following additional options exist for attaching data to SAPUI5 controls:\n\n-   Attaching data declaratively in XML views and JSON views, see [XML View](xml-view-91f2928.md)\n-   Using data binding, see [Data Binding](data-binding-68b9644.md)\n-   For strings only: Writing data to the HTML DOM as \"data-\\*\" attribute, see [Writing Data to the HTML DOM as DATA-\\* Attribute](writing-data-to-the-html-dom-as-data-attribute-1ef9fef.md)\n\n\n\n<a name=\"loio91f0c3ee6f4d1014b6dd926db0e91070__section_BAD4FC9765174E0EB7264A423F7C4ED6\"/>\n\n## Setting and Retrieving Data\n\nTo set and retrieve data, use the following code:\n\n```js\nmyButton.data(\"myData\", \"Hello\");  // attach some data to the Button\n\nalert(myButton.data(\"myData\"));     // alerts \"Hello\"\n\nvar dataObject = myButton.data();  // a JS object containing ALL data\nalert(dataObject.myData);          // alerts \"Hello\"\n```\n\n\n\n<a name=\"loio91f0c3ee6f4d1014b6dd926db0e91070__section_798A4B993F764A04BAB08DEAACC5DFA9\"/>\n\n## Binding Data: Use in a List Binding\n\nFor list bindings, use the following code:\n\n```js\n// \"CustomData\" required from \"sap/ui/core/CustomData\"\n// \"JSONModel\" required from module \"sap/ui/model/json/JSONModel\"\n// \"List\" required from module \"sap/m/List\"\n// \"StandardListItem\" required from module \"sap/m/StandardListItem\"\n\nfunction giveAnswer(oEvent) {\n  var oItem = oEvent.getSource();      // the StandardListItem\n  var sData = oItem.data(\"theAnswer\"); // access the custom data stored under the key \"theAnswer\"\n  alert(\"The answer is: \" + sData);\n}\n\n// create a JSONModel, fill in the data and bind the ListBox to this model\nvar oModel = new JSONModel(aData);         // aData.questions is an array of elements like {question:\"Some question?\",answer:\"Some answer!\"}\nvar oList = new List({select:giveAnswer}); // method giveAnswer() retrieves the custom data from the selected ListItem\noList.setModel(oModel);\n\n// create an item template and bind the question data to the \"text\" property\nvar oItemTemplate = new StandardListItem({title: \"{question}\", press: giveAnswer, type: \"Active\"});\n\n// create a CustomData template, set its key to \"answer\" and bind its value to the answer data\nvar oDataTemplate = new CustomData({key:\"theAnswer\", value: \"{answer}\"});\n\n// add the CustomData template to the item template\noItemTemplate.addCustomData(oDataTemplate);\n\n// bind the items to the \"questions\" (which is the name of the data array)\noList.bindAggregation(\"items\", \"/questions\", oItemTemplate);\n```\n\nYou can find a productive example in the SAPUI5 test suite by searching for `CustomData` in `sap.ui.core`.\n\n\n\n<a name=\"loio91f0c3ee6f4d1014b6dd926db0e91070__section_CC5E82C4375146D9A40D05057ADFDB04\"/>\n\n## Use in XML Views\n\nIn XML views, `CustomData` objects can be written as normal aggregated objects. However, to reduce the amount of code and improve the readability, a shortcut notation has been introduced: You can directly write the data attributes into the control tags. Simply use the following namespace for the respective attributes:\n\n`myNamespace=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\"`.\n\nThe difference between this more formal namespace and the existing MVC namespaces is intentional.\n\n> ### Example:  \n> **Use without Data Binding** \n> \n> The following example shows how you attach the string \"just great\" to a button:\n> \n> ```xml\n> <mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"my.own.controller\"\n>            xmlns:app=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\">\n>      <Button id=\"myBtn\" text=\"Click to show stored coordinates data\" app:mySuperExtraData=\"just great\" press=\"alertCoordinates\"></Button>\n> </mvc:View>\n> ```\n> \n> The string is returned at runtime by calling `button.data(\"mySuperExtraData\")`.\n\n> ### Example:  \n> **Use with Data Binding** \n> \n> You can use data binding with the following notation:\n> \n> ```xml\n> <mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"my.own.controller\"\n>            xmlns:app=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\">\n>      <Button id=\"myBtn\" text=\"Click to show stored coordinates data\" app:coords=\"{data}\" press=\"alertCoordinates\"></Button>\n> </mvc:View>\n> ```\n\n\n\n<a name=\"loio91f0c3ee6f4d1014b6dd926db0e91070__section_A34A9FCBC8DA4E8CB559743B7B48CDCE\"/>\n\n## Use in JSON Views \\(deprecated\\)\n\n> ### Caution:  \n> Deprecated as of UI5 version 1.120, replaced by [XML View](xml-view-91f2928.md).\n\nTo add custom data to an element in a JSON view, add the following code to the element properties \\(examples with data binding\\):\n\n```js\ncustomData: {\n  Type:\"sap.ui.core.CustomData\",\n    key:\"coords\",\n    value:\"{data}\" // bind custom data\n  }\n```\n\nTo add multiple data elements, use an array:\n\n```js\ncustomData: [{\n  Type:\"sap.ui.core.CustomData\",\n    key:\"coords\",\n    value:\"{data}\" // bind custom data\n  },\n  {\n  Type:\"sap.ui.core.CustomData\",\n    key:\"coords\",\n    value:\"{data}\" // bind custom data\n  }]\n```\n\nIn context, this looks as follows:\n\n```js\nvar json =\n  {\n    Type: \"sap.ui.core.mvc.JSONView\",\n    controllerName:\"my.own.controller\",\n    content: [{\n      Type:\"sap.m.Panel\",\n      content:[{\n        Type:\"sap.m.Button\",\n        text:\"{actionName}\",\n        press: \"doSomething\",\n        customData: {\n          Type:\"sap.ui.core.CustomData\",\n          key:\"coords\",\n          value:\"{data}\" // bind custom data\n        }\n      }]\n    }]\n  };\n```\n\n\n\n## Use in HTML Views \\(deprecated\\)\n\n> ### Caution:  \n> Deprecated as of UI5 version 1.108, replaced by [XML View](xml-view-91f2928.md).\n\nTo add custom data objects to a control or an element in HTML views, use a specific HTML attribute with the following syntax: `data-custom-data:my-key=\"myValue\"`. A custom data attribute starts with `data-custom-data:` followed by the name of the key. The dashes convert the respective following character into an upper case character. The value can be either a string or a binding expression:\n\n```html\n<div data-sap-ui-type=\"sap.m.Button\" data-text=\"This button is added dynamically\" data-custom-data:my-key=\"myValue\" data-custom-data:my-bound-key=\"{/mypath}\"></div>\n```\n\n",
  "excerpt": "<!-- loio91f0c3ee6f4d1014b6dd926db0e91070 --> Custom Data - Attaching Data Objects to Controls SAPUI5 provides the data() method to attach data objects to controls. The data() method is contained in s...",
  "wordCount": 754,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}