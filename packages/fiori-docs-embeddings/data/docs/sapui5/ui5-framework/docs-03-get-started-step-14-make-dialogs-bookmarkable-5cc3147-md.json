{
  "id": "sapui5-docs-03-get-started-step-14-make-dialogs-bookmarkable-5cc3147-md",
  "title": "Step 14: Make Dialogs Bookmarkable",
  "category": "ui5-framework",
  "path": "docs/03_Get-Started/step-14-make-dialogs-bookmarkable-5cc3147.md",
  "lastModified": "2025-09-01T18:17:10.454Z",
  "tags": [
    "ui5-framework",
    "md",
    "Step",
    "Make",
    "Dialogs",
    "Bookmarkable"
  ],
  "headers": [
    "Step 14: Make Dialogs Bookmarkable",
    "Preview",
    "Coding",
    "/controller/employee/overview/EmployeeOverviewContent.controller.js"
  ],
  "content": "<!-- loio5cc3147afc8d4854b5d3c5fc20923f77 -->\n\n# Step 14: Make Dialogs Bookmarkable\n\nIn this step, we want to allow bookmarking of the dialog box that is opened when the user clicks the *Sort* button. The dialog should automatically open when the URL contains the query parameter `showDialog`.\n\n\n\n## Preview\n\n  \n  \n**Bookmark for a dialog**\n\n![](images/Tutorial_Navigation_and_Routing_Step_14_ea8f2d0.png \"Bookmark for a dialog\")\n\n\n\n## Coding\n\nYou can view and download all files in the *Samples* in the Demo Kit at [Routing and Navigation - Step 14](https://ui5.sap.com/#/entity/sap.ui.core.tutorial.navigation/sample/sap.ui.core.tutorial.navigation.14).\n\n\n\n## /controller/employee/overview/EmployeeOverviewContent.controller.js\n\n```js\nsap.ui.define([\n\t\"sap/ui/demo/nav/controller/BaseController\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/ui/model/Sorter\",\n\t\"sap/m/ViewSettingsDialog\",\n\t\"sap/m/ViewSettingsItem\"\n], function(\n\tBaseController,\n\tFilter,\n\tFilterOperator,\n\tSorter,\n\tViewSettingsDialog,\n\tViewSettingsItem\n) {\n\t\"use strict\";\n\treturn BaseController.extend(\"sap.ui.demo.nav.controller.employee.overview.EmployeeOverviewContent\", {\n\t\tonInit: function () {\n\t\t\t...\n\t\t},\n\t\t_onRouteMatched: function (oEvent) {\n\t\t\t// save the current query state\n\t\t\tthis._oRouterArgs = oEvent.getParameter(\"arguments\");\n\t\t\tthis._oRouterArgs[\"?query\"] = this._oRouterArgs[\"?query\"] || {};\n\t\t\tvar oQueryParameter = this._oRouterArgs[\"?query\"];\n\n\t\t\t// search/filter via URL hash\n\t\t\tthis._applySearchFilter(oQueryParameter.search);\n\n\t\t\t// sorting via URL hash\n\t\t\tthis._applySorter(oQueryParameter.sortField, oQueryParameter.sortDescending);\n\n\t\t\t// show dialog via URL hash\n\t\t\tif (oQueryParameter.showDialog) {\n\t\t\t\tthis._oVSD.open();\n\t\t\t}\n\t\t\t\n\t\t},\n\t\tonSortButtonPressed: function (oEvent) {\n\t\t\tvar oRouter = this.getRouter();\n\t\t\tthis._oRouterArgs[\"?query\"].showDialog = 1;\n\t\t\toRouter.navTo(\"employeeOverview\", this._oRouterArgs);\n\n\t\t},\n\t\t...\n\t\t_initViewSettingsDialog: function () {\n\t\t\tvar oRouter = this.getRouter();\n\t\t\tthis._oVSD = new ViewSettingsDialog(\"vsd\", {\n\t\t\t\tconfirm: function (oEvent) {\n\t\t\t\t\tvar oSortItem = oEvent.getParameter(\"sortItem\");\n\t\t\t\t\tthis._oRouterArgs[\"?query\"].sortField = oSortItem.getKey();\n\t\t\t\t\tthis._oRouterArgs[\"?query\"].sortDescending = oEvent.getParameter(\"sortDescending\");\n\t\t\t\t\tdelete this._oRouterArgs[\"?query\"].showDialog;\n\t\t\t\t\toRouter.navTo(\"employeeOverview\", this._oRouterArgs, true /*without history*/);\n\t\t\t\t}.bind(this),\n\t\t\t\tcancel: function (oEvent){\n\t\t\t\t\tdelete this._oRouterArgs[\"?query\"].showDialog;\n\t\t\t\t\toRouter.navTo(\"employeeOverview\", this._oRouterArgs, true /*without history*/);\n\t\t\t\t}.bind(this)\n\t\t\t});\n\t\t\t...\n\t\t},\n\t\t...\n\t});\n});\n```\n\nOnce again we will update the `EmployeeOverviewContent` controller to add support for the bookmarking of our sorting dialog. We decide to choose a query parameter `showDialog` that controls if the dialog is opened directly when we navigate to the page with a deep link. Therefore, we extend the matched event handler for the `employeeOverview` route. If the query parameter `showDialog` is set to `1`, we open the dialog.\n\nNext we change the `press` handler of the sort button. In the `onSortButtonPressed` function we set `this._oRouterArgs[\"?query\"].showDialog = 1` and call `navTo()` to let the router do the job instead of directly opening the dialog. Finally, we delete `this._oRouterArgs[\"?query\"].showDialog` before calling `navTo()` in the `confirm` and `cancel` event handlers of the `ViewSettingsDialog`. This is important to make sure that the dialog does not open again by the matched handler.\n\nWe are now done with this step. Try to access the following pages:\n\n-   `webapp/index.html#/employees/overview?showDialog=1`\n\n-   `webapp/index.html#/employees/overview?search=an&sortField=EmployeeID&sortDescending=true&showDialog=1`\n\n\nAs you can see, the dialog opens automatically if the parameter `showDialog=1` is added to the URL. That's exactly what we wanted.\n\n",
  "excerpt": "<!-- loio5cc3147afc8d4854b5d3c5fc20923f77 --> Step 14: Make Dialogs Bookmarkable In this step, we want to allow bookmarking of the dialog box that is opened when the user clicks the Sort button. The d...",
  "wordCount": 401,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}