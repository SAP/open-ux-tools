{
  "id": "sapui5-docs-09-developing-controls-implement-and-register-a-rename-change-handler-a96deb7-md",
  "title": "Implement and Register a *Rename* Change Handler",
  "category": "ui5-framework",
  "path": "docs/09_Developing_Controls/implement-and-register-a-rename-change-handler-a96deb7.md",
  "lastModified": "2025-09-01T18:17:10.677Z",
  "tags": [
    "ui5-framework",
    "md",
    "Implement",
    "and",
    "Register",
    "Rename",
    "Change",
    "Handler"
  ],
  "headers": [
    "Implement and Register a *Rename* Change Handler"
  ],
  "content": "<!-- loioa96deb7731784299a3a1bd94b997891c -->\n\n# Implement and Register a *Rename* Change Handler\n\nImplement and register a *rename* change type with its change handler to a control.\n\nThe *rename* action doesn't have a default change handler because the property being renamed can differ between controls. However, we offer the base class `sap.ui.fl.changeHandler.BaseRename`, which includes an implementation of the change handler. You simply need to provide the necessary parameters to the `createRenameChangeHandler` method.\n\nIf the implementation of the base class doesn't meet your needs, you can implement a new change handler for renaming a control \\(see [Writing a Custom Change Handler](writing-a-custom-change-handler-6a346a2.md)\\). The change handler gets the following information from SAPUI5 flexibility as change-specific information:\n\n> ### Sample Code:  \n> Change-specific info for the *rename* action\n> \n> ```\n> {\n>     renamedElement : {\n>         id : <ID of the control being renamed>\n>     },\n>     value : <String with the new value for the renamed property of the control>\n> }\n> ```\n\nHere's an example of how you can rename a control using the `BaseRename` class. If you want to implement your own change handler instead of using the `BaseRename` class, you can refer to its implementation to find the relevant methods.\n\n> ### Sample Code:  \n> Button.flexibility.js\n> \n> ```\n> sap.ui.define([\n>     \"sap/ui/fl/changeHandler/Base\"\n> ], function (BaseRename) {\n>     \"use strict\";\n>     return {\n>         \"rename\": BaseRename.createRenameChangeHandler({ // It should be always the rename change type\n>             propertyName : \"text\", // Property of the control that should be renamed\n>             translationTextType : \"XBUT\" // See https://github.com/SAP/openui5/blob/master/docs/guidelines/translationfiles.md\n>         })\n>     };\n> })\n> ```\n\nYou can then register your change handler in the `library.js` file of the control's library, where you map the change type to the corresponding change handler and the control type.\n\nHere's an example:\n\n> ### Sample Code:  \n> Library.js\n> \n> ```\n> sap.ui.define(['sap/ui/core/Lib'], function(Library) {\n>   Library.init({\n>     name: \"sap.m\",\n>     apiVersion: 2,\n>     version: \"${version}\",\n>     //...\n>     extensions: {\n>         flChangeHandlers: {\n>             \"sap.m.Button\": \"sap/m/flexibility/Button\",\n>             //...\n>         }\n>     }\n>   });\n> });\n> ```\n\n",
  "excerpt": "<!-- loioa96deb7731784299a3a1bd94b997891c --> Implement and Register a Rename Change Handler Implement and register a rename change type with its change handler to a control. The rename action doesn't...",
  "wordCount": 346,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}