{
  "id": "sapui5-docs-03-get-started-step-9-delta-micro-chart-3973372-md",
  "title": "Step 9: Delta Micro Chart",
  "category": "ui5-framework",
  "path": "docs/03_Get-Started/step-9-delta-micro-chart-3973372.md",
  "lastModified": "2025-09-01T18:17:10.487Z",
  "tags": [
    "ui5-framework",
    "md",
    "Step",
    "Delta",
    "Micro",
    "Chart"
  ],
  "headers": [
    "Step 9: Delta Micro Chart",
    "Preview",
    "DeltaMicroChart",
    "ProcessFlow.view.xml",
    "ProcessFlow.controller.js"
  ],
  "content": "<!-- loio39733723e42b4a43b040427caaa94a73 -->\n\n# Step 9: Delta Micro Chart\n\nIn this step, we will create the `DeltaMicroChart` on the **Production Process** page.\n\n\n\n<a name=\"loio39733723e42b4a43b040427caaa94a73__section_cqy_3rl_l1b\"/>\n\n## Preview\n\n![](images/Step8_1_996b69f.jpg)\n\n\n\n<a name=\"loio39733723e42b4a43b040427caaa94a73__section_es4_5rl_l1b\"/>\n\n## DeltaMicroChart\n\nWe are going to add a chart to visualize the difference between the time required for production compared with the estimated time. You use the `DeltaMicroChart` to compare two separate values.\n\n\n\n### ProcessFlow.view.xml\n\nYou can view and download this step in the Demo Kit at [Ice Cream Machine - Step 9 - Delta Micro Chart](https://ui5.sap.com/#/entity/sap.suite.ui.commons.tutorial.icecream/sample/sap.suite.ui.commons.tutorial.icecream.09).\n\n```xml\nmvc:View\n    ...\n        <m:headerContainer>\n            <m:HeaderContainer\n                scrollStep=\"200\"\n                scrollTime=\"500\"\n                showDividers=\"true\"\n                class=\"sapUiSmallMargin\">\n                ...\n                <m:FlexBox\n                    width=\"12rem\"\n                    height=\"10rem\"\n                    alignItems=\"Center\"\n                    justifyContent=\"Center\"\n                    direction=\"Column\">\n                    <m:Title\n                        text=\"{\n                            parts: [\n                                'i18n>processFlowChartsProductionTime',\n                                'business>/timeMeasure'\n                            ],\n                            formatter: '.formatMessage'\n                        }\"\n                        class=\"sapUiSmallMargin\" />\n                    <m:FlexBox width=\"12rem\" height=\"6rem\" renderType=\"Bare\">\n                        <mc:DeltaMicroChart\n                            size=\"Responsive\"\n                            color=\"{business>/productionTimeComparisonCriticality}\"\n                            value1=\"{business>/expectedProductionTime}\"\n                            value2=\"{business>/currentProductionTime}\"\n                            title1=\"{i18n>processFlowChartsExpected}\"\n                            title2=\"{i18n>processFlowChartsCurrent}\"\n                            displayValue1=\"{business>/expectedProductionTime}\"\n                            displayValue2=\"{business>/currentProductionTime}\"\n                            deltaDisplayValue=\"{\n                                parts: [\n                                    'business>/expectedProductionTime',\n                                    'business>/currentProductionTime'\n                                ],\n                                formatter: '.getValuesDelta'\n                        }\" />\n                    </m:FlexBox>\n                </m:FlexBox>\n            </m:HeaderContainer>\n        </m:headerContainer>\n    ...\n</mvc:View>\n```\n\nThe `DeltaMicroChart` is used in the responsive mode embedded in the *Flexbox* that sets the dimensions. We are simply using the respective values from the data model for binding the *displayValue1* and *displayValue2* properties. For the *deltaDisplayValue*, we need to perform an advanced calculation based on the values before we can set them as a property. This is why we will be using the *.getValuesDelta* formatter function.\n\n\n\n\n\n### ProcessFlow.controller.js\n\n```js\n \nsap.ui.define([\n    \"sap/ui/core/mvc/Controller\",\n    \"sap/base/strings/formatMessage\"\n], function(Controller) {\n    \"use strict\";\n\n    return Controller.extend(\"sap.suite.ui.commons.demokit.tutorial.icecream.09.controller.ProcessFlow\", {\n        ...\n        getValuesDelta: function(fFirstValue, fSecondValue) {\n            return fSecondValue - fFirstValue;\n        }\n    });\n});\n```\n\nThis formatter takes the respective values and returns a string that will then be set as a property of the `DeltaMicroChart`.\n\n",
  "excerpt": "<!-- loio39733723e42b4a43b040427caaa94a73 --> Step 9: Delta Micro Chart In this step, we will create the DeltaMicroChart on the Production Process page. <a name=\"loio39733723e42b4a43b040427caaa94a73__...",
  "wordCount": 260,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}