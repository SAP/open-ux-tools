{
  "id": "sapui5-docs-04-essentials-if-fc18595-md",
  "title": "if",
  "category": "ui5-framework",
  "path": "docs/04_Essentials/if-fc18595.md",
  "lastModified": "2025-09-01T18:17:10.519Z",
  "tags": [
    "ui5-framework",
    "md"
  ],
  "headers": [
    "if",
    "\"if\" Instruction to Include an Image Only if the URL is Set",
    "\"if/then/else\" Instruction to Include an Image Only if the URL is Set and Display a Title Otherwise",
    "if/then/else Instruction"
  ],
  "content": "<!-- loiofc185952184c48618ef46306a1517f8c -->\n\n# if\n\nThe `<template:if>` instruction evaluates a condition expressed via existing SAPUI5 data binding features, such as extended syntax; in the preprocessing it is removed or replaced by its child elements based on the value of this condition.\n\nFor more information, see [Sorting, Grouping, and Filtering for List Binding](sorting-grouping-and-filtering-for-list-binding-ec79a5d.md).\n\nYou set the condition to the `test` attribute of the `if` instruction. It is recommended to use expression binding if you need to write logical expressions or convert values into Booleans. You can also use formatter functions, as with any SAPUI5 binding, such as `sap.ui.model.odata.AnnotationHelper.isMultiple`. For more information, see `sap.ui.model.odata.AnnotationHelper.isMultiple` in the API Reference.\n\n> ### Note:  \n> The test condition is treated as a property binding and the result is converted to the Boolean type according to the usual JavaScript rules, with the exception of the string `\"false\"`, which is converted to the Boolean `false` for convenience. For more information about the JavaScript rules, see the ECMAScriptÂ® Language Specification on the [ECMA International](http://www.ecma-international.org/) website.\n\n\n\n## \"if\" Instruction to Include an Image Only if the URL is Set\n\nThe output of the template below after preprocessing is as follows: If the test condition does not hold, the `<template:if>` node is dropped and if the test condition holds, the node is replaced by its content.\n\n```xml\n<template:if test=\"{meta>ImageUrl}\">\n  <Image src=\"{path: 'meta>ImageUrl', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}\" />\n</template:if>\n```\n\n> ### Note:  \n> The example above shows a shortcut syntax where `<template:then>` can be omitted in case no `<template:else>` is present.\n\n\n\n## \"if/then/else\" Instruction to Include an Image Only if the URL is Set and Display a Title Otherwise\n\nThe syntax of this example is more complex due to the additional `<template:then>`/`<template:else>` elements. The output is the `<template:if>` node replaced by the content of the appropriate child node.\n\n> ### Sample Code:  \n> ```xml\n> <template:if test=\"{meta>ImageUrl}\">\n>   <template:then>\n>     <Image src=\"{path: 'meta>ImageUrl', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}\" />\n>   </template:then>\n>   <template:else>\n>     <Text text=\"{path: 'meta>Title/Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}\" />\n>   </template:else>\n> </template:if>\n> ```\n\n\n\n## if/then/else Instruction\n\nIt is even possible to check multiple conditions in one `<template:if>` construct using the `<template:elseif>` element as shown in the example below.\n\n```xml\n<template:if test=\"{meta>ImageUrl}\">\n  <template:then>\n    <m:Image src=\"{path: 'meta>ImageUrl', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}\" />\n  </template:then>\n  <template:elseif test=\"{meta>TypeImageUrl}\">\n    <commons:Image src=\"{path: 'meta>TypeImageUrl', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}\" />\n  </template:elseif>\n  <template:else>\n    <commons:Text text=\"{path: 'meta>Title/Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}\" />\n  </template:else>\n</template:if>\n```\n\n**Related Information**  \n\n\n[Expression Binding](expression-binding-daf6852.md \"Expression binding is an enhancement of the SAPUI5 binding syntax, which allows for providing expressions instead of custom formatter functions.\")\n\n[XML Templating](xml-templating-5ee619f.md \"The XML templating concept enables you to use an XML view as a template. This template is transformed by an XML preprocessor on the source level, the XML DOM, at runtime just before an SAPUI5 control tree is created from the XML source.\")\n\n",
  "excerpt": "<!-- loiofc185952184c48618ef46306a1517f8c --> if The <template:if> instruction evaluates a condition expressed via existing SAPUI5 data binding features, such as extended syntax; in the preprocessing ...",
  "wordCount": 456,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}