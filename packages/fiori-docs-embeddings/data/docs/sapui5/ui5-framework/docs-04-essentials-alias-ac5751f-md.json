{
  "id": "sapui5-docs-04-essentials-alias-ac5751f-md",
  "title": "alias",
  "category": "ui5-framework",
  "path": "docs/04_Essentials/alias-ac5751f.md",
  "lastModified": "2025-09-01T18:17:10.490Z",
  "tags": [
    "ui5-framework",
    "md",
    "alias"
  ],
  "headers": [
    "alias",
    "\"alias\" Template"
  ],
  "content": "<!-- loioac5751f89cb142b7a6d53eaf8a0f6339 -->\n\n# alias\n\nThe `<template:alias>` instruction can be used to define a shortcut alias name for a JavaScript value, for example a static helper class, a formatter function, or a helper function.\n\nThe shortcut alias is only available in the scope of the `alias` instruction. Each nested scope can redefine aliases.\n\nA proper relative name must be used. This proper name must not contain or consist of a dot. The value to which the alias refers to can be any JavaScript object or property including a function that is available at that point. Exisiting alias names can be used in new alias definitions to refer to values, for example, `<template:alias name=\"format\" value=\"AH.format\">`. Aliases are inherited into fragments, but of course a fragment may \\(re\\)define its own set of aliases. For compatibility reasons, aliases can also start with a dot, both in definition and in references.\n\n\n\n## \"alias\" Template\n\n```xml\n<template:alias name=\"AH\" value=\"sap.ui.model.odata.AnnotationHelper\">\n  <template:with path=\"meta>com.sap.vocabularies.UI.v1.Badge\" var=\"badge\">\n    <form:SimpleForm>\n      <form:title>\n        <core:Title text=\"{path: 'badge>HeadLine', formatter: 'AH.format'}\"/>\n      </form:title>\n      <Label text=\"{path: 'badge>Title/Label', formatter: 'AH.format'}\"/>\n      <Text text=\"{path: 'badge>Title/Value', formatter: 'AH.format'}\"/>\n      <Label text=\"{path: 'badge>MainInfo/Label', formatter: 'AH.format'}\"/>\n      <template:with path=\"badge>MainInfo\" var=\"field\">\n        <core:Fragment fragmentName=\"sap.ui.core.sample.ViewTemplate.tiny.Field\" type=\"XML\"/>\n      </template:with>\n      <Label text=\"{path: 'badge>SecondaryInfo/Label', formatter: 'AH.format'}\"/>\n      <template:with path=\"badge>SecondaryInfo\" var=\"field\">\n        <core:Fragment fragmentName=\"sap.ui.core.sample.ViewTemplate.tiny.Field\" type=\"XML\"/>\n      </template:with>\n    </form:SimpleForm>\n  </template:with>\n</template:alias>\n```\n\n",
  "excerpt": "<!-- loioac5751f89cb142b7a6d53eaf8a0f6339 --> alias The <template:alias> instruction can be used to define a shortcut alias name for a JavaScript value, for example a static helper class, a formatter ...",
  "wordCount": 204,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}