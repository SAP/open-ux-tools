{
  "id": "sapui5-docs-04-essentials-interaction-tracking-for-performance-measurement-b2825ea-md",
  "title": "Interaction Tracking for Performance Measurement",
  "category": "ui5-framework",
  "path": "docs/04_Essentials/interaction-tracking-for-performance-measurement-b2825ea.md",
  "lastModified": "2025-09-01T18:17:10.521Z",
  "tags": [
    "ui5-framework",
    "md",
    "Interaction",
    "Tracking",
    "for",
    "Performance",
    "Measurement"
  ],
  "headers": [
    "Interaction Tracking for Performance Measurement",
    "Example of an Interaction Measurement",
    "Properties of Interaction Measurements",
    "Calculation of Times"
  ],
  "content": "<!-- loiob2825eabd7bb43d79b475fee4194c609 -->\n\n# Interaction Tracking for Performance Measurement\n\nYou can analyze the performance of your UI5 application by tracking the interaction that is performed on the UI.\n\nInteraction in this context means a closed step in a sequence of actions that a user performs on the UI, for example, everything that happens between two clicks on two different buttons. The interaction tracking considers XHRs, loadings triggered via script tags and rendering aspects.\n\nTo **start** interaction tracking, use `Interaction.setActive(true)` from module `sap/ui/performance/trace/Interaction`. To map the interaction data to the data of `sap/ui/performance/Measurement`, you have to explicitly set `sap-ui-measure=true`.\n\nTo **retrieve** the result of the interaction measurement, use `Interaction.getAll()` from module `sap/ui/performance/trace/Interaction`. This returns an array of all interactions that occurred and their measurement.\n\nYou can use `Interaction.filter` from module `sap/ui/performance/trace/Interaction` to filter the interaction measurements according to a filter function \\(`fnFilter`\\).\n\n\n\n## Example of an Interaction Measurement\n\n```js\nInteractionMeasurement = {\n    id: uid()                   // interaction ID\n    event: \"click\",             // event which triggered interaction - default is startup interaction\n    trigger: \"Button1\",         // element ID\n    component: \"my.Component\",  // component or app identifier\n    start : 0,                  // interaction start\n    end: 0,                     // interaction end\n    navigation: 0,              // sum over all navigation times\n    roundtrip: 0,               // time from first request sent to last received response end - without gaps and ignored overlap\n    processing: 0,              // client processing time\n    duration: 0,                // interaction duration\n    requests: [],               // all requests (XHRs) that occured during the interaction\n    measurements: [],           // sap/ui/performance/Measurement measurements\n    sapStatistics: [],          // SAP Statistics for OData\n    requestTime: 0,             // sum over all requests in the interaction\n    networkTime: 0,             // request time minus server time from the sap-perf-fesrec header\n    bytesSent: 0,               // sum over all requests bytes\n    bytesReceived: 0,           // sum over all response bytes\n    requestCompression: false,  // true if all responses have been sent gzipped - default is undefined\n    busyIndication: 0           // summed BusyIndicator duration during this interaction\n}\n```\n\n\n\n## Properties of Interaction Measurements\n\n\n<table>\n<tr>\n<th valign=\"top\">\n\nProperty\n\n</th>\n<th valign=\"top\">\n\nType\n\n</th>\n<th valign=\"top\">\n\nDescription\n\n</th>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`id` \n\n</td>\n<td valign=\"top\">\n\n`sap/base/util/uid` \n\n</td>\n<td valign=\"top\">\n\nInteraction ID\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`event` \n\n</td>\n<td valign=\"top\">\n\n`String` \n\n</td>\n<td valign=\"top\">\n\nEvent type which triggered the interaction. Allowed types are:\n\n-   `mousedown`\n\n-   `mouseup`\n\n-   `click`\n\n-   `keydown`\n\n-   `keyup`\n\n-   `keypress`\n\n-   `touchstart`\n\n-   `touchend`\n\n-   `tap`\n\n-   `mousewheel`\n\n-   `scroll`\n\n\n\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`trigger` \n\n</td>\n<td valign=\"top\">\n\n`String` \n\n</td>\n<td valign=\"top\">\n\nID of the element that triggered the action\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`component` \n\n</td>\n<td valign=\"top\">\n\n`String` \n\n</td>\n<td valign=\"top\">\n\nID of the app or name of the Component that contains the triggering element\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`appVersion` \n\n</td>\n<td valign=\"top\">\n\n`String` \n\n</td>\n<td valign=\"top\">\n\nApplication version as from App Descriptor\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`start` \n\n</td>\n<td valign=\"top\">\n\n`Number` \n\n</td>\n<td valign=\"top\">\n\nInteraction start; always triggered by user interaction. From that point in time \\(timestamp\\), all information about request timings, rendering, etc. is collected.\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`end` \n\n</td>\n<td valign=\"top\">\n\n`Number` \n\n</td>\n<td valign=\"top\">\n\nInteraction end; defined as start time plus duration.\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`navigation` \n\n</td>\n<td valign=\"top\">\n\n`Number` \n\n</td>\n<td valign=\"top\">\n\nNavigation time for all requests, calculated as difference from `startTime` to `connectEnd` of a `PerformanceTiming` \\(in ms\\)\n\nRequests that are started while another request is already in progress are ignored \\(see figure below\\).\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`roundtrip` \n\n</td>\n<td valign=\"top\">\n\n`Number` \n\n</td>\n<td valign=\"top\">\n\nRoundtrip time for a request, calculated as difference from `requestStart` to `responseEnd` of a `PerformanceTiming` \\(in ms\\)\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`processing` \n\n</td>\n<td valign=\"top\">\n\n`Number` \n\n</td>\n<td valign=\"top\">\n\nThe client processing time \\(in ms\\) of an interaction, calculated by subtracting the navigation time for all requests and the sum of roundtrip times from the total processing duration.\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`duration` \n\n</td>\n<td valign=\"top\">\n\n`Number` \n\n</td>\n<td valign=\"top\">\n\nThe duration time \\(in ms\\) of an interaction including navigation and request times, calculated by subtracting the interaction start time from the interaction end time.\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`requests` \n\n</td>\n<td valign=\"top\">\n\n`PerformanceTiming[]` \n\n</td>\n<td valign=\"top\">\n\nAll requests that occurred during the interaction, taken from the `NavigationTiming` API\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`measurements` \n\n</td>\n<td valign=\"top\">\n\n`Measurement[]` \n\n</td>\n<td valign=\"top\">\n\nPerformance measurements \\(see [Performance Measurement Using sap/ui/performance/Measurement Module](performance-measurement-using-sap-ui-performance-measurement-module-78880c0.md)\\)\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`sapStatistics` \n\n</td>\n<td valign=\"top\">\n\n`Object[]` \n\n</td>\n<td valign=\"top\">\n\nMap of request URL to corresponding `sap-statistics` header as String \\( format: `{ url: \"https://somehost.com/sap/data...\", statistics: \"total=167,fw=167,app=0,gwtotal=167,gwhub=160,gwrfcoh=0,gwbe=7,gwapp=0,gwnongw=0\" }`\\)\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`requestTime` \n\n</td>\n<td valign=\"top\">\n\n`Number` \n\n</td>\n<td valign=\"top\">\n\nSum over all request durations of this interaction, from `startTime` to `responseEnd` \\(in ms\\)\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`networkTime` \n\n</td>\n<td valign=\"top\">\n\n`Number` \n\n</td>\n<td valign=\"top\">\n\nAverage network time per request \\(in ms\\) that occurred during the interaction. Calculated using the `sap-perf-fesrec` header sent by the back end with each response; a network time of zero results if no header is available.\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`bytesSent` \n\n</td>\n<td valign=\"top\">\n\n`Number` \n\n</td>\n<td valign=\"top\">\n\nSum over all bytes sent with requests \\(content plus headers\\)\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`bytesReceived` \n\n</td>\n<td valign=\"top\">\n\n`Number` \n\n</td>\n<td valign=\"top\">\n\nSum over all bytes received with responses \\(content plus headers\\)\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`requestCompression` \n\n</td>\n<td valign=\"top\">\n\n`Boolean` \n\n</td>\n<td valign=\"top\">\n\nIndicates if all requests during an interaction have been received in GNU zip format \\(\"gzipped\"\\)\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`busyDuration` \n\n</td>\n<td valign=\"top\">\n\n`Number` \n\n</td>\n<td valign=\"top\">\n\nTime during which a `BusyIndicator` was rendered and hence blocking the UI during an interaction\n\n</td>\n</tr>\n</table>\n\n\n\n## Calculation of Times\n\n![](images/Interaction_Tracking_9678404.png)\n\n**Related Information**  \n\n\n[API Reference: `sap/ui/performance/Measurement`](https://ui5.sap.com/#/api/module:sap/ui/performance/Measurement)\n\n[Performance Measurement Using sap/ui/performance/Measurement Module](performance-measurement-using-sap-ui-performance-measurement-module-78880c0.md \"You can use sap/ui/performance/Measurement to measure the performance of your JavaScript code.\")\n\n[`NavigationTiming` API on `https://developer.mozilla.org`](https://developer.mozilla.org/en/docs/Web/API/Navigation_timing_API)\n\n[Navigation Timing on `https://www.w3.org/`](https://www.w3.org/TR/2012/REC-navigation-timing-20121217)\n\n",
  "excerpt": "<!-- loiob2825eabd7bb43d79b475fee4194c609 --> Interaction Tracking for Performance Measurement You can analyze the performance of your UI5 application by tracking the interaction that is performed on ...",
  "wordCount": 966,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}