{
  "id": "sapui5-docs-06-sap-fiori-elements-enabling-quick-views-for-link-navigation-307ced1-md",
  "title": "Enabling Quick Views for Link Navigation",
  "category": "ui5-framework",
  "path": "docs/06_SAP_Fiori_Elements/enabling-quick-views-for-link-navigation-307ced1.md",
  "lastModified": "2025-09-01T18:17:10.610Z",
  "tags": [
    "ui5-framework",
    "md",
    "Enabling",
    "Quick",
    "Views",
    "for",
    "Link",
    "Navigation"
  ],
  "headers": [
    "Enabling Quick Views for Link Navigation",
    "Additional Features in SAP Fiori Elements for OData V2",
    "Context",
    "Procedure",
    "Results",
    "Additional Features in SAP Fiori Elements for OData V4",
    "Context",
    "Results"
  ],
  "content": "<!-- loio307ced1bc98c4e3d93ecbe9658dc9176 -->\n\n# Enabling Quick Views for Link Navigation\n\nYou can enrich the popovers for link navigation with additional information to display quick views.\n\n<a name=\"task_v3l_y2y_xmb\"/>\n\n<!-- task\\_v3l\\_y2y\\_xmb -->\n\n## Additional Features in SAP Fiori Elements for OData V2\n\n\n\n<a name=\"task_v3l_y2y_xmb__context_w3l_y2y_xmb\"/>\n\n## Context\n\nYou can display information about the navigation target already on the source entity. This information - the quick view - is stored in the association end type. To enable the quick views, you must annotate `com.sap.vocabularies.UI.v1.QuickViewFacets` and `QuickViewFacets` for the popover. A new title area and additional information, such as a field group, is displayed according to the association end type of the property that has been annotated as a semantic object.\n\n> ### Note:  \n> `QuickViewFacets` can only be annotated for those `EntityTypes` that are in the same service. Only these are referenced with referential constraints in the metadata document.\n\nThis video shows the step-by-step procedure for enabling quick views for link navigation:\n\nTo do so, perform the following steps:\n\n\n\n<a name=\"task_v3l_y2y_xmb__steps_x3l_y2y_xmb\"/>\n\n## Procedure\n\n1.  Identify the property that has been annotated as a semantic object. In this case, the field is shown as a link. For more information, see [Navigation from an App \\(Outbound Navigation\\)](navigation-from-an-app-outbound-navigation-d782acf.md).\n\n    > ### Sample Code:  \n    > XML Annotation\n    > \n    > ```xml\n    > \n    > <Annotations Target=\"STTA_PROD_MAN.STTA_C_MP_ProductType/Supplier\">\n    >    <Annotation Term=\"Common.SemanticObject\" String=\"EPMProduct\"/>\n    > </Annotations>\n    > \n    > ```\n\n    > ### Sample Code:  \n    > ```\n    > annotate view STTA_C_MP_PRODUCT with {\n    >   @Consumption.semanticObject: 'EPMProduct'\n    >   supplier;\n    > }ABAP CDS\n    >                             Annotation\n    > ```\n\n2.  In the metadata document, you can find the reference to the association end type. Check for a referential constraint that includes the identified property as `Dependent`. For the `Supplier` property in the entity type STTA\\_C\\_MP\\_ProductType, that has a set of navigation properties, only `to_Supplier` includes the `Supplier` property as `Dependent`.\n\n    ```\n    ABAP CDS\n    <Association Name=\"assoc_2CCAF987BA334B3BD1DF2404F50BC9C5\" sap:content-version=\"1\">\n        <End Type=\"STTA_PROD_MAN.STTA_C_MP_ProductType\" Multiplicity=\"1\" Role=\"FromRole_assoc_2CCAF987BA334B3BD1DF2404F50BC9C5\"/>\n        <End Type=\"STTA_PROD_MAN.STTA_C_MP_SupplierType\" Multiplicity=\"0..1\" Role=\"ToRole_assoc_2CCAF987BA334B3BD1DF2404F50BC9C5\"/>\n        <ReferentialConstraint>\n            <Principal Role=\"ToRole_assoc_2CCAF987BA334B3BD1DF2404F50BC9C5\">\n                <PropertyRef Name=\"Supplier\"/>\n            </Principal>\n            <Dependent Role=\"FromRole_assoc_2CCAF987BA334B3BD1DF2404F50BC9C5\">\n                <PropertyRef Name=\"Supplier\"/>\n            </Dependent>\n        </ReferentialConstraint>\n    </Association>\n    \n    ```\n\n3.  Annotate `UI.QuickViewFacets` under the association end type of the `Dependent` property as follows:\n\n    > ### Sample Code:  \n    > XML Annotation\n    > \n    > ```xml\n    > \n    > <!-- QuickViewFacets annotation for Supplier-->\n    > \n    > <Annotations Target=\"STTA_PROD_MAN.STTA_C_MP_SupplierType\">\n    >     <Annotation Term=\"UI.QuickViewFacets\">\n    >         <Collection>\n    >             <Record Type=\"UI.ReferenceFacet\">\n    >                 <PropertyValue Property=\"Target\" AnnotationPath=\"@UI.FieldGroup#SupplierQuickViewPOC_FieldGroup_1\" />\n    >             </Record> \n    >         </Collection>\n    >     </Annotation>\n    >     <Annotation Term=\"UI.FieldGroup\" Qualifier=\"SupplierQuickViewPOC_FieldGroup_1\">\n    >         <Record>\n    >             <PropertyValue Property=\"Data\">\n    >                 <Collection>\n    >                     <Record Type=\"UI.DataField\">\n    >                         <PropertyValue Property=\"Label\" String=\"Company Name\" />\n    >                         <PropertyValue Property=\"Value\" Path=\"CompanyName\"/>\n    >                     </Record>\n    >                     <Record Type=\"UI.DataField\">\n    >                         <PropertyValue Property=\"Label\" String=\"Supplier\" />\n    >                         <PropertyValue Property=\"Value\" Path=\"Supplier\"/>\n    >                     </Record>\n    >                     <Record Type=\"UI.DataField\">\n    >                         <PropertyValue Property=\"Label\" String=\"Email Address\" />\n    >                         <PropertyValue Property=\"Value\" Path=\"EmailAddress\"/>\n    >                     </Record>                           \n    >                 </Collection>\n    >             </PropertyValue>\n    >         </Record>\n    >     </Annotation>    \n    > </Annotations>\n    > \n    > ```\n\n    > ### Sample Code:  \n    > ABAP CDS Annotation\n    > \n    > ```\n    > annotate view STTA_C_MP_SUPPLIER with {\n    > @UI.Facet: [\n    >   {\n    >     targetQualifier: 'SupplierQuickViewPOC_FieldGroup_1',\n    >     type: #FIELDGROUP_REFERENCE,\n    >     purpose: #QUICK_VIEW\n    >   }\n    > ]\n    > @UI.fieldGroup: [\n    >   {\n    >     label: 'Company Name',\n    >     value: 'COMPANYNAME',\n    >     type: #STANDARD,\n    >     position: 1 ,\n    >     qualifier: 'SupplierQuickViewPOC_FieldGroup_1'\n    >   }\n    > ]\n    > companyname;\n    > @UI.fieldGroup: [\n    >   {\n    >     label: 'Supplier',\n    >     value: 'SUPPLIER',\n    >     type: #STANDARD,\n    >     position: 2 ,\n    >     qualifier: 'SupplierQuickViewPOC_FieldGroup_1'\n    >   }\n    > ]\n    > supplier;\n    > @UI.fieldGroup: [\n    >   {\n    >     label: 'Email Address',\n    >     value: 'EMAILADDRESS',\n    >     type: #STANDARD,\n    >     position: 3 ,\n    >     qualifier: 'SupplierQuickViewPOC_FieldGroup_1'\n    >   }\n    > ]\n    > emailaddress;\n    > }\n    > \n    > ```\n\n\n\n\n<a name=\"task_v3l_y2y_xmb__result_y3l_y2y_xmb\"/>\n\n## Results\n\nA quick view for link navigation is generated and can look like this:\n\n![](images/Quick_View_3c33cc2.png)\n\nFor more information about the system behavior and configuration options, see [Configuring the Content of Quick Views](configuring-the-content-of-quick-views-c245ad7.md).\n\n<a name=\"task_hck_y5k_hmb\"/>\n\n<!-- task\\_hck\\_y5k\\_hmb -->\n\n## Additional Features in SAP Fiori Elements for OData V4\n\n\n\n<a name=\"task_hck_y5k_hmb__context_a12_bvk_hmb\"/>\n\n## Context\n\nYou can display information about the navigation target already on the source entity. This information – the quick view – is stored in the association end type. To enable the quick views, you have to annotate `com.sap.vocabularies.UI.v1.QuickViewFacets` at the association end type of the property that has been annotated as a semantic object. If you annotate `QuickViewFacets` for the popover, a new title area and additional information, such as a field group, are displayed according to the `QuickViewFacets`.\n\nQuick views are supported as follows:\n\n-   For a source property defined with a `ReferentialConstraint` on a target entity\n\n-   For a source property where the target property is a semantic key or an entity key\n\n\nTo define a quick view for a source property with a `ReferentialConstraint` on a target entity, perform the following steps:\n\n1.  Identify the property that has been annotated as a semantic object.\n\n    -   The `SemanticObject` annotation as a string\n\n        > ### Sample Code:  \n        > XML Annotation\n        > \n        > ```xml\n        > \n        > <Annotations Target=\"com.c_salesordermanage_sd.ProductSupplier/Supplier\">\n        >    <Annotation Term=\"Common.SemanticObject\" String=\"EPMProduct\"/>\n        > </Annotations>\n        > \n        > ```\n\n        > ### Sample Code:  \n        > ABAP CDS Annotation\n        > \n        > ```\n        > annotate view ProductSupplier with {\n        >   @Consumption.semanticObject: 'EPMProduct'\n        >   supplier;\n        > }\n        > ```\n\n        > ### Sample Code:  \n        > CAP CDS Annotation:\n        > \n        > ```\n        > annotate ProductSupplier with {\n        > Supplier @Common.SemanticObject: 'EPMProduct';\n        > }\n        > ```\n\n    -   The `SemanticObject` annotation defined using a path\n\n        > ### Sample Code:  \n        > XML Annotation\n        > \n        > ```\n        > <Annotations Target=\"com.c_salesordermanage_sd.ProductSupplier/Supplier\">\n        >              <Annotation Term=\"Common.SemanticObject\" Path=\"supplierSemanticObject\"/>\n        > </Annotations>\n        > ```\n\n    -   Semantic object defined with an `EdmJson` expression\n\n        > ### Sample Code:  \n        > XML Annotation\n        > \n        > ```\n        > <Annotations Target=\"com.c_salesordermanage_sd.ProductSupplier/Supplier \">\n        >            <Annotation Term=\"Common.SemanticObject\">\n        >                <If>\n        >                   <Eq>\n        >                       <Path>SupplierType</Path>\n        >                       <Int>2</Int>\n        >                   </Eq>\n        >                   <String>EPMProduct</String>\n        >                   <String>NoTarget</String>\n        >                </If>        \n        >             </Annotation>\n        > </Annotations>\n        > ```\n\n\n    Additionally, when using the `Field` building block, you can use a formatter or a binding expression to provide either a single semantic object or an array of semantic objects. For more information, see [Macros API](https://ui5.sap.com/#/api/sap.fe.macros.Field).\n\n    Check out our live example in the flexible programming model explorer at [Quick View](https://sapui5.hana.ondemand.com/test-resources/sap/fe/core/fpmExplorer/index.html#/buildingBlocks/field/fieldQuickView).\n\n2.  In the metadata document, you can find the reference to the association end type. In the `navigationProperties` of your entity, check for a `ReferentialConstraint` that includes the previously identified property \\(`Supplier`\\). This property must be in the property attributes of the `ReferentialConstraint`. In this example, it references the \"`CustomerID`\" property of the \"`Customer`\" entity \\(the association end type\\).\n\n    ```xml\n    <NavigationProperty Name=\"_ShipToPartyVH\" Type=\"com.c_salesordermanage_sd.Customer\">\n          <ReferentialConstraint Property=\"Supplier\" ReferencedProperty=\"CustomerID\" />\n    </NavigationProperty>\n    \n    ```\n\n    > ### Sample Code:  \n    > CDS Annotation\n    > \n    > ```\n    > _ShipToPartyVH  : Association to Customer\n    >                     on _ShipToPartyVH.CustomerID = Supplier;\n    > ```\n\n3.  Annotate `UI.QuickViewFacets` under the association end type of the `referentialConstraint` property as follows:\n\n    > ### Sample Code:  \n    > XML Annotation\n    > \n    > ```xml\n    > <Annotations Target=\"com.c_salesordermanage_sd.Customer\">\n    > <Annotation Term=\"UI.QuickViewFacets\">\n    >    <Collection>\n    >     <Record Type=\"UI.ReferenceFacet\">\n    >       <PropertyValue Property=\"Label\" String=\"Address\"/>\n    >       <PropertyValue Property=\"Target\" AnnotationPath=\"@UI.FieldGroup#SoldToQuickView\"/>\n    >     </Record>\n    >    </Collection>\n    > </Annotation>\n    > <Annotation Term=\"UI.FieldGroup\" Qualifier=\"SoldToQuickView\">\n    >    <Record Type=\"UI.FieldGroupType\">\n    >      <PropertyValue Property=\"Data\">\n    >       <Collection>\n    >        <Record Type=\"UI.DataField\">\n    >         <PropertyValue Property=\"Value\" Path=\"PostalCode\"/>\n    >        </Record>\n    >        <Record Type=\"UI.DataField\">\n    >         <PropertyValue Property=\"Value\" Path=\"CityName\"/>\n    >        </Record>\n    >        <Record Type=\"UI.DataField\">\n    >         <PropertyValue Property=\"Value\" Path=\"Country\"/>\n    >        </Record>\n    >       </Collection>\n    >      </PropertyValue>\n    >    </Record>\n    > </Annotation>\n    > </Annotations>\n    > ```\n\n    > ### Sample Code:  \n    > ABAP CDS Annotation\n    > \n    > ```\n    > \n    > annotate view CUSTOMER with {\n    > @UI.Facet: [\n    >   {\n    >     label: 'Address',\n    >     targetQualifier: 'SoldToQuickView',\n    >     type: #FIELDGROUP_REFERENCE,\n    >     purpose: #QUICK_VIEW\n    >   }\n    > ]\n    > @UI.fieldGroup: [\n    >   {\n    >     value: 'POSTALCODE',\n    >     type: #STANDARD,\n    >     position: 1 ,\n    >     qualifier: 'SoldToQuickView'\n    >   }\n    > ]\n    > postalcode;\n    > @UI.fieldGroup: [\n    >   {\n    >     value: 'CITYNAME',\n    >     type: #STANDARD,\n    >     position: 2 ,\n    >     qualifier: 'SoldToQuickView'\n    >   }\n    > ]\n    > cityname;\n    > @UI.fieldGroup: [\n    >   {\n    >     value: 'COUNTRY',\n    >     type: #STANDARD,\n    >     position: 3 ,\n    >     qualifier: 'SoldToQuickView'\n    >   }\n    > ]\n    > country;\n    > }\n    > \n    > ```\n\n    > ### Sample Code:  \n    > CAP CDS Annotation\n    > \n    > ```\n    > \n    > annotate schema.Customer with @(UI : {\n    > QuickViewFacets             : [\n    >     {\n    >         $Type  : 'UI.ReferenceFacet',\n    >         Label  : 'Address',\n    >         Target : '@UI.FieldGroup#SoldToQuickView'\n    >     }\n    > ],\n    > FieldGroup #SoldToQuickView : {Data : [\n    >     {\n    >         $Type : 'UI.DataField',\n    >         Value : PostalCode\n    >     },\n    >     {\n    >         $Type : 'UI.DataField',\n    >         Value : CityName\n    >     },\n    >     {\n    >         $Type : 'UI.DataField',\n    >         Value : Country\n    >     }\n    > ]}\n    > })\n    > ```\n\n\nTo define a quick view for a source property where the target property is a semantic key or an entity key, perform the following steps:\n\n1.  On the source entity define an association to the target entity:\n\n    > ### Sample Code:  \n    > CAP CDS Annotation:\n    > \n    > ```\n    > entity ProductSupplier {\n    >      CustomerReference: String;\n    >      _NavigationProperty: Association to Customer\n    >           on _NavigationProperty.Customer = CustomerReference @(Common : {\n    >                SemanticObject             : 'Customer'\n    >            });\n    > }\n    > ```\n\n2.  The property on the target entity must be defined as a semantic key or an entity key:\n\n    > ### Sample Code:  \n    > CAP CDS Annotation:\n    > \n    > ```\n    > annotate Customer with @(\n    >      //…\n    >      Common.SemanticKey : [CustomerName],\n    >      //…\n    > ) {\n    >  key Customer: String;\n    >      CustomerName: String;\n    > }\n    > ```\n\n3.  Annotate `UI.QuickViewFacets` on the target entity of the navigation property as follows:\n\n    > ### Sample Code:  \n    > XML Annotation\n    > \n    > ```xml\n    > <Annotations Target=\"com.c_salesordermanage_sd.Customer\">\n    >     <Annotation Term=\"UI.QuickViewFacets\">\n    >         <Collection>\n    >             <Record Type=\"UI.ReferenceFacet\">\n    >                 <PropertyValue Property=\"Label\" String=\"Address\" />\n    >                 <PropertyValue Property=\"Target\" AnnotationPath=\"@UI.FieldGroup#SoldToQuickView\" />\n    >             </Record>\n    >         </Collection>\n    >     </Annotation>\n    >     <Annotation Term=\"UI.FieldGroup\" Qualifier=\"SoldToQuickView\">\n    >         <Record Type=\"UI.FieldGroupType\">\n    >             <PropertyValue Property=\"Data\">\n    >                 <Collection>\n    >                     <Record Type=\"UI.DataField\">\n    >                         <PropertyValue Property=\"Value\" Path=\"PostalCode\" />\n    >                     </Record>\n    >                     <Record Type=\"UI.DataField\">\n    >                         <PropertyValue Property=\"Value\" Path=\"CityName\" />\n    >                     </Record>\n    >                     <Record Type=\"UI.DataField\">\n    >                         <PropertyValue Property=\"Value\" Path=\"Country\" />\n    >                     </Record>\n    >                 </Collection>\n    >             </PropertyValue>\n    >         </Record>\n    >     </Annotation>\n    > </Annotations>\n    > ```\n\n    > ### Sample Code:  \n    > ABAP CDS Annotation\n    > \n    > ```\n    > \n    > annotate view CUSTOMER with {\n    > @UI.Facet: [\n    >   {\n    >     label: 'Address',\n    >     targetQualifier: 'SoldToQuickView',\n    >     type: #FIELDGROUP_REFERENCE,\n    >     purpose: #QUICK_VIEW\n    >   }\n    > ]\n    > @UI.fieldGroup: [\n    >   {\n    >     value: 'POSTALCODE',\n    >     type: #STANDARD,\n    >     position: 1 ,\n    >     qualifier: 'SoldToQuickView'\n    >   }\n    > ]\n    > postalcode;\n    > @UI.fieldGroup: [\n    >   {\n    >     value: 'CITYNAME',\n    >     type: #STANDARD,\n    >     position: 2 ,\n    >     qualifier: 'SoldToQuickView'\n    >   }\n    > ]\n    > cityname;\n    > @UI.fieldGroup: [\n    >   {\n    >     value: 'COUNTRY',\n    >     type: #STANDARD,\n    >     position: 3 ,\n    >     qualifier: 'SoldToQuickView'\n    >   }\n    > ]\n    > country;\n    > }\n    > \n    > ```\n\n    > ### Sample Code:  \n    > CAP CDS Annotation\n    > \n    > ```\n    > \n    > annotate schema.Customer with @(UI : {\n    > QuickViewFacets             : [\n    >     {\n    >         $Type  : 'UI.ReferenceFacet',\n    >         Label  : 'Address',\n    >         Target : '@UI.FieldGroup#SoldToQuickView'\n    >     }\n    > ],\n    > FieldGroup #SoldToQuickView : {Data : [\n    >     {\n    >         $Type : 'UI.DataField',\n    >         Value : PostalCode\n    >     },\n    >     {\n    >         $Type : 'UI.DataField',\n    >         Value : CityName\n    >     },\n    >     {\n    >         $Type : 'UI.DataField',\n    >         Value : Country\n    >     }\n    > ]}\n    > })\n    > ```\n\n\n\n\n<a name=\"task_hck_y5k_hmb__result_xjz_wzk_hmb\"/>\n\n## Results\n\nA quick view for link navigation is generated and can look like this:\n\n![](images/Quick_View_for_Smart_Link_Navigation_c61cade.png)\n\n> ### Note:  \n> We've removed videos showing step-by-step procedures using SAP Web IDE, which SAP no longer actively supports. You can still access the video using an older version of this document.\n\n> ### Note:  \n> If the user can't navigate to the target application, no link is displayed.\n\nFor more information about the system behavior and configuration options, see [Configuring the Content of Quick Views](configuring-the-content-of-quick-views-c245ad7.md).\n\n",
  "excerpt": "<!-- loio307ced1bc98c4e3d93ecbe9658dc9176 --> Enabling Quick Views for Link Navigation You can enrich the popovers for link navigation with additional information to display quick views. <a name=\"task...",
  "wordCount": 1905,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}