{
  "id": "sapui5-docs-04-essentials-compatibility-version-information-9feb96d-md",
  "title": "Compatibility Version Information",
  "category": "ui5-framework",
  "path": "docs/04_Essentials/compatibility-version-information-9feb96d.md",
  "lastModified": "2025-09-01T18:17:10.495Z",
  "tags": [
    "ui5-framework",
    "md",
    "Compatibility",
    "Version",
    "Information"
  ],
  "headers": [
    "Compatibility Version Information",
    "Previous Function of the Compatibility Version Flag \\(deprecated\\)"
  ],
  "content": "<!-- loio9feb96da02c2429bb1afcf6534d77c79 -->\n\n# Compatibility Version Information\n\nCompatibility version flags were introduced to allow applications to react to incompatible changes in SAPUI5.\n\n> ### Caution:  \n> The concept of compatibility versions has been abandoned as of SAPUI5 version 1.28. Therefore, no new compatibility version flags will be introduced in the future. If you start building a new application, please set `data-sap-ui-compat-version=\"edge\"` on your SAPUI5 bootstrap tag.\n> \n> This ensures that the newest behavior of all features is applied. **Other version definitions, including the default value, are deprecated.**\n\n\n\n<a name=\"loio9feb96da02c2429bb1afcf6534d77c79__section_dxf_c4r_zcc\"/>\n\n## Previous Function of the Compatibility Version Flag \\(deprecated\\)\n\nAs described in the compatibility rules, changes to SAPUI5 features are compatible; see [Compatibility Rules](../02_Read-Me-First/compatibility-rules-91f0873.md) for more information. In some cases, however, it used to make sense to change the behavior of a feature, for example, in order to change the default values or to use an optimized implementation. These changes could result in incompatibilities.\n\n> ### Note:  \n> We recommend adopting new feature versions as soon as possible.\n\nThe compatibility version configuration worked as follows:\n\n-   A version flag was introduced if a feature change was incompatible.\n-   The version flag had to be defined in the SAPUI5 bootstrap tag, either globally \\(via `data-sap-ui-compat-version`\\) or individually for each feature \\(for example `data-sap-ui-compat-version-xyz`\\). Example with `compat-version \"1.18\"`:\n\n    ```html\n    <script id=\"sap-ui-bootstrap\" \n            type=\"text/javascript\"\n            src=\"resources/sap-ui-core.js\"\n            data-sap-ui-theme=\"sap_horizon\"\n            data-sap-ui-libs=\"sap.m\"\n            data-sap-ui-compat-version=\"1.18\"\n            data-sap-ui-compat-version-xyz=\"1.16\"\n            >\n    </script> \n    ```\n\n-   If no compatibility version is defined, the default behavior of the feature applies.\n-   If an explicit version is specified, the behavior of the specified version is applied \\(deprecated\\).\n-   If **`edge`** is specified as the compatibility version, the newest behavior of the feature is applied.\n-   A fallback mechanism is implemented. The following table is an example of possible configuration options for feature \"xyz\":\n\n\n    <table>\n    <tr>\n    <th valign=\"top\">\n\n    data-sap-ui-compat-version\n    \n    </th>\n    <th valign=\"top\">\n\n    data-sap-ui-compat-version-xyz\n    \n    </th>\n    <th valign=\"top\">\n\n    Default feature xyz\n    \n    </th>\n    <th valign=\"top\">\n\n    Resulting compatibility version\n    \n    </th>\n    </tr>\n    <tr>\n    <td valign=\"top\">\n    \n    \\--\n    \n    </td>\n    <td valign=\"top\">\n    \n    \\--\n    \n    </td>\n    <td valign=\"top\">\n    \n    1.14\n    \n    </td>\n    <td valign=\"top\">\n    \n    1.14\n    \n    </td>\n    </tr>\n    <tr>\n    <td valign=\"top\">\n    \n    1.16\n\n    \\(deprecated\\)\n    \n    </td>\n    <td valign=\"top\">\n    \n    \\--\n    \n    </td>\n    <td valign=\"top\">\n    \n    1.14\n    \n    </td>\n    <td valign=\"top\">\n    \n    1.16\n    \n    </td>\n    </tr>\n    <tr>\n    <td valign=\"top\">\n    \n    \\--\n    \n    </td>\n    <td valign=\"top\">\n    \n    1.16\n    \n    </td>\n    <td valign=\"top\">\n    \n    1.14\n    \n    </td>\n    <td valign=\"top\">\n    \n    1.16\n    \n    </td>\n    </tr>\n    <tr>\n    <td valign=\"top\">\n    \n    1.18\n\n    \\(deprecated\\)\n    \n    </td>\n    <td valign=\"top\">\n    \n    1.16\n    \n    </td>\n    <td valign=\"top\">\n    \n    1.14\n    \n    </td>\n    <td valign=\"top\">\n    \n    1.16\n    \n    </td>\n    </tr>\n    <tr>\n    <td valign=\"top\">\n    \n    edge\n    \n    </td>\n    <td valign=\"top\">\n    \n    ..\n    \n    </td>\n    <td valign=\"top\">\n    \n    1.14\n    \n    </td>\n    <td valign=\"top\">\n    \n    1.18\n    \n    </td>\n    </tr>\n    </table>\n    \n\nSAPUI5 supports the following compatibility version flags:\n\n\n<table>\n<tr>\n<th valign=\"top\">\n\nFlag\n\n</th>\n<th valign=\"top\">\n\nDescription\n\n</th>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`data-sap-ui-compat-version-sapMeTabContainer`\n\n</td>\n<td valign=\"top\">\n\nThe `TabContainer` was deprecated in 1.15. When the compatibility version is 1.16 or higher, an error is logged to the console indicating that `sap.m.IconTabBar` should be used instead.\n\nDefault value: 1.14\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`data-sap-ui-compat-version-sapMeProgessIndicator`\n\n</td>\n<td valign=\"top\">\n\n\\--\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`data-sap-ui-compat-version-sapMGrowingList`\n\n</td>\n<td valign=\"top\">\n\n\\--\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`data-sap-ui-compat-version-sapMListAsTable`\n\n</td>\n<td valign=\"top\">\n\n\\--\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`data-sap-ui-compat-version-sapMDialogWithPadding`\n\n</td>\n<td valign=\"top\">\n\nBy default, the content area of `Dialog` had paddings. To make the padding consistent with other popups, the padding is removed for compatibility versions 1.16 or higher. If the padding is still needed inside the content area of `Dialog`, you can use the [Container Content Padding CSS Classes](using-container-content-padding-css-classes-c71f6df.md).\n\nDefault value: 1.14\n\n</td>\n</tr>\n</table>\n\n**Related Information**  \n\n\n[Compatibility Rules](../02_Read-Me-First/compatibility-rules-91f0873.md \"The following sections describe what SAP can change in major, minor, and patch releases. Always consider these rules when developing apps, features, or controls with or for SAPUI5.\")\n\n",
  "excerpt": "<!-- loio9feb96da02c2429bb1afcf6534d77c79 --> Compatibility Version Information Compatibility version flags were introduced to allow applications to react to incompatible changes in SAPUI5. > Caution:...",
  "wordCount": 592,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}