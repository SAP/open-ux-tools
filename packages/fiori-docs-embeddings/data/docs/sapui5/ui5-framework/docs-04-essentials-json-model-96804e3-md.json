{
  "id": "sapui5-docs-04-essentials-json-model-96804e3-md",
  "title": "JSON Model",
  "category": "ui5-framework",
  "path": "docs/04_Essentials/json-model-96804e3.md",
  "lastModified": "2025-09-01T18:17:10.522Z",
  "tags": [
    "ui5-framework",
    "md",
    "JSON",
    "Model"
  ],
  "headers": [
    "JSON Model",
    "Sorting and Filtering in JSON Models",
    "Binding Path Syntax for JSON Models"
  ],
  "content": "<!-- loio96804e3315ff440aa0a50fd290805116 -->\n\n# JSON Model\n\nThe JSON model can be used to bind controls to JavaScript object data, which is usually serialized in the JSON format.\n\nThe JSON model is a client-side model and, therefore, intended for small data sets, which are completely available on the client. The JSON model does **not** support mechanisms for server-based paging or loading of deltas. It supports, however, two-way binding. Also, client-side models like the JSON model have **no** built-in support for sending data back to the server. The apps have to use, for example, `model.getData()` and `jQuery.ajax()` to send updated data to the server.\n\nTo instantiate a JSON model, use the following code:\n\n```js\nvar oModel = new sap.ui.model.json.JSONModel();\n```\n\nAfter the instance has been created, there are different options to get the data into the model.\n\nThe easiest option is to set data by using the `setData` method:\n\n```js\noModel.setData({\n    firstName: \"Peter\",\n    lastName: \"Pan\"\n});\n```\n\n> ### Note:  \n> The correct JSON notation uses double quotes for the keys and string values.\n\nUsually, you do not define your data inline in the application but load it from a server-side service using an XHR request. The JSON model, however, also has a `loadData` method, which loads the JSON data from the specified URL asynchronously and applies it to the model:\n\n```js\noModel.loadData(\"data.json\");\n```\n\n**Related Information**  \n\n\n[API Reference: `sap.ui.model.json.JSONModel`](https://ui5.sap.com/#/api/sap.ui.model.json.JSONModel)\n\n<a name=\"loio50357d719b35439984348080bcbb14a4\"/>\n\n<!-- loio50357d719b35439984348080bcbb14a4 -->\n\n## Sorting and Filtering in JSON Models\n\nIf you use a JSON model for data binding, sorting and filtering is implemented in JavaScript because the data is available on the client. You can use custom sorting and filtering methods in the JSON model. To define custom methods, set the `fnCompare` method on the Sorter object or the `fnTest` method on the filter object after creating it.\n\nThe `fnTest` method of the filter gets the value to test as the only parameter and returns, whether the row with the given value should be filtered or not.\n\n```js\nvar oFilter = new sap.ui.model.Filter(\"property\", function(value) {\n    return (value > 100); \n});\n\n```\n\nThe `fnCompare` method of the Sorter gets the two values to compare as parameters and returns -1, 0 or 1, dependent on which of the two values should be ordered before the other:\n\n```js\nvar oSorter = new sap.ui.model.Sorter(\"property\");\noSorter.fnCompare = function(value1, value2) {\n    if (value1 < value2) return -1;\n    if (value1 == value2) return 0;\n    if (value1 > value2) return 1;\n};\n```\n\n<a name=\"loiod52e364907f94a3caeb4f5e5ad0cf302\"/>\n\n<!-- loiod52e364907f94a3caeb4f5e5ad0cf302 -->\n\n## Binding Path Syntax for JSON Models\n\nThe JSON model has a simple binding path syntax, because it consists of named objects, such as properties, arrays, or nested objects.\n\nThe following example shows a simple JSON model with the different binding paths:\n\n```js\n\n{\n    company: {\n        name: \"Treefish Inc\",\n        info: {\n            employees: 3,\n        },\n        contacts: [\n            {\n                name: \"Barbara\",\n                phone: \"873\"\n            },\n            {\n                name: \"Gerry\",\n                phone: \"734\"\n            },\n            {\n                name: \"Susan\",\n                phone: \"275\"\n            }\n        ]\n    }\n}\n```\n\nAbsolute binding paths within this model:\n\n```\n/company/name\n/company/info/employees\n/company/contacts\n```\n\nRelative binding paths within the \"/company\" context:\n\n```\nname\ninfo/employees\ncontacts\n```\n\nRelative binding paths within a list binding of \"/company/contacts\":\n\n```\nname\nphone\n```\n\n",
  "excerpt": "<!-- loio96804e3315ff440aa0a50fd290805116 --> JSON Model The JSON model can be used to bind controls to JavaScript object data, which is usually serialized in the JSON format. The JSON model is a clie...",
  "wordCount": 525,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}