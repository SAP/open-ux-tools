{
  "id": "sapui5-docs-04-essentials-descriptor-dependencies-to-libraries-and-components-8521ad1-md",
  "title": "Descriptor Dependencies to Libraries and Components",
  "category": "ui5-framework",
  "path": "docs/04_Essentials/descriptor-dependencies-to-libraries-and-components-8521ad1.md",
  "lastModified": "2025-09-01T18:17:10.511Z",
  "tags": [
    "ui5-framework",
    "md",
    "Descriptor",
    "Dependencies",
    "Libraries",
    "and",
    "Components"
  ],
  "headers": [
    "Descriptor Dependencies to Libraries and Components",
    "Dependencies to Libraries",
    "Dependencies to Components",
    "Nested components"
  ],
  "content": "<!-- loio8521ad1955f340f9a6207d615c88d7fd -->\n\n# Descriptor Dependencies to Libraries and Components\n\nDescription of the performance-relevant attributes that are available for the descriptor for applications, components and libraries\n\nThe performance-relevant attributes have been introduced with the version 3 of the descriptor for applications, components, and libraries.\n\n\n\n<a name=\"loio8521ad1955f340f9a6207d615c88d7fd__section_DEPLIB\"/>\n\n## Dependencies to Libraries\n\nThe following dependencies to libraries can be implemented:\n\n-   To benefit from the asynchronous library preload, add the mandatory libraries to `sap.ui5/dependencies/libs`.\n\n-   To expose the necessary dependencies for offline packages for mobile devices, add optional libraries to `sap.ui5/dependencies/libs` and flag them as `lazy`.\n\n\nFor **applications and components**, modify the `manifest.json` as follows:\n\n```\n\"sap.ui5\": {\n    ...\n    \"dependencies\": {\n      ...\n      \"libs\": {\n        \"sap.m\": {},\n        \"sap.suite.ui.commons\": {\n          \"lazy\": true\n        }\n      }\n      ...\n    },\n    ...\n\n```\n\nFor **libraries**, modify the `.library` file as shown in the follown code sample. This file is available because the `manifest.json` for libraries is generated based on this metadata.\n\n```\n<dependencies>\n    <dependency>\n       <libraryName>sap.m</libraryName>\n    </dependency>\n    <dependency>\n       <libraryName>sap.suite.ui.commons</libraryName>\n       <lazy>true</lazy>\n    </dependency>\n    ...\n```\n\nIn a second step, modify the `library.js` file as follows:\n\n```\nsap.ui.define(['sap/ui/core/Lib'], function(Library) {\n  Library.init({\n    ...\n    dependencies : [\"sap.ui.core\",\"sap.m\"] // lazy libs are not declared here\n  });\n});\n```\n\n> ### Note:  \n> In all cases, the lazy libraries need to be loaded manually in the application or library via the [`sap/ui/core/Lib.load`](https://ui5.sap.com/#/api/sap.ui.core.Lib%23methods/sap.ui.core.Lib.load) API:\n> \n> ```\n> Lib.load({name: \"...\"}).then(/*...*/);\n> ```\n\n> ### Tip:  \n> Execute the `load` method before any resource of the library is required to preload the complete library instead of loading each resource individually.\n\n\n\n<a name=\"loio8521ad1955f340f9a6207d615c88d7fd__section_qkj_sdf_3mb\"/>\n\n## Dependencies to Components\n\n**Scenario 1:** UI library contains multiple components\n\nIn this scenario, the library is the leading container and **no** component preload is available. This means, that you maintain the library dependency as described above. This is true for all kinds of component dependencies, also for `sap.ui5/extends/component`. If the extended component originates in a library, do **not** use `sap.ui5/extends/component`, but only declare the library dependency. Otherwise, the component dependency causes a 404 request.\n\nFor loading lazy components inside a library, proceed with the library mechanisms as described above.\n\n**Scenario 2:** Standalone component\n\nIn this scenario, you only need to maintain a dependency to the component via the `sap.ui5/componentUsages` section of your component's `manifest.json` file. You have two ways to configure reuse components:\n\n-   Add the **mandatory** components to `sap.ui5/componentUsages`. The declared components will be preloaded asynchronously by default.\n\n-   Add the **optional** components to `sap.ui5/componentUsages` **and** flag them as `lazy`. They will not be preloaded, but can still be loaded and instantiated at a later time.\n\n\nFor applications and components, modify the `manifest.json` as follows:\n\n```json\n\"sap.ui5\": {\n\t...\n\t\"componentUsages\": {\n\t\t\"myReuseComponent\": {\n\t\t\t\"name\": \"sap.reuse.component\",\n\t\t\t\"lazy\": true\n\t\t}\n\t},\n\t...\n}\n```\n\nFor loading and instantiating \\(lazy\\) standalone components, use the `createComponent` factory function provided on instances of the `sap.ui.core.Component` class:\n\n```js\n// this = an instance of sap.ui.core.Component\n\n// Asynchronously (default) creates a new component instance.\n// The given name parameter has to correspond to an entry in the \"sap.ui5/componentUsages\" section of the manifest.json.\n\nvar pReuseComponentPromise = this.createComponent(\"myReuseComponent\");\n\n\n```\n\nThe full list of options for the `createComponent` factory method can be found in the [API Reference](https://ui5.sap.com/#/api/sap.ui.core.Component%23methods/createComponent). \n\n\n\n### Nested components\n\nAs of Version 1.56 it is sufficient to declare the `sap.ui5/componentUsages` and indicate whether the component should be loaded lazily or not. The declaration of the component as a separate dependency is not recommended and should be avoided in this case.\n\nFor more information, see: [Using and Nesting Components](using-and-nesting-components-346599f.md) and [Enabling Routing in Nested Components](enabling-routing-in-nested-components-fb19f50.md). These section include information how to migrate your component declarations from the old `sap.ui5/dependencies/components` section to the modern `sap.ui5/componentUsages` section of your `manifest.json` and enable routing in nested components.\n\n**Related Information**  \n\n\n[Using and Nesting Components](using-and-nesting-components-346599f.md \"You can use a ComponentContainer to wrap a UIComponent and reuse it anywhere within the SAPUI5 control tree. With the ComponentContainer you can nest components inside other components.\")\n\n[API Reference: `sap/ui/core/Lib.load`](https://ui5.sap.com/#/api/sap.ui.core.Lib%23methods/sap.ui.core.Lib.load)\n\n[API Reference: `sap.ui.core.Component`](https://ui5.sap.com/#/api/sap.ui.core.Component)\n\n",
  "excerpt": "<!-- loio8521ad1955f340f9a6207d615c88d7fd --> Descriptor Dependencies to Libraries and Components Description of the performance-relevant attributes that are available for the descriptor for applicati...",
  "wordCount": 650,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}