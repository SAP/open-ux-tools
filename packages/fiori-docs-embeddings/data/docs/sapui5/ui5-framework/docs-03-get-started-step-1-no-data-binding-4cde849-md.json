{
  "id": "sapui5-docs-03-get-started-step-1-no-data-binding-4cde849-md",
  "title": "Step 1: No Data Binding",
  "category": "ui5-framework",
  "path": "docs/03_Get-Started/step-1-no-data-binding-4cde849.md",
  "lastModified": "2025-09-01T18:17:10.448Z",
  "tags": [
    "ui5-framework",
    "md",
    "Step",
    "Data",
    "Binding"
  ],
  "headers": [
    "Step 1: No Data Binding",
    "Preview",
    "Setup",
    "Coding"
  ],
  "content": "<!-- loio4cde849dc18949b69bbe152a0aaa19c6 -->\n\n# Step 1: No Data Binding\n\nIn this step, we create a basic application and simply place some text on the screen using a standard `sap.m.Text` control. The text in this control is a hard-coded part of the control's definition; therefore, this is not an example of data binding!\n\n\n\n## Preview\n\n![The browser shows the text \"Hi, my name is Harry Hawk\"](images/Tutorial_Data_Binding_Step_1_6d391d5.png)\n\n\n\n<a name=\"loio4cde849dc18949b69bbe152a0aaa19c6__section_lv5_lvy_zbc\"/>\n\n## Setup\n\nOpen a terminal and install UI5 Tooling globally on your machine by executing the following command:\n\n`npm install --global @ui5/cli`\n\n\n\n## Coding\n\nYou can view and download all files in the Demo Kit at [Data Binding - Step 1](https://ui5.sap.com/#/entity/sap.ui.core.tutorial.databinding/sample/sap.ui.core.tutorial.databinding.01).\n\n1.  Create a folder on your local machine which will contain all the sources of the app we're going to build. We'll refer to this folder as the \"app root folder\".\n2.  Create a new file called `package.json` which will enable you to execute commands and consume packages from the[npm registry](https://www.npmjs.com/) via the npm command line interface. Enter the following content:\n\n    **package.json \\(New\\)**\n\n    ```\n    {\n      \"name\": \"data-binding-tutorial\",\n      \"private\": true,\n      \"version\": \"1.0.0\",\n      \"author\": \"SAP SE\",\n      \"description\": \"UI5 Demo App - Data Binding Tutorial\",\n      \"devDependencies\": {\n        \"@ui5/cli\": \"^3\"\n      },\n      \"scripts\": {\n        \"start\": \"ui5 serve -o index.html\"\n      }\n    }\n    ```\n\n3.  Create a new folder named `webapp` in the app root folder. It will contain all the sources that become available in the browser later. We'll refer to this folder as the \"webapp folder\".\n\n4.  Create a new HTML file named `index.html` in your webapp folder and enter the following content:\n\n    **webapp/index.html \\(New\\)**\n\n    ```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    \t<meta charset=\"utf-8\">\n    \t<title>Data Binding Tutorial</title>\n    \t<script id=\"sap-ui-bootstrap\"\n    \t\tsrc=\"resources/sap-ui-core.js\"\n    \t\tdata-sap-ui-theme=\"sap_horizon\"\n    \t\tdata-sap-ui-compat-version=\"edge\"\n    \t\tdata-sap-ui-async=\"true\"\n    \t\tdata-sap-ui-on-init=\"module:sap/ui/core/ComponentSupport\"\n    \t\tdata-sap-ui-resource-roots='{\"ui5.databinding\": \"./\"}'>\n    \t</script>\n    </head>\n    <body class=\"sapUiBody\" id=\"content\">\n    \t<div data-sap-ui-component data-name=\"ui5.databinding\" data-id=\"container\" data-settings='{\"id\" : \"databinding\"}'></div>\n    </body>\n    </html>\n    ```\n\n5.  Create a new file named `manifest.json` in the webapp folder; it's also known as the \"app descriptor\". All application-specific configuration options which we'll introduce in this tutorial will be added to this file. Enter the following content:\n\n    **webapp/manifest.json \\(New\\)**\n\n    ```\n    {\n    \t\"_version\": \"1.60.0\",\n    \t\"sap.app\": {\n    \t\t\"id\": \"ui5.databinding\",\n    \t\t\"type\": \"application\",\n    \t\t\"applicationVersion\": {\n    \t\t\t\"version\": \"1.0.0\"\n    \t\t}\n    \t},\n    \t\"sap.ui\": {\n    \t\t\"technology\": \"UI5\",\n    \t\t\"deviceTypes\": {\n    \t\t\t\"desktop\": true,\n    \t\t\t\"tablet\": true,\n    \t\t\t\"phone\": true\n    \t\t}\n    \t},\n    \t\"sap.ui5\": {\n    \t\t\"dependencies\": {\n    \t\t\t\"minUI5Version\": \"1.120.0\",\n    \t\t\t\"libs\": {\n    \t\t\t\t\"sap.m\": {},\n    \t\t\t\t\"sap.ui.core\": {}\n    \t\t\t}\n    \t\t},\n    \t\t\"rootView\": {\n    \t\t\t\"viewName\": \"ui5.databinding.view.App\",\n    \t\t\t\"type\": \"XML\",\n    \t\t\t\"id\": \"app\"\n    \t\t}\n    \t}\n    }\n    ```\n\n6.  Create a new file named `Component.js` in the webapp folder. Enter the following content:\n\n    **webapp/Component.js \\(New\\)**\n\n    ```\n    sap.ui.define([\n    \t\"sap/ui/core/UIComponent\"\n    ], (UIComponent) => {\n    \t\"use strict\";\n    \treturn UIComponent.extend(\"ui5.databinding.Component\", {\n    \t\tmetadata: {\n    \t\t\tinterfaces: [\"sap.ui.core.IAsyncContentCreation\"],\n    \t\t\tmanifest: \"json\"\n    \t\t}\n    \t});\n    });\n    ```\n\n7.  Create a new folder named `view` in the webapp folder. Then, create a new file `App.view.xml` within the `view` folder. We start by placing the `sap.m.Text` control into the XML view. Since the value of the control's text property is hard-coded, it doesn't relate to any data that might exist within a model object. Therefore, data binding is **not** used here.\n\n    **webapp/view/App.view.xml \\(New\\)**\n\n    ```\n    <mvc:View\n    \txmlns=\"sap.m\"\n    \txmlns:mvc=\"sap.ui.core.mvc\">\n    \t<Text text=\"Hi, my name is Harry Hawk\"/>\n    </mvc:View>\n    ```\n\n8.  Open a terminal in the app root folder and execute `npm i -D @ui5/cli` to install UI5 Tooling in the app root folder.\n\n9.  Execute `ui5 init` in the app root folder.\n\n10. Execute `ui5 use OpenUI5`\n\n11. Execute `ui5 add sap.m sap.ui.core sap.ui.layout themelib_sap_horizon`\n\n12. Execute `npm start` to start the web server and to open a new browser window hosting your newly created `index.html`.\n\n\n",
  "excerpt": "<!-- loio4cde849dc18949b69bbe152a0aaa19c6 --> Step 1: No Data Binding In this step, we create a basic application and simply place some text on the screen using a standard sap.m.Text control. The text...",
  "wordCount": 572,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}