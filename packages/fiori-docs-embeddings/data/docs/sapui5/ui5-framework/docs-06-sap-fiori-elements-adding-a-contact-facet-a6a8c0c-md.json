{
  "id": "sapui5-docs-06-sap-fiori-elements-adding-a-contact-facet-a6a8c0c-md",
  "title": "Adding a Contact Facet",
  "category": "ui5-framework",
  "path": "docs/06_SAP_Fiori_Elements/adding-a-contact-facet-a6a8c0c.md",
  "lastModified": "2025-09-01T18:17:10.573Z",
  "tags": [
    "ui5-framework",
    "md",
    "Adding",
    "Contact",
    "Facet"
  ],
  "headers": [
    "Adding a Contact Facet",
    "Additional Features in SAP Fiori Elements for OData V2",
    "Additional Features in SAP Fiori Elements for OData V4"
  ],
  "content": "<!-- loioa6a8c0c4849b483eb10e87f6fdf9383c -->\n\n# Adding a Contact Facet\n\nTo render a contact list and contact facet, you add a `UI.ReferenceFacet` that points to a contact annotation \\(`type`\\). It shows the label of the `UI.ReferenceFacet`, and below it, the `fn` property of the contact annotation. If you click on the name, a quick view with the contact details is displayed, as shown here:\n\n  \n  \n**Object Page: Contacts**\n\n![](images/ObjectPage_Contacts_076fb4d.png \"Object Page: Contacts\")\n\nCurrently, the contact card reads the following annotation properties and displays them:\n\n-   `fn`: the full name of the contact. It is displayed as the title of the card using a bigger font.\n\n-   `title`: the job title of the contact. It is displayed below the title of the card using a smaller font.\n\n-   `photo`: the photo assigned to the contact. It is displayed in the header of the contact card. If no photo is provided, a contact fallback icon is shown instead.\n\n-   `role`: the role of the contact. It is displayed in the content of the card, as shown in the screenshot below.\n\n-   `org`: the organization of the contact. It is displayed in the content of the card, as shown in the screenshot below.\n\n-   `adr`: the address of the contact. It is displayed in the content of the card, as shown in the screenshot below The address has to follow the `addressType` definition. The order of the displayed address is street, code, locality, region and country simultaneously in a comma-separated string. Note that if the `label` property is used, then only this is shown and the other properties are ignored.\n\n-   `mail`: the email addresses of the contact, together with the email type. Only `preferred` and `work` are supported type values. This information is displayed as a link in the content of the card, as shown in the screenshot below. When clicked, an email window opens.\n\n-   `tel`: the telephone numbers of the contact, together with the types. This information is displayed as a link in the content of the card, as shown in the screenshot below. When clicked, the phone application defined in the user's browser settings opens. If the telephone number is a fax number, use `type: #fax`to display it as a fax number. The other supported types are preferred, cell, and work.\n\n\n\n\n<a name=\"loioa6a8c0c4849b483eb10e87f6fdf9383c__section_bgb_xqr_cpb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V2\n\nThe facet annotation looks like this:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```xml\n> <Record Type=\"UI.ReferenceFacet\">\n>    <PropertyValue Property=\"Label\" String=\"Supplier\"/>\n>    <PropertyValue AnnotationPath=\"to_Supplier/@Communication.Contact\" Property=\"Target\"/>\n> </Record>\n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> ```\n> \n> @UI.facet: [\n>  {\n>   label: 'Supplier',\n>   type:         #CONTACT_REFERENCE,\n>   targetElement: '_Supplier',\n>   purpose: #STANDARD\n>  }\n> ]\n> product;\n> ```\n\nThe Contact annotation looks like this:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```xml\n> <Annotations Target=\"SEPMRA_PROD_MAN.SEPMRA_I_EmployeeType\">\n> \t<Annotation Term=\"Communication.Contact\">\n> \t\t<Record>\n> \t\t\t<PropertyValue Property=\"fn\" Path=\"FormattedName\"/>\n> \t\t\t<PropertyValue Property=\"title\" Path=\"JobTitle\"/>\n> \t\t\t<PropertyValue Property=\"org\" Path=\"CompanyName\"/>\n> \t\t\t<PropertyValue Property=\"role\" Path=\"OrganizationRole\"/>\n> \t\t\t<PropertyValue Property=\"n\">\n> \t\t\t\t<Record>\n> \t\t\t\t\t<PropertyValue Property=\"given\" Path=\"FirstName\"/>\n> \t\t\t\t\t<PropertyValue Property=\"additional\" Path=\"MiddleName\"/>\n> \t\t\t\t\t<PropertyValue Property=\"surname\" Path=\"LastName\"/>\n> \t\t\t\t</Record>\n> \t\t\t\t\t\t\t\t\t\t\n> \t\t\t</PropertyValue>\n> \t\t\t<PropertyValue Property=\"photo\" Path=\"EmployeePictureURL\"/>\n> \t\t\t<PropertyValue Property=\"tel\">\n> \t\t\t\t<Collection>\n> \t\t\t\t\t<Record>\n> \t\t\t\t\t\t<PropertyValue Property=\"type\" EnumMember=\"Communication.PhoneType/fax\"/>\n> \t\t\t\t\t\t<PropertyValue Property=\"uri\" Path=\"FaxNumber\"/>\n> \t\t\t\t\t</Record>\n> \t\t\t\t\t<Record>\n> \t\t\t\t\t\t<PropertyValue Property=\"type\" EnumMember=\"Communication.PhoneType/cell\"/>\n> \t\t\t\t\t\t<PropertyValue Property=\"uri\" Path=\"MobilePhoneNumber\"/>\n> \t\t\t\t\t</Record>\n> \t\t\t\t\t<Record>\n> \t\t\t\t\t\t<PropertyValue Property=\"type\" EnumMember=\"Communication.PhoneType/work\"/>\n> \t\t\t\t\t\t<PropertyValue Property=\"uri\" Path=\"PhoneNumber\"/>\n> \t\t\t\t\t</Record>\n> \t\t\t\t\t<Record>\n> \t\t\t\t\t\t<PropertyValue Property=\"type\" EnumMember=\"\"/>\n> \t\t\t\t\t\t<PropertyValue Property=\"address\" Path=\"FaxNumber\"/>\n> \t\t\t\t\t</Record>\n> \t\t\t\t</Collection>\n> \t\t\t</PropertyValue>\n> \t\t\t<PropertyValue Property=\"email\">\n> \t\t\t\t<Collection>\n> \t\t\t\t\t<Record>\n> \t\t\t\t\t\t<PropertyValue Property=\"type\" EnumMember=\"Communication.ContactInformationType/work\"/>\n> \t\t\t\t\t\t<PropertyValue Property=\"address\" Path=\"EmailAddress\"/>\n> \t\t\t\t\t</Record>\n> \t\t\t\t</Collection> \n> \t\t\t</PropertyValue>\n> \t\t</Record>\n> \t</Annotation>\n> </Annotations>\t\t\t\t\n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> ```\n> \n> define view VIEWNAME\n> {\n>   @Semantics.name.fullName: true\n>   FormattedName,\n> \n>   @Semantics.eMail.address: true\n>   @Semantics.eMail.type:  [#WORK]\n>   EmailAddress,\n>    \n>   @Semantics.telephone.type:  [ #FAX ] \n>   FaxNumber,\n> \n>   @Semantics.telephone.type:  [ #CELL ]\n>   MobilePhoneNumber,\n>   \n>   @Semantics.telephone.type:  [ #WORK]\n>   PhoneNumber,\n> \n>   @Semantics.name: { jobTitle: true }   \n>   JobTitle,\n> \n>   @Semantics.organization: { name: true }\n>   CompanyName,\n> \n>   @Semantics.organization: { role: true, unit: true }\n>   OrganizationRole\n> \n>   @Semantics.name: { givenName: true }   \n>   FirstName,\n> \n>   @Semantics.name: { additionalName: true }   \n>   MiddleName,\n> \n>   @Semantics.name: { familyName: true }   \n>   LastName,\n> \n>   @Semantics.address : { city: true }  \n>   City,\n> \n>   @Semantics.contact.photo: true\n>   EmployeePictureURL\n> }\n> \n> ```\n\n\n\n<a name=\"loioa6a8c0c4849b483eb10e87f6fdf9383c__section_u2p_crr_cpb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V4\n\nApplications can configure additional contact information to be displayed in a popover when users click on the smart link.\n\nConfigure the contact card using `com.sap.vocabularies.UI.v1.DataFieldForAnnotation` and `com.sap.vocabularies.Communication.v1. Communication`, as shown in the following sample code:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```xml\n> <Annotations Target=\"clouds.products.CatalogService.Products\">\n>     <Annotation Term=\"UI.LineItem\">\n>         <Collection>\n>             <Record Type=\"UI.DataFieldForAnnotation\">\n>                 <PropertyValue Property=\"Label\" String=\"Supplier\"/>\n>                 <PropertyValue Property=\"Target\" AnnotationPath=\"supplier/@Communication.Contact\"/>\n>             </Record>\n>         </Collection>\n>     </Annotation>\n> </Annotations>\n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> ```\n> annotate view PRODUCTS.CATALOGSERVICE.PRODUCTS with {\n> \n> \n> @UI.lineItem: [\n>   {\n>     label: 'Supplier',\n>     value: 'SUPPLIER',\n>     type: #AS_CONTACT,\n>     position: 1 \n>   }\n> ]\n> \n> test;\n> }\n> \n> ```\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> LineItem                         : [\n>     {\n>         $Type  : 'UI.DataFieldForAnnotation',\n>         Target : 'supplier/@Communication.Contact',\n>         Label  : 'Supplier'\n>     }]\n> \n> ```\n\nYou must then add the annotation given below to the `EntitySet` pointed to by the `Navigation` property \\(`\"Supplier\"` in the code snippet above\\) for the contents of the card. The following snippet controls the content of the card:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> `Communication.Contact`\n> \n> ```xml\n> <Annotations Target=\"clouds.products.CatalogService.Suppliers\">\n>     <Annotation Term=\"Communication.Contact\">\n>         <Record Type=\"Communication.ContactType\">\n>             <PropertyValue Property=\"email\">\n>                 <Collection>\n>                     <Record Type=\"Communication.EmailAddressType\">\n>                         <PropertyValue Property=\"type\">\n>                             <EnumMember>Communication.ContactInformationType/work</EnumMember>\n>                         </PropertyValue>\n>                         <PropertyValue Property=\"address\">\n>                             <Path>emailAddress</Path>\n>                         </PropertyValue>\n>                     </Record>\n>                 </Collection>\n>             </PropertyValue>\n>             <PropertyValue Property=\"fn\">\n>                 <Path>name</Path>\n>             </PropertyValue>\n>             <PropertyValue Property=\"tel\">\n>                 <Collection>\n>                     <Record Type=\"Communication.PhoneNumberType\">\n>                         <PropertyValue Property=\"type\">\n>                             <EnumMember>Communication.PhoneType/fax</EnumMember>\n>                         </PropertyValue>\n>                         <PropertyValue Property=\"uri\">\n>                             <Path>faxNumber</Path>\n>                         </PropertyValue>\n>                     </Record>\n>                     <Record Type=\"Communication.PhoneNumberType\">\n>                         <PropertyValue Property=\"type\">\n>                             <EnumMember>Communication.PhoneType/work</EnumMember>\n>                         </PropertyValue>\n>                         <PropertyValue Property=\"uri\">\n>                             <Path>phoneNumber</Path>\n>                         </PropertyValue>\n>                     </Record>\n>                 </Collection>\n>             </PropertyValue>\n>         </Record>\n>     </Annotation>\n> </Annotations>\n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> ```\n> define view Suppliers\n> {\n>   @Semantics.name.fullName: true\n>   name,\n> \n>   @Semantics.eMail.address: true\n>   @Semantics.eMail.type:  [#WORK]\n>   emailAddress,\n>    \n>   @Semantics.telephone.type:  [ #FAX ] \n>   FaxNumber,\n>   \n>   @Semantics.telephone.type:  [ #WORK]\n>   PhoneNumber\n> }\n> \n> ```\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> FieldGroup #HeaderGeneralInformation            : {Data : [{\n>         $Type  : 'UI.DataFieldForAnnotation',\n>         Target : '_SoldToParty/@Communication.Contact',\n>         Label  : 'Contact Info'\n>     }, ]},\n> \n> \n> entity Customer                                        @(\n>     cds.autoexpose,\n>     title                  : 'Sold-to Party',\n>     Communication.Contact  : {\n>         email : [{\n>             type    : #work,\n>             address : EmailAddress\n>         }],\n>         fn    : CustomerName,\n>         tel   : [{\n>             type : #fax,\n>             uri  : InternationalPhoneNumber\n>         }],\n>         adr   : [{\n>             type     : #work,\n>             code     : PostalCode,\n>             country  : Country,\n>             locality : CityName\n>         }]\n>     },\n>     Common.IsNaturalPerson : true\n> )\n> \n> ```\n\nThe column in the table and the contact popover when clicking the link looks like this:\n\n![](images/Contact_Card_with_Smart_Links_7282872.jpg)\n\n> ### Tip:  \n> If no \"`@Contact.photo`\" annotation is provided, a fallback icon for the contact is displayed.\n\n",
  "excerpt": "<!-- loioa6a8c0c4849b483eb10e87f6fdf9383c --> Adding a Contact Facet To render a contact list and contact facet, you add a UI.ReferenceFacet that points to a contact annotation \\(type\\). It shows the ...",
  "wordCount": 1264,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}