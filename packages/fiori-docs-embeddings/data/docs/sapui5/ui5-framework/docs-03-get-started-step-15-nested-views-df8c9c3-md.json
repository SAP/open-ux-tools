{
  "id": "sapui5-docs-03-get-started-step-15-nested-views-df8c9c3-md",
  "title": "Step 15: Nested Views",
  "category": "ui5-framework",
  "path": "docs/03_Get-Started/step-15-nested-views-df8c9c3.md",
  "lastModified": "2025-09-01T18:17:10.454Z",
  "tags": [
    "ui5-framework",
    "md",
    "Step",
    "Nested",
    "Views"
  ],
  "headers": [
    "Step 15: Nested Views",
    "Preview",
    "Coding",
    "webapp/view/App.view.xml",
    "webapp/view/HelloPanel.view.xml \\(New\\)",
    "webapp/controller/HelloPanel.controller.js \\(New\\)",
    "webapp/controller/App.controller.js"
  ],
  "content": "<!-- loiodf8c9c3d79b54c928855162bafcd88ee -->\n\n# Step 15: Nested Views\n\nOur panel content is getting more and more complex and now it is time to move the panel content to a separate view. With that approach, the application structure is much easier to understand, and the individual parts of the app can be reused.\n\n\n\n## Preview\n\n  \n  \n**The panel content is now refactored to a separate view \\(No visual changes to last step\\)**\n\n![The graphic has an explanatory text.](images/UI5_Walkthrough_Step_15_f3724d2.png \"The panel content is now refactored to a separate view (No visual changes to last\n               step)\")\n\n\n\n<a name=\"loiodf8c9c3d79b54c928855162bafcd88ee__section_rjd_vt2_syb\"/>\n\n## Coding\n\nYou can view and download all files at [Walkthrough - Step 15](https://ui5.sap.com/#/entity/sap.m.tutorial.walkthrough/sample/sap.m.tutorial.walkthrough.15).\n\n\n\n<a name=\"loiodf8c9c3d79b54c928855162bafcd88ee__section_sjd_vt2_syb\"/>\n\n## webapp/view/App.view.xml\n\n```xml\n<mvc:View\n\tcontrollerName=\"ui5.walkthrough.controller.App\"\n\txmlns=\"sap.m\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\tdisplayBlock=\"true\">\n\t<Shell>\n\t\t<App class=\"myAppDemoWT\">\n\t\t\t<pages>\n\t\t\t\t<Page title=\"{i18n>homePageTitle}\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<mvc:XMLView viewName=\"ui5.walkthrough.view.HelloPanel\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</Page>\n\t\t\t</pages>\n\t\t</App>\n\t</Shell>\n</mvc:View>\n```\n\nInstead of putting the panel and its content directly into our `App` view, we will move it to a new separate `HelloPanel` view. We refer to this using an `XMLView` tag in the content aggregation of the panel.\n\n\n\n## webapp/view/HelloPanel.view.xml \\(New\\)\n\n```xml\n<mvc:View\n   controllerName=\"ui5.walkthrough.controller.HelloPanel\"\n   xmlns=\"sap.m\"\n   xmlns:mvc=\"sap.ui.core.mvc\">\n   <Panel\n      headerText=\"{i18n>helloPanelTitle}\"\n      class=\"sapUiResponsiveMargin\"\n      width=\"auto\">\n      <content>\n         <Button\n            text=\"{i18n>showHelloButtonText}\"\n            press=\".onShowHello\"\n            class=\"myCustomButton\"/>\n         <Input\n            value=\"{/recipient/name}\"\n            valueLiveUpdate=\"true\"\n            width=\"60%\"/>\n         <FormattedText\n            htmlText=\"Hello {/recipient/name}\"\n            class=\"sapUiSmallMargin sapThemeHighlight-asColor myCustomText\"/>\n      </content>\n   </Panel>\n</mvc:View>\n```\n\nThe whole content for the panel is now added to the new file `HelloPanel.view.xml`. We also specify the controller for the view by setting the `controllerName` attribute of the XML view.\n\n\n\n## webapp/controller/HelloPanel.controller.js \\(New\\)\n\n```js\nsap.ui.define([\n   \"sap/ui/core/mvc/Controller\",\n   \"sap/m/MessageToast\"\n], (Controller, MessageToast) => {\n   \"use strict\";\n\n   return Controller.extend(\"ui5.walkthrough.controller.HelloPanel\", {\n      onShowHello() {\n         // read msg from i18n model\n         const oBundle = this.getView().getModel(\"i18n\").getResourceBundle();\n         const sRecipient = this.getView().getModel().getProperty(\"/recipient/name\");\n         const sMsg = oBundle.getText(\"helloMsg\", [sRecipient]);\n\n         // show message\n         MessageToast.show(sMsg);\n      }\n   });\n});\n```\n\nTo have a reusable asset, the method `onShowHello` is also moved from the app controller to the `HelloPanel` controller.\n\n\n\n## webapp/controller/App.controller.js\n\n```js\nsap.ui.define([\n   \"sap/ui/core/mvc/Controller\"\n], (Controller) => {\n   \"use strict\";\n\n   return Controller.extend(\"ui5.walkthrough.controller.App\", {\n   });\n});\n```\n\nWe have now moved everything out of the app view and controller. The app controller remains an empty stub for now, we will use it later to add more functionality.\n\n",
  "excerpt": "<!-- loiodf8c9c3d79b54c928855162bafcd88ee --> Step 15: Nested Views Our panel content is getting more and more complex and now it is time to move the panel content to a separate view. With that approa...",
  "wordCount": 347,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}