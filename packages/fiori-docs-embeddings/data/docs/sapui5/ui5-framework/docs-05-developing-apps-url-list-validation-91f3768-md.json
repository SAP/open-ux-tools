{
  "id": "sapui5-docs-05-developing-apps-url-list-validation-91f3768-md",
  "title": "URL List Validation",
  "category": "ui5-framework",
  "path": "docs/05_Developing_Apps/url-list-validation-91f3768.md",
  "lastModified": "2025-09-01T18:17:10.567Z",
  "tags": [
    "ui5-framework",
    "md",
    "URL",
    "List",
    "Validation"
  ],
  "headers": [
    "URL List Validation",
    "Maintaining the `URLListValidator`",
    "Validating a URL"
  ],
  "content": "<!-- loio91f3768f6f4d1014b6dd926db0e91070 -->\n\n# URL List Validation\n\nThe SAPUI5 framework provides a client-side API to manage allowed URLs using the `URLListValidator`. It can be used to validate arbitrary URLs.\n\nInternal examples of controls that use this feature are controls which accept arbitrary HTML content, such as `sap.ui.richttexteditor.RichTextEditor` and `sap.ui.core.HTML`. These controls use the `URLListValidator` to perform a check \\(sanitization\\) on the content. URLs inside their content are then automatically removed, unless they are allowed by the `URLListValidator`. The option to sanitize content can be enabled or disabled for the respective control via the properties `RichTextEditor.sanitizeValue` or `HTML.sanitizeContent`. For the HTML control it is disabled by default, whereas for the RichTextEditor the sanitize option is enabled by default. When adding a path to the allowed URLs in the `URLListValidator`, make sure to add \"/\" as path prefix if necessary, for example \"/index.epx\" instead of \"index.epx\". The last example below shows this.\n\n\n\n<a name=\"loio91f3768f6f4d1014b6dd926db0e91070__section_16EB929B857E45C2B245F2E97E9E5E8D\"/>\n\n## Maintaining the `URLListValidator`\n\nThe allowed URLs can be maintained with the following API:\n\n-   `sap/base/security/URLListValidator.add` \n\n-   `sap/base/security/URLListValidator.clear` \n\n-   `sap/base/security/URLListValidator.entries` \n\n\nHere is an example how valid URLs can be allowed:\n\n```js\n// URLListValidator required from module sap/base/security/URLListValidator\n\nURLListValidator.add(undefined, \"www.sap.com\");\n\nURLListValidator.add(\"https\", \"sdn.sap.com\");\n\nURLListValidator.add(undefined, \"sap.de\", \"1080\");\n\nURLListValidator.add(\"https\", \"community.sap.de\", undefined, \"/topics\");\n```\n\n\n\n<a name=\"loio91f3768f6f4d1014b6dd926db0e91070__section_D3F15D5E106B41C0A037A91D5EAD13DC\"/>\n\n## Validating a URL\n\nA URL can be validated by using the following API: `sap/base/security/URLListValidator.validate`.\n\nHere is an example how a given URL is validated against the above-mentioned allowed URLs:\n\n```js\n// URLListValidator required from module sap/base/security/URLListValidator\n\nURLListValidator.validate(\"http://www.sap.com\"); // => true\n\nURLListValidator.validate(\"http://sdn.sap.com\"); // => false (wrong protocol)\n\nURLListValidator.validate(\"https://sdn.sap.com\"); // => true\n\nURLListValidator.validate(\"ftp://sap.de:1080/anyftppath\"); // => true\n\nURLListValidator.validate(\"https://community.sap.de/anypath\"); // => false (wrong path)\n\nURLListValidator.validate(\"https://community.sap.de/topics\"); // => true\n```\n\nIf no URL was added to the allowed URLs in the `URLListValidator`, the URL validity check also basically checks the URL for being defined in a valid format.\n\n",
  "excerpt": "<!-- loio91f3768f6f4d1014b6dd926db0e91070 --> URL List Validation The SAPUI5 framework provides a client-side API to manage allowed URLs using the URLListValidator. It can be used to validate arbitrar...",
  "wordCount": 298,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}