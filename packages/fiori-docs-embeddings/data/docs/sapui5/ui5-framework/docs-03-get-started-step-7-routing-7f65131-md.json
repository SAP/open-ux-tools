{
  "id": "sapui5-docs-03-get-started-step-7-routing-7f65131-md",
  "title": "Step 7: Routing",
  "category": "ui5-framework",
  "path": "docs/03_Get-Started/step-7-routing-7f65131.md",
  "lastModified": "2025-09-01T18:17:10.484Z",
  "tags": [
    "ui5-framework",
    "md",
    "Step",
    "Routing"
  ],
  "headers": [
    "Step 7: Routing",
    "Preview",
    "Coding",
    "webapp/views/App.view.xml \\[MODIFY\\]",
    "webapp/controller/App.controller.js \\[NEW\\]",
    "webapp/controller/List.controller.js \\[MODIFY\\]",
    "webapp/controller/Detail.controller.js \\[MODIFY\\]",
    "webapp/Component.js \\[MODIFY\\]",
    "webapp/manifest.json \\[MODIFY\\]"
  ],
  "content": "<!-- loio7f651316d396400d88835adb0d021532 -->\n\n# Step 7: Routing\n\nIn this step, we utilize the `sap.f.routing.Router`.\n\n\n\n<a name=\"loio7f651316d396400d88835adb0d021532__section_rdb_5d1_12b\"/>\n\n## Preview\n\n  \n  \n**Changing layouts based on the sap.f.routing.Router \\(no visual changes to last step\\)**\n\n![](images/Floating_Footer_Fiori_2_0_Tutorial_24122e0.png \"Changing layouts based on the sap.f.routing.Router (no visual changes to last step)\")\n\n\n\n<a name=\"loio7f651316d396400d88835adb0d021532__section_fd2_4dd_lbb\"/>\n\n## Coding\n\nYou can view and download all files at [Flexible Column Layout App - Step 7](https://ui5.sap.com/#/sample/sap.f.tutorial.fcl.07/preview).\n\n\n\n<a name=\"loio7f651316d396400d88835adb0d021532__section_jqg_b4j_l4b\"/>\n\n## webapp/views/App.view.xml \\[MODIFY\\]\n\n```xml\n<mvc:View\n\tcontrollerName=\"sap.ui.demo.fcl.controller.App\"\n\tdisplayBlock=\"true\"\n\theight=\"100%\"\n\txmlns=\"sap.f\"\n\txmlns:mvc=\"sap.ui.core.mvc\">\n\t<FlexibleColumnLayout\n\t\tid=\"flexibleColumnLayout\"\n\t\tstateChange=\".onStateChanged\"\n\t\tbackgroundDesign=\"Solid\"\n\t\tlayout=\"{/layout}\"/>\n</mvc:View>\n```\n\nWe remove the hard-coded `beginColumnPages` and `endColumnPages` aggregations \\(since the router will add them automatically from now on\\), and we bind the `layout` property so that it can be changed easily from the controller.\n\n\n\n<a name=\"loio7f651316d396400d88835adb0d021532__section_xmq_znj_l4b\"/>\n\n## webapp/controller/App.controller.js \\[NEW\\]\n\n```js\nsap.ui.define([\n\t\t\t\t\t\t\t   \n\t\"sap/ui/core/mvc/Controller\"\n], function (Controller) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"sap.ui.demo.fcl.controller.App\", {\n\t\tonInit: function () {\n\t\t\tthis.oOwnerComponent = this.getOwnerComponent();\n\t\t\tthis.oRouter = this.oOwnerComponent.getRouter();\n\t\t\tthis.oRouter.attachRouteMatched(this.onRouteMatched, this);\n\t\t},\n\n\t\tonRouteMatched: function (oEvent) {\n\t\t\tvar sRouteName = oEvent.getParameter(\"name\"),\n\t\t\t\toArguments = oEvent.getParameter(\"arguments\");\n\n\t\t\t// Save the current route name\n\t\t\tthis.currentRouteName = sRouteName;\n\t\t\tthis.currentProduct = oArguments.product;\n\t\t},\n\n\t\tonStateChanged: function (oEvent) {\n\t\t\tvar bIsNavigationArrow = oEvent.getParameter(\"isNavigationArrow\"),\n\t\t\t\tsLayout = oEvent.getParameter(\"layout\");\n\n\t\t\t// Replace the URL with the new layout if a navigation arrow was used\n\t\t\tif (bIsNavigationArrow) {\n\t\t\t\tthis.oRouter.navTo(this.currentRouteName, {layout: sLayout, product: this.currentProduct}, true);\n\t\t\t}\n\t\t},\n\n\t\tonExit: function () {\n\t\t\tthis.oRouter.detachRouteMatched(this.onRouteMatched, this);\n\t\t}\n\t});\n});\n\n```\n\nWe access the router and bind to its `routeMatched` event. For more information, see [Router](../10_More_About_Controls/router-c6da1a5.md).\n\n\n\n<a name=\"loio7f651316d396400d88835adb0d021532__section_agl_ynj_l4b\"/>\n\n## webapp/controller/List.controller.js \\[MODIFY\\]\n\n```js\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/ui/model/Sorter\",\n\t\"sap/m/MessageBox\",\n\t\"sap/f/library\"\n], function (Controller, Filter, FilterOperator, Sorter, MessageBox, fioriLibrary) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"sap.ui.demo.fcl.controller.List\", {\n\t\tonInit: function () {\n\t\t\tthis.oView = this.getView();\n\t\t\tthis._bDescendingSort = false;\n\t\t\tthis.oProductsTable = this.oView.byId(\"productsTable\");\n\t\t\tthis.oRouter = this.getOwnerComponent().getRouter();\n\t\t},\n\n\t\tonSearch: function (oEvent) {\n\t\t\tvar oTableSearchState = [],\n\t\t\t\tsQuery = oEvent.getParameter(\"query\");\n\n\t\t\tif (sQuery && sQuery.length > 0) {\n\t\t\t\toTableSearchState = [new Filter(\"Name\", FilterOperator.Contains, sQuery)];\n\t\t\t}\n\n\t\t\tthis.oProductsTable.getBinding(\"items\").filter(oTableSearchState, \"Application\");\n\t\t},\n\n\t\tonAdd: function () {\n\t\t\tMessageBox.information(\"This functionality is not ready yet.\", {title: \"Aw, Snap!\"});\n\t\t},\n\n\t\tonSort: function () {\n\t\t\tthis._bDescendingSort = !this._bDescendingSort;\n\t\t\tvar oBinding = this.oProductsTable.getBinding(\"items\"),\n\t\t\t\toSorter = new Sorter(\"Name\", this._bDescendingSort);\n\n\t\t\toBinding.sort(oSorter);\n\t\t},\n\n\t\tonListItemPress: function (oEvent) {\n\t\t\tvar productPath = oEvent.getSource().getBindingContext(\"products\").getPath(),\n\t\t\t\tproduct = productPath.split(\"/\").slice(-1).pop();\n\n\t\t\tthis.oRouter.navTo(\"detail\", {layout: fioriLibrary.LayoutType.TwoColumnsMidExpanded, product: product});\n\t\t}\n\t});\n});\n\n```\n\nWe change the event handler for pressing an item from the list view to use the router instead of manually manipulating the `FlexibleColumnLayout` instance. When we call the router's `navTo` method, the router itself will change the `layout` property of the `FlexibleColumnLayout`.\n\n\n\n<a name=\"loio7f651316d396400d88835adb0d021532__section_m24_xnj_l4b\"/>\n\n## webapp/controller/Detail.controller.js \\[MODIFY\\]\n\n```js\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\"\n], function (Controller) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"sap.ui.demo.fcl.controller.Detail\", {\n\t\tonInit: function () {\n\t\t\tvar oOwnerComponent = this.getOwnerComponent();\n\n\t\t\tthis.oRouter = oOwnerComponent.getRouter();\n\t\t\tthis.oModel = oOwnerComponent.getModel();\n\n\t\t\tthis.oRouter.getRoute(\"list\").attachPatternMatched(this._onProductMatched, this);\n\t\t\tthis.oRouter.getRoute(\"detail\").attachPatternMatched(this._onProductMatched, this);\n\t\t},\n\n\t\t_onProductMatched: function (oEvent) {\n\t\t\tthis._product = oEvent.getParameter(\"arguments\").product || this._product || \"0\";\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: \"/ProductCollection/\" + this._product,\n\t\t\t\tmodel: \"products\"\n\t\t\t});\n\t\t},\n\n\t\tonEditToggleButtonPress: function() {\n\t\t\tvar oObjectPage = this.getView().byId(\"ObjectPageLayout\"),\n\t\t\t\tbCurrentShowFooterState = oObjectPage.getShowFooter();\n\n\t\t\toObjectPage.setShowFooter(!bCurrentShowFooterState);\n\t\t},\n\n\t\tonExit: function () {\n\t\t\tthis.oRouter.getRoute(\"list\").detachPatternMatched(this._onProductMatched, this);\n\t\t\tthis.oRouter.getRoute(\"detail\").detachPatternMatched(this._onProductMatched, this);\n\t\t}\n\t});\n});\n\n```\n\nWe bind the table in the detail view to reflect the currently selected product from the list view.\n\n\n\n<a name=\"loio7f651316d396400d88835adb0d021532__section_tmp_wnj_l4b\"/>\n\n## webapp/Component.js \\[MODIFY\\]\n\n```js\nsap.ui.define([\n\t'sap/ui/core/UIComponent',\n\t'sap/ui/model/json/JSONModel',\n\t'sap/f/library'\n], function(UIComponent, JSONModel, fioriLibrary) {\n\t'use strict';\n\n\treturn UIComponent.extend('sap.ui.demo.fcl.Component', {\n\n\t\tmetadata: {\n\t\t\tmanifest: 'json'\n\t\t},\n\n\t\tinit: function () {\n\t\t\tvar oModel,\n\t\t\t\toProductsModel,\n\t\t\t\toRouter;\n\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\toModel = new JSONModel();\n\t\t\tthis.setModel(oModel);\n\n\t\t\t// set products demo model on this sample\n\t\t\toProductsModel = new JSONModel(sap.ui.require.toUrl('sap/ui/demo/mock/products.json'));\n\t\t\toProductsModel.setSizeLimit(1000);\n\t\t\tthis.setModel(oProductsModel, 'products');\n\n\t\t\toRouter = this.getRouter();\n\t\t\toRouter.attachBeforeRouteMatched(this._onBeforeRouteMatched, this);\n\t\t\toRouter.initialize();\n\t\t},\n\n\t\t_onBeforeRouteMatched: function(oEvent) {\n\t\t\tvar oModel = this.getModel(),\n\t\t\t\tsLayout = oEvent.getParameters().arguments.layout;\n\n\t\t\t// If there is no layout parameter, set a default layout (normally OneColumn)\n\t\t\tif (!sLayout) {\n\t\t\t\tsLayout = fioriLibrary.LayoutType.OneColumn;\n\t\t\t}\n\n\t\t\toModel.setProperty(\"/layout\", sLayout);\n\t\t}\n\t});\n});\n```\n\nWe initialize the router and bind to its `onBeforeRouteMatched` event, and we introduce a model, which will be used for the layout.\n\n\n\n<a name=\"loio7f651316d396400d88835adb0d021532__section_xr1_snj_l4b\"/>\n\n## webapp/manifest.json \\[MODIFY\\]\n\n```json\n{\n\t\"_version\": \"1.38.0\",\n\t\"sap.app\": {\n\t\t\"id\": \"sap.ui.demo.fcl\",\n\t\t\"type\": \"application\",\n\t\t\"applicationVersion\": {\n\t\t\t\"version\": \"1.0.0\"\n\t\t}\n\t},\n\t\"sap.ui5\": {\n\t\t\"rootView\": {\n\t\t\t\"viewName\": \"sap.ui.demo.fcl.view.App\",\n\t\t\t\"type\": \"XML\",\n\t\t\t\"async\": true,\n\t\t\t\"id\": \"fcl\"\n\t\t},\n\t\t\"dependencies\": {\n\t\t\t\"minUI5Version\": \"1.98.0\",\n\t\t\t\"libs\": {\n\t\t\t\t\"sap.f\": {},\n\t\t\t\t\"sap.m\": {},\n\t\t\t\t\"sap.ui.core\": {},\n\t\t\t\t\"sap.uxap\": {}\n\t\t\t\t}\n\t\t},\n\t\t\"config\": {\n\t\t\t\"fullWidth\": true\n\t\t},\n\t\t\"routing\": {\n\t\t\t\"config\": {\n\t\t\t\t\"routerClass\": \"sap.f.routing.Router\",\n\t\t\t\t\"type\": \"View\",\n\t\t\t\t\"viewType\": \"XML\",\n\t\t\t\t\"path\": \"sap.ui.demo.fcl.view\",\n\t\t\t\t\"controlId\": \"flexibleColumnLayout\",\n\t\t\t\t\"transition\": \"slide\",\n\t\t\t\t\"bypassed\": {\n\t\t\t\t},\n\t\t\t\t\"async\": true\n\t\t\t},\n\t\t\t\"routes\": [\n\t\t\t\t{\n\t\t\t\t\t\"pattern\": \":layout:\",\n\t\t\t\t\t\"name\": \"list\",\n\t\t\t\t\t\"target\": [\n\t\t\t\t\t\t\"list\",\n\t\t\t\t\t\t\"detail\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"pattern\": \"detail/{product}/{layout}\",\n\t\t\t\t\t\"name\": \"detail\",\n\t\t\t\t\t\"target\": [\n\t\t\t\t\t\t\"list\",\n\t\t\t\t\t\t\"detail\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"targets\": {\n\t\t\t\t\"list\": {\n\t\t\t\t\t\"name\": \"List\",\n\t\t\t\t\t\"controlAggregation\": \"beginColumnPages\"\n\t\t\t\t},\n\t\t\t\t\"detail\": {\n\t\t\t\t\t\"name\": \"Detail\",\n\t\t\t\t\t\"controlAggregation\": \"midColumnPages\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\nFinally, we add the routing configuration in the `manifest.json`.\n\n",
  "excerpt": "<!-- loio7f651316d396400d88835adb0d021532 --> Step 7: Routing In this step, we utilize the sap.f.routing.Router. <a name=\"loio7f651316d396400d88835adb0d021532__section_rdb_5d1_12b\"/> Preview       Cha...",
  "wordCount": 747,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}