{
  "id": "sapui5-docs-04-essentials-methods-controlling-the-initial-instantiation-b430345-md",
  "title": "Methods Controlling the Initial Instantiation",
  "category": "ui5-framework",
  "path": "docs/04_Essentials/methods-controlling-the-initial-instantiation-b430345.md",
  "lastModified": "2025-09-01T18:17:10.527Z",
  "tags": [
    "ui5-framework",
    "md",
    "Methods",
    "Controlling",
    "the",
    "Initial",
    "Instantiation"
  ],
  "headers": [
    "Methods Controlling the Initial Instantiation"
  ],
  "content": "<!-- loiob430345887f1419fba50320b57c1bdf9 -->\n\n# Methods Controlling the Initial Instantiation\n\nSAPUI5 provides two methods for the initial instantiation of the component.\n\nYou can use the following methods:\n\n-   `init`\n\n    Overwrite this method for example to connect the model between the control and the component. This method is **not** called by the application directly, but called automatically when you create the instance of the component. The routing instance needs to be initialized here, see [Initializing and Accessing a Routing Instance](initializing-and-accessing-a-routing-instance-acdb6cd.md).\n\n-   `createContent`\n\n    By default, the UI component creates the `sap.ui5/rootView` declared in the manifest as the root control, see [Descriptor Dependencies to Libraries and Components](descriptor-dependencies-to-libraries-and-components-8521ad1.md).\n\n    Alternatively, you can overwrite this method and programmatically create the root control. You can either return the root control immediately or return a Promise resolving with the root control. For more information, see [`sap.ui.core.UIComponent#createContent`](https://ui5.sap.com/#/api/sap.ui.core.UIComponent/methods/createContent). Using `createContent` in an asynchronous fashion requires the UI Component to implement the`sap.ui.core.IAsyncContentCreation` interface.\n\n    Implementing this interface has the following additional effects:\n\n    -   The routing configuration and the root view will automatically be set to `async=true`,\n\n    -   Views \\(and Fragments\\) nested in asynchronous Views are now also created asynchronously if their owner component implements the mentioned interface \\(this of course includes the root view\\),\n\n    -   the loading and processing of nested Views will be contained in the factory Promise of `sap.ui.core.Component.create`. The same is true for nested asynchronous Views and Fragments. This means that once your `Component.create` factory call resolves, all inner controls are created.\n\n\n    The following code snippet shows a sample of the `createContent` function returning the root control directly:\n\n    ```js\n    sap.ui.define([\"sap/ui/core/UIComponent\", \"sap/m/Label\"], function(UIComponent, Label) {\n        return UIComponent.extend(\"my.app.Component\", {\n            metadata: {\n                manifest: \"json\"\n            },\n    \n            createContent: function () {\n                return new Label({ text: \"Hello!\" });\n            }\n        });\n    });\n    ```\n\n    The following code snippet shows a UI Component that implements the `sap.ui.core.IAsyncContentCreation` interface. The `createContent` function returns the Promise of the [`XMLView.create`](https://ui5.sap.com/#/api/sap.ui.core.mvc.XMLView/methods/sap.ui.core.mvc.XMLView.create) factory:\n\n    ```js\n    sap.ui.define([\"sap/ui/core/UIComponent\", \"sap/ui/core/mvc/XMLView\"], function(UIComponent, XMLView) {\n            return UIComponent.extend(\"my.app.Component\", {\n                metadata: {\n                    manifest: \"json\",\n                    interfaces: [\"sap.ui.core.IAsyncContentCreation\"]\n                },\n                createContent: function () {\n                    return XMLView.create({ ... });\n                }\n            });\n        });\n    ```\n\n\n> ### Note:  \n> The settings passed to the `sap.ui.core.Component.create`or `sap.ui.component` factory calls are not available in the `init` and `createContent` methods. Use `componentData` instead. For more information, see [`sap.ui.core.Component.create`](https://ui5.sap.com/#/api/sap.ui.core.Component/methods/sap.ui.core.Component.create).\n\nYou can also overwrite the getters and setters for component properties in the Component controller.\n\n**Related Information**  \n\n\n[API Reference: `sap.ui.core.IAsyncContentCreation`](https://ui5.sap.com/#/api/sap.ui.core.IAsyncContentCreation)\n\n",
  "excerpt": "<!-- loiob430345887f1419fba50320b57c1bdf9 --> Methods Controlling the Initial Instantiation SAPUI5 provides two methods for the initial instantiation of the component. You can use the following method...",
  "wordCount": 388,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}