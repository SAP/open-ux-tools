{
  "id": "sapui5-docs-03-get-started-step-12-adding-a-search-0c270b4-md",
  "title": "Step 12: Adding a Search",
  "category": "ui5-framework",
  "path": "docs/03_Get-Started/step-12-adding-a-search-0c270b4.md",
  "lastModified": "2025-09-01T18:17:10.452Z",
  "tags": [
    "ui5-framework",
    "md",
    "Step",
    "Adding",
    "Search"
  ],
  "headers": [
    "Step 12: Adding a Search",
    "Preview",
    "Coding",
    "webapp/view/Worklist.view.xml",
    "webapp/controller/Worklist.controller.js"
  ],
  "content": "<!-- loio0c270b45dd904429ba634656e3a37a73 -->\n\n# Step 12: Adding a Search\n\nWe now add a search field to our bulletin board and define a filter that represents the search term. This is done similarly as in step 24 of the Walkthrough tutorial.\n\n\n\n## Preview\n\n  \n  \n**Search field**\n\n![](images/Tutorial_Testing_Step_12_b012fdf.jpg \"Search field\")\n\n\n\n## Coding\n\nYou can view and download all files in the *Samples* in the Demo Kit at [Testing - Step 12](https://ui5.sap.com/#/entity/sap.m.tutorial.testing/sample/sap.m.tutorial.testing.12).\n\n\n\n## webapp/view/Worklist.view.xml\n\n```xml\n...\n         <Table\n               id=\"table\"\n               width=\"auto\"\n               class=\"sapUiResponsiveMargin\"\n               growing=\"true\"\n               items=\"{\n               path: '/Posts',\n               sorter: {\n                  path: 'Title',\n                  descending: false\n                  }\n               }\"\n               busyIndicatorDelay=\"{worklistView>/tableBusyDelay}\"\n               updateFinished=\".onUpdateFinished\">\n            <headerToolbar>\n               <Toolbar>\n                  <Label id=\"tableHeader\" text=\"{worklistView>/worklistTableTitle}\"/>\n                  <ToolbarSpacer />\n                  <SearchField id=\"searchField\" width=\"auto\" search=\".onFilterPosts\" />\n               </Toolbar>\n            </headerToolbar>\n...\n```\n\nWe add a `ToolbarSpacer` and a `SearchField` to the `headerToolbar` of our table.\n\n\n\n## webapp/controller/Worklist.controller.js\n\n```js\nsap.ui.define([\n\t'./BaseController',\n\t'sap/ui/model/json/JSONModel',\n\t'../model/formatter',\n\t'../model/FlaggedType',\n\t'sap/m/library',\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\"\n\n], function (BaseController, JSONModel, formatter, FlaggedType, mobileLibrary, Filter, FilterOperator) {\n\t\"use strict\";\n...\n\t\tonUpdateFinished: function (oEvent) {\n\t\t\t// update the worklist's object counter after the table update\n\t\t\tvar sTitle,\n\t\t\t\toTable = oEvent.getSource(),\n\t\t\t\tiTotalItems = oEvent.getParameter(\"total\");\n\t\t\t// only update the counter if the length is final and\n\t\t\t// the table is not empty\n\t\t\tif (iTotalItems && oTable.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"worklistTableTitleCount\", [iTotalItems]);\n\t\t\t} else {\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"worklistTableTitle\");\n\t\t\t}\n\t\t\tthis.getModel(\"worklistView\").setProperty(\"/worklistTableTitle\", sTitle);\n\t\t},\n\n\t\tonFilterPosts: function (oEvent) {\n\n\t\t\t// build filter array\n\t\t\tvar aFilter = [];\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\n\t\t\tif (sQuery) {\n\t\t\t\taFilter.push(new Filter(\"Title\", FilterOperator.Contains, sQuery));\n\t\t\t}\n\n\t\t\t// filter binding\n\t\t\tvar oTable = this.byId(\"table\");\n\t\t\tvar oBinding = oTable.getBinding(\"items\");\n\t\t\toBinding.filter(aFilter);\n\t\t},\n\n...\n```\n\nTo enable filtering, we extend the controller with a method that applies the search term entered in the search field to the list binding, similarly as we did for `InvoiceList.controller.js` in step 24 of the Walkthrough tutorial.\n\n**Related Information**  \n\n\n[Step 42 of Walkthrough: Filtering](step-23-filtering-5295470.md \"In this step, we add a search field for our product list and define a filter that represents the search term. When searching, the list is automatically updated to show only the items that match the search term.\")\n\n",
  "excerpt": "<!-- loio0c270b45dd904429ba634656e3a37a73 --> Step 12: Adding a Search We now add a search field to our bulletin board and define a filter that represents the search term. This is done similarly as in...",
  "wordCount": 323,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}