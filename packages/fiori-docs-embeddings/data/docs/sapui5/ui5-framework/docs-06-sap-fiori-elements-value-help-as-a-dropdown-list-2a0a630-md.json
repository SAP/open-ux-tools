{
  "id": "sapui5-docs-06-sap-fiori-elements-value-help-as-a-dropdown-list-2a0a630-md",
  "title": "Value Help as a Dropdown List",
  "category": "ui5-framework",
  "path": "docs/06_SAP_Fiori_Elements/value-help-as-a-dropdown-list-2a0a630.md",
  "lastModified": "2025-09-01T18:17:10.661Z",
  "tags": [
    "ui5-framework",
    "md",
    "Value",
    "Help",
    "Dropdown",
    "List"
  ],
  "headers": [
    "Value Help as a Dropdown List",
    "Additional Features in SAP Fiori Elements for OData V2",
    "Additional Features in SAP Fiori Elements for OData V4",
    "Using a Radio Button Group to Display a Fixed Value List"
  ],
  "content": "<!-- loio2a0a630e50c7472b803fb94dab922d18 -->\n\n# Value Help as a Dropdown List\n\nIf your value help contains a fixed number of values, a dropdown list is rendered.\n\nFor more information on how value help annotations are set in CDS, search for *UI Annotations* in the documentation of your SAP NetWeaver version on the SAP Help Portal at [https://help.sap.com/viewer/p/SAP\\_NETWEAVER](https://help.sap.com/viewer/p/SAP_NETWEAVER).\n\n\n\n<a name=\"loio2a0a630e50c7472b803fb94dab922d18__section_nfd_b3f_ymb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V2\n\nIf the entity set of a value help has a fairly stable number of instances, you can render an input field with a value help and dropdown list box \\(`sap.m.ComboBox` and in cases of multi selection a `sap.m.MultiComboBox`\\) using the metadata extension `sap:semantics='fixed-values'` on the entity set level and the `sap:value-list='fixed-values'` on the property level.\n\nIn the following example the product category is implemented as a dropdown list box:\n\n> ### Sample Code:  \n> $metadata\n> \n> ```\n> <EntityType Name=\"SMART_C_ProductType\" sap:label=\"Product\" sap:content-version=\"1\">\n> \t<Key>...</Key>\n> \t... \n> \t<Property Name=\"ProductCategory\" Type=\"Edm.String\" Nullable=\"false\" MaxLength=\"40\" sap:label=\"Category\" sap:value-list=\"fixed-values\" />\n> \t...\n> \t<EntityContainer Name=\"SMART_PROD_MAN_Entities\" m:IsDefaultEntityContainer=\"true\" sap:supported-formats=\"atom json xlsx\">\n> \t...\n> \t<EntitySet Name=\"SEPMRA_I_ProductCategory\" EntityType=\"SMART_PROD_MAN.SEPMRA_I_ProductCategoryType\" \n> \t\t\t\t\t\t\tsap:creatable=\"false\" sap:updatable=\"false\" sap:deletable=\"false\" sap:searchable=\"true\" sap:content-version=\"1\" sap:semantics=\"fixed-values\" />\n> ```\n\nThis is the rendering result:\n\n  \n  \n**Product Category Values as Dropdown List Box**\n\n![](images/Values_for_Product_Category_as_Drop-Down_List_Box_30ba33b.png \"Product Category Values as Dropdown List Box\")\n\n\n\n<a name=\"loio2a0a630e50c7472b803fb94dab922d18__section_xdc_h3f_ymb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V4\n\nIf the entity set of a value help has a fairly stable number of instances, you can render an input field with a value help and dropdown list box \\(`sap.m.ComboBox` and in cases of multi selection a `sap.m.MultiComboBox`\\) using the annotation `Common.ValueListWithFixedValues`.\n\nIn the following example, the currency code is implemented as a dropdown list box:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```xml\n> <Annotations Target=\"sap.fe.officesupplies.CatalogAdminService.Products/currency_code\">\n>    <Annotation Term=\"Common.Label\" String=\"Currency\"/>\n>    <Annotation Term=\"Common.Text\" Path=\"currency/name\">\n>       <Annotation Term=\"UI.TextArrangement\" EnumMember=\"UI.TextArrangementType/TextOnly\"/>\n>    </Annotation>\n>    <Annotation Term=\"Common.ValueListWithFixedValues\" Bool=\"true\"/>\n>    <Annotation Term=\"Common.ValueList\">\n>      <Record Type=\"Common.ValueListType\">\n>        <PropertyValue Property=\"Label\" String=\"Currency\"/\n>        <PropertyValue Property=\"CollectionPath\" String=\"Currencies\"/>\n>        <PropertyValue Property=\"Parameters\">\n>          <Collection>\n>             <Record Type=\"Common.ValueListParameterInOut\">\n>                <PropertyValue Property=\"LocalDataProperty\" PropertyPath=\"currency_code\"/>\n>                <PropertyValue Property=\"ValueListProperty\" String=\"code\"/>\n>             </Record>\n>             <Record Type=\"Common.ValueListParameterDisplayOnly\">\n>                <PropertyValue Property=\"ValueListProperty\" String=\"name\"/>\n>             </Record>\n>          </Collection>\n>       </PropertyValue>\n>     </Record>\n>    </Annotation>\n>    <Annotation Term=\"Core.Description\" String=\"A currency code as specified in ISO 4217\"/>\n> </Annotations>\n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> ```\n> annotate view PRODUCTS with {\n> \t@Consumption.valueHelpDefinition:\n> \t[{\n> \t  entity :{\n> \t\t name    : 'Currencies',\n> \t\t element : 'code'\n> \t\t},\n> \t    label  : 'Currency'\n> \t}]\n> \n> \t@ObjectModel: {\n> \t\ttext: {\n> \t\t\telement: [ 'name' ]\n> \t\t }\n> \t}\n> \t@UI.textArrangement: #TEXT_ONLY\n>    currency_code;\n> }\n> ```\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> \n> annotate sap.fe.officesupplies.CatalogAdminService.Products with {\n>     @Common.Label : 'Currency'\n>     @Common : {\n>         Text            : currency.name,\n>         TextArrangement : #TextOnly\n>     }\n>     @Common.ValueListWithFixedValues : true\n>     @Common.ValueList : {\n>         $Type : 'Common.ValueListType',\n>         Label : 'Currency',\n>         CollectionPath : 'Currencies',\n>         Parameters : [\n>             {\n>                 $Type : 'Common.ValueListParameterInOut',\n>                 LocalDataProperty : currency_code,\n>                 ValueListProperty : 'code'\n>             },\n>             {\n>                 $Type : 'Common.ValueListParameterDisplayOnly',\n>                 ValueListProperty : 'name'\n>             }\n>         ]\n>     }\n>     @Core.Description : 'A currency code as specified in ISO 4217'\n>     currency_code\n> };\n> \n> ```\n\nThis is the rendering result:\n\n  \n  \n**Currency Code as Dropdown List Box**\n\n![](images/Currency_Code_as_Dropdown_List_Box_edffc94.png \"Currency Code as Dropdown List Box\")\n\nYou can use `FilterRestrictions` annotations and set the `AllowedExpressions` property to `MultiValue` or `SingleValue`.\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```xml\n> <Annotation Term=\"SAP__capabilities.FilterRestrictions\">\n>     <Record>\n>        <PropertyValue Property=\"FilterExpressionRestrictions\">\n>          <Collection>\n>             <Record>\n>                <PropertyValue Property=\"Property\" PropertyPath=\"currency_code\" />\n>                <PropertyValue Property=\"AllowedExpressions\" String=\"MultiValue\" />\n>             </Record>\n> \t </Collection>\n>        </PropertyValue>\n>     </Record> \n> </Annotation>\n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> ```\n> \n> @ObjectModel: { \n>     filter.enabled: false \n> }\n> currency_code;\n> ```\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> \n> Capabilities.FilterRestrictions : {\n>     FilterExpressionRestrictions : [\n>         {\n>             Property : currency_code,\n>             AllowedExpressions : 'MultiValue'\n>         }\n>     ]\n> }\n> ```\n\n\n\n### Using a Radio Button Group to Display a Fixed Value List\n\nIf the value help has a fixed set of values, you can render the value help as a radio button group instead of a dropdown list. To do this, you can use the `Common.ValueListShowValuesImmediately` annotation or configure the format option in the `manifest.json` file as `fieldEditStyle=\"RadioButtons\"`.\n\nBy default, the radio button group is rendered in a vertical layout. You can also configure the radio button group to render in a horizontal layout by setting `radioButtonsHorizontalLayout` as `true` in the `manifest.json` file.\n\n\n\n> ### Note:  \n> -   Radio buttons support only those fields with `ValueListWithFixedValues :true` and `ValueList` annotation.\n> \n> -   The `ValueListParameterInOut` or `ValueListParameterOut` annotation must refer to the field itself using the `LocalDataProperty` parameter.\n> \n> -   The radio button labels are obtained from the `Common.Text` annotation. The labels can also be obtained from the `ValueListParameterInOut` or `ValueListParameterOut` annotation. The `TextArrangement` annotation isn't supported.\n> \n> -   We allow the use of a radio button group only for fields that contain non-Boolean values as the value list.\n> \n> -   We don't recommend the use of radio button group for non-mandatory fields, because of their default selection behavior.\n\n> ### Tip:  \n> We recommend the use of a radio button group for fields with a value list that has no more than 8 values. For more information, see [Radio Button](https://experience.sap.com/fiori-design-web/radio-button/#do-not-use-the-radio-button-if).\n\n> ### Restriction:  \n> -   Radio buttons don't support multiple value lists and value lists within the `ValueListRelevantQualifiers` annotation.\n> \n> -   Radio buttons must not be used for value lists with dependencies as specified in the `ValueListParameterInOut` or `ValueListParameterIn` annotation.\n> \n> -   Radio buttons don't consider the filters specified in the `ValueListParameterConstant` annotation, thereby enabling all values to remain unfiltered and displayed on the UI.\n\nThe data element `FieldWithRadioButtons` is displayed as a radio button group using the `Common.ValueListShowValuesImmediately` annotation as shown in the following sample code:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```\n> <Annotations Target=\"sap.fe.core.ValueHelpRadioButtons.RootElement/PropWithValueList\">\n>   <Annotation Term=\"Common.Label\" String=\"Radio button field via annotation\"/>\n>   <Annotation Term=\"Common.ValueListWithFixedValues\" Bool=\"true\">\n>     <Annotation Term=\"Common.ValueListShowValuesImmediately\" Bool=\"true\"/>\n>   </Annotation>\n>   <Annotation Term=\"Common.ValueList\">\n>     <Record Type=\"Common.ValueListType\">\n>       <PropertyValue Property=\"Label\" String=\"Value list with fixed values\"/>\n>       <PropertyValue Property=\"CollectionPath\" String=\"FixedValueListEntity\"/>\n>       <PropertyValue Property=\"Parameters\">\n>         <Collection>\n>           <Record Type=\"Common.ValueListParameterInOut\">\n>             <PropertyValue Property=\"LocalDataProperty\" PropertyPath=\"PropWithValueList\"/>\n>             <PropertyValue Property=\"ValueListProperty\" String=\"KeyProp\"/>\n>           </Record>\n>         </Collection>\n>       </PropertyValue>\n>     </Record>\n>   </Annotation>\n> </Annotations>\n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> No ABAP CDS annotation sample is available. Please use the local XML annotation.\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> FieldWithRadioButtons  : String @(Common: {\n> \t\tValueListWithFixedValues                                       : true,\n> \t\tValueListWithFixedValues.@Common.ValueListShowValuesImmediately: true,\n> \t\tValueList                                                      : {\n> \t\t\tCollectionPath: 'FixedValueListEntity',\n> \t\t\tParameters    : [\n> \t\t\t\t{\n> \t\t\t\t\t$Type            : 'Common.ValueListParameterInOut',\n> \t\t\t\t\tLocalDataProperty: FieldWithRadioButtons,\n> \t\t\t\t\tValueListProperty: 'KeyProp'\n> \t\t\t\t}\n> \t\t\t]\n> \t\t}\n> });\n>  \n> @cds.autoexpose\n> entity FixedValueListEntity {\n> \t\tkey KeyProp     : Integer @Common.Text : Description;\n> \t\t\tDescription : String\n> }\n> ```\n\n  \n  \n**Radio Buttons in Vertical Layout Using Annotation**\n\n![](images/Radio_button-vertical_layout_6560590.png \"Radio Buttons in Vertical Layout Using Annotation\")\n\nThe data element `FieldWithFixedValueList` is rendered as a radio button group in a horizontal layout by setting the format option `fieldEditStyle= \"RadioButton\"` in the `manifest.json` file as shown in the following sample code:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```\n> <Annotations Target=\"sap.fe.core.ValueHelpRadioButtons.RootElement/PropWithValueList\">\n>   <Annotation Term=\"Common.Label\" String=\"Radio button field via annotation\"/>\n>   <Annotation Term=\"Common.ValueListWithFixedValues\" Bool=\"true\">\n>   </Annotation>\n>   <Annotation Term=\"Common.ValueList\">\n>     <Record Type=\"Common.ValueListType\">\n>       <PropertyValue Property=\"Label\" String=\"Value list with fixed values\"/>\n>       <PropertyValue Property=\"CollectionPath\" String=\"FixedValueListEntity\"/>\n>       <PropertyValue Property=\"Parameters\">\n>         <Collection>\n>           <Record Type=\"Common.ValueListParameterInOut\">\n>             <PropertyValue Property=\"LocalDataProperty\" PropertyPath=\"PropWithValueList\"/>\n>             <PropertyValue Property=\"ValueListProperty\" String=\"KeyProp\"/>\n>           </Record>\n>         </Collection>\n>       </PropertyValue>\n>     </Record>\n>   </Annotation>\n> </Annotations>\n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> No ABAP CDS annotation sample is available. Please use the local XML annotation.\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> FieldWithRadioButtonsViaManifest  : String @(Common: {\n> \t\tValueListWithFixedValues    : true,\n> \t\tValueList                   : {\n> \t\t\tCollectionPath: 'FixedValueListEntity',\n> \t\t\tParameters    : [\n> \t\t\t\t{\n> \t\t\t\t\t$Type            : 'Common.ValueListParameterInOut',\n> \t\t\t\t\tLocalDataProperty: FieldWithRadioButtonsViaManifest,\n> \t\t\t\t\tValueListProperty: 'KeyProp'\n> \t\t\t\t}\n> \t\t\t]\n> \t\t}\n> });\n>  \n> @cds.autoexpose\n> entity FixedValueListEntity {\n> key KeyProp     : Integer @Common.Text : Description;\n>     Description : String\n> }\n>  \n> UI.FieldGroup #MyFieldGroup : {\n>     Label: 'Line item data',\n>     Data : [\n>       {Value: FieldWithRadioButtonsViaManifest}\n> \t]\n> }\n>  \n> \n> \n> ```\n\n> ### Sample Code:  \n> manifest.json\n> \n> ```\n> ...\n> \"controlConfiguration\": {\n> \t\"@com.sap.vocabularies.UI.v1.FieldGroup#MyFieldGroup\": {\n> \t\t\"fields\": {\n> \t\t\t\"DataField::FieldWithRadioButtonsViaManifest\": {\n> \t\t\t\t\"formatOptions\": {\n> \t\t\t\t\t\"fieldEditStyle\"              : \"RadioButtons\",\n> \t\t\t\t\t\"radioButtonsHorizontalLayout\": true\n> \t\t\t\t}\n> \t\t\t}\n> \t\t}\n> \t}\n> }\n> ...\n> \n> \n> ```\n\n  \n  \n**Radio Buttons in Horizontal Layout Using Manifest Setting**\n\n![](images/Radio_button-horizontal_layout_a267511.png \"Radio Buttons in Horizontal Layout Using Manifest Setting\")\n\n",
  "excerpt": "<!-- loio2a0a630e50c7472b803fb94dab922d18 --> Value Help as a Dropdown List If your value help contains a fixed number of values, a dropdown list is rendered. For more information on how value help an...",
  "wordCount": 1500,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}