{
  "id": "sapui5-docs-04-essentials-suspend-and-resume-b0f5c53-md",
  "title": "Suspend and Resume",
  "category": "ui5-framework",
  "path": "docs/04_Essentials/suspend-and-resume-b0f5c53.md",
  "lastModified": "2025-09-01T18:17:10.546Z",
  "tags": [
    "ui5-framework",
    "md",
    "Suspend",
    "and",
    "Resume"
  ],
  "headers": [
    "Suspend and Resume"
  ],
  "content": "<!-- loiob0f5c531e5034a27952cc748954cbe39 -->\n\n# Suspend and Resume\n\nA suspended binding does not send data service requests nor does it fire change events. You can resume a suspended list or context binding with its `resume` method.\n\nYou can suspend a [`list binding`](https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataListBinding/methods/suspend) or [`context binding`](https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataContextBinding/methods/suspend) with its suspend method. You can only suspend absolute bindings or bindings which are quasi-absolute. A quasi-absolute binding is a relative binding with a context which is not a [`sap.ui.model.odata.v4.Context`](https://ui5.sap.com/#/api/sap.ui.model.odata.v4.Context). You can only suspend a binding which is not yet suspended. For a relative binding having a V4 context, you may suspend the **root binding** of its binding hierarchy which is the \\(quasi-\\) absolute ancestor binding of this binding. The binding's method `getRootBinding` provides the root binding; for \\(quasi-\\) absolute bindings it returns the binding itself.\n\nTypical use cases for suspend and resume are:\n\n1.  **Initiate read requests for controls in the view later; not when the view is initialized:**\n\n    In some situations you may want to suppress OData requests and change events initiated by an OData V4 binding for a certain period of time. This is useful for value help dialogs, such as the value help for the `/BusinessPartnerList` when creating a sales order in the [`SalesOrders OData V4 sample`](https://ui5.sap.com/#/entity/sap.ui.model.odata.v4.ODataModel/sample/sap.ui.core.sample.odata.v4.SalesOrders).\n\n2.  **Avoid intermediate request when modifying the binding multiple times**\n\n    You want to add a filter and change the sorting of a list binding. If the binding is not suspended, it will initiate a request after calling the `filter` method, and a second request after calling the `sort` method. If it is suspended, only one request with the updated filter and sort criteria is sent on `resume`.\n\n\nThe code below shows a snippet from the [`SalesOrders OData V4 sample`](https://ui5.sap.com/#/entity/sap.ui.model.odata.v4.ODataModel/sample/sap.ui.core.sample.odata.v4.SalesOrders) which delays the request to `/BusinessPartnerList` until the *Create Sales Order* dialog is displayed.\n\n> ### Note:  \n> The `suspended` flag in the binding info initiates a call to the suspend method of the corresponding binding once it is created.\n\n> ### Example:  \n> View\n> \n> ```\n> <Dialog id=\"CreateSalesOrderDialog\" title=\"Create New Sales Order\">\n> ...\n>     <Input id=\"NewBuyerID\" suggestionItems=\"{path : '/BusinessPartnerList', suspended : true}\">\n>         <suggestionItems>\n>             <core:ListItem key=\"{BusinessPartnerID}\" additionalText=\"{CompanyName}\"  text=\"{BusinessPartnerID}\"/>\n>         </suggestionItems>\n>     </Input>\n> ...\n> </Dialog>\n> ```\n\nThe controller code to open the dialog resumes the list binding on `/BusinessPartnerList` and thus initiates the request.\n\n> ### Example:  \n> Controller\n> \n> ```\n> var oBPListBinding = this.byId(\"NewBuyerID\").getBinding(\"suggestionItems\");\n>  \n> if (oBPListBinding.isSuspended()) {\n>     oBPListBinding.resume();\n> }\n> ```\n\nWhen a binding is suspended, all methods which may initiate CRUD requests for this binding, for example `ODataListBinding.create`, throw an error. This is also true for dependent bindings of a suspended binding. However methods that cause the binding to be refreshed completely are allowed. These methods are:\n\n-   [`ODataContextBinding.changeParameters`](https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataContextBinding/methods/changeParameters) \n\n-   [`ODataContextBinding.refresh`](https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataContextBinding/methods/refresh)\n\n-   [`ODataListBinding.changeParameters`](https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataListBinding/methods/changeParameters)\n\n-   [`ODataListBinding.refresh`](https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataListBinding/methods/refresh)\n\n-   [`ODataListBinding.filter`](https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataListBinding/methods/filter)\n\n-   [`ODataListBinding.sort`](https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataListBinding/methods/sort)\n\n-   [`ODataListBinding.setAggregation`](https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataListBinding/methods/setAggregation)\n\n-   [`ODataListBinding.updateAnalyticalInfo`](https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataListBinding/methods/updateAnalyticalInfo)\n\n\n> ### Caution:  \n> It is not allowed to suspend operation bindings.\n\n",
  "excerpt": "<!-- loiob0f5c531e5034a27952cc748954cbe39 --> Suspend and Resume A suspended binding does not send data service requests nor does it fire change events. You can resume a suspended list or context bind...",
  "wordCount": 485,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}