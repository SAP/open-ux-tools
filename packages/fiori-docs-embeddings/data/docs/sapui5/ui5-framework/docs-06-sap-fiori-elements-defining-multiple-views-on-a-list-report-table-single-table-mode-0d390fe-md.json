{
  "id": "sapui5-docs-06-sap-fiori-elements-defining-multiple-views-on-a-list-report-table-single-table-mode-0d390fe-md",
  "title": "Defining Multiple Views on a List Report Table - Single Table Mode",
  "category": "ui5-framework",
  "path": "docs/06_SAP_Fiori_Elements/defining-multiple-views-on-a-list-report-table-single-table-mode-0d390fe.md",
  "lastModified": "2025-09-01T18:17:10.602Z",
  "tags": [
    "ui5-framework",
    "md",
    "Defining",
    "Multiple",
    "Views",
    "List",
    "Report",
    "Table",
    "Single",
    "Mode"
  ],
  "headers": [
    "Defining Multiple Views on a List Report Table - Single Table Mode",
    "Additional Features in SAP Fiori Elements for OData V2",
    "Context",
    "Procedure",
    "Additional Examples",
    "Additional Features in SAP Fiori Elements for OData V4",
    "Context",
    "Procedure"
  ],
  "content": "<!-- loio0d390fed360c4c58a0f0619338938de1 -->\n\n# Defining Multiple Views on a List Report Table - Single Table Mode\n\nYou can define multiple views of a table and display them in single table mode. Users can switch between views using a segmented button.\n\n<a name=\"task_ibz_ywy_cnb\"/>\n\n<!-- task\\_ibz\\_ywy\\_cnb -->\n\n## Additional Features in SAP Fiori Elements for OData V2\n\n\n\n<a name=\"task_ibz_ywy_cnb__context_jbz_ywy_cnb\"/>\n\n## Context\n\nTo define multiple views using single table mode, perform the following steps:\n\n\n\n<a name=\"task_ibz_ywy_cnb__steps_kbz_ywy_cnb\"/>\n\n## Procedure\n\n1.  Add `SelectionVariants` to your annotations file.\n\n    Example for a `SelectionVariant` that filters for items that cost a certain amount \\(for example, at least 5,000 euros\\):\n\n    > ### Sample Code:  \n    > XML Annotation\n    > \n    > ```xml\n    > \n    > <Annotation Term=\"UI.SelectionVariant\" Qualifier=\"Expensive\">\n    >     <Record>\n    >         <PropertyValue Property=\"Text\" String=\"Expensive\">\n    >         </PropertyValue>\n    >         <PropertyValue Property=\"SelectOptions\">\n    >             <Collection>\n    >                 <Record Type=\"UI.SelectOptionType\">\n    >                     <PropertyValue Property=\"PropertyName\"\n    >                         PropertyPath=\"GrossAmount\" />\n    >                     <PropertyValue Property=\"Ranges\">\n    >                         <Collection>\n    >                             <Record Type=\"UI.SelectionRangeType\">\n    >                                 <PropertyValue Property=\"Option\"\n    >                                     EnumMember=\"UI.SelectionRangeOptionType/GE\" />\n    >                                 <PropertyValue Property=\"Low\" String=\"5000\" />\n    >                             </Record>\n    >                         </Collection>\n    >                     </PropertyValue>\n    >                 </Record>\n    >             </Collection>\n    >         </PropertyValue>\n    >     </Record>\n    > </Annotation>\n    > ```\n\n    > ### Sample Code:  \n    > ABAP CDS Annotation\n    > \n    > ```\n    > \n    > @UI.SelectionVariant: [\n    >   {\n    >     text: 'Expensive',\n    >     qualifier: 'Expensive'\n    >   }\n    > ]\n    > annotate view STTA_C_MP_Product with {\n    > \n    > }\n    > ```\n\n    > ### Note:  \n    > For the `SelectionVariant`, the following applies:\n    > \n    > -   The `FilterExpression` of the `SelectionVariantType` is not supported.\n    > \n    > -   The following `SelectionRangeOptionTypes` are supported without any wildcards, for example, \\*, ?, â€¦:\n    > \n    >     -   EQ: Equal to\n    > \n    >     -   BT: Between\n    > \n    >     -   LE: Less than or equal to\n    > \n    >     -   GE: Greater than or equal to\n    > \n    >     -   NE: Not equal to\n    > \n    >     -   GT: Greater than\n    > \n    >     -   LT: Less than\n    > \n    > \n    > \n    > For the `PresentationVariant`, `SortOrders` is supported.\n\n2.  Extend the `manifest.json` to switch on the multiple view feature and link to the variants you have added to your annotations. You do this in the list report settings section under `sap.ui.generic.app`. Use `quickVariantSelection` for single table mode.\n\n    -   The `variants` section \\(lines 11-20\\) contains a set of entries that point to the variants defined in the annotations.\n\n    -   For each entry under `variants` \\(for example, lines 12-15\\), define an `annotationPath` \\(line 14\\) for a specific variant.\n\n    -   Provide a key entry \\(line 13\\) that is used for initializing the corresponding `SegmentedButton` item. This is a mandatory entry.\n\n\n    ```\n    \n    1 ...\n    2 \"sap.ui.generic.app\": {\n    3     \"pages\": [\n    4        {\n    5            \"entitySet\": \"C_STTA_SalesOrder_WD_20\",\n    6            \"component\": {\n    7                \"name\": \"sap.suite.ui.generic.template.ListReport\",\n    8                \"list\": true,\n    9                \"settings\": {\n    10                    \"quickVariantSelection\": {\n    11                        \"variants\": {\n    12                            \"0\": {\n    13                                \"key\": \"_tab1\",\n    14                                \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant#Expensive\"\n    15                            },\n    16                            \"1\": {\n    17                                \"key\": \"_tab2\",\n    18                                \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionPresentationVariant#Cheap\"\n    19                            }\n    20                        }\n    21                    }\n    22                    ...\n    ```\n\n    > ### Note:  \n    > The `PresentationVariant` part of the `SelectionPresentationVariant` \\(as used in the above example\\) is not considered. The `SelectionPresentationVariant` is only used to find the `SelectionVariant` and the filters defined within it.\n\n\n<a name=\"concept_ecd_hgr_j4b\"/>\n\n<!-- concept\\_ecd\\_hgr\\_j4b -->\n\n### Additional Examples\n\n**`SelectionVariant` with a Qualifier**\n\n> ### Sample Code:  \n> Annotation\n> \n> ```xml\n> <Annotation Term=\"UI.SelectionVariant\" Qualifier=\"Expensive\">\n>      <Record>\n>           <PropertyValue Property=\"Text\" String=\"{@i18n>@Expensive}\">\n>           </PropertyValue>\n>           <PropertyValue Property=\"SelectOptions\">\n>                <Collection>\n>                     <Record Type=\"UI.SelectOptionType\">\n>                          <PropertyValue Property=\"PropertyName\" PropertyPath=\"GrossAmount\" />\n>                          <PropertyValue Property=\"Ranges\">\n>                               <Collection>\n>                                    <Record Type=\"UI.SelectionRangeType\">\n>                                         <PropertyValue Property=\"Sign\" EnumMember=\"UI.SelectionRangeSignType/E\"/>\n>                                         <PropertyValue Property=\"Option\" EnumMember=\"UI.SelectionRangeOptionType/LT\" />\n>                                         <PropertyValue Property=\"Low\" String=\"5000\" />\n>                                    </Record>\n>                               </Collection>\n>                          </PropertyValue>\n>                     </Record>\n>                </Collection>\n>           </PropertyValue>\n>      </Record>\n> </Annotation>\n> \n> ```\n\n> ### Sample Code:  \n> Manifest Settings\n> \n> ```\n> \"settings\": {\n>           \"smartVariantManagement\": true,\n>           \"quickVariantSelection\": {\n>                \"showCounts\": true,\n>                \"variants\": {\n>                     \"0\": {\n>                          \"key\": \"_tab1\",\n>                          \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant#Expensive\"\n>                     },\n>                     \"1\": {\n>                          \"key\": \"_tab2\",\n>                          \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionPresentationVariant#Cheap\"\n>                     }\n>                }\n>           }\n>      }\n> \n> \n> ```\n\n**`SelectionVariant` without a Qualifier**\n\n> ### Sample Code:  \n> Annotation\n> \n> ```\n> <Annotation Term=\"UI.SelectionVariant\" >\n>      <Record>\n>           <PropertyValue Property=\"Text\" String=\"{@i18n>@Expensive}\">\n>           </PropertyValue>\n>           <PropertyValue Property=\"SelectOptions\">\n>                <Collection>\n>                      <Record Type=\"UI.SelectOptionType\">\n>                           <PropertyValue Property=\"PropertyName\" PropertyPath=\"GrossAmount\" />\n>                           <PropertyValue Property=\"Ranges\">\n>                                <Collection>\n>                                     <Record Type=\"UI.SelectionRangeType\">\n>                                          <PropertyValue Property=\"Sign\" EnumMember=\"UI.SelectionRangeSignType/E\"/>\n>                                          <PropertyValue Property=\"Option\" EnumMember=\"UI.SelectionRangeOptionType/LT\" />\n>                                          <PropertyValue Property=\"Low\" String=\"5000\" />\n>                                     </Record>\n>                                </Collection>\n>                           </PropertyValue>\n>                      </Record>\n>                 </Collection>\n>            </PropertyValue>\n>       </Record>\n> </Annotation>\n> \n> ```\n\n> ### Sample Code:  \n> Manifest Settings\n> \n> ```\n> \"settings\": {\n>      \"smartVariantManagement\": true,\n>      \"quickVariantSelection\": {\n>           \"showCounts\": true,\n>           \"variants\": {\n>                \"0\": {\n>                \"key\": \"_tab1\",\n>                \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant\"\n>                },\n>                \"1\": {\n>                     \"key\": \"_tab2\",\n>                     \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionPresentationVariant#Cheap\"\n>                }\n>           }\n>      }\n> }\n> \n> \n> ```\n\n**`SelectionPresentationVariant` with a Qualifier**\n\n> ### Sample Code:  \n> Annotation\n> \n> ```xml\n> <Annotation Term=\"UI.SelectionPresentationVariant\"Qualifier=\"Cheap\">\n>      <Record>\n>           <PropertyValue Property=\"Text\" String=\"{@i18n>@Cheap}\">\n>           </PropertyValue>\n>           <PropertyValue Property=\"SelectionVariant\">\n>                <Record>\n>                     <PropertyValue Property=\"Text\" String=\"Cheap\">\n>                     </PropertyValue>\n>                     <PropertyValue Property=\"SelectOptions\">\n>                          <Collection>\n>                               <Record Type=\"UI.SelectOptionType\">\n>                                    <PropertyValue Property=\"PropertyName\"\n>                                                   PropertyPath=\"GrossAmount\" />\n>                                    <PropertyValue Property=\"Ranges\">\n>                                         <Collection>\n>                                              <Record Type=\"UI.SelectionRangeType\">\n>                                                   <PropertyValue Property=\"Option\"\n>                                                                  EnumMember=\"UI.SelectionRangeOptionType/LT\" />\n>                                                   <PropertyValue Property=\"Low\" String=\"5000\" />\n>                                              </Record>\n>                                         </Collection>\n>                                    </PropertyValue>\n>                               </Record>\n>                          </Collection>\n>                     </PropertyValue>\n>                </Record>\n>           </PropertyValue>\n>           <PropertyValue Property=\"PresentationVariant\">\n>                <Record>\n>                     <PropertyValue Property=\"Visualizations\">\n>                          <Collection>\n>                               <AnnotationPath>@UI.LineItem#Reduced</AnnotationPath>\n>                          </Collection>\n>                     </PropertyValue>\n>                     <PropertyValue Property=\"SortOrder\">\n>                          <Collection>\n>                               <Record>\n>                                    <PropertyValue Property=\"Property\"\n>                                                   PropertyPath=\"GrossAmount\" />\n>                                    <PropertyValue Property=\"Descending\" Bool=\"false\" />\n>                               </Record>\n>                          </Collection>\n>                     </PropertyValue>\n>                </Record>\n>           </PropertyValue>\n>      </Record>\n> </Annotation>\n> \n> ```\n\n> ### Sample Code:  \n> Manifest Settings\n> \n> ```\n> \"settings\": {\n>      \"smartVariantManagement\": true,\n>      \"quickVariantSelection\": {\n>           \"showCounts\": true,\n>           \"variants\": {\n>                \"0\": {\n>                     \"key\": \"_tab1\",\n>                     \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant#Expensive\"\n>                },\n>                \"1\": {\n>                     \"key\": \"_tab2\",\n>                     \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionPresentationVariant#Cheap\"\n>                }\n>           }\n>      }\n> }\n> \n> \n> ```\n\n**`SelectionPresentationVariant` without a Qualifier**\n\n> ### Sample Code:  \n> Annotation\n> \n> ```\n> <Annotation Term=\"UI.SelectionPresentationVariant\">\n>      <Record>\n>           <PropertyValue Property=\"Text\" String=\"{@i18n>@Cheap}\">\n>           </PropertyValue>\n>           <PropertyValue Property=\"SelectionVariant\">\n>                <Record>\n>                     <PropertyValue Property=\"Text\" String=\"Cheap\">\n>                     </PropertyValue>\n>                     <PropertyValue Property=\"SelectOptions\">\n>                          <Collection>\n>                               <Record Type=\"UI.SelectOptionType\">\n>                                    <PropertyValue Property=\"PropertyName\"\n>                                                   PropertyPath=\"GrossAmount\" />\n>                                    <PropertyValue Property=\"Ranges\">\n>                                         <Collection>\n>                                              <Record Type=\"UI.SelectionRangeType\">\n>                                                   <PropertyValue Property=\"Option\"\n>                                                                  EnumMember=\"UI.SelectionRangeOptionType/LT\" />\n>                                                   <PropertyValue Property=\"Low\" String=\"5000\" />\n>                                              </Record>\n>                                         </Collection>\n>                                    </PropertyValue>\n>                               </Record>\n>                          </Collection>\n>                     </PropertyValue>\n>                </Record>\n>           </PropertyValue>\n>           <PropertyValue Property=\"PresentationVariant\">\n>                <Record>\n>                     <PropertyValue Property=\"Visualizations\">\n>                          <Collection>\n>                               <AnnotationPath>@UI.LineItem#Reduced</AnnotationPath>\n>                          </Collection>\n>                     </PropertyValue>\n>                     <PropertyValue Property=\"SortOrder\">\n>                          <Collection>\n>                               <Record>\n>                                    <PropertyValue Property=\"Property\"\n>                                                   PropertyPath=\"GrossAmount\" />\n>                                    <PropertyValue Property=\"Descending\" Bool=\"false\" />\n>                               </Record>\n>                          </Collection>\n>                     </PropertyValue>\n>                </Record>\n>           </PropertyValue>\n>      </Record>\n> </Annotation>\n> \n> ```\n\n> ### Sample Code:  \n> Manifest Settings\n> \n> ```\n> \"settings\": {\n>      \"smartVariantManagement\": true,\n>      \"quickVariantSelection\": {\n>           \"showCounts\": true,\n>           \"variants\": {\n>                \"0\": {\n>                     \"key\": \"_tab1\",\n>                     \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant\"\n>                     },\n>                \"1\": {\n>                     \"key\": \"_tab2\",\n>                     \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionPresentationVariant\"\n>                     }\n>           }\n>      }\n> }\n> \n> \n> ```\n\n<a name=\"task_dfp_z5x_cmb\"/>\n\n<!-- task\\_dfp\\_z5x\\_cmb -->\n\n## Additional Features in SAP Fiori Elements for OData V4\n\n\n\n<a name=\"task_dfp_z5x_cmb__context_pg4_gvx_cmb\"/>\n\n## Context\n\nTo define multiple views using single table mode, perform the following steps:\n\n\n\n<a name=\"task_dfp_z5x_cmb__steps_qg4_gvx_cmb\"/>\n\n## Procedure\n\n1.  Add `SelectionVariants` to your annotations file.\n\n    > ### Sample Code:  \n    > XML Annotation\n    > \n    > ```xml\n    > <Annotations Target=\"com.c_salesordermanage_sd.SalesOrderManage\">\n    >      <Annotation Term=\"UI.SelectionVariant\" Qualifier=\"Completed\">\n    >           <Record Type=\"UI.SelectionVariantType\">\n    >                <PropertyValue Property=\"SelectOptions\">\n    >                     <Collection>\n    >                          <Record Type=\"UI.SelectOptionType\">\n    >                               <PropertyValue Property=\"PropertyName\" PropertyPath=\"OverallSDProcessStatus\" />\n    >                               <PropertyValue Property=\"Ranges\">\n    >                                    <Collection>\n    >                                         <Record Type=\"UI.SelectionRangeType\">\n    >                                              <PropertyValue Property=\"Option\" EnumMember=\"UI.SelectionRangeOptionType/BT\" />\n    >                                              <PropertyValue Property=\"Low\" String=\"A\" />\n    >                                              <PropertyValue Property=\"High\" String=\"D\" />\n    >                                         </Record>\n    >                                         <Record Type=\"UI.SelectionRangeType\">\n    >                                              <PropertyValue Property=\"Option\" EnumMember=\"UI.SelectionRangeOptionType/BT\" />\n    >                                              <PropertyValue Property=\"Low\" String=\"B\" />\n    >                                              <PropertyValue Property=\"High\" String=\"C\" />\n    >                                         </Record>\n    >                                    </Collection>\n    >                               </PropertyValue>\n    >                          </Record>\n    >                     </Collection>\n    >                </PropertyValue>\n    >                <PropertyValue Property=\"Text\" String=\"completed (2 Ranges)\" />\n    >           </Record>\n    >      </Annotation>\n    >      <Annotation Term=\"UI.SelectionVariant\" Qualifier=\"InProcess\">\n    >           <Record Type=\"UI.SelectionVariantType\">\n    >                <PropertyValue Property=\"SelectOptions\">\n    >                     <Collection>\n    >                          <Record Type=\"UI.SelectOptionType\">\n    >                               <PropertyValue Property=\"PropertyName\" PropertyPath=\"OverallSDProcessStatus\" />\n    >                               <PropertyValue Property=\"Ranges\">\n    >                                    <Collection>\n    >                                         <Record Type=\"UI.SelectionRangeType\">\n    >                                              <PropertyValue Property=\"Option\" EnumMember=\"UI.SelectionRangeOptionType/EQ\" />\n    >                                              <PropertyValue Property=\"Low\" String=\"B\" />\n    >                                         </Record>\n    >                                    </Collection>\n    >                               </PropertyValue>\n    >                          </Record>\n    >                     </Collection>\n    >                </PropertyValue>\n    >                <PropertyValue Property=\"Text\" String=\"In Process\" />\n    >           </Record>\n    >      </Annotation>\n    > </Annotations>\n    > ```\n\n    > ### Sample Code:  \n    > ABAP CDS Annotation\n    > \n    > ```\n    > \n    > @UI.SelectionVariant: [\n    >   {\n    >     text: 'completed (2 Ranges)',\n    >     qualifier: 'Completed'\n    >   },\n    >   {\n    >     text: 'In Process',\n    >     qualifier: 'InProcess'\n    >   }\n    > ]\n    > annotate view SALESORDERMANAGE with {\n    > \n    > }\n    > ```\n\n    > ### Sample Code:  \n    > CAP CDS Annotation\n    > \n    > ```\n    > annotate com.c_salesordermanage_sd.SalesOrderManage with @(\n    >   UI.SelectionVariant #Completed : {\n    >     $Type : 'UI.SelectionVariantType',\n    >     SelectOptions : [\n    >         {\n    >             $Type : 'UI.SelectOptionType',\n    >             PropertyName : OverallSDProcessStatus,\n    >             Ranges : [\n    >                 {\n    >                     $Type : 'UI.SelectionRangeType',\n    >                     Option : #BT,\n    >                     Low : 'A',\n    >                     High : 'D'\n    >                 },\n    >                 {\n    >                     $Type : 'UI.SelectionRangeType',\n    >                     Option : #BT,\n    >                     Low : 'B',\n    >                     High : 'C'\n    >                 }\n    >             ]\n    >         }\n    >     ],\n    >     Text : 'completed (2 Ranges)'\n    >   },\n    >   UI.SelectionVariant #InProcess : {\n    >     $Type : 'UI.SelectionVariantType',\n    >     SelectOptions : [\n    >         {\n    >             $Type : 'UI.SelectOptionType',\n    >             PropertyName : OverallSDProcessStatus,\n    >             Ranges : [\n    >                 {\n    >                     $Type : 'UI.SelectionRangeType',\n    >                     Option : #EQ,\n    >                     Low : 'B'\n    >                 }\n    >             ]\n    >         }\n    >     ],\n    >     Text : 'In Process'\n    >   },\n    > );\n    > \n    > ```\n\n    > ### Note:  \n    > For the `SelectionVariant`, the following applies:\n    > \n    > -   The `FilterExpression` of the `SelectionVariantType` is not supported.\n    > \n    > -   The following `SelectionRangeOptionTypes` are supported without any wildcards, for example, \\*, ?, â€¦:\n    > \n    >     -   EQ: Equal to\n    > \n    >     -   BT: Between\n    > \n    >     -   LE: Less than or equal to\n    > \n    >     -   GE: Greater than or equal to\n    > \n    >     -   NE: Not equal to\n    > \n    >     -   GT: Greater than\n    > \n    >     -   LT: Less than\n    > \n    > \n    > \n    > For the `PresentationVariant`, `SortOrders` is supported.\n\n2.  Extend the `manifest.json` to switch on the multiple view feature and link to the variants you have added to your annotations. You do this in the list report settings section under *routing* \\> *targets*. In the `LineItem` control configuration, use `quickVariantSelection` for single table mode.\n\n    -   The `paths` array contains a set of entries that point to the variants defined in the annotations.\n\n    -   For each entry under `paths` \\(for example, lines 15-24\\), define an `annotationPath` for a specific variant.\n\n    -   For performance reasons, by default, no counts are displayed in the `SegmentedButton` items. To enable counts, you have the option of adding an entry `showCounts: true` under `quickVariantSelection`. However, consider that additional `$count` requests can impact the performance.\n\n    -   You can hide the title to show only the segmented buttons. To do so, use the `hideTableTitle` key. Enable this only if the title of your selection variants are explicit enough.\n\n\n    > ### Sample Code:  \n    > `manifest.json`\n    > \n    > ```\n    > 1\"SalesOrderManageList\": {\n    > 2   \"type\": \"Component\",\n    > 3   \"id\": \"SalesOrderManageList\",\n    > 4   \"name\": \"sap.fe.templates.ListReport\",\n    > 5   \"options\": {\n    > 6      \"settings\": {\n    > 7         \"contextPath\": \"/SalesOrderManage\",\n    > 8         \"controlConfiguration\": {\n    > 9            \"@com.sap.vocabularies.UI.v1.LineItem\": {\n    > 10               \"tableSettings\": {\n    > 11                  \"type\": \"ResponsiveTable\",\n    > 12                  \"quickVariantSelection\": {\n    > 13                     \"paths\": [\n    > 14                        {\n    > 15                           \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant#Open\"\n    > 16                        },\n    > 17                        {\n    > 18                           \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant#Completed\"\n    > 19                        },\n    > 20                        {\n    > 21                           \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant#NotRelevant\"\n    > 22                        },\n    > 23                        {\n    > 24                           \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant#InProcess\"\n    > 25                        }\n    > 26                     ],\n    > 27                     \"hideTableTitle\": true,\n    > 28                     \"showCounts\": true\n    > 29                  }\n    > 30               }\n    > 31            }\n    > 32         },\n    > 33         ...\n    > 34  }}}\n    > ```\n\n    > ### Note:  \n    > If `showCounts` is set to `true`, the segmented buttons show the count next to the button label and no count is shown next to the title of the table.\n    > \n    > If `showCounts` is set to `false`, no count is shown next to the button label, nor next to the title of the table.\n\n      \n      \n    **Multiple Views on a List Report Table - Single Table Mode**\n\n    ![](images/Multiple_Views_on_a_List_Report_Table_-_Single_Table_Mode_975a002.png \"Multiple Views on a List Report Table - Single Table Mode\")\n\n\n**Related Information**  \n\n\n[Adding Segmented Buttons to a Table Toolbar](adding-segmented-buttons-to-a-table-toolbar-5532c89.md \"You can add segmented buttons to the toolbar to enable switching between the table content using a selection variant annotation.\")\n\n",
  "excerpt": "<!-- loio0d390fed360c4c58a0f0619338938de1 --> Defining Multiple Views on a List Report Table - Single Table Mode You can define multiple views of a table and display them in single table mode. Users c...",
  "wordCount": 2069,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}