{
  "id": "sapui5-docs-06-sap-fiori-elements-adding-a-custom-viewextension-to-the-mass-edit-dialog-fd26fee-md",
  "title": "Adding a Custom ViewExtension to the Mass Edit Dialog",
  "category": "ui5-framework",
  "path": "docs/06_SAP_Fiori_Elements/adding-a-custom-viewextension-to-the-mass-edit-dialog-fd26fee.md",
  "lastModified": "2025-09-01T18:17:10.574Z",
  "tags": [
    "ui5-framework",
    "md",
    "Adding",
    "Custom",
    "ViewExtension",
    "the",
    "Mass",
    "Edit",
    "Dialog"
  ],
  "headers": [
    "Adding a Custom ViewExtension to the Mass Edit Dialog",
    "Additional Features in SAP Fiori Elements for OData V2",
    "Additional Features in SAP Fiori Elements for OData V4"
  ],
  "content": "<!-- loiofd26feeff61e4b6194ad48c579bac17e -->\n\n# Adding a Custom ViewExtension to the Mass Edit Dialog\n\nYou can add a custom `ViewExtension` to the mass edit dialog by defining it in the manifest.\n\n\n\n<a name=\"loiofd26feeff61e4b6194ad48c579bac17e__section_rwz_4md_bdc\"/>\n\n## Additional Features in SAP Fiori Elements for OData V2\n\n> ### Note:  \n> -   Controls in custom extensions must be surrounded by a `GroupElement`.\n> \n> -   The application developer must provide stable IDs for the custom input fields. Handle input values using `beforeMultiEditSaveExtension`.\n\nIn `ViewExtension`, you can add custom controls inside a `GroupElement` such as a Rating bar, Calendar, and so on. You can add `MultiEditFieldsExtension` under the `manifest.json` file in the extended `sap.ui5`section. `ViewExtension` is supported in both the `annotationPath` and `visibleTable` column scenarios.\n\n> ### Sample Code:  \n> `manifest.json`\n> \n> ```\n> \"sap.ui5\": {\n>     \"extends\": {\n>         \"extensions\": {\n>             \"sap.ui.viewExtensions\":{\n>                 \"sap.suite.ui.generic.template.ListReport.view.ListReport\":{\n>                     \"MultiEditFieldsExtension|STTA_C_SO_SalesOrder_ND\": {  // MultiEditFieldsExtension + Entity\n>                         \"className\": \"sap.ui.core.Fragment\",\n>                         \"fragmentName\": \"STTA_SO_ND.ext.fragments.MultiEditFieldsExtension\",\n>                         \"type\": \"XML\"\n>                     }\n>                 }\n>             }\n>         }\n>     }\n> }\n> \n> ```\n\n> ### Sample Code:  \n> Mass Edit Dialog `ViewExtension` with `quickVariantSelectionX`\n> \n> ```\n> \"sap.ui5\": {\n>     \"extends\": {\n>         \"extensions\": {\n>             \"sap.ui.viewExtensions\":{\n>                 \"sap.suite.ui.generic.template.ListReport.view.ListReport\":{\n>                     \"MultiEditFieldsExtension|C_STTA_SalesOrder_WD_20|1\": {  // Key identifier need to be added at the end along with pipe.\n>                         \"className\": \"sap.ui.core.Fragment\",\n>                         \"fragmentName\": \"ManageSalesOrderWithTableTabs.ext.fragments.MultiEditFieldsExtension\",\n>                         \"type\": \"XML\"\n>                         }\n>                     }\n>                 }\n>             }\n>         }\n>     }\n> }\n> \"sap.ui.generic.app\": {\n>     \"pages\": [{\n>         \"entitySet\": \" C_STTA_SalesOrder_WD_20\",\n>         \"component\": {\n>             \"name\": \"sap.suite.ui.generic.template.ListReport\",\n>             \"list\": true,\n>             \"settings\": {\n>                 \"quickVariantSelectionX\": {\n>                     \"showCounts\": true,\n>                     \"variants\": {\n>                         \"0\": {\n>                             \"key\": \"1\", // <-- key identifier  \n>                             \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant#Expensive\",\n>                             \"tableSettings\": {\n>                                 \"multiEdit\":{\n>                                     \"enabled\":true\n>                                 },\n>                             }\n>                         },\n>                     }\n>                 }\n>             }\n>         }\n>     }]\n> }\n> \n> ```\n> \n> > ### Sample Code:  \n> > `MultiEditFieldsExtension` fragment file\n> > \n> > ```\n> > <core:FragmentDefinition xmlns:sfo=\"sap.ui.comp.smartform\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\">\n> >     <sfo:GroupElement>\n> >         <Label text=\"Rating Bar\" labelFor=\"RI_default\"/>\n> >         <RatingIndicator id=\"RI_default\" maxValue=\"5\" class=\"sapUiSmallMarginBottom\" value=\"4\"/>\n> >     </sfo:GroupElement>\n> > </core:FragmentDefinition>\n> > \n> > ```\n\n\n\n<a name=\"loiofd26feeff61e4b6194ad48c579bac17e__section_jyd_tmd_bdc\"/>\n\n## Additional Features in SAP Fiori Elements for OData V4\n\nYou can add a custom fragment to the *Mass Edit* dialog by defining the `customFragment` property in the `manifest.json` file.\n\n> ### Note:  \n> -   Controls in custom extensions must be surrounded by a `FormContainer`.\n> \n> -   You must provide stable IDs for the custom input fields.\n\n> ### Sample Code:  \n> `manifest.json`\n> \n> ```\n> \"options\": {\n>     \"settings\": {\n>         \"contextPath\": \"/RootEntity\",\n>         \"variantManagement\": \"Control\",\n>         \"controlConfiguration\": {\n>             \"_Child/@com.sap.vocabularies.UI.v1.LineItem\": {\n>                 \"tableSettings\": {\n>                     \"type\": \"GridTable\",\n>                     \"enableMassEdit\":{\n>                         \"customFragment\": \"sap.fe.core.fpmExplorer.ext.fragment.customMassEdit\"\n>                     }\n>                 }\n>             }\n>         }\n>     }\n> }\n> ```\n\n> ### Sample Code:  \n> ```\n> <core:FragmentDefinition xmlns:form=\"sap.ui.layout.form\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\">\n>     <form:FormContainer>\n>         <form:formElements>\n>             <form:FormElement label=\"Execute with the custom Save\">\n>                 <form:fields>\n>                     <CheckBox id=\"myCheckBox\"/>\n>                 </form:fields>\n>             </form:FormElement>\n>         </form:formElements>\n>     </form:FormContainer>\n> </core:FragmentDefinition>\n> ```\n\nNext, implement the `customMassEditSave` function within the list report or object page controller extension. For more information, see [Replacing the Standard Save Functionality in the Mass Edit Dialog](replacing-the-standard-save-functionality-in-the-mass-edit-dialog-492d8a9.md).\n\n> ### Sample Code:  \n> ```\n> sap.ui.define(\n>     [\n>         \"sap/ui/core/mvc/ControllerExtension\",\n>         \"sap/m/MessageToast\",\n>         \"sap/ui/core/Core\"\n>     ],\n>     function (ControllerExtension, Filter, FilterOperator, IllustratedMessage, IllustratedMessageType, MessageToast, Core) {\n>         \"use strict\";\n> \n>         return ControllerExtension.extend(\"sap.fe.core.fpmExplorer.OPExtend\", {\n>             override: {\n>                 editFlow: {\n>                     customMassEditSave: async function (aParameters) {\n>                         // aParameters.aContexts: array containing the selected contexts for the mass edit\n>                         // aParameters.oUpdateData: a dictionary containing the propertyPath and its updated value\n>                         \n>                         //Retrieve the control within the custom fragment\n>                         const isSelected = Core.byId(\"customMassEdit--myCheckBox\").getSelected();\n> \n>                         //Execute the custom save action if selected\n>                         if (isSelected){\n>                             await this.base.editFlow\n>                             .invokeAction(\"Service.customUpdateAction\", {\n>                                 contexts: aParameters.aContexts,\n>                                 parameterValues: aParameters.oUpdateData\n>                             })\n>                             .catch(function (e){\n>                                 MessageToast.show(\"Custom save failed\");\n>                             });\n>                         }\n>                         //Do not execute the default mass-edit if custom save was selected\n>                         return isSelected;\n>                     }\n>                 }\n>             }\n>         });\n>     }\n> );\n> ```\n\n**Related Information**  \n\n\n[Enabling Editing Using a Dialog \\(Mass Edit\\) in the List Report](enabling-editing-using-a-dialog-mass-edit-in-the-list-report-7cc4f04.md \"You can edit a single object or multiple objects using a dialog in the list report page.\")\n\n",
  "excerpt": "<!-- loiofd26feeff61e4b6194ad48c579bac17e --> Adding a Custom ViewExtension to the Mass Edit Dialog You can add a custom ViewExtension to the mass edit dialog by defining it in the manifest. <a name=\"...",
  "wordCount": 721,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}