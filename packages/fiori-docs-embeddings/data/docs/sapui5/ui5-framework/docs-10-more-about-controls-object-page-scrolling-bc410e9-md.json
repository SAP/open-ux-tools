{
  "id": "sapui5-docs-10-more-about-controls-object-page-scrolling-bc410e9-md",
  "title": "Object Page Scrolling",
  "category": "ui5-framework",
  "path": "docs/10_More_About_Controls/object-page-scrolling-bc410e9.md",
  "lastModified": "2025-09-01T18:17:10.697Z",
  "tags": [
    "ui5-framework",
    "md",
    "Object",
    "Page",
    "Scrolling"
  ],
  "headers": [
    "Object Page Scrolling",
    "General Scrolling Behavior",
    "Selected Section"
  ],
  "content": "<!-- loiobc410e94e46540efa02857e15aae583f -->\n\n# Object Page Scrolling\n\nThe object page offers different ways to handle specific scrolling scenarios.\n\n\n\n## General Scrolling Behavior\n\nBy default, the `headerContent` of the `ObjectPage` snaps to the `headerTitle` when scrolling a longer section. Some of the contents of the `headerContent` move to the `headerTitle` and thus always remain visible. You can see an example of this behavior in the screenshot below.\n\n  \n  \n**Object Page Header: Expanded \\(left\\) / Snapped \\(right\\)**\n\n![](images/Object_Page_Header_Expanded_vs_Snapped_1106798.png \"Object Page Header: Expanded (left) / Snapped (right)\")\n\nThis behavior can be altered. Setting the property `alwaysShowContentHeader` to `true` will prevent the `headerContent` from snapping.\n\n> ### Note:  \n> This property only affects desktop environments.\n\n\n\n## Selected Section\n\nAs the user scrolls through the sections, the currently scrolled section is internally set to the `selectedSection` association of `ObjectPageLayout`. The app can also modify its value:\n\n-   The app can set which section the page should scroll to upon initial display:\n\n    ```xml\n     <ObjectPageLayout id=\"ObjectPageLayout\" selectedSection=\"mySectionId\">\n            <sections>\n                <ObjectPageSection title=\"Payroll\" id=\"mySectionId\">\n                    <subSections>\n                        <ObjectPageSubSection title=\"sub payroll title\">\n                            <blocks>\n                                <myNameSpace:myBlock/>\n                                <myNameSpace:myBlock/>\n                                <myNameSpace:myBlock/>\n                            </blocks>\n                        </ObjectPageSubSection>\n                    </subSections>\n                </ObjectPageSection>\n            </sections>\n        </ObjectPageLayout>\n    ```\n\n-   The app can also change the currently scrolled section at runtime:\n\n    ```js\n    //navigate to a specific section on open\n    this.oObjectPageLayout = this.getView().byId(\"ObjectPageLayout\");\n    this.oTargetSection = this.getView().byId(\"empl\");\n    this.oObjectPageLayout.setSelectedSection(this.oTargetSection)\n    ```\n\n\n**Related Information**  \n\n\n[Sample: `sap.uxap.sample.ObjectPageState`](https://ui5.sap.com/#/entity/sap.uxap.ObjectPageLayout/sample/sap.uxap.sample.ObjectPageState)\n\n",
  "excerpt": "<!-- loiobc410e94e46540efa02857e15aae583f --> Object Page Scrolling The object page offers different ways to handle specific scrolling scenarios. General Scrolling Behavior By default, the headerConte...",
  "wordCount": 212,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}