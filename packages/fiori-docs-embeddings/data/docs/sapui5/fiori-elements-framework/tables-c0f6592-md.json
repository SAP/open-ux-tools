{
  "id": "sapui5-tables-c0f6592-md",
  "title": "Tables",
  "category": "fiori-elements-framework",
  "path": "tables-c0f6592.md",
  "lastModified": "2025-09-29T10:06:38.864Z",
  "tags": [
    "fiori-elements-framework",
    "md",
    "tables",
    "c0f6592"
  ],
  "headers": [
    "Tables",
    "Default Selection Mode for Rows in Tables",
    "Context Menu in Tables",
    "Showing or Hiding Columns Based on Importance and Available Screen Size in Responsive Tables",
    "Hiding Table Columns Using the `UI.Hidden` Annotation",
    "Searching for Rows in a Table on an Object Page",
    "Defining the Column Width Using an Annotation",
    "Copying Multiple Rows and Range Selections",
    "Optimizing Data Loading Using the `scrollThreshold` Property",
    "Additional Features in SAP Fiori Elements for OData V2",
    "Smart Multi-Input Control",
    "Vertical Alignment of Responsive Tables",
    "Showing or Hiding the *Copy to Clipboard* Button",
    "Hiding Columns Using the `UI.Hidden` Annotation on an Object Page",
    "Context Menu in Tables",
    "Configuring the `threshold` Property to Preload Additional Rows",
    "Configuring the `scrollThreshold` Property for Dynamic Data Loading",
    "Additional Features in SAP Fiori Elements for OData V4",
    "Excluding Fields from Table Personalization",
    "Handling of Search Restrictions",
    "Freezing Table Columns",
    "Calculating the Column Width",
    "Showing or Hiding the *Copy to Clipboard* Button",
    "Configuring the `scrollThreshold` Property for Dynamic Data Loading"
  ],
  "content": "<!-- loioc0f6592a592e47f9bb6d09900de47412 -->\n\n# Tables\n\nSAP Fiori elements supports several table types.\n\nThe following table types are available:\n\n-   Responsive tables\n\n    Responsiveness is optimized for mobile use. Line items can be viewed with no scrolling or with only vertical scrolling, regardless of the display width.\n\n-   Grid table\n\n    This is a desktop-centric table type that allows scrolling in both directions. It can handle a large number of items and columns.\n\n-   Tree table\n\n    This table type provides a comprehensive set of features to display hierarchical data. For more information, see [Tree Tables](tree-tables-7cf7a31.md).\n\n-   Analytical table\n\n    This table type contains data structured in rows and columns. It provides several powerful options for working with data, including advanced grouping and aggregations.\n\n    In contrast to other tables, the analytical data binding used by the analytical table automatically displays an aggregated number in a cell.\n\n\nThe table representation that suits the service is chosen by default during the app creation. The responsive table is set as the default table type, but the analytical table is selected as the default table type for analytical services.\n\nYou can change the default table type to suit your needs.\n\nFor more information about the table types, see [Tables: Which One Should I Choose?](../10_More_About_Controls/tables-which-one-should-i-choose-148892f.md). For more information about defining the `UI.LineItem` annotation that describes the table, see [Defining Line Items](defining-line-items-f0e1e17.md).\n\nThe table control uses page mechanisms while loading data. It contains the following:\n\n-   Layout management\n-   A toolbar with actions rendered as text icons, for example, *Personalize*.\n\n-   Application-specific actions rendered as text buttons, for example, *Copy*, *Approve*, and *Delete*.\n\n-   An indication of draft status \\(only for list report tables\\)\n\n-   A display of items locked by other users \\(only for list report tables\\)\n\n\n\n\n<a name=\"loioc0f6592a592e47f9bb6d09900de47412__section_gqq_5xd_x1c\"/>\n\n## Default Selection Mode for Rows in Tables\n\nBy default, the table generated by the template uses the single-selection mode. End users select an item from the table to trigger a custom action, such as *Validate*, which then returns the results for the selected item.\n\nApplications can change the single-selection mode to multi-selection mode. For more information, see [Enabling Multiple Selection in Tables](enabling-multiple-selection-in-tables-116b5d8.md).\n\n\n\n<a name=\"loioc0f6592a592e47f9bb6d09900de47412__section_pcz_qxd_x1c\"/>\n\n## Context Menu in Tables\n\nTables in list report, object page, and analytical list page applications support a context menu. The context menu is available as a default option and appears only when end users perform a right-click on a row or a set of selected rows. This menu displays all context-dependent actions that appear on the table toolbar. Additionally, an option to open the selected row or rows in a new browser tab or window is available within the menu. Inline actions are not included as part of context menu actions.\n\n> ### Note:  \n> When the table is configured to navigate to an object page in edit mode by setting `openInEditMode` to `true`, the *Open in New Tab* option is not shown in the context menu. For more information, see [Navigation to an Object Page in Edit Mode](navigation-to-an-object-page-in-edit-mode-8665847.md).\n\nWhen implementing custom actions, you can use the `extensionAPI.getSelectedContexts` API to identify the rows associated with the context menu.\n\n> ### Note:  \n> You must use the `extensionAPI.getSelectedContexts` API only within synchronous code blocks. For more information, see [Defining Custom Actions](defining-custom-actions-c3de5c0.md).\n\n\n\n<a name=\"loioc0f6592a592e47f9bb6d09900de47412__section_kgk_phh_wpb\"/>\n\n## Showing or Hiding Columns Based on Importance and Available Screen Size in Responsive Tables\n\nYou can show or hide columns of the list report and object page tables depending on the screen width for situations like the following:\n\n-   The browser window is small.\n-   The application is running on a devise with a smaller screen.\n-   You are using the flexible column layout.\n\nThe value of the `UI.Importance` annotation for the field determines which columns are hidden or moved when the screen size is reduced.\n\nYou can use the `UI.Importance` annotation to set the importance for table columns as follows:\n\n-   `High`: Columns with a `High` importance setting are visible on all screen sizes. When the screen size is reduced, the columns shift to a pop-in area but remain visible on the screen.\n\n-   `Low`: Columns with a `Low` importance setting are hidden on the screen when the screen size is reduced.\n\n-   `None` \\(default\\) and `Medium`: Columns with `None` \\(default\\) and `Medium` importance settings are hidden automatically when the screen size is reduced.\n\n\nFor columns with `Low`, `None`, and `Medium` settings, the *Show More per Row* / *Show Less per Row* buttons appear in the table toolbar only if there's at least one hidden column. When the end user clicks the *Show More per Row* button, the hidden column information appears as a text in the pop-in area. To hide the pop-in area, click the *Show Less per Row* button.\n\n> ### Note:  \n> -   Columns that have no importance setting \\(`None`\\) but containing a semantic key are considered of `High` importance \\(also when used in a `FieldGroup`\\).\n> \n> -   Columns with a `Low` importance setting are hidden first on smaller screens, followed by columns with the settings `None` \\(default\\) and `Medium`.\n\n> ### Sample Code:  \n> XML annotation\n> \n> ```xml\n> <Annotations Target=\"STTA_PROD_MAN.STTA_C_MP_ProductSalesPriceType\">\n>      <Annotation Term=\"UI.LineItem\">\n>           <Collection>\n>                <Record Type=\"UI.DataField\">\n>                     <PropertyValue Property=\"Value\" Path=\"PriceDay\" />\n>                     <Annotation Term=\"UI.Importance\" EnumMember=\"UI.ImportanceType/High\" />\n>                </Record>\n>                <Record Type=\"UI.DataField\">\n>                      <PropertyValue Property=\"Value\" Path=\"TargetPrice\" />\n>                      <!--This will be treated with default importance \"None\" which is same as \"Medium\"-->\n>                </Record>\n>                <Record Type=\"UI.DataField\">\n>                      <PropertyValue Property=\"Value\" Path=\"DiscountPriceTarget\" />\n>                      <Annotation Term=\"UI.Importance\" EnumMember=\"UI.ImportanceType/Low\" />\n>                </Record>\n>           </Collection>\n>      </Annotation>\n> </Annotations>\n> ```\n\n> ### Note:  \n> Starting from SAPUI5 1.87, SAP Fiori elements automatically calculates the default column width and provides an option to resize the column width in responsive tables. This is the default behavior. Having fewer columns in a table increases the free space available on the right side of the table.\n\n\n\n<a name=\"loioc0f6592a592e47f9bb6d09900de47412__section_zln_qlc_s1c\"/>\n\n## Hiding Table Columns Using the `UI.Hidden` Annotation\n\nYou can hide the table columns or specific fields within the table column in an analytical list page, list report, and object page. To hide the entire table column, set the `UI.Hidden` annotation value for any field as static `true`. To hide a specific field of a table column, set the `UI.Hidden` annotation value as a path-based value, and the fields for which `UI.Hidden` evaluates to `true` are hidden. For more information, see [Hiding Features Using the UI.Hidden Annotation](hiding-features-using-the-ui-hidden-annotation-ca00ee4.md).\n\n> ### Note:  \n> If the path-based value for `UI.Hidden` evaluates to `true` for all rows, then only the fields are hidden and not the entire column.\n\n  \n  \n**DataField Records in Tables**\n\n![](images/DataFieldRecords1_bd2e691.png \"DataField Records in Tables\")\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```\n> <Annotation Term=\"UI.LineItem\">\n>     <Collection>\n>         <Record Type=\"UI.DataFieldForAnnotation\">\n>             <PropertyValue Property=\"Target\" AnnotationPath=\"@UI.FieldGroup#multipleActionFields\" />\n>             <PropertyValue Property=\"Label\" String=\"Sold-To Party\" />\n>             <Annotation Term=\"UI.Hidden\" Path=\"Delivered\" />\n>         </Record>\n>     </Collection>\n> </Annotation>\n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> ```\n> @UI.lineItem: [\n>   {\n>     hidden: true,\n>     label: 'Sold-To Party',\n>     type: #AS_FIELDGROUP, \n>     hidden: #('Delivered'),\n>     valueQualifier: ' multipleActionFields'\n>   }\n> ]\n> TEST;\n> ```\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> LineItem                                        : {\n>         $value             : [\n>         {\n>             $Type             : 'UI.DataFieldForAnnotation',\n>             Target            : '@UI.FieldGroup#multipleActionFields',\n>             Label             : 'Sold-To Party',\n>             ![@UI.Hidden] : Delivered\n>         }\n> ]\n> ```\n\n\n\n<a name=\"loioc0f6592a592e47f9bb6d09900de47412__section_u3p_z5q_sqb\"/>\n\n## Searching for Rows in a Table on an Object Page\n\nIn responsive, grid, and analytical tables, if the table is searchable \\(that is, if an entity set is used for which `sap:searchable` is set as `true`\\), a search field is displayed. You can search for particular rows in the table.\n\n\n\n<a name=\"loioc0f6592a592e47f9bb6d09900de47412__section_uzk_54j_x4b\"/>\n\n## Defining the Column Width Using an Annotation\n\nSAP Fiori elements automatically calculates the default width of columns containing texts based on the `MaxLength` property of the field defined in the metadata. The lower limit is set to 3 rem and the upper limit is set to 20 rem.\n\nTo customize the width of a column defined in a line item, use the UI annotation `com.sap.vocabularies.HTML5.v1.CssDefaults`. For more information, see [Setting the Default Column Width](setting-the-default-column-width-a765253.md).\n\n\n\n<a name=\"loioc0f6592a592e47f9bb6d09900de47412__section_pth_3mb_dzb\"/>\n\n## Copying Multiple Rows and Range Selections\n\nEnd users can copy multiple rows as well as ranges of rows and columns to the clipboard. The selected content \\(rows or ranges\\) can then be pasted to another application such as Microsoft Excel, Microsoft Word, or to another SAP Fiori elements table. Note that the copying from a table functionality doesn't split the content for fields that contain an amount together with a unit of measure or currency, as well as for fields that contain a value and its description. After copying, end users need to adapt such content before pasting it to an SAP Fiori elements table.\n\n> ### Note:  \n> When using custom columns in SAP Fiori elements for OData V4, the cell content is the properties listed in the `property` array of the custom column definition. For more information, see [Extension Points for Tables](extension-points-for-tables-d525522.md).\n\nTo select a range with the mouse, click and hold while dragging to make a selection. As tables can have cells with editable fields, these fields automatically gain focus upon cell selection. To prevent this, press [CTRL\\] on Microsoft Windows or [CMD\\] on macOS before selecting a cell with the mouse. Keyboard shortcuts are also available as an alternative for cell selection.\n\n\n<table>\n<tr>\n<th valign=\"top\">\n\nKey Combination\n\n</th>\n<th valign=\"top\">\n\nBehavior\n\n</th>\n</tr>\n<tr>\n<td valign=\"top\">\n\n[Space\\]\n\n</td>\n<td valign=\"top\">\n\nSelec ts the cell that the focus is set on. If used inside a selection, removes the selection.\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n[Shift\\] + [Arrow keys\\] \n\n</td>\n<td valign=\"top\">\n\nAdjusts an existing selection. If used outside a selection, creates a new selection.\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n[Shift\\] + [Space\\] \n\n</td>\n<td valign=\"top\">\n\nTransforms the current selection into a row selection, based on the selection mode applied to the table.\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n[Control\\] + [Space\\] \n\n</td>\n<td valign=\"top\">\n\nExpands the selection to all cells in a column \\(up to the range limit\\).\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n[Control\\] + [Shift\\] + [A\\] \n\n</td>\n<td valign=\"top\">\n\nClears the selection.\n\n</td>\n</tr>\n</table>\n\nFor more information about pasting data to tables and the expected format, see [Copying and Pasting from External Applications to Tables](copying-and-pasting-from-external-applications-to-tables-f6a8fd2.md).\n\n\n\n<a name=\"loioc0f6592a592e47f9bb6d09900de47412__section_ygl_t1s_kdc\"/>\n\n## Optimizing Data Loading Using the `scrollThreshold` Property\n\nAs end users scroll within grid tables, tree tables, or analytical tables, the application dynamically loads additional records from the back-end system. By default, it loads 300 additional records while scrolling.\n\nApplication developers can modify this value by configuring the `scrollThreshold` property.\n\nFor analytical tables and tree tables, `scrollThreshold` must be higher than `threshold` to take effect.\n\nFor more information about configuration in OData V2, see the [Configuring the scrollThreshold Property for Dynamic Data Loading](tables-c0f6592.md#loioc0f6592a592e47f9bb6d09900de47412__Configuring_the_scrollThreshold_Property_v2) subsection in the **Additional Features in SAP Fiori elements for OData V2** section of this topic.\n\nFor more information about configuration in OData V4, see the [Configuring the scrollThreshold Property for Dynamic Data Loading](tables-c0f6592.md#loioc0f6592a592e47f9bb6d09900de47412__Configuring_the_scrollThreshold_Property_v4) subsection in the **Additional Features in SAP Fiori elements for OData V4** section of this topic.\n\n\n\n<a name=\"loioc0f6592a592e47f9bb6d09900de47412__section_amq_ynw_xmb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V2\n\n\n\n### Smart Multi-Input Control\n\n[Smart multi-input](../10_More_About_Controls/smart-multi-input-5644169.md) is automatically rendered as a column in responsive and grid tables if a 1:N relationship exists in the association for the given column.\n\nTo configure smart multi-input fields on an object page, see [Using the Multi-Input Field on the Object Page](using-the-multi-input-field-on-the-object-page-04ff5b1.md).\n\n\n\n### Vertical Alignment of Responsive Tables\n\nTo define the vertical alignment for a responsive table, set the `tableColumnVerticalAlignment` manifest property under the settings of `sap.ui.generic.app` to the values `Top`, `Middle`, or `Bottom`.\n\n\n\n### Showing or Hiding the *Copy to Clipboard* Button\n\nBy default, the *Copy to Clipboard* button is displayed in the table toolbar. However, you can also configure the visibility of the *Copy to Clipboard* button by defining the `copy` settings in the `manifest.json` file. If `copy` is set to `true`, the *Copy to Clipboard* button is shown in the table toolbar. If `copy` is set to `false`, the *Copy to Clipboard* button is hidden from the table toolbar.\n\n> ### Sample Code:  \n> Settings for the List Report Page\n> \n> ```json\n> \"sap.ui.generic.app\": {\n>     \"pages\": {\n>         \"ListReport|<EntitySetName>\": {\n>             \"entitySet\": <EntitySetName>,\n>             \"component\": {\n>                 \"name\": \"sap.suite.ui.generic.template.ListReport\",\n>                 \"settings\": {\n>                     \"tableSettings\": {\n>                         \"copy\": false\n>                     }\n>                 }\n>             }\n>         }\n>     }\n> }\n> \n> ```\n\n> ### Sample Code:  \n> Settings for the Analytical List Page\n> \n> ```json\n> \"sap.ui.generic.app\": {\n>     \"pages\": {\n>         \"ListReport|<EntitySetName>\": {\n>             \"entitySet\": <EntitySetName>,\n>             \"component\": {\n>                 \"name\": \"sap.suite.ui.generic.template.AnalyticalListPage\",\n>                 \"settings\": {\n>                     \"tableSettings\": {\n>                         \"copy\": true\n>                     }\n>                 }\n>             }\n>         }\n>     }\n> }\n> \n> ```\n\n> ### Sample Code:  \n> Settings for the Object Page\n> \n> ```json\n> \"sap.ui.generic.app\": {\n>     \"pages\": {\n>         \"ListReport|<EntitySetName\": {\n>             ...\n>             ...\n>             \"pages\": {\n>                 \"ObjectPage|<EntitySetName\": {\n>                     \"entitySet\": \"<EntitySetName\",\n>                     \"component\": {\n>                         \"name\": \"sap.suite.ui.generic.template.ObjectPage\",\n>                         \"settings\": {\n>                             \"sections\": {\n>                                 \"SalesOrderItemsID\": {\n>                                     \"navigationProperty\": <NavigationProperty>,\n>                                     \"entitySet\": <NavigationEntitySetName>,\n>                                     \"tableSettings\": {\n>                                         \"copy\": true\n>                                     }\n>                                 }\n>                             },\n>                             \"tableSettings\": {\n>                                 \"copy\": false\n>                             }\n>                         }\n>                     }\n>                 }\n>             }\n>         }\n>     }\n> }\n> \n> ```\n\n> ### Note:  \n> The `copy` settings defined for a table at the section level have a higher priority than the `copy` settings defined for the table at the object page level.\n\n\n\n### Hiding Columns Using the `UI.Hidden` Annotation on an Object Page\n\nTable columns in the object page can be hidden using the `UI.Hidden` annotation either with a boolean value `true` or with a path referring to the property of the same entity or parent instance. If it points to a property of the parent entity, then the entire column is hidden. In the following example, `to_Product` is the navigation property pointing to the parent entity:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```\n> <Annotation Term=\"UI.LineItem\">\n> \t<Collection>\n> \t\t<Record Type=\"UI.DataField\">\n> \t\t\t<PropertyValue Property=\"Value\" Path=\"SoldToParty\" />\n> \t\t\t<Annotation Term=\"UI.Hidden\" Path=\"to_Product/Delivered\" />\n> \t\t</Record>\n> \t</Collection>\n> </Annotation>\n> ```\n\n> ### Note:  \n> -   You must not use the `UI.Hidden` annotation with a path for columns that support grouping, sorting, or filtering; this can lead to UX inconsistency as these operations are performed in the back end.\n> \n> -   If the path for `UI.Hidden` defined on the table points to a field of its parent entity and it evaluates to `true`, then the entire column is hidden.\n\n\n\n### Context Menu in Tables\n\nThe list report and object page tables have a context menu listing the actions.\n\n> ### Note:  \n> In the following cases, the *Open in New Tab or Window* option isn't available in the context menu:\n> \n> -   The list report or object page extension controller implements the `onListNavigationExtension` method.\n> \n> -   The list report table is configured in direct edit mode. For more information about direct edit mode, see [Navigation to an Object Page in Edit Mode](navigation-to-an-object-page-in-edit-mode-8665847.md).\n\nYou can exclude the custom actions from the context menu by using `excludeFromContextMenu` as shown in the following sample code:\n\n> ### Sample Code:  \n> ```\n> \"sap.ui.controllerExtensions\": {\n>     \"sap.suite.ui.generic.template.ListReport.view.ListReport\": {\n>         \"controllerName\": \"STTA_MP.ext.controller.ListReportExtension\",\n>         \"sap.ui.generic.app\": {\n>             \"STTA_C_MP_Product\": {\n>                 \"EntitySet\": \"STTA_C_MP_Product\",\n>                 \"Actions\": {\n>                     ...\n>                     \"CopyWithNewSupplier\": {\n>                         \"id\": \"CopyWithNewSupplier\",\n>                         \"text\": \"Copy with new Supplier\",\n>                         \"press\": \"onCopyWithNewSupplier\",\n>                         \"excludeFromContextMenu\": true\n>                     }\n>                     ...\n>                 }\n>             }\n>         }\n>     }\n> }\n> ```\n\n\n\n### Configuring the `threshold` Property to Preload Additional Rows\n\nApplication developers can configure the `threshold` property in the `manifest.json` file to specify the number of additional rows that can be preloaded from the back-end system. The specified value is added to the number of visible rows. For example, if `threshold` is set to 100 and there are 10 visible rows, the table loads a total of 110 records. This property applies to actions such as initial loading, sorting, and filtering.\n\n> ### Note:  \n> If `threshold` is set to 0, no additional records are preloaded, and `scrollThreshold` is used instead.\n\nThe following sample code shows how to configure the `threshold` property in list reports, object pages, and analytical list pages:\n\n> ### Sample Code:  \n> List Report\n> \n> ```\n> \"component\": {\n>     \"name\": \"sap.suite.ui.generic.template.ListReport\",\n>     \"list\": true,\n>     \"settings\": {\n>         \"gridTable\": true,\n>         \"tableSettings\": {\n>             \"threshold\": 400\n>         }\n>     }\n> }\n> \n> ```\n\n> ### Sample Code:  \n> Object Page\n> \n> ```\n> \"component\": {\n>     \"name\": \"sap.suite.ui.generic.template.ObjectPage\",\n>     \"settings\": {\n>         \"showRelatedApps\": true,\n>         \"gridTable\": true,\n>         \"editableHeaderContent\": true,\n>         \"showConfirmationOnDraftActivate\": true,\n>         \"tableSettings\": {\n>             \"threshold\": 400\n>         }\n>     }\n> }\n> \n> ```\n\n> ### Sample Code:  \n> Analytical List Page\n> \n> ```\n> \"component\": {\n>     \"name\": \"sap.suite.ui.generic.template.AnalyticalListPage\",\n>     \"list\": true,\n>     \"settings\": {\n>         \"tableSettings\": {\n>             \"type\": \"AnalyticalTable\",\n>             \"multiSelect\": true,\n>             \"selectAll\": false,\n>             \"selectionLimit\": 10,\n>             \"threshold\": 400\n>         }\n>     }\n> }\n> \n> ```\n\nKey users can configure the `threshold` property using the UI adaptation option. For more information, see [Adapting the UI](adapting-the-ui-59bfd31.md).\n\n\n\n### Configuring the `scrollThreshold` Property for Dynamic Data Loading\n\nApplication developers can configure the `scrollThreshold` property in the `manifest.json` file.\n\nThe following sample code shows how to configure it in list reports, object pages, and analytical list pages:\n\n> ### Sample Code:  \n> List Report\n> \n> ```\n> \"component\": {\n>     \"name\": \"sap.suite.ui.generic.template.ListReport\",\n>     \"list\": true,\n>     \"settings\": {\n>         \"gridTable\": true,\n>         \"tableSettings\": {\n>             \"scrollThreshold\": 600\n>         }\n>     }\n> }\n> \n> ```\n\n> ### Sample Code:  \n> Object Page\n> \n> ```\n> \"component\": {\n>     \"name\": \"sap.suite.ui.generic.template.ObjectPage\",\n>     \"settings\": {\n>         \"showRelatedApps\": true,\n>         \"gridTable\": true,\n>         \"editableHeaderContent\": true,\n>         \"showConfirmationOnDraftActivate\": true,\n>         \"tableSettings\": {\n>             \"scrollThreshold\": 600\n>         }\n>     }\n> }\n> \n> ```\n\n> ### Sample Code:  \n> Analytical List Page\n> \n> ```\n> \"component\": {\n>     \"name\": \"sap.suite.ui.generic.template.AnalyticalListPage\",\n>     \"list\": true,\n>     \"settings\": {\n>         \"tableSettings\": {\n>             \"type\": \"AnalyticalTable\",\n>             \"multiSelect\": true,\n>             \"selectAll\": false,\n>             \"selectionLimit\": 10,\n>             \"scrollThreshold\": 600\n>         }\n>     }\n> }\n> \n> ```\n\nKey users can configure the `scrollThreshold` parameter using the UI adaptation option. For more information, see [Adapting the UI](adapting-the-ui-59bfd31.md).\n\n\n\n<a name=\"loioc0f6592a592e47f9bb6d09900de47412__section_ey5_lvv_gnb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V4\n\nBy default, a responsive table is used. However, you can change the table type by configuring specific settings in the `manifest.json` file.\n\nAnalytical tables aren't supported on draft-enabled entities.\n\n\n\n### Excluding Fields from Table Personalization\n\nYou can exclude specific fields from the table personalization dialog in the list report and object page by setting the `availability` property of the column to `hidden`. For more information, see [Enabling Table Personalization](enabling-table-personalization-3e2b4d2.md).\n\n\n\n### Handling of Search Restrictions\n\n> ### Note:  \n> The analytical table works differently compared to grid tables and responsive tables. For more information about the configuration of different table types, see [Setting the Table Type](setting-the-table-type-7f844f1.md).\n\nThe search restriction for a table is first looked up in the parent entity \\(using `NavigationRestrictions` at the parent entity, with the `NavigationProperty` pointing to the association of the table entity\\).\n\n-   Navigation Restrictions at Parent Entity\n\n    > ### Sample Code:  \n    > XML Annotation \\(non-containment scenario\\): `/SalesOrderManage/_Items`\n    > \n    > ```xml\n    > <Annotations Target=\"com.c_salesordermanage_sd.Container/SalesOrderManage\">\n    >    <Annotation Term=\"Capabilities.NavigationRestrictions\">\n    >       <Record>\n    >          <PropertyValue Property=\"RestrictedProperties\">\n    >             <Collection>\n    >                <Record>\n    >                   <PropertyValue Property=\"NavigationProperty\" NavigationPropertyPath=\"_Items\" />\n    >                   <PropertyValue Property=\"SearchRestrictions\">\n    >                      <Record>\n    >                         <PropertyValue Property=\"Searchable\" Bool=\"false\" />\n    >                      </Record>\n    >                   </PropertyValue>\n    >                </Record>\n    >             </Collection>\n    >          </PropertyValue>\n    >       </Record>\n    >    </Annotation>\n    > </Annotations>\n    > ```\n\n    > ### Sample Code:  \n    > ABAP CDS Annotation\n    > \n    > No ABAP CDS annotation sample is available. Use the local XML annotation.\n\n    > ### Sample Code:  \n    > CAP CDS Annotation \\(non-containment scenario\\)\n    > \n    > ```\n    > entity SalesOrderManage @(\n    >    Capabilities:{\n    >       NavigationRestrictions:{\n    >          RestrictedProperties:[{\n    >             NavigationProperty : _Items,\n    >             SearchRestrictions : {Searchable : false}\n    >          }]\n    >       }\n    >    }\n    > )\n    > ```\n\n    In a containment scenario \\(for example, where the main entity set is from a parameterized entity\\), you can maintain the annotations as shown in the following sample code:\n\n    > ### Sample Code:  \n    > XML Annotation \\(containment scenario\\): `/Customer/Set/_PartnerItems`\n    > \n    > ```xml\n    > <Annotations Target=\"sap.fe.test.MyService.EntityContainer/Customer\">\n    >    <Annotation Term=\"Capabilities.NavigationRestrictions\">\n    >       <Record>\n    >          <PropertyValue Property=\"RestrictedProperties\">\n    >             <Collection>\n    >                <Record>\n    >                   <PropertyValue Property=\"NavigationProperty\" NavigationPropertyPath=\"Set/_PartnerItems\" />\n    >                   <PropertyValue Property=\"SearchRestrictions\">\n    >                      <Record>\n    >                         <PropertyValue Property=\"Searchable\" Bool=\"false\" />\n    >                      </Record>\n    >                   </PropertyValue>\n    >                </Record>\n    >             </Collection>\n    >          </PropertyValue>\n    >       </Record>\n    >    </Annotation>\n    > </Annotations>\n    > ```\n\n    > ### Sample Code:  \n    > ABAP CDS Annotation\n    > \n    > No ABAP CDS annotation sample is available. Please use the local XML annotation.\n\n    > ### Sample Code:  \n    > CAP CDS Annotation \\(containment scenario\\)\n    > \n    > ```\n    > service MyService {\n    >     @Capabilities.NavigationRestrictions.RestrictedProperties : [{\n    >         $Type              : 'Capabilities.NavigationPropertyRestriction',\n    >         NavigationProperty : 'Set/_PartnerItems',\n    >         SearchRestrictions : {Searchable : false}\n    >     }]\n    > }\n    > ```\n\n-   Restrictions Directly at Child Entity\n\n    If no search restriction is defined at the parent entity using `NavigationRestriction`, the search restriction defined directly on the table entity set \\(child entity\\) is considered.\n\n    > ### Sample Code:  \n    > XML Annotation \\(non-containment scenario\\): `/SalesOrderManage/_Items`\n    > \n    > ```xml\n    > <Annotations Target=\"com.c_salesordermanage_sd.Container/SalesOrderItem\">\n    >    <Annotation Term=\"SAP__capabilities.SearchRestrictions\">\n    >       <Record>\n    >          <PropertyValue Property=\"Searchable\" Bool=\"false\" />\n    >       </Record>\n    >    </Annotation>\n    > </Annotations>\n    > ```\n\n    > ### Sample Code:  \n    > ABAP CDS Annotation\n    > \n    > No ABAP CDS annotation sample is available. Use the local XML annotation.\n\n    > ### Sample Code:  \n    > CAP CDS Annotation \\(non-containment scenario\\)\n    > \n    > ```\n    > entity SalesOrderItem @(\n    >    Capabilities:{\n    >       SearchRestrictions : {Searchable : false}\n    >    }\n    > )\n    > ```\n\n    In a containment scenario \\(for example, where the main entity set is from a parameterized entity\\), you can maintain the annotations as shown in the following sample code:\n\n    > ### Sample Code:  \n    > XML Annotation \\(containment scenario\\): `/Customer/Set/_PartnerItems`\n    > \n    > ```xml\n    > <Annotations Target=\"SAP__self.Container/ItemPartner\">\n    >    <Annotation Term=\"SAP__capabilities.SearchRestrictions\">\n    >       <Record>\n    >          <PropertyValue Property=\"Searchable\" Bool=\"false\" />\n    >       </Record>\n    >    </Annotation>\n    > </Annotations>\n    > ```\n\n    > ### Sample Code:  \n    > ABAP CDS Annotation\n    > \n    > No ABAP CDS annotation sample is available. Use the local XML annotation.\n\n    > ### Sample Code:  \n    > CAP CDS Annotation \\(containment scenario\\)\n    > \n    > ```\n    > entity ItemPartner @(\n    >    Capabilities:{\n    >       SearchRestrictions : {Searchable : false}\n    >    }\n    > )\n    > ```\n\n\n\n\n### Freezing Table Columns\n\nYou can freeze the first columns of a table to keep them visible when scrolling the table horizontally. To do this, add the `frozenColumnCount` parameter in the `manifest.json` file and specify how many columns to freeze.\n\n> ### Sample Code:  \n> `manifest.json`\n> \n> ```json\n> \"_Item/@com.sap.vocabularies.UI.v1.LineItem\": {\n>     \"tableSettings\": {\n>         \"type\": \"GridTable\",\n>         \"frozenColumnCount\": 3,\n>         …\n>         },\n>         ...\n>     }\n> }\n> \n> ```\n\n> ### Note:  \n> This option isn't available for the responsive table.\n\n\n\n### Calculating the Column Width\n\nBy default, the column width is calculated based on the type of the content. You can include the column header while calculating the column width by configuring the `widthIncludingColumnHeader` setting in the `manifest.json` file. This setting can be defined at the table level or at the column level. The `widthIncludingColumnHeader` setting defined at the column level has a higher priority than the `widthIncludingColumnHeader` setting defined at the table level.\n\n> ### Sample Code:  \n> `manifest.json`\n> \n> ```json\n> \"controlConfiguration\": {\n>      \"@com.sap.vocabularies.UI.v1.LineItem\": {\n>             \"tableSettings\": {\n>                    \"widthIncludingColumnHeader\":true\n>             },\n>             \"columns\": {\n>                    \"DataField::commonProperty\": {\n>                         \"widthIncludingColumnHeader\":false\n>                    }\n>             }\n>      }\n> }\n> ```\n\n\n\n### Showing or Hiding the *Copy to Clipboard* Button\n\nBy default, the *Copy to Clipboard* button is displayed in the table toolbar if the selection mode, such as single selection or multi selection, is configured for the corresponding table. However, you can also configure the visibility of the *Copy to Clipboard* button by defining the `disableCopyToClipboard` settings in the `manifest.json` file as shown in the following sample code:\n\n> ### Sample Code:  \n> manifest.json\n> \n> ```\n> \n>     \"sap.ui5\": {\n>         \"routing\": {\n>             \"targets\": {\n>                 \"SalesOrderManageList\": {\n>                     \"options\": {\n>                         \"settings\": {\n>                             \"controlConfiguration\": {\n>                                 \"@com.sap.vocabularies.UI.v1.LineItem\": {\n>                                     \"tableSettings\":{                                         \n>                                        \"disableCopyToClipboard\": true                                     \n>                                   }\n>                                }\n>                             }\n>                         }\n>                     }\n>                 }\n>             }\n>         }\n>     }\n> \n> ```\n\nFor more security-related information, see [Security Configuration](security-configuration-ba0484b.md).\n\nThe `Table` building block also supports the copy to clipboard option. For more information, see [API Reference](https://ui5.sap.com/#/api/sap.fe.macros.Table%23overview).\n\n\n\n### Configuring the `scrollThreshold` Property for Dynamic Data Loading\n\nYou can configure the `scrollThreshold` property in the `manifest.json` file as shown in the following sample code:\n\n> ### Sample Code:  \n> manifest.json\n> \n> ```\n> \"sap.ui5\": {\n>         \"routing\": {\n>             \"targets\": {\n>                 \"SalesOrderManageList\": {\n>                     \"options\": {\n>                         \"settings\": {\n>                             \"controlConfiguration\": {\n>                                 \"@com.sap.vocabularies.UI.v1.LineItem\": {\n>                                     \"tableSettings\":{   \n>                                         \"type\": \"GridTable\",                                      \n>                                        \"scrollThreshold\": 200                                     \n>                                   }\n>                                }\n>                             }\n>                         }\n>                     }\n>                 }\n>             }\n>         }\n>     }\n> ```\n\n**Related Information**  \n\n\n[Configuring Tables](configuring-tables-f4eb70f.md \"You can use the annotations and entries in the manifest.json to control various aspects of tables.\")\n\n[Setting the Table Type](setting-the-table-type-7f844f1.md \"You can control which table type is rendered in the list report and on the object page by configuring the manifest.json file and by using annotations.\")\n\n[Tables: Which One Should I Choose?](../10_More_About_Controls/tables-which-one-should-i-choose-148892f.md \"The libraries provided by SAPUI5 contain various different table controls that are suitable for different use cases. The table below outlines which table controls are available, and what features are supported by each one.\")\n\n[Enabling Multiple Selection in Tables](enabling-multiple-selection-in-tables-116b5d8.md \"This feature enables you to configure whether end users can select a single row or multiple rows in a table, while triggering table toolbar actions that require context.\")\n\n",
  "excerpt": "<!-- loioc0f6592a592e47f9bb6d09900de47412 --> Tables SAP Fiori elements supports several table types. The following table types are available: -   Responsive tables     Responsiveness is optimized for...",
  "wordCount": 4298,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}