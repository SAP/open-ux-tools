{
  "id": "sapui5-enabling-actions-in-the-object-page-header-5fe4396-md",
  "title": "Enabling Actions in the Object Page Header",
  "category": "fiori-elements-framework",
  "path": "enabling-actions-in-the-object-page-header-5fe4396.md",
  "lastModified": "2025-09-29T10:06:38.809Z",
  "tags": [
    "fiori-elements-framework",
    "md",
    "enabling",
    "actions",
    "the",
    "object",
    "page",
    "header",
    "5fe4396"
  ],
  "headers": [
    "Enabling Actions in the Object Page Header",
    "Edit Action on Subobject Page",
    "Copy Action",
    "Additional Features in SAP Fiori Elements for OData V2",
    "Edit and Delete Buttons",
    "Show or Hide the Edit Button \\(Using `updatable-path` Annotation\\)",
    "Code Samples for `updatable-path`",
    "Additional Features in SAP Fiori Elements for OData V4",
    "Edit and Delete Buttons",
    "Edit Enablement",
    "Custom Global Actions"
  ],
  "content": "<!-- loio5fe439613f9c4e259015951594c423dc -->\n\n# Enabling Actions in the Object Page Header\n\nYou can enable generic actions in your object header.\n\n*Edit*, *Delete* and *Copy* are the generic actions.\n\nAll `com.sap.vocabularies.UI.v1.DataFieldForAction` within the unqualified `UI.Identification` are interpreted as actions. The system renders a button in the header displaying the text of the data field label.\n\n  \n  \n**Object Page: Enable Actions in Header**\n\n![](images/Object_Page_Enable_Actions_in_Header_b506b5c.png \"Object Page: Enable Actions in Header\")\n\n\n\nAnnotations for the *Copy with new supplier* Button:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```xml\n> <Annotation Term=\"UI.Identification\">\n>       <Collection>\n>             <Record Type=\"UI.DataFieldForAction\">\n>                   <PropertyValue Property=\"Label\" String=\"Copy with new supplier\" />\n>                   <PropertyValue Property=\"Action\"\n>                         String=\"STTA_PROD_MAN.STTA_PROD_MAN_Entities/STTA_C_MP_ProductCopy_new_supplier\" />\n>                   <Annotation Term=\"UI.Importance\" EnumMember=\"UI.ImportanceType/High\" />\n>             </Record>\n>             ...\n>       </Collection>\n> </Annotation>\n> \n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> ```\n> \n> @UI.identification: [\n>   {\n>     importance: #HIGH,\n>     label: 'Copy with new supplier',\n>     dataAction: 'PUSHDOWN:STTA_C_MP_ProductCopy_new_supplier',\n>     type: #FOR_ACTION,\n>     position: 1 \n>   }\n> ]\n> product;\n> ```\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> \n> UI.Identification : [\n>     {\n>         $Type : 'UI.DataFieldForAction',\n>         Label : 'Copy with new supplier',\n>         Action : 'STTA_PROD_MAN.STTA_PROD_MAN_Entities/STTA_C_MP_ProductCopy_new_supplier',\n>         ![@UI.Importance] : #High\n>     }\n> ]\n> \n> ```\n\nIn SAP Fiori elements for OData V2, the object page context is always passed when a header action is invoked.\n\nIn SAP Fiori elements for OData V4, the object page context is only passed for bound header actions. For unbound actions, no context is passed.\n\n\n\n### Edit Action on Subobject Page\n\nThe edit action is also available on the subobject page. Its behavior depends on the annotations on both levels:\n\n-   The edit button is displayed on the subobject page only if it is also visible on the object page and if the subobject page entity is not annotated to hide it.\n\n-   The edit button is enabled on the subobject page only if it is also enabled on the object page and if the subobject page entity is not annotated to disable it.\n\n\n> ### Note:  \n> Selecting the edit button on the subobject page enables the edit action for the entire object page, not just the subobject page where it was selected.\n\n\n\n### Copy Action\n\nThe *Copy* button is not available by default. However, applications can define a standard copy action by annotating a `dataFieldForAction` with `isCopyAction`.\n\nThis *Copy* button is placed after the *Delete* button.\n\n![](images/Copy_Action_in_the_Object_Page_c726782.png)\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```xml\n> <Annotation Term=\"UI.Identification\">\n>   <Collection>\n>       <Record Type=\"UI.DataFieldForAction\">\n>           <PropertyValue Property=\"Label\" String=\"Copy\" />\n>           <PropertyValue Property=\"Action\" String=\"STTA_PROD_MAN.STTA_PROD_MAN_Entities/STTA_C_MP_ProductCopy\" />\n>           <Annotation Term=\"UI.IsCopyAction\" Bool=\"true\" />\n>      </Record>\n> \n> ```\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> UI.Identification : [\n>     {\n>         $Type : 'UI.DataFieldForAction',\n>         Label : 'Copy',\n>         Action : 'STTA_PROD_MAN.STTA_PROD_MAN_Entities/STTA_C_MP_ProductCopy',\n>         ![@UI.IsCopyAction] : true,\n>     },\n> ],\n> ```\n\nApplications can define a label for this button. If a label is not provided, then by default this button is labeled as *Copy*.\n\n> ### Note:  \n> The copy action is only available on the object page, not on the subobject pages.\n\n\n\n<a name=\"loio5fe439613f9c4e259015951594c423dc__section_k41_bwx_qmb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V2\n\n\n\n### Edit and Delete Buttons\n\nThe *Edit* and *Delete* buttons are displayed as shown above, if the following conditions are met:\n\n-   *Edit* button: `sap:updatable` is not set to `false`\n\n-   *Delete* button: `sap:deletable` is not set to `false`\n\n> ### Note:  \n> If you want to specify conditions for deletion or updates \\(using the `deletable-path` or `updatable path` annotation\\), you need to ensure that you have not made the `sap:deletable` or `sap:updatable` setting in your annotations.\n\nFor more information about the *Delete* button, see the [Enable or Disable *Delete* Button \\(Using `deletable-path` Annotations\\)](adding-actions-to-tables-b623e0b.md#loiob623e0bbbb2b4147b2d0516c463921a0__deletebutton) section in [Adding Actions to Tables](adding-actions-to-tables-b623e0b.md).\n\n\n\n### Show or Hide the Edit Button \\(Using `updatable-path` Annotation\\)\n\nYou can choose to display or hide the *Edit* button on the object page based on certain conditions in your back-end system. For example, you may want to disable editing for a sales order that has already been paid.\n\nIn your annotation, set the `updatable-path` for the *Edit* button to point to a particular property of an object \\(entity\\) in the back-end system that is either `true` or `false`. If the value of this property is `true`, the *Edit* button is displayed; if it is `false`, it is hidden.\n\n> ### Note:  \n> If you want to specify conditions for the `updatable-path` annotation, you need to ensure that you have not made the `sap:updatable` setting in your annotations.\n\n\n\n### Code Samples for `updatable-path`\n\nThe code sample below shows you how to set up your annotation to display or hide the *Edit* button, based on the value of the `Updatable_mc` property in the back-end system.\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```xml\n> <Annotations Target=\"STTA_PROD_MAN.STTA_PROD_MAN_Entities/STTA_C_MP_Product\">\n>     <Annotation Term=\"Org.OData.Capabilities.V1.UpdateRestrictions\">\n>         <Record>\n>             <PropertyValue Property=\"Updatable\" Path=\"Updatable_mc\"/>\n>         </Record>\n>     </Annotation>\n> </Annotations>\n> ```\n\n\n\n<a name=\"loio5fe439613f9c4e259015951594c423dc__section_aj2_5wx_qmb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V4\n\n\n\n### Edit and Delete Buttons\n\nThe *Edit* button allows users to edit the instance of the object page.\n\nThe *Delete* button allows users to delete the instance of the object page.\n\n> ### Note:  \n> 1.  When using `updateRestrictions`, a new property is completely ignored. Draft applications always have an `EditAction`, as shown in the following sample code:\n> \n>     ```xml\n>     <Annotation Term=\"com.sap.vocabularies.Common.v1.DraftRoot\">\n>         <Record>\n>             <PropertyValue Property=\"EditAction\" String=\"com.sap.gateway.srvd.sadl_gw_appmusicdr_definition.v0001.EditAction\"/>\n>         </Record>\n>     </Annotation>\n>     ```\n> \n> 2.  The visibility of the *Edit* button can be controlled by the `updateHidden` annotation under the entity set \\(it can be path-based if the apps need to hide the *Edit* button, for example for specific instances only\\).\n> \n>     > ### Sample Code:  \n>     > XML Annotation\n>     > \n>     > ```\n>     > <Annotations Target=\"com.c_salesordermanage_sd.EntityContainer/HeaderPartner\"> \n>     >    <Annotation Term=\"UI.UpdateHidden\" Bool=\"true\"/> \n>     > </Annotations>\n>     > \n>     > OR\n>     > \n>     > <Annotations Target=\"com.c_salesordermanage_sd.EntityContainer/SalesOrderManage\"> \n>     >    <Annotation Term=\"UI.UpdateHidden\" Path=\"isUpdateHidden\"/> \n>     > </Annotations>\n>     > \n>     > ```\n> \n>     > ### Sample Code:  \n>     > ABAP CDS Annotation\n>     > \n>     > ```\n>     > @UI.updateHidden:true \n>     > \n>     > OR\n>     > \n>     > @UI.updateHidden: #('isUpdateHidden')\n>     > \n>     > ```\n> \n>     > ### Sample Code:  \n>     > CAP CDS Annotation\n>     > \n>     > ```\n>     > annotate com.c_salesordermanage_sd.SalesOrderManage with @( UI.UpdateHidden: true);\n>     > \n>     > OR\n>     > \n>     > annotate com.c_salesordermanage_sd.SalesOrderManage with @( UI.UpdateHidden: isUpdateHidden);\n>     > \n>     > ```\n> \n>     For more information about the visibility of the *Delete* button, see the [Showing or Hiding the *Delete* Button](adding-actions-to-tables-b623e0b.md#loiob623e0bbbb2b4147b2d0516c463921a0__ShowHideDelete) section in [Adding Actions to Tables](adding-actions-to-tables-b623e0b.md).\n\n\n\n### Edit Enablement\n\nIf the application defines an `EditAction`, as shown in the sample annotation above, the `UpdateRestrictions` are completely ignored. Instead, `OperationAvailable` determines the enablement of the button. For more information about `OperationAvailable`, see the [Enabling Custom Actions Defined Using Annotations](actions-cbf16c5.md#loiocbf16c599f2d4b8796e3702f7d4aae6c__subsection_xkx_gwq_nsb) section in [Actions](actions-cbf16c5.md).\n\n-   If `OperationAvailable` = true \\(static\\) OR if `OperationAvailable` is not defined, the *Edit* button is visible \\(provided that `updateHidden` doesn't evaluate to false\\) and enabled.\n\n-   If `OperationAvailable` = false \\(static\\), the `Edit` button is not visible.\n\n-   If `OperationAvailable` = <path\\>, the enablement of the `Edit` button depends on whether the path returns true or false. If the path returns null, the button is visible but disabled.\n\n\n\n\n### Custom Global Actions\n\nApplications can define their own global actions. The actions defined under the unqualified `UI.Identification`, that are not set to `determining=true`, are considered global actions and rendered next to the standard actions in the header. The object page context is passed to the action if the action is configured as a bound action or as a `DataFieldForIBN`. For an unbound action, no context is passed. For information about custom annotation actions, see [Setting the Criticality for Actions](setting-the-criticality-for-actions-12f2ba2.md) and [Actions](actions-cbf16c5.md).\n\nThe following sample shows examples of global actions:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```xml\n> <Annotation Term=\"UI.Identification\">\n>     <Collection>\n>         ...\n>         <Record Type=\"UI.DataFieldForAction\">\n>             <PropertyValue Property=\"Label\" String=\"Break Up\" />\n>             <PropertyValue Property=\"Action\" String=\"com.sap.gateway.srvd.sadl_gw_appmusicdr_definition.v0001.BREAK_UP\" />\n>         </Record>\n>         <Record Type=\"UI.DataFieldForIntentBasedNavigation\">\n>             <PropertyValue Property=\"Label\" String=\"SampleIBN\"/>\n>             <PropertyValue Property=\"SemanticObject\" String=\"MySemanticObject\"/>\n>             <PropertyValue Property=\"Action\" String=\"manage\"/>\n>             <PropertyValue Property=\"RequiresContext\" Bool=\"false\"/> // For header IBN buttons, this should only be false or not specified!\n>         </Record>\n>         ...\n>     </Collection>\n> </Annotation>\n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> ```\n> @UI.identification: [\n>   {\n>     label: 'Break Up',\n>     dataAction: 'com.sap.gateway.srvd.sadl_gw_appmusicdr_definition.v0001.BREAK_UP',\n>     type: #FOR_ACTION,\n>     position: 1 \n>   },\n>   {\n>     label: 'SampleIBN',\n>     semanticObjectAction: 'manage',\n>     type: #FOR_INTENT_BASED_NAVIGATION,\n>     position: 2 \n>   }\n> ]\n> TEST;\n> @Consumption.semanticObject: 'MySemanticObject'\n> %ENTITY;\n> \n> ```\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> UI : {\n>     Identification: [\n>         {\n>             $Type  : 'UI.DataFieldForAction',\n>             Label   : 'Break Up',\n>             Action : ' com.sap.gateway.srvd.sadl_gw_appmusicdr_definition.v0001.BREAK_UP'\n>         },\n>         {\n>             $Type              : ' UI.DataFieldForIntentBasedNavigation',\n>             Label              : ' SampleIBN ',\n>             SemanticObject     : 'MySemanticObject',\n>             Action             : 'manage',\n>             RequiresContext    : false\n>         }\n>     ]\n> }\n> \n> ```\n\n> ### Note:  \n> In the sample above, \"UI\" is used as an alias for `com.sap.vocabularies.UI.v1`.\n\nYou control the visibility of the custom global actions by using the `UI.Hidden` annotation. If static true or path-based evaluate to true, the action button is hidden.\n\nYou also control the enablement of the `DataFieldForAction` buttons via the `OperationAvailable` mechanism in the same way as described in the [Enabling Custom Actions Defined Using Annotations](actions-cbf16c5.md#loiocbf16c599f2d4b8796e3702f7d4aae6c__subsection_xkx_gwq_nsb) section in [Actions](actions-cbf16c5.md).\n\nThe enablement of intent-based navigation \\(IBN\\) buttons can be controlled via the `\"NavigationAvailable\"` property, as described in the [Navigation Using a Button](navigation-from-an-app-outbound-navigation-d782acf.md#loiod782acf8bfd74107ad6a04f0361c5f62__NavigationButton) section in [Navigation from an App \\(Outbound Navigation\\)](navigation-from-an-app-outbound-navigation-d782acf.md).\n\nThe `UI.DataFieldForAction` can be bound or unbound actions. For more information, see the [Bound and Unbound Actions](actions-cbf16c5.md#loiocbf16c599f2d4b8796e3702f7d4aae6c__BoundUnbound) section in [Actions](actions-cbf16c5.md).\n\n**Related Information**  \n\n\n[Displaying Actions on the Object Page](displaying-actions-on-the-object-page-f65e8b1.md)\n\n[Actions](actions-cbf16c5.md \"You can use generic actions provided by SAP Fiori elements and implement application-specific actions using annotations or extension points.\")\n\n",
  "excerpt": "<!-- loio5fe439613f9c4e259015951594c423dc --> Enabling Actions in the Object Page Header You can enable generic actions in your object header. Edit, Delete and Copy are the generic actions. All com.sa...",
  "wordCount": 1677,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}