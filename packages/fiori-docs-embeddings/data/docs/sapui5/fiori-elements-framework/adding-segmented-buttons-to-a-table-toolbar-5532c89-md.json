{
  "id": "sapui5-adding-segmented-buttons-to-a-table-toolbar-5532c89-md",
  "title": "Adding Segmented Buttons to a Table Toolbar",
  "category": "fiori-elements-framework",
  "path": "adding-segmented-buttons-to-a-table-toolbar-5532c89.md",
  "lastModified": "2025-09-29T10:06:38.774Z",
  "tags": [
    "fiori-elements-framework",
    "md",
    "adding",
    "segmented",
    "buttons",
    "table",
    "toolbar",
    "5532c89"
  ],
  "headers": [
    "Adding Segmented Buttons to a Table Toolbar",
    "Additional Features in SAP Fiori Elements for OData V2",
    "Additional Features in SAP Fiori Elements for OData V4"
  ],
  "content": "<!-- loio5532c899e6e94137b18b8ee68df12efb -->\n\n# Adding Segmented Buttons to a Table Toolbar\n\nYou can add segmented buttons to the toolbar to enable switching between the table content using a selection variant annotation.\n\nYou can associate every button of the segmented buttons \\(or every list item in the select box\\) with a selection variant that filters the table according to the selection variant filters once a user has clicked it. This means that the user has multiple views in a single table of the object page. You can enable this feature for any table on the object page.\n\nTo implement this feature, make a `\"quickVariantSelection\"` entry in the manifest. See the separate sections below for further details.\n\n\n\nYou can define a simple or a complex filter condition inside the `SelectionVariant`. While the simple condition has only one property in the `SelectionVariant`, the complex filter condition can have more than one property to be filtered.\n\nThe annotations defined in the variants are:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```xml\n> <Annotation Term=\"UI.SelectionVariant\" Qualifier=\"SimpleFilter\">\n>       <Record>\n>          <PropertyValue Property=\"Text\" String=\"Tax amount less than 10 USD\" />\n>          <PropertyValue Property=\"SelectOptions\">\n>             <Collection>\n>                <Record Type=\"UI.SelectOptionType\">\n>                   <PropertyValue Property=\"PropertyName\" PropertyPath=\"tax_amount\" />\n>                   <PropertyValue Property=\"Ranges\">\n>                      <Collection>\n>                         <Record Type=\"UI.SelectionRangeType\">\n>                            <PropertyValue Property=\"Sign\" EnumMember=\"UI.SelectionRangeSignType/I\" />\n>                            <PropertyValue Property=\"Option\" EnumMember=\"UI.SelectionRangeOptionType/LT\" />\n>                            <PropertyValue Property=\"Low\" String=\"10\" />\n>                         </Record>\n>                      </Collection>\n>                   </PropertyValue>\n>                </Record>\n>             </Collection>\n>          </PropertyValue>\n>       </Record>\n>    </Annotation>\n>    <Annotation Term=\"UI.SelectionVariant\" Qualifier=\"ComplexFilter\">\n>       <Record>\n>          <PropertyValue Property=\"Text\" String=\"Net Amount between 10 and 40 And Gross Amount Less than 100 USD\" />\n>          <PropertyValue Property=\"SelectOptions\">\n>             <Collection>\n>                <Record Type=\"UI.SelectOptionType\">\n>                   <PropertyValue Property=\"PropertyName\" PropertyPath=\"net_amount\" />\n>                   <PropertyValue Property=\"Ranges\">\n>                      <Collection>\n>                         <Record>\n>                            <PropertyValue Property=\"Sign\" EnumMember=\"com.sap.vocabularies.UI.v1.SelectionRangeSignType/I\" />\n>                            <PropertyValue Property=\"Option\" EnumMember=\"UI.SelectionRangeOptionType/BT\" />\n>                            <PropertyValue Property=\"Low\" String=\"10\" />\n>                            <PropertyValue Property=\"High\" String=\"40\" />\n>                         </Record>\n>                      </Collection>\n>                   </PropertyValue>\n>                </Record>\n>                <Record Type=\"UI.SelectOptionType\">\n>                   <PropertyValue Property=\"PropertyName\" PropertyPath=\"gross_amount\" />\n>                   <PropertyValue Property=\"Ranges\">\n>                      <Collection>\n>                         <Record Type=\"UI.SelectionRangeType\">\n>                            <PropertyValue Property=\"Option\" EnumMember=\"UI.SelectionRangeOptionType/LT\" />\n>                            <PropertyValue Property=\"Sign\" EnumMember=\"UI.SelectionRangeSignType/I\" />\n>                            <PropertyValue Property=\"Low\" String=\"100\" />\n>                         </Record>\n>                      </Collection>\n>                   </PropertyValue>\n>                </Record>\n>             </Collection>\n>          </PropertyValue>\n>       </Record>\n>    </Annotation>\n> \n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> ```\n> @UI.selectionVariant: [\n>   {\n>     text: 'Tax amount less than 10 USD',\n>     qualifier: 'SimpleFilter',\n>     filter: 'tax_amount LT 10'\n>   }\n> ]\n> \n> @UI.selectionVariant: [\n>   {\n>     text: 'Net Amount between 10 and 40 And Gross Amount Less than 100 USD',\n>     qualifier: 'ComplexFilter',\n>     filter: 'net_amount GE 10 and net_amount LE 40 and gross_amount LT 100 '\n>   }\n> ]\n> ```\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> \n> UI.SelectionVariant #SimpleFilter : {\n>     Text : 'Tax amount less than 10 USD',\n>     SelectOptions : [\n>         {\n>             $Type : 'UI.SelectOptionType',\n>             PropertyName : tax_amount,\n>             Ranges : [\n>                 {\n>                     $Type : 'UI.SelectionRangeType',\n>                     Sign : #I,\n>                     Option : #LT,\n>                     Low : '10'\n>                 }\n>             ]\n>         }\n>     ]\n> },\n> UI.SelectionVariant #ComplexFilter : {\n>     Text : 'Net Amount between 10 and 40 And Gross Amount Less than 100 USD',\n>     SelectOptions : [\n>         {\n>             $Type : 'UI.SelectOptionType',\n>             PropertyName : net_amount,\n>             Ranges : [\n>                 {\n>                     Sign : #I,\n>                     Option : #BT,\n>                     Low : '10',\n>                     High : '40'\n>                 }\n>             ]\n>         },\n>         {\n>             $Type : 'UI.SelectOptionType',\n>             PropertyName : gross_amount,\n>             Ranges : [\n>                 {\n>                     $Type : 'UI.SelectionRangeType',\n>                     Option : #LT,\n>                     Sign : #I,\n>                     Low : '100'\n>                 }\n>             ]\n>         }\n>     ]\n> }\n> \n> \n> ```\n\n> ### Note:  \n> If the `SelectionVariant` has multiple `<SelectionOptionType>`, filters that have the same target property are combined with an `OR` condition. Filters that have different target properties are combined with an `AND` condition.\n\nThe table containing the segmented buttons looks like this:\n\n  \n  \n**Segmented button 1 selected**\n\n![](images/Segmented_button_1_selected_65fc70c.png \"Segmented button 1 selected\")\n\n  \n  \n**Segmented button 2 selected**\n\n![](images/Segmented_button_2_selected_60bfbdb.png \"Segmented button 2 selected\")\n\n> ### Note:  \n> When the table is initially loaded, two calls are made to determine the number of records in the table. These are shown in the button text.\n> \n> In SAP Fiori elements for OData V2, setting `showCounts` to `false` will not show the number in the button text. This means that in this case no count calls are made.\n> \n> In SAP Fiori elements for OData V4, `showCounts` is set to `false` by default.\n\n\n\n<a name=\"loio5532c899e6e94137b18b8ee68df12efb__section_wyn_r1c_2nb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V2\n\nEvery variant corresponds to its filter on the UI. A segmented button is rendered when the number of variants defined is less than or equal to 3. Defining 4 or more variants in the manifest renders a selection box.\n\nThe following manifest settings are required for adding segmented buttons:\n\n> ### Sample Code:  \n> `manifest.json`\n> \n> ```\n> \"component\": {\n>   \"name\": \"sap.suite.ui.generic.template.ObjectPage\",\n>   \"settings\": {\n>     \"sections\": {\n>       \"SalesOrderItemsID\": {\n>         \"navigationProperty\": \"to_Item\",\n>         \"entitySet\": \"C_STTA_SalesOrderItem_WD_20\",\n>         \"createMode\": \"inline\",\n>         \"quickVariantSelection\": {\n>           \"showCounts\": true,\n>           \"variants\": {\n>             \"0\": {\n>               \"key\": \"_tab2\",\n>               \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant#SimpleFilter\"\n>             },\n>             \"1\": {\n>               \"key\": \"_tab3\",\n>               \"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant#ComplexFilter\"\n>             }\n>           }\n>         }\n>       }\n>     },\n>     \"showRelatedApps\": true\n>   }\n> }\n> \n> ```\n\nTo show the number of records available next to the title of the segmented button, set `showCounts` to `true`.\n\n\n\n<a name=\"loio5532c899e6e94137b18b8ee68df12efb__section_lym_v1c_2nb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V4\n\nEvery `\"paths\"` entry corresponds to its filter on the UI. A segmented button is rendered when the number of variants defined is less than or equal to 3. Defining 4 or more variants in the manifest renders a selection box.\n\nThe following manifest settings are required for adding segmented buttons:\n\n> ### Sample Code:  \n> `manifest.json`\n> \n> ```\n> \"SalesOrderManageObjectPage\": {\n> \t\"type\": \"Component\",\n> \t\"id\": \"SalesOrderManageObjectPage\",\n> \t\"name\": \"sap.fe.templates.ObjectPage\",\n> \t\"options\": {\n> \t\t\"settings\": {\n> \t\t\t\"contextPath\": \"/SalesOrderManage\",\n> \t\t\t\"navigation\": {\n> \t           ...\n> \t\t\t},\n> \t\t\t\"controlConfiguration\": {\n> \t\t\t\t\"_Item/@com.sap.vocabularies.UI.v1.LineItem\": {\n> \t\t\t\t\t\"tableSettings\": {\n> \t\t\t\t\t\t\"type\": \"GridTable\",\n> \t\t\t\t\t\t\"quickVariantSelection\": {\n> \t\t\t\t\t\t\t\"paths\": [\n> \t\t\t\t\t\t\t\t{\n> \t\t\t\t\t\t\t\t\t\"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant#SimpleFilter\"\n> \t\t\t\t\t\t\t\t},\n> \t\t\t\t\t\t\t\t{\n> \t\t\t\t\t\t\t\t\t\"annotationPath\": \"com.sap.vocabularies.UI.v1.SelectionVariant#ComplexFilter\"\n> \t\t\t\t\t\t\t\t}\n> \t\t\t\t\t\t\t],\n> \t\t\t\t\t\t\t\"showCounts\": true,\n> \t\t\t\t\t\t\t\"hideTableTitle\": true\n> \t\t\t\t\t\t},\n> \t                  ...\n> \t\t\t\t\t}\n> \t\t\t\t}\n> \t\t\t}\n> \t\t}\n> \t}\n> }\n> ```\n\nIf `showCounts` is set to `true`, the segmented buttons show the count next to the button label and no count is shown next to the title of the table.\n\nIf `showCounts` is set to `false`, no count is shown next to the button label, nor next to the title of the table.\n\nTo hide the title of the table and show only the segmented buttons or the `selectionBox`, set the `hideTableTitle` to `true`. You should use this option only if the title of your `SelectionVariant` is self-explanatory and can replace the table title.\n\n**Related Information**  \n\n\n[Defining Multiple Views on a List Report Table - Single Table Mode](defining-multiple-views-on-a-list-report-table-single-table-mode-0d390fe.md \"You can define multiple views of a table and display them in single table mode. Users can switch between views using a segmented button.\")\n\n",
  "excerpt": "<!-- loio5532c899e6e94137b18b8ee68df12efb --> Adding Segmented Buttons to a Table Toolbar You can add segmented buttons to the toolbar to enable switching between the table content using a selection v...",
  "wordCount": 1211,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}