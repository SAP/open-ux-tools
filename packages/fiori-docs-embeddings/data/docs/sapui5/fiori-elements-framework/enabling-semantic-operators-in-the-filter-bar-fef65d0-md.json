{
  "id": "sapui5-enabling-semantic-operators-in-the-filter-bar-fef65d0-md",
  "title": "Enabling Semantic Operators in the Filter Bar",
  "category": "fiori-elements-framework",
  "path": "enabling-semantic-operators-in-the-filter-bar-fef65d0.md",
  "lastModified": "2025-09-29T10:06:38.815Z",
  "tags": [
    "fiori-elements-framework",
    "md",
    "enabling",
    "semantic",
    "operators",
    "the",
    "filter",
    "bar",
    "fef65d0"
  ],
  "headers": [
    "Enabling Semantic Operators in the Filter Bar",
    "Additional Features in SAP Fiori Elements for OData V2",
    "Date Range Options for Individual Fields",
    "Excluding Certain Date Range Types",
    "Using the `DateRangeType` Category",
    "Additional Features in SAP Fiori Elements for OData V4",
    "Setting a Default Value for a Semantic Date Field",
    "Defining Default Values for Operators That Require Parameters",
    "Excluding Certain Date Range Types",
    "Enabling Additional Date Range Operators",
    "More Information"
  ],
  "content": "<!-- loiofef65d03d01a4b2baca28983a5449cf7 -->\n\n# Enabling Semantic Operators in the Filter Bar\n\nYou can use semantic date values, such as *Today* or *Last Week*, on the filter bar of list report and analytical list page applications.\n\n\n\n## Additional Features in SAP Fiori Elements for OData V2\n\n> ### Tip:  \n> -   Navigation to an external application always passes the actual date value that corresponds to the semantic date value that is used.\n> \n> -   The date range configuration that is defined in the manifest file is not applied to custom filters of type date range. For more information on custom filters, see [Adding Custom Fields to the Filter Bar](adding-custom-fields-to-the-filter-bar-5fb9f57.md).\n\nThe semantic date control can be enabled for the fields in the filter bar by setting the `useDateRange` flag to `true` in the manifest. By default, the value is `false` and date picker control is rendered by the filter bar.\n\nThe property must have `sap:filter-restriction=\"interval\"` in the metadata. For example:\n\n> ### Sample Code:  \n> ```\n> <Property Name=\"DeliveryDate\" Type=\"Edm.DateTime\" sap:label=\"Delivery Date\" Precision=\"0\" sap:display-format=\"Date\" sap:filter-restriction=\"interval\" />\n> ```\n\n> ### Sample Code:  \n> Example for CDS\n> \n> ```\n> @Consumption.filter.selectionType: #INTERVAL\n> ```\n\n> ### Sample Code:  \n> Enable a date range filter with all default range types\n> \n> ```\n> \n> \"sap.ui.generic.app\": {\n>     \"pages\": {\n>         \"ListReport|SEPMRA_C_PD_Product: {\n>             \"component\": {\n>                 \"settings\" : {\n>                     \"filterSettings\": {\n>                         \"dateSettings\":{\n>                             \"useDateRange\": true //Default value of the property is false. If set to true all date types will get default date ranges.\n>                         }\n>                     }\n>                 }\n>             }\n>         }\n>     }\n> }\n> ```\n\nThis date range shows all the default settings listed in the [Sample Posting Date](https://ui5.sap.com/#/entity/sap.ui.comp.smartfilterbar.SmartFilterBar/sample/sap.ui.comp.sample.smartfilterbar.UseDateRangeType).\n\n![](images/Date_Range_Filter_with_all_Default_Range_Types_f1642e6.png)\n\nYou can modify the default date range options by specifying the required options as shown in the sample code here. For date fields without specific date range options, the default semantic date range values are displayed because `useDateRange` is set to `true`.\n\n> ### Sample Code:  \n> ```\n> \n> \"sap.ui.generic.app\": {\n>    \"pages\": {\n>         \"component\": {\n>            \"settings\" : {\n>                 ...\n>                 \"filterSettings\": {\n>                     \"dateSettings\":{\n> \t\t\t            \"useDateRange\": true,\n>                         \"fields\": {\n>                             \"DateProperty1\": {\n>                                 //Override for a specific property of type sap:date DateProperty1. This is the most simplest way of removing selected values\n>                                 // from the standard date range. The values which you want to remove or keep needs to be mentioned as selectedValues \n>                                 // in a comma separated format\n>                                 \"selectedValues\": \"TOMORROW,NEXT,LASTYEAR,LAST2WEEKS,LAST3WEEKS,LAST4WEEKS,LAST5WEEKS,YEARTODATE,QUARTER1,QUARTER2,QUARTER3,QUARTER4\",\n>                                 //Below is an optional property. Default value \"exclude\" property is true. If set to false, values listed in the \"selectedValues\" above are shown in the drop down\n>                                 \"exclude\": true\n>                             }\n>                         }\n>                     }\n>                 }\n>             }\n>         }\n>     }\n> }\n> \n> ```\n\n\n\n### Date Range Options for Individual Fields\n\nDate range options on the field level can be enabled by specifying options for individual properties, as shown here.\n\n> ### Sample Code:  \n> ```\n> \"sap.ui.generic.app\": {\n>    \"pages\": {\n>       \"component\": {\n>          \"settings\" : {\n>             ...\n>             \"filterSettings\": {\n>                 \"dateSettings\":{\n>                     \"selectedValues\": \"DAYS,WEEK,MONTH,DATERANGE \",\n>                     \"fields\": {\n>                         \"DateProperty1\": {\n>                             \"selectedValues\": \"TOMORROW,NEXT,LASTYEAR,LAST2WEEKS,LAST3WEEKS,LAST4WEEKS,LAST5WEEKS,YEARTODATE,QUARTER1,QUARTER2,QUARTER3,QUARTER4\",\n>                             \"exclude\": true\n>                         },\n>                         \"DateProperty2\": {\n>                             \"customDateRangeImplementation\": \"SOMULTIENTITY.ext.controller.customDateRangeType\",\n>                             \"selectedValues\": \"FROM,TO,DAYS,WEEK,MONTH,DATERANGE,TODAY,TOMORROW,YEAR,YESTERDAY\",\n>                             \"exclude\": true\n>                         },\n>                         \"DateProperty3\": { \n>                             \"selectedValues\": \"YESTERDAY\",\n>                             \"exclude\": false \n>                         },\n> \t\t            \"DateTimeProperty1\": { \n>                             \"selectedValues\": \"MONTH\",\n>                             \"exclude\": true \n>                         }\n> \n>                         }\n>                     }\n>                 }\n>             }\n>         }\n>     }\n> }\n> \n> ```\n\nThe following types of settings exist, either at the property level or at the default level, under `dateSettings`:\n\n-   The settings maintained at the default level are applicable to all of the date properties and they're overridden if settings are maintained for individual properties.\n\n    In the code sample above, the date ranges mentioned in `selectedValues`\\(`DAYS,WEEK,MONTH,DATERANGE`\\) are applicable for all of the date fields, and the date ranges control is rendered.\n\n    Settings that are maintained under the `fields` level take precendence over the setting maintained at the `dateSettings` level. For example, setting maintained at `DateProperty1` takes precendence over `selectedValues` defined a level above.\n\n-   The date picker control is rendered for a date field if `selectedValues` does not exist under `dateSettings`, the property-specific setting is not maintained under `fields`, and the `useDateRange` property is not set at the filter bar level.\n\n-   The `customDateRangeImplementation` property references a JavaScript class that you use to modify the value list of the date range. You can either remove standard data range values or add custom values.\n\n-   The `SelectedValues` property is a set of standard date range values that you want to include or exclude. The `exclude` property is set to `true` by default. This means that all values given as `selectedValues` from the list of date range filters are excluded. If the `exclude` property is set to `false`, the application shows only selected values in the list of date range filters.\n\n    For example, in the code sample above, the `DateTimeProperty1` filter for all the options that contain `MONTH`, such as `THISMONTH`, `LASTMONTH`, in the date range are excluded.\n\n    > ### Note:  \n    > -   The `customDateRangeImplementation` property takes precedence over the `selectedValues` and `exclude` properties.\n    > \n    >     > ### Example:  \n    >     > Suppose we have 5 date filters, namely, `DateProperty1`, `DateProperty2`, `DateProperty3`, `DateProperty4`, and `DateProperty5`. As shown in the sample code above, `DateProperty1`, `DateProperty2`, and `DateProperty3` take the settings defined for the respective properties, whereas `DateProperty4` and `DateProperty5` take the default `SelectedValues` settings one level above the field-specific configuration.\n    > \n    > -   If you define the semantic date range feature by providing specific fields, you cannot render the fields from the navigation property of the leading entity set as a semantic date range in the filter bar.\n    > \n    > -   Filter fields with `sap:filter-restriction= \"single-value\"` or `\"multi-value\"` are rendered as date pickers in both the list report and the analytical list page.\n\n-   You can also set a default value for a semantic date range. The default value can be used together with `customdateRangeImplementation`, `filter`, or `selectedValues`. It can also be added without any filters. The default value should be part of the list of values for the field. For example, if you exclude `TOMORROW` as a value for the field `CreatedDate`, do not add `TOMORROW` as a `defaultValue`.\n\n    > ### Sample Code:  \n    > ```\n    > \n    > \"filterSettings\": {\n    > \t\"dateSettings\": {\n    > \t\t\"fields\": {\n    > \t\t\t\"CreatedDate\": {\n    > \t\t\t\t\"defaultValue\": {\n    > \t\t\t\t\t\"operation\": \"TOMORROW\"\n    > \t\t\t\t}\n    > \t\t\t},\n    > \t\t\t\"DeliveryDate\": {\n    > \t\t\t\t\"defaultValue\": {\n    > \t\t\t\t\t\"operation\": \"TOMORROW\"\n    > \t\t\t\t},\n    > \t\t\t\t\"filter\": [{\n    > \t\t\t\t\t\"path\": \"key\",\n    > \t\t\t\t\t\"equals\": \"TODAY\",\n    > \t\t\t\t\t\"exclude\": true\n    > \t\t\t\t}]\n    > \t\t\t}\n    > \t\t}\n    > \t}\n    > }\n    > ```\n\n    When the semantic date is part of a navigation context, an app state, or a URL, then the `defaultValue` set in the manifest file is not considered.\n\n    > ### Note:  \n    > Do not provide numeric values as a `defaultValue`. For example, if the `defaultValue` is `TODAYFROMTO`, do not add `FROM(val1)` and `TO(val2)` as the range.\n\n\n\n\n### Excluding Certain Date Range Types\n\nYou can use the `filter` settings to include and exclude specific date range values.\n\nExample 1: If you want to remove `TODAY` from the date range, see the following sample code:\n\n> ### Sample Code:  \n> ```\n> \n> filterSettings: {\n> \tdateSettings: { \n> \t\tuseDateRange: false \n> \t\tfields: {\n> \t\t\t\"PostingDate\": {\n> \t\t\t\t//Alternate way of configuring is using the Filter option. Here the developer should be able to specify\n> \t\t\t\t// the condition specific to each and every value (whether it is a key/category), needs to be excluded\n> \t\t\t\t// or included. You could also specify the operator whether it is contains or equal. This configuration\n> \t\t\t\t// passed directly to the filter bar and therefore anything that is possible in SFB can be configured\n> \t\t\t\t// here as well\n> \t\t\t\t//Application can use this for more complex and detailed configuration\n> \t\t\t\t\"filter\": [{\n> \t\t\t\t\t\tpath: 'key',\n> \t\t\t\t\t\tequals: 'TODAY',\n> \t\t\t\t\t\texclude: true\n> \t\t\t\t\t} // TODAY filter will be removed\n> \t\t\t\t]\n> \t\t\t}\n> \t\t}\n> \t}\n> }\n> ```\n\n![](images/TodayInclude_DateRange_5f57bd3.png)\n\nExample 2: If you want to include `TODAY` and exclude `Today -X/+Y Days`, see the following sample code:\n\n> ### Sample Code:  \n> ```\n> \n> \"filter\": [{\n> \t\t\"path\": \"key\",\n> \t\t\"equals\": \"TODAY\",\n> \t\t\"exclude\": false\n> \t},\n> \t{\n> \t\t\"path\": \"key\",\n> \t\t\"equals\": \"TODAYFROMTO\",\n> \t\t\"exclude\": true\n> \t}\n> ]\n> // \n> ```\n\n> ### Note:  \n> The`customDateRangeImplementation` setting takes priority, followed by `filter` and `selectedValues`, when excluding date range types.\n\n\n\n### Using the `DateRangeType` Category\n\nThe `DateRangeType` category contains a group of `DateRangeType` keys. You can use a category to remove all keys in that category.\n\nFor example, if the `DYNAMIC` category is excluded then keys such as `FROM` and `TO` \\(category : `DYNAMIC.DATE` \\) and `LASTDAYS` and `NEXTDAYS` \\(category : `DYNAMIC.DATE.INT`\\), are not displayed.\n\nIf the category `FIXED` is excluded, then keys such as `TODAY,THISWEEK,THISYEAR, LAST2WEEKS, QUARTER1`, etc. are hidden.\n\n.\n\n> ### Sample Code:  \n> ```\n> \n> \"filter\": [{\n> \t\"path\": \"category\",\n> \t\"contains\": \"FIXED\",\n> \t\"exclude\": true\n> }]\n> // this will remove all the keys under the category that \"contains\" FIXED\n> ```\n\n\n\n<a name=\"loiofef65d03d01a4b2baca28983a5449cf7__section_otf_dzw_jnb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V4\n\nSemantic operators are enabled by default for the following fields:\n\n-   `Edm.Date`-based fields for which `FilterRestrictions.AllowedExpressions` is set to `SingleRange` or `SingleValue`.\n\n-   `Edm.DateTimeOffset`-based fields for which `FilterRestrictions.AllowedExpressions` is set to `SingleRange`.\n\n\nYou can set the `FilterRestrictions` to `SingleRange` as shown in the following sample code:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```\n> \n> <edmx:Reference Uri=\"https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Capabilities.V1.xml\">\n>    <edmx:Include Namespace=\"Org.OData.Capabilities.V1\" Alias=\"Capabilities\" />\n> </edmx:Reference>\n> <Annotations Target=\"com.c_salesordermanage_sd.EntityContainer/SalesOrderManage\">\n>     <Annotation Term=\"Capabilities.FilterRestrictions\">\n>         <Record Type=\"Capabilities.FilterRestrictionsType\">\n>             <PropertyValue Property=\"FilterExpressionRestrictions\">\n>                 <Collection>\n>                     <Record Type=\"Capabilities.FilterExpressionRestrictionType\">\n>                         <PropertyValueProperty=\"Property\"PropertyPath=\"myDate\"/>\n>                         <PropertyValueProperty=\"AllowedExpressions\"String=\"SingleRange\"/>\n>                     </Record>\n>                     …\n>                     …\n>                 </Collection>\n>             </PropertyValue>\n>         </Record>\n>     </Annotation>\n>     …\n>     …\n> </Annotations>\n> \n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> No ABAP CDS annotation sample is available. Please use the local XML annotation.\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> @Capabilities : {\n>    FilterRestrictions : {\n>       FilterExpressionRestrictions :\n>          [{\n>             Property : 'myDate',\n>             AllowedExpressions : 'SingleRange'\n>          }]\n>       }\n> }\n> ...\n> entity MyEntity {\n> ...\n>     myDate: Date;\n> }\n> ```\n\n\n\n### Setting a Default Value for a Semantic Date Field\n\nExtend the manifest for the filter field as follows to set a default value for a semantic date:\n\n> ### Sample Code:  \n> Default value for semantic date field\n> \n> ```\n> \"settings\" : {  \n>    \"contextPath\" : \"/SalesOrderManage\",\n>    \"controlConfiguration\" : {\n>       \"@com.sap.vocabularies.UI.v1.SelectionFields\" : {\n>    …\n>    …\n>          \"filterFields\": {\n>             \"SalesOrderDate\": { \n>                \"settings\": {\n>                   \"defaultValues\": [{\"operator\": \"YESTERDAY\"}] \n>                }\n>             }\n>          }\n>    …\n>    …\n>       }\n>    }\n> }\n> \n> ```\n\nThe value set to `operator` is set as the default operator for the semantic date field. In this case, the default value is `\"YESTERDAY\"`.\n\nHere's a list of fully supported operators:\n\n-   Single date-based operators\n\n    -   `\"YESTERDAY\"`\n\n    -   `\"TOMORROW\"`\n\n    -   `\"TODAY\"`\n\n    -   `\"FIRSTDAYWEEK\"`\n\n    -   `\"LASTDAYWEEK\"`\n\n    -   `\"FIRSTDAYMONTH\"`\n\n    -   `\"LASTDAYMONTH\"`\n\n    -   `\"FIRSTDAYQUARTER\"`\n\n    -   `\"LASTDAYQUARTER\"`\n\n    -   `\"FIRSTDAYYEAR\"`\n\n    -   `\"LASTDAYYEAR\"`\n\n\n-   Date range-based operators\n\n    -   `\"THISWEEK\"`\n\n    -   `\"LASTWEEK\"`\n\n    -   `\"NEXTWEEK\"`\n\n    -   `\"THISMONTH\"`\n\n    -   `\"LASTMONTH\"`\n\n    -   `\"NEXTMONTH\"`\n\n    -   `\"THISQUARTER\"`\n\n    -   `\"LASTQUARTER\"`\n\n    -   `\"NEXTQUARTER\"`\n\n    -   `\"QUARTER1\"`\n\n    -   `\"QUARTER2\"`\n\n    -   `\"QUARTER3\"`\n\n    -   `\"QUARTER4\"`\n\n    -   `\"THISYEAR\"`\n\n    -   `\"LASTYEAR\"`\n\n    -   `\"NEXTYEAR\"`\n\n    -   `\"YEARTODATE\"`\n\n    -   `\"DATETOYEAR\"`\n\n\n\n> ### Note:  \n> -   Default values coming from the `SelectionVariant` for the semantic date fields are ignored – only the manifest-based default values are considered.\n> \n> -   When using the default operators, check what the operator you're using evaluates to on the UI to ensure it matches your use case.\n> \n>     > ### Example:  \n>     > The standard fiscal quarter `\"QUARTER1\"` evaluates to the period between January and March. If you're using non-standard fiscal quarters, the default value won't be suitable for you.\n\n\n\n### Defining Default Values for Operators That Require Parameters\n\nIf applications want to provide a default value for the semantic date field that requires an operator that needs a parameter value \\(for example, an application developer wants to set NEXT \"X\" DAYS as the default operator and a default value for \"X\"\\), the manifest must be configured accordingly. The following table provides the manifest settings for the various operators that need a parameter value:\n\n**Defining Default Values for Operators That Require Parameters**\n\n\n<table>\n<tr>\n<th valign=\"top\">\n\nOperator\n\n</th>\n<th valign=\"top\">\n\n`manifest.json` Sample\n\n</th>\n<th valign=\"top\">\n\nComment\n\n</th>\n</tr>\n<tr>\n<td valign=\"top\">\n\nDATE\n\n</td>\n<td valign=\"top\">\n\n```\n\"@com.sap.vocabularies.UI.v1.SelectionFields\": {\n   \"filterFields\": {\n      \"SalesOrderDate\": {\n         \"settings\": {\n            \"defaultValues\" : [ {\"operator\": \"DATE\",   \"values\": [\"2018-12-28\"]}]             }\n      }\n   }\n}\n```\n\n\n\n</td>\n<td valign=\"top\">\n\nRequired date format: YYYY-MM-DD\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\nFROM\n\n</td>\n<td valign=\"top\">\n\n```\n\"@com.sap.vocabularies.UI.v1.SelectionFields\": {\n   \"filterFields\": {\n      \"SalesOrderDate\": {\n         \"settings\": {\n            \"defaultValues\" : [ {\"operator\": \"FROM\",   \"values\": [\"2018-11-28\"]}]\n\n         }\n      }\n   }\n}\n```\n\n\n\n</td>\n<td valign=\"top\">\n\nRequired date format: YYYY-MM-DD\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\nTO\n\n</td>\n<td valign=\"top\">\n\n```\n\"@com.sap.vocabularies.UI.v1.SelectionFields\": {\n   \"filterFields\": {\n      \"SalesOrderDate\": {\n         \"settings\": {\n            \"defaultValues\" : [ {\"operator\": \"TO\",   \"values\": [\"2019-11-02\"]}]\n\n         }\n      }\n   }\n}\n```\n\n\n\n</td>\n<td valign=\"top\">\n\nRequired date format: YYYY-MM-DD\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\nDATERANGE\n\n</td>\n<td valign=\"top\">\n\n```\n\"@com.sap.vocabularies.UI.v1.SelectionFields\": {\n\n   \"filterFields\": {\n      \"SalesOrderDate\": {\n         \"settings\": {\n            \"defaultValues\" : [ {\"operator\": \"DATERANGE\",   \"values\": [\"2019-11-02\",\"2022-01-01\"]}]\n\n         }\n      }\n   }\n}\n```\n\n\n\n</td>\n<td valign=\"top\">\n\nRequired date format: YYYY-MM-DD\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\nTODAYFROMTO\n\n</td>\n<td valign=\"top\">\n\n```\n\"@com.sap.vocabularies.UI.v1.SelectionFields\": {\n\n   \"filterFields\": {\n      \"SalesOrderDate\": {\n         \"settings\": {\n            \"defaultValues\" : [ {\"operator\": \"TODAYFROMTO\", \"values\":[5,6]}]\n\n         }\n      }\n   }\n}\n```\n\n\n\n</td>\n<td valign=\"top\">\n\nFirst value: days before TODAY\n\nSecond value: Number of days after TODAY\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\nLastXDays / LastXWeeks / LastXMonths / LastXQuarters / LastXYears\n\n</td>\n<td valign=\"top\">\n\n```\n\"@com.sap.vocabularies.UI.v1.SelectionFields\": {\n \n   \"filterFields\": {\n      \"SalesOrderDate\": {\n         \"settings\": {\n            \"defaultValues\" : [ {\"operator\": \"LASTDAYS\", \"values\":[6]}]\n         }\n\n      }\n   }\n}\n```\n\n\n\n</td>\n<td valign=\"top\">\n\n \n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\nNextXDays / NextXWeeks / NextXMonths / NextXQuarters / NextXYears\n\n</td>\n<td valign=\"top\">\n\n```\n\"@com.sap.vocabularies.UI.v1.SelectionFields\": {\n\n   \"filterFields\": {\n      \"SalesOrderDate\": {\n         \"settings\": {\n            \"defaultValues\" : [ {\"operator\": \"NEXTDAYS\", \"values\":[6]}]\n         }\n      }\n   }\n\n}\n```\n\n\n\n</td>\n<td valign=\"top\">\n\n \n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\nSpecificMonth\n\n</td>\n<td valign=\"top\">\n\n```\n\"@com.sap.vocabularies.UI.v1.SelectionFields\": {\n   \"filterFields\": {\n      \"SalesOrderDate\": {\n         \"settings\": {\n            \"defaultValues\" : [ {\"operator\": \"SPECIFICMONTH\", \"values\":[1]}]\n         }\n      }\n   }\n\n} \n```\n\n\n\n</td>\n<td valign=\"top\">\n\nThe numeric assignment is zero \\(for example, January is 0\\)\n\n</td>\n</tr>\n</table>\n\n> ### Tip:  \n> If the semantic filter field is from a navigation entity set, you must specify the filter field name in the `\"<navigationProperty>::<filterField>\"` format. In the following example, the `\"SalesOrderDate\"` comes from a navigation entity set where `\"_Item\"` is the name of the associated navigation property:\n> \n> > ### Sample Code:  \n> > Semantic filter field from navigation entity set\n> > \n> > ```\n> > \"@com.sap.vocabularies.UI.v1.SelectionFields\": {\n> > \n> >    \"filterFields\": {\n> >       \"_Item::SalesOrderDate\": {\n> >          \"settings\": {\n> >             \"defaultValues\" : [ {\"operator\": \"SPECIFICMONTH\", \"values\":[1]}]\n> >          }\n> >       }\n> >    }\n> >  \n> > }\n> > ```\n\n> ### Note:  \n> You can't define default values as described in this section for `Edm.DateTime`-based fields.\n\n\n\n### Excluding Certain Date Range Types\n\nYou can use the `operatorConfiguration` settings to include and exclude specific date range values. Applications can use this setting for more complex and detailed configuration.\n\n-   Example 1\n\n    To remove `\"TODAY\"` from the date range, proceed as shown in the following sample code:\n\n    > ### Sample Code:  \n    > ```\n    > \"filterFields\": {\n    >     \"SalesOrderDate\": {\n    >        \"settings\": {\n    >            \"operatorConfiguration\": [\n    >                  {\n    >                      \"path\": \"key\",\n    >                       \"equals\": \"TODAY\",\n    >                       \"exclude\": true\n    >                   } // TODAY filter will be removed\n    >             ]\n    >        }\n    >     }\n    >  }\n    > ```\n\n    You can see the result in the following screenshot:\n\n    ![](images/Date_Range_1_e0b551e.png)\n\n-   Example 2\n\n    To include `\"TODAY\"` and exclude \"Today -X/+Y Days\", proceed as shown in the following sample code:\n\n    > ### Sample Code:  \n    > ```\n    > \"filterFields\": {\n    >     \"SalesOrderDate\": {\n    >        \"settings\": {\n    >            \"operatorConfiguration\": [\n    >                  {\n    >                      \"path\": \"key\",\n    >                       \"equals\": \"TODAY\",\n    >                       \"exclude\": false\n    >                   },\n    >                   {\n    >                     \"path\": \"key\",\n    >                      \"equals\": \"TODAYXYDAYS\",\n    >                      \"exclude\": true\n    >                   }\n    >             ]\n    >        }\n    >     }\n    >  }\n    > ```\n\n    You can see the result in the following screenshot:\n\n    ![](images/Date_Range_2_a9217ea.png)\n\n    You can find all supported operators for the `\"exclude\"` configuration in the following list:\n\n    -   `\"DATE\"`\n\n    -   `\"FROM\"`\n\n    -   `\"TO\"`\n\n    -   `\"DATERANGE\"`\n\n    -   `\"TODAY\"`\n\n    -   `\"YESTERDAY\"`\n\n    -   `\"TOMORROW\"`\n\n    -   `\"TODAYFROMTO\"`\n\n    -   `\"LASTDAYS\"`\n\n    -   `\"NEXTDAYS\"`\n\n    -   `\"THISWEEK\"`\n\n    -   `\"LASTWEEK\"`\n\n    -   `\"LASTWEEKS\"`\n\n    -   `\"NEXTWEEK\"`\n\n    -   `\"NEXTWEEKS\"`\n\n    -   `\"SPECIFICMONTH\"`\n\n    -   `\"THISMONTH\"`\n\n    -   `\"LASTMONTH\"`\n\n    -   `\"LASTMONTHS\"`\n\n    -   `\"NEXTMONTH\"`\n\n    -   `\"NEXTMONTHS\"`\n\n    -   `\"THISQUARTER\"`\n\n    -   `\"LASTQUARTER\"`\n\n    -   `\"LASTQUARTERS\"`\n\n    -   `\"NEXTQUARTER\"`\n\n    -   `\"NEXTQUARTERS\"`\n\n    -   `\"QUARTER1\"`\n\n    -   `\"QUARTER2\"`\n\n    -   `\"QUARTER3\"`\n\n    -   `\"QUARTER4\"`\n\n    -   `\"THISYEAR\"`\n\n    -   `\"LASTYEAR\"`\n\n    -   `\"LASTYEARS\"`\n\n    -   `\"NEXTYEAR\"`\n\n    -   `\"NEXTYEARS\"`\n\n    -   `\"YEARTODATE\"`\n\n    -   `\"DATETOYEAR\"`\n\n\n    > ### Note:  \n    > -   Excluding specific semantic operators is only allowed for `SingleRange`-based *Date* fields.\n    > \n    > -   When you exclude an operator for a filter field that's based on a semantic date and comes from a navigation entity set, ensure that you specify the `filterField` using the following format:\n    > \n    >     ```\n    >     \"<navigationProperty>::<propertyName>\"\n    >     ```\n    > \n    >     > ### Example:  \n    >     > If `\"_Items\"` is the navigation property and `\"DispatchDate\"` is the property, then the `filterField` for which `\"settings\"` is defined will be `\"_Items::DispatchDate\"`.\n\n\n\n\n### Enabling Additional Date Range Operators\n\nYou can now use additional date range operators for single range-based fields of type `Edm.Date` or `Edm.DateTimeOffset`. Using these operators, you can combine the single value date operators, such as `TODAY` or `TOMORROW,` with the *FROM* or *TO* operations.\n\nThe following additional operators are available:\n\n-   \"FROMTODAY\"\n\n-   \"FROMTOMORROW\"\n\n-   \"FROMYESTERDAY\"\n\n-   \"FROMFIRSTDAYWEEK\"\n\n-   \"FROMLASTDAYWEEK\"\n\n-   \"FROMFIRSTDAYMONTH\"\n\n-   \"FROMLASTDAYMONTH\"\n\n-   \"FROMFIRSTDAYQUARTER\"\n\n-   \"FROMLASTDAYQUARTER\"\n\n-   \"FROMFIRSTDAYYEAR\"\n\n-   \"FROMLASTDAYYEAR\"\n\n-   \"TOTODAY\"\n\n-   \"TOTOMORROW\"\n\n-   \"TOYESTERDAY\"\n\n-   \"TOFIRSTDAYWEEK\"\n\n-   \"TOLASTDAYWEEK\"\n\n-   \"TOFIRSTDAYMONTH\"\n\n-   \"TOLASTDAYMONTH\"\n\n-   \"TOFIRSTDAYQUARTER\"\n\n-   \"TOLASTDAYQUARTER\"\n\n-   \"TOFIRSTDAYYEAR\"\n\n-   \"TOLASTDAYYEAR\"\n\n\nThese additional semantic date operators are not available by default. To enable them, you can extend the manifest configuration as shown in the following sample code:\n\n> ### Sample Code:  \n> ```\n> \"targets\": {\n>    \"SalesOrderManageList\": {\n>       \"options\": {\n>          \"settings\": {\n>             \"controlConfiguration\": {\n>                \"@com.sap.vocabularies.UI.v1.SelectionFields\": {\n>                   \"filterFields\": {\n>                      \"SalesOrderDate\": {\n>                         \"settings\": {\n>                            \"operatorConfiguration\": [\n>                            {\n>                               \"path\": \"key\",\n>                               \"equals\": \"FROMTODAY\",\n>                               \"exclude\": false // By default, \"exclude\" is set to true for all these additional date range operators and have to be explicitly set to false in case the operator needs to be enabled\n>                            },\n>                           {\n>                              \"path\": \"key\",\n>                              \"equals\": \"TOYESTERDAY\",\n>                              \"exclude\": false\n>                           }]\n>                        }\n>                     },\n>                     …….\n>                     …….\n>                  }\n> ```\n\nYou can also use these additional semantic date range operators as default values for the filter fields.\n\n> ### Note:  \n> These operators are not available when using the `Filter Bar` building block. They are also not available as filters in the table or chart within the object page.\n\n\n\n<a name=\"loiofef65d03d01a4b2baca28983a5449cf7__section_q5w_tgf_nmb\"/>\n\n## More Information\n\nFor more information about configuring filter bars in a list report, see [Adapting the Filter Bar](adapting-the-filter-bar-609c39a.md).\n\nDepending on the use of the date range filter, the default tile type also varies. For more information about creating tiles for the semantic date range configuration, see [Extending the Bookmark Function to Save Static Tiles to the SAP Fiori Launchpad](extending-the-bookmark-function-to-save-static-tiles-to-the-sap-fiori-launchpad-7e34ea9.md).\n\n",
  "excerpt": "<!-- loiofef65d03d01a4b2baca28983a5449cf7 --> Enabling Semantic Operators in the Filter Bar You can use semantic date values, such as Today or Last Week, on the filter bar of list report and analytica...",
  "wordCount": 3260,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}