{
  "id": "sapui5-using-the-extensionapi-bd2994b-md",
  "title": "Using the `extensionAPI`",
  "category": "fiori-elements-framework",
  "path": "using-the-extensionapi-bd2994b.md",
  "lastModified": "2025-09-29T10:06:38.870Z",
  "tags": [
    "fiori-elements-framework",
    "md",
    "using",
    "the",
    "extensionapi",
    "bd2994b"
  ],
  "headers": [
    "Using the `extensionAPI`",
    "API Methods",
    "Additional Features in SAP Fiori Elements for OData V2",
    "API Methods",
    "Using the `invokeActions` Method of the `extensionAPI`",
    "Additional Features in SAP Fiori Elements for OData V4",
    "API Methods"
  ],
  "content": "<!-- loiobd2994b69ef542998becbc69ab093f7e -->\n\n# Using the `extensionAPI`\n\nThe `extensionAPI` consists of several elements that are described below. It can be used for the list report and object page.\n\n\n\n## API Methods\n\nWhen coding the implementation of an extension hook or an event handler used in a view extension, you can use the public methods of `sap.ui.core.mvc.Controller`. However: Don't access or manipulate controls, properties, models, or other internal objects created by the SAP Fiori elements framework.\n\nAny other methods or properties of the controller \\(in particular any components whose names start with `'_'`\\) should be considered private and therefore should not be used.\n\n\n\n<a name=\"loiobd2994b69ef542998becbc69ab093f7e__section_e55_4zp_znb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V2\n\nThe `extensionAPI` can also be used for the analytical list page.\n\n\n\n### API Methods\n\n> ### Caution:  \n> Do not create any instances of classes in the namespace `sap.suite.ui.generic.template`. This namespace is not intended for public use.\n\nYou can also access services provided by the template framework. From the controller, you can access these services through `<YourController>.extensionAPI`.\n\nThis gets you an object that is specific to the template you are currently enhancing, as shown in the examples below:\n\n\n<table>\n<tr>\n<th valign=\"top\">\n\nTemplate\n\n</th>\n<th valign=\"top\">\n\nInstance\n\n</th>\n</tr>\n<tr>\n<td valign=\"top\">\n\nList Report\n\n</td>\n<td valign=\"top\">\n\n`sap.suite.ui.generic.template.ListReport.extensionAPI.ExtensionAPI` \n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\nObject Page\n\n</td>\n<td valign=\"top\">\n\n`sap.suite.ui.generic.template.ObjectPage.extensionAPI.ExtensionAPI` \n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\nAnalytical List Page\n\n</td>\n<td valign=\"top\">\n\n`sap.suite.ui.generic.template.AnalyticalListPage.extensionAPI.ExtensionAPI`\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n\n\n</td>\n<td valign=\"top\">\n\nÂ \n\n</td>\n</tr>\n</table>\n\n> ### Note:  \n> Do not rely on the names of these classes in your coding, as they can still be changed. However, the set of methods provided by these objects will only be extended in a compatible way.\n\nFor more information, see [ExtensionAPI](https://ui5.sap.com/#/api/sap.suite.ui.generic.template.extensionAPI.extensionAPI), [ExtensionAPI for list report extensions](https://ui5.sap.com/#/api/sap.suite.ui.generic.template.ListReport.extensionAPI.ExtensionAPI) and [ExtensionAPI for object page extensions](https://ui5.sap.com/#/api/sap.suite.ui.generic.template.ObjectPage.extensionAPI.ExtensionAPI).\n\n> ### Sample Code:  \n> ```\n> /*\n>  * Assumed use case: When the price is changed to a critical value (more than 1000), an email should be generated and sent.\n>  * This should not happen for changes to the draft but only after activation has been successfully processed in the\n>  * back-end system.\n>  */\n> \t\t\t\t\n>  (function() {\n> \t\"use strict\";\n> \t\t\t\t\n> \tfunction onAfterActivate(oEvent) {\n> \t\t/*\n> \t\t* AfterActivate event is raised at the end of front-end processing for activation. The object handed into the\n> \t\t* handler contains a promise that is resolved after a successful response from the back-end system.\n> \t\t*/\n> \t\toEvent.activationPromise.then(function(oResponse) {\n> \t\t\tif (oResponse.data.Price > 1000) {\n> \t\t\tsap.m.URLHelper.triggerEmail(null, \"critical price change\", \"changed price of \" + oResponse.data.Product_Text\n> \t\t\t+ \" to \" + oResponse.data.Price + \" \" + oResponse.data.Currency);\n> \t\t\t}\n> \t\t});\n> \t}\t\t\n> ```\n\n\n\n### Using the `invokeActions` Method of the `extensionAPI`\n\n`invokeActions` method calls a particular action multiple times and submits changes to the back end.\n\n**Parameter Details**\n\n\n<table>\n<tr>\n<th valign=\"top\">\n\nParameter Name\n\n</th>\n<th valign=\"top\">\n\nDetails\n\n</th>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`@param {string} sFunctionName` \n\n</td>\n<td valign=\"top\">\n\nName of the function or action\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`@param {array|sap.ui.model.Context} vContext`\n\n</td>\n<td valign=\"top\">\n\nDenotes the binding context\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`@param {map} [mUrlParameters]`\n\n</td>\n<td valign=\"top\">\n\nDenotes URL parameters \\(name-value pairs\\) for the function or action. This is not present in `oSettings` for backward compatibility\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`@param {object} oSettings`\n\n</td>\n<td valign=\"top\">\n\nSets parameters for invoking application controller's `invokeActions` method\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`@param {boolean} oSettings.bInvocationGroupingChangeSet`\n\n</td>\n<td valign=\"top\">\n\nDetermines whether common or unique changeset is sent in batches\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`@returns {Promise} A <code>Promise</code>`\n\n</td>\n<td valign=\"top\">\n\nPerforms asynchronous execution of the action, resolving the same result as the `<code>Promise</code>`\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\n`@throws {Error}`\n\n</td>\n<td valign=\"top\">\n\nThrows an error when the OData function import does not exists or the action input parameters are invalid\n\n</td>\n</tr>\n</table>\n\n\n\n<a name=\"loiobd2994b69ef542998becbc69ab093f7e__section_myh_q3q_znb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V4\n\n\n\n### API Methods\n\nYou can also access services provided by the template framework. From the controller, you can access these services through `getExtensionAPI`.\n\nThis gets you an object that is specific to the template you are currently enhancing, as shown in the examples below:\n\n\n<table>\n<tr>\n<th valign=\"top\">\n\nTemplate\n\n</th>\n<th valign=\"top\">\n\nInstance\n\n</th>\n</tr>\n<tr>\n<td valign=\"top\">\n\nList Report\n\n</td>\n<td valign=\"top\">\n\n`sap.fe.templates.ListReport.ExtensionAPI` \n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\nObject Page\n\n</td>\n<td valign=\"top\">\n\n`sap.fe.templates.ObjectPage.ExtensionAPI` \n\n</td>\n</tr>\n</table>\n\n> ### Note:  \n> Do not rely on the names of these classes in your coding, as they can still be changed. However, the set of methods provided by these objects will only be extended in a compatible way.\n\nFor information about the `ExtensionAPI`, see [API Reference](https://ui5.sap.com/#/api/sap.fe.core.ExtensionAPI).\n\n",
  "excerpt": "<!-- loiobd2994b69ef542998becbc69ab093f7e --> Using the extensionAPI The extensionAPI consists of several elements that are described below. It can be used for the list report and object page. API Met...",
  "wordCount": 783,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}