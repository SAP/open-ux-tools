{
  "id": "sapui5-configuring-the-content-of-quick-views-c245ad7-md",
  "title": "Configuring the Content of Quick Views",
  "category": "fiori-elements-framework",
  "path": "configuring-the-content-of-quick-views-c245ad7.md",
  "lastModified": "2025-09-29T10:06:38.788Z",
  "tags": [
    "fiori-elements-framework",
    "md",
    "configuring",
    "the",
    "content",
    "quick",
    "views",
    "c245ad7"
  ],
  "headers": [
    "Configuring the Content of Quick Views",
    "Additional Features in SAP Fiori Elements for OData V2",
    "Title Area",
    "Content Area",
    "Field Groups",
    "Contacts",
    "DataPoints",
    "Additional Features in SAP Fiori Elements for OData V4",
    "Title Area",
    "Content Area",
    "Contacts",
    "`DataPoints`",
    "Footer Section"
  ],
  "content": "<!-- loioc245ad757dc64694842e00c40e677cd8 -->\n\n# Configuring the Content of Quick Views\n\nYou can configure the content area of the quick views to display specific data.\n\nThe content area, consisting of a title and additional information, for example, a field group, has a default behavior and can be adapted to your needs.\n\n\n\n<a name=\"loioc245ad757dc64694842e00c40e677cd8__section_i3t_ny2_3mb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V2\n\n\n\n### Title Area\n\n-   Images\n\n    -   To display an image, annotate `HeaderInfo.ImageUrl` or `HeaderInfo.TypeImageUrl`. If you don't, no image is displayed.\n\n    -   If you annotate `HeaderInfo.ImageUrl` and `HeaderInfo.TypeImageUrl`, `ImageUrl` is evaluated first, and `TypeImageUrl` second. The `ImageUrl/TypeImageUrl` string and path including navigation properties are evaluated.\n\n\n-   Title\n\n    -   Enter the title according to the `TextArrangement` annotation. See the figure below: `TextArrangementType/TextLast`. Note that *Computer Systems* is declared as `TextLast` here.\n\n        ![](images/Title_in_Quick_View_adc6a09.png)\n\n    -   If a main navigation has been defined, the title is displayed as a link. In the example below, see the <code><i>Asia High tech</i></code> link:\n\n        ![](images/Title_-_Link_8d1888b.png)\n\n\n-   Description\n    -   The description is always displayed beneath the title and must be filled according to the `TextArrangement` annotation.\n\n    -   If the description is not filled, the title size is increased automatically and the description field remains empty, as shown below \\(`TextArrangementType/TextOnly`\\).\n\n        ![](images/Description_9b4acac.png)\n\n\n\n\n\n### Content Area\n\nThe content area can contain field groups, contacts, and DataPoints.\n\n\n\n### Field Groups\n\n-   You can include any number of field groups or none at all. The example below shows a quick view with no reference facet, however, a header image included:\n\n    ![](images/Field_Group_cf98382.png)\n\n-   A field group can have a label. It is taken from within the `<Record Type=\"UI.ReferenceFacet\">`.\n\n-   For fields, the path including navigation properties is evaluated.\n\n-   Fields support annotations such as `IsEmailAddress`, `IsUrl`, and `IsPhoneNumber`. Note that any links that would create a popover on the quick view are ignored by the system.\n\n-   There are different types of content for field groups:\n\n    -   Interpreted by `SmartField`: `DataField` including criticality, `DataFieldWithUrl`\n\n    -   Interpreted by SAP Fiori elements: `DataFieldWithIntentBasedNavigation`\n\n\n\n\n\n### Contacts\n\nYou can display any number of contacts or none at all. See the example below:\n\n![](images/Contacts_7fbc5f9.png)\n\nThe following applies:\n\n-   You can place the contact anywhere. It is specified by the position of the reference facet in the collection.\n\n-   If the picture, title, and description belonging to a contact \\(contact title area\\) correspond with the content of the title area , the contact title area is not displayed.\n\n-   The reference facet must point to a `com.sap.vocabularies.Communication.v1.Contact`.\n\n\n\n\n### DataPoints\n\n-   You can place an existing DataPoint in your annotation.\n\n-   You can place the DataPoint anywhere. It is specified by the position of the reference facet in the collection.\n\n-   A DataPoint can have a label. It is taken from within the `<Record Type=\"UI.ReferenceFacet\">`.\n\n\n![](images/DataPoint_in_QuickView_5da4f79.png)\n\nThe sample codes show a quick view facet containing field group, contact and DataPoint:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```xml\n> <Annotations Target=\"STTA_PROD_MAN.STTA_C_MP_SupplierType\"> \n>    <Annotation Term=\"UI.QuickViewFacets\">\n>       <Collection>\n>          <Record Type=\"UI.ReferenceFacet\">\n>             <PropertyValue Property=\"Target\" AnnotationPath=\"@UI.FieldGroup#SupplierQuickViewPOC_FieldGroup_1\" />\n>          </Record>                        \n>          <Record Type=\"UI.ReferenceFacet\">\n>             <PropertyValue Property=\"Label\" String=\"Main Contact Person\" />\n>             <PropertyValue Property=\"Target\" AnnotationPath=\"@Communication.Contact#KeyAccount\"/>\n>          </Record>\n>          <Record Type=\"UI.ReferenceFacet\">\n>             <PropertyValue Property=\"Label\" String=\"DataPoint in QV\"/>\n>             <PropertyValue Property=\"Target\" AnnotationPath=\"@UI.DataPoint#Product\"/>\n>          </Record> \n>       </Collection>\n>    </Annotation>\n> </Annotations>\n> \n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> ```\n> \n> annotate view STTA_C_MP_SUPPLIER with {\n> @UI.Facet: [\n>   {\n>     targetQualifier: 'SupplierQuickViewPOC_FieldGroup_1',\n>     type: #FIELDGROUP_REFERENCE,\n>     purpose: #QUICK_VIEW\n>   },\n>   {\n>     label: 'Main Contact Person',\n>     targetQualifier: 'KeyAccount',\n>     type: #CONTACT_REFERENCE,\n>     purpose: #QUICK_VIEW\n>   },\n>   {\n>     label: 'DataPoint in QV',\n>     targetQualifier: 'Product',\n>     type: #DATAPOINT_REFERENCE,\n>     purpose: #QUICK_VIEW\n>   }\n> ]\n> supplier;\n> }\n> ```\n\n\n\n<a name=\"loioc245ad757dc64694842e00c40e677cd8__section_spl_mz2_3mb\"/>\n\n## Additional Features in SAP Fiori Elements for OData V4\n\n\n\n### Title Area\n\n-   Images\n\n    -   If you don't provide `HeaderInfo.ImageUrl` or `HeaderInfo.TypeImageUrl`, you can provide initials in the `HeaderInfo.Initials` annotation. The initials are displayed if no `HeaderInfo.ImageUrl` or `HeaderInfo.TypeImageUrl` is provided.\n\n    -   If no `HeaderInfo.ImageUrl`, `HeaderInfo.TypeImageUrl`, or `HeaderInfo.Initials` is provided, no image is displayed.\n\n\n-   Title\n\n    -   The title is taken from `HeaderInfo.Title`.\n\n        ![](images/Title_in_Quick_View_adc6a09.png)\n\n    -   If a main navigation has been defined using the `sap-tag` parameter `primaryAction`, the title is displayed as a link. For more information about how to define a primary action, see [Primary actions](https://help.sap.com/docs/ABAP_PLATFORM_NEW/a7b390faab1140c087b8926571e942b7/ea131c68c5de4978a936d2286025ed0f.html?version=202310.001#primary-actions).\n\n        In the example below, see the <code><i>Asia High tech</i></code> link:\n\n        ![](images/Title_-_Link_8d1888b.png)\n\n\n    > ### Restriction:  \n    > Navigation from the title link using the browser option *Open link in new tab* is not possible. Instead, the navigation links to SAP Fiori launchpad.\n\n-   Subtitle\n\n    -   The description is taken from the `HeaderInfo.Description` annotation of the target entity.\n\n    -   If the `HeaderInfo.Description` is not maintained in the annotation, the subtitle displays the label of the source property.\n\n\n-   Description\n    -   The description is taken from the `HeaderInfo.Description` annotation.\n\n        ![](images/Description_9b4acac.png)\n\n\n\n\n\n### Content Area\n\nThe content area can contain field groups, contacts, and `DataPoints`.\n\n**Field Groups**\n\n-   You can include any number of field groups or none at all. The example below shows a quick view with no reference facet, however, a header image included:\n\n    ![](images/Field_Groups_7910b76.png)\n\n-   A field group can have a label. It is taken from within the `<Record Type=\"UI.ReferenceFacet\">`.\n\n-   For fields, the path including navigation properties is evaluated.\n\n-   Fields support annotations such as `IsEmailAddress`, `IsUrl`, and `IsPhoneNumber`. Note that any links that create a popover on the quick view are ignored by the system.\n\n-   There are different types of content for field groups:\n\n    -   Interpreted by `SmartField`: `DataField` including criticality, `DataFieldWithUrl`\n\n    -   Interpreted by SAP Fiori elements: `DataFieldWithIntentBasedNavigation`\n\n\n\n\n\n### Contacts\n\nYou can display any number of contacts or none at all. See the example below:\n\n![](images/Contacts_64e1252.png)\n\nThe following applies:\n\n-   You can place the contact anywhere. It is specified by the position of the reference facet in the collection.\n\n-   If the picture, title, and description belonging to a contact \\(contact title area\\) correspond with the content of the title area , the contact title area is not displayed.\n\n-   The reference facet must point to a `com.sap.vocabularies.Communication.v1.Contact`.\n\n\n\n\n### `DataPoints`\n\n-   You can place an existing `DataPoint` in your annotation.\n\n-   You can place the `DataPoint` anywhere. It is specified by the position of the reference facet in the collection.\n\n-   A `DataPoint` can have a label. It is taken from within the `<Record Type=\"UI.ReferenceFacet\">`.\n\n\n![](images/DataPoint_in_QuickView_5da4f79.png)\n\nThe sample codes show a quick view facet containing field group, contact and `DataPoint`:\n\n> ### Sample Code:  \n> XML Annotation\n> \n> ```xml\n> <Annotations Target=\"STTA_PROD_MAN.STTA_C_MP_SupplierType\"> \n>    <Annotation Term=\"UI.QuickViewFacets\">\n>       <Collection>\n>          <Record Type=\"UI.ReferenceFacet\">\n>             <PropertyValue Property=\"Target\" AnnotationPath=\"@UI.FieldGroup#SupplierQuickViewPOC_FieldGroup_1\" />\n>          </Record>                        \n>          <Record Type=\"UI.ReferenceFacet\">\n>             <PropertyValue Property=\"Label\" String=\"Main Contact Person\" />\n>             <PropertyValue Property=\"Target\" AnnotationPath=\"@Communication.Contact#KeyAccount\"/>\n>          </Record>\n>          <Record Type=\"UI.ReferenceFacet\">\n>             <PropertyValue Property=\"Label\" String=\"DataPoint in QV\"/>\n>             <PropertyValue Property=\"Target\" AnnotationPath=\"@UI.DataPoint#Product\"/>\n>          </Record> \n>       </Collection>\n>    </Annotation>\n> </Annotations>\n> \n> ```\n\n> ### Sample Code:  \n> ABAP CDS Annotation\n> \n> ```\n> \n> annotate view STTA_C_MP_SUPPLIER with {\n> @UI.Facet: [\n>   {\n>     targetQualifier: 'SupplierQuickViewPOC_FieldGroup_1',\n>     type: #FIELDGROUP_REFERENCE,\n>     purpose: #QUICK_VIEW\n>   },\n>   {\n>     label: 'Main Contact Person',\n>     targetQualifier: 'KeyAccount',\n>     type: #CONTACT_REFERENCE,\n>     purpose: #QUICK_VIEW\n>   },\n>   {\n>     label: 'DataPoint in QV',\n>     targetQualifier: 'Product',\n>     type: #DATAPOINT_REFERENCE,\n>     purpose: #QUICK_VIEW\n>   }\n> ]\n> supplier;\n> }\n> ```\n\n> ### Sample Code:  \n> CAP CDS Annotation\n> \n> ```\n> \n> annotate STTA_PROD_MAN.STTA_C_MP_SupplierType with @(\n>     UI.QuickViewFacets : [\n>         {\n>             $Type : 'UI.ReferenceFacet',\n>             Target : '@UI.FieldGroup#SupplierQuickViewPOC_FieldGroup_1'\n>         },\n>         {\n>             $Type : 'UI.ReferenceFacet',\n>             Label : 'Main Contact Person',\n>             Target : '@Communication.Contact#KeyAccount'\n>         },\n>         {\n>             $Type : 'UI.ReferenceFacet',\n>             Label : 'DataPoint in QV',\n>             Target : '@UI.DataPoint#Product'\n>         }\n>     ]\n> );\n> ```\n\n\n\n### Footer Section\n\nTo enable navigation from a quick view facet, use the `SemanticObject` annotation as follows:\n\n-   With a `ReferentialConstraint`\n\n    In the metadata document, you can find the reference to the association end type. Check for a referential constraint that includes the identified property as `Dependent`. For the `Supplier` property in the entity type `STTA_C_MP_ProductType`, which has a set of navigation properties, only `to_Supplier` includes the `Supplier` property as `Dependent`.\n\n    > ### Sample Code:  \n    > XML Annotation\n    > \n    > ```xml\n    > <Association Name=\"assoc_2CCAF987BA334B3BD1DF2404F50BC9C5\" sap:content-version=\"1\">\n    >     <End Type=\"STTA_PROD_MAN.STTA_C_MP_ProductType\" Multiplicity=\"1\" Role=\"FromRole_assoc_2CCAF987BA334B3BD1DF2404F50BC9C5\"/>\n    >     <End Type=\"STTA_PROD_MAN.STTA_C_MP_SupplierType\" Multiplicity=\"0..1\" Role=\"ToRole_assoc_2CCAF987BA334B3BD1DF2404F50BC9C5\"/>\n    >     <ReferentialConstraint>\n    >         <Principal Role=\"ToRole_assoc_2CCAF987BA334B3BD1DF2404F50BC9C5\">\n    >             <PropertyRef Name=\"Supplier\"/>\n    >         </Principal>\n    >         <Dependent Role=\"FromRole_assoc_2CCAF987BA334B3BD1DF2404F50BC9C5\">\n    >             <PropertyRef Name=\"Supplier\"/>\n    >         </Dependent>\n    >     </ReferentialConstraint>\n    > </Association>\n    > \n    > ```\n\n    > ### Sample Code:  \n    > ABAP CDS Annotation\n    > \n    > ```\n    > annotate STTA_PROD_MAN.STTA_C_MP_ProductType with {\n    >   @Consumption.SemanticObject : 'EPMProduct'\n    >   Supplier\n    > }\n    > \n    > ```\n\n    > ### Sample Code:  \n    > CAP CDS Annotation\n    > \n    > ```\n    > annotate STTA_PROD_MAN.STTA_C_MP_ProductType with {\n    >   @Common.SemanticObject : 'EPMProduct'\n    >   Supplier\n    > };\n    > \n    > ```\n\n-   Without a `ReferentialConstraint`\n\n    In the `STTA_C_MP_ProductType` entity, create an association to the target entity. Annotate this navigation property with a `SemanticObject`.\n\n    > ### Sample Code:  \n    > CAP CDS Annotation\n    > \n    > ```\n    > entity STTA_C_MP_ProductType {\n    >      _Supplier    : Association to STTA_C_MP_SupplierType\n    >           on _Supplier.Supplier = Supplier @(Common : {\n    >                                              Label          : 'Supplier with semantic in navigation',\n    >                                              SemanticObject : 'Customer'\n    >                                              });\n    > }\n    > ```\n\n    The property on the target entity \\(`STTA_C_MP_SupplierType`\\) must be a semantic key or an entity key.\n\n    > ### Sample Code:  \n    > XML Annotation\n    > \n    > ```xml\n    > <EntityType Name=\"STTA_C_MP_SupplierType\">\n    >      <Key>\n    >           <PropertyRef Name=\"SupplierID\"/>\n    >      </Key>\n    >      <Property Name=\"SupplierID\" Type=\"Edm.String\" MaxLength=\"10\" Nullable=\"false\"/>\n    >      <Property Name=\"SupplierName\" Type=\"Edm.String\" MaxLength=\"80\"/>\n    > </EntityType>\n    > \n    > <Annotations Target=\"myservice.STTA_C_MP_SupplierType\">\n    >      <Annotation Term=\"Common.SemanticKey\">\n    >           <Collection>\n    >                <PropertyPath>SupplierName</PropertyPath>\n    >           </Collection>\n    >      </Annotation>\n    > </Annotations>\n    > \n    > <Annotations Target=\"myservice.STTA_C_MP_SupplierType/SupplierID\">\n    >      <Annotation Term=\"Common.Text\" Path=\"SupplierName\"/>\n    > </Annotations>\n    > <Annotations Target=\"myservice.STTA_C_MP_SupplierType/SupplierName\">\n    >      <Annotation Term=\"Common.Label\" String=\"Name\"/>\n    > </Annotations>\n    > ```\n\n    > ### Sample Code:  \n    > CAP CDS Annotation\n    > \n    > ```\n    > entity STTA_C_MP_SupplierType @(\n    >      //…\n    >      title  : 'Supplier type',\n    >      Common : {SemanticKey : [SupplierName]},\n    >      //…\n    > \n    > ){\n    >      key SupplierID     : String(10) not null @(Common : {\n    >           Label : 'Supplier ID',\n    >           Text  : SupplierName\n    >      });\n    >      SupplierName : String(10)          @(Common : {\n    >           Label                 : 'Name'        \n    >      });\n    > }\n    > ```\n\n    To display the `QuickView`, use either the property `Supplier` or `SupplierID`:\n\n    > ### Sample Code:  \n    > XML Annotation\n    > \n    > ```xml\n    > <Annotation Term=\"UI.FieldGroup\">\n    >      <Record Type=\"UI.FieldGroupType\">\n    >        <PropertyValue Property=\"Data\">\n    >          <Collection>\n    >            <Record Type=\"UI.DataField\">\n    >              <PropertyValue Property=\"SupplierName\" Path=\"_Supplier\"/>\n    >              <PropertyValue Property=\"Label\" String=\"My QuickView\"/>\n    >            </Record>\n    >            <Record Type=\"UI.DataField\">\n    >              <PropertyValue Property=\"SupplierID\" Path=\"_Supplier\"/>\n    >              <PropertyValue Property=\"Label\" String=\"My QuickView2\"/>\n    >            </Record>\n    >          </Collection>\n    >        </PropertyValue>\n    >      </Record>\n    > </Annotation>\n    > ```\n\n    > ### Sample Code:  \n    > ABAP CDS Annotation\n    > \n    > ```\n    > @UI.fieldGroup: [\n    >   {\n    >     label: 'Dummy Button'\n    >     type: #STANDARD,\n    >     position: 1 ,\n    >     qualifier: 'My QuickView'\n    >   }\n    > ]\n    > _Supplier.supplier;\n    > \n    > @UI.fieldGroup: [\n    >   {\n    >     label: 'Dummy Button',\n    >     type: #STANDARD,\n    >     position: 2 ,\n    >     qualifier: 'My QuickView2'\n    >   }\n    > ]\n    > _Supplier.supplierID;\n    > ```\n\n    > ### Sample Code:  \n    > CAP CDS Annotation\n    > \n    > ```\n    > annotate STTA_C_MP_ProductType with @(UI: \n    > {\n    > \n    >     //…\n    >     FieldGroup #MyQuickViews: {Data: \n    >     [{\n    >          $Type : 'UI.DataField',\n    >          Value : _Supplier.SupplierName,\n    >          Label : 'My QuickView'\n    >     },\n    >     {\n    >          $Type : 'UI.DataField',\n    >          Value : _Supplier.SupplierID,  \n    >          Label : 'My QuickView2'\n    >     }]  \n    >     }\n    >     //…\n    > })\n    > ```\n\n\nThe following image shows a quick view popover displaying the most important links in the footer:\n\n![](images/Quick_View_Footer_83521d5.png)\n\nThe following image shows a *More Links* popover. Users can select actions to be displayed in the quick view footer:\n\n![](images/More_Links_Popover_in_Footer_696b457.png)\n\n-   The footer section gathers the most important navigation targets. Users can see the full list of available actions by choosing the *More Links* button.\n\n-   Important navigation targets are defined using the `sap-tag` parameter `superiorAction`. All actions with this definition are displayed by default in the quick view footer.\n\n-   If no action was defined using the `sap-tag` parameter `superiorAction`, the first three actions in the list of actions are shown by default.\n\n-   Users can personalize the actions shown in the footer by selecting actions in the *More Links* popover.\n\n\n> ### Note:  \n> When no `QuickView` annotations are defined and no target is resolved at runtime \\(for example, the user does not have access to the target applications\\), the field still appears as a link and a message is displayed when pressed.\n> \n> ![](images/QuickView_Error_Message_ca67391.png)\n\n",
  "excerpt": "<!-- loioc245ad757dc64694842e00c40e677cd8 --> Configuring the Content of Quick Views You can configure the content area of the quick views to display specific data. The content area, consisting of a t...",
  "wordCount": 2069,
  "version": "1.0.0",
  "source": "sapui5",
  "sourceType": "github"
}