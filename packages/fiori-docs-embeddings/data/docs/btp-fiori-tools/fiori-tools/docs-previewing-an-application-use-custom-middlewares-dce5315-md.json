{
  "id": "btp-fiori-tools-docs-previewing-an-application-use-custom-middlewares-dce5315-md",
  "title": "Use Custom Middlewares",
  "category": "fiori-tools",
  "path": "docs/Previewing-an-Application/use-custom-middlewares-dce5315.md",
  "lastModified": "2025-09-01T18:17:10.161Z",
  "tags": [
    "fiori-tools",
    "md",
    "Use",
    "Custom",
    "Middlewares"
  ],
  "headers": [
    "Use Custom Middlewares",
    "Application Reload Middleware",
    "Example Configuration",
    "Configuration options",
    "Proxy",
    "Configuration Examples",
    "Serve Static",
    "Example Configuration for serving locally SAPUI5",
    "Example Configuration for serving any resources locally"
  ],
  "content": "<!-- loiodce5315a26964ba59d9f3e7f827dceca -->\n\n# Use Custom Middlewares\n\nYou can plug custom middleware implementations into the internal express server of the SAPUI5 Server module if you want to handle requests differently. For example, add various headers to a response or parse data of a POST request in a specific way.\n\nSAP Fiori tools use the capabilities of custom middlewares to start and preview SAP Fiori elements applications:\n\n-   [Application reload](use-custom-middlewares-dce5315.md#loiodce5315a26964ba59d9f3e7f827dceca__section_xvv_51q_x4b) - The middleware to reload the application automatically in the browser, when any change is done.\n-   [Proxy](use-custom-middlewares-dce5315.md#loiodce5315a26964ba59d9f3e7f827dceca__section_uxj_55w_x4b) - The middleware to connect to the backend server side and to load the remote SAPUI5 resources.\n-   [Serve static](use-custom-middlewares-dce5315.md#loiodce5315a26964ba59d9f3e7f827dceca__section_xty_5vw_x4b) - The middleware to serve local resources from your workspace, such as the reuse libraries.\n\n\n\n<a name=\"loiodce5315a26964ba59d9f3e7f827dceca__section_xvv_51q_x4b\"/>\n\n## Application Reload Middleware\n\nWith the application reload middleware, developers can preview SAP Fiori elements applications while developing or configuring them. Whenever a file relevant for SAP Fiori elements is changed, the application reload middleware will refresh the application preview.\n\n\n\n### Example Configuration\n\nTo start the application reload middleware with its default settings, execute `npx fiori run` in your project with the configuration below in the `ui5.yaml` file.\n\n```\nserver:\n  customMiddleware:\n  - name: fiori-tools-appreload\n    afterMiddleware: compression\n```\n\n\n\n### Configuration options\n\nThe application reload middleware does not require any configuration parameters. However, there are optional parameters that can be used if the project structure differs from the standard SAP Fiori elements projects.\n\n**Configuration parameters**\n\n\n<table>\n<tr>\n<th valign=\"top\">\n\nParameter\n\n</th>\n<th valign=\"top\">\n\nType\n\n</th>\n<th valign=\"top\">\n\nDefault value\n\n</th>\n<th valign=\"top\">\n\nDescription\n\n</th>\n</tr>\n<tr>\n<td valign=\"top\">\n\npath\n\n</td>\n<td valign=\"top\">\n\n`<string>`\n\n</td>\n<td valign=\"top\">\n\n`webapp`\n\n</td>\n<td valign=\"top\">\n\nPath to be watched. By default, the standard SAPUI5 `webapp` folder is used.\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\next\n\n</td>\n<td valign=\"top\">\n\n`<string>`\n\n</td>\n<td valign=\"top\">\n\n`html, js, json, xml, properties, change`\n\n</td>\n<td valign=\"top\">\n\nChange this parameter to select a custom set of file extensions that are to be watched.\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\nport\n\n</td>\n<td valign=\"top\">\n\n`<int>`\n\n</td>\n<td valign=\"top\">\n\n`35729`\n\n</td>\n<td valign=\"top\">\n\nPort to be used to communicate file system changes.\n\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n\ndebug\n\n</td>\n<td valign=\"top\">\n\n`<boolean>`\n\n</td>\n<td valign=\"top\">\n\n`false`\n\n</td>\n<td valign=\"top\">\n\nSet this parameter to get more log information.\n\n</td>\n</tr>\n</table>\n\n\n\n<a name=\"loiodce5315a26964ba59d9f3e7f827dceca__section_uxj_55w_x4b\"/>\n\n## Proxy\n\nThe proxy middleware provides you with the capabilities to connect to different backend systems or to switch the SAPUI5 version of the application.\n\n\n\n### Configuration Examples\n\n-   **Connect to a back-end system**\n\n    To forward any request starting with the `path` parameter to the provided back end `url`, execute `npx fiori run` in your project with the configuration below in the `ui5.yaml` file.\n\n    ```\n    - name: fiori-tools-proxy\n      afterMiddleware: compression\n      configuration:\n        backend:\n        - path: /sap\n          url: https://my.backend.com:1234\n    ```\n\n-   **Connect to a back-end system with destination**\n\n    If you use a destination to connect to your back-end system, you can also provide the `destination` in the configuration.\n\n    ```\n    - name: fiori-tools-proxy\n      afterMiddleware: compression\n      configuration:\n        backend:\n        - path: /sap\n          url: https://my.backend.com:1234\n          destination: my_backend\n    ```\n\n-   **Connect to multiple back-end systems**\n\n    Additionally, you can connect to multiple back-end systems as follows:\n\n    ```\n    - name: fiori-tools-proxy\n      afterMiddleware: compression\n      configuration:\n        backend:\n        - path: /northwind\n          url: https://my.backend_2.com:1234\n        - path: /sap\n          url: https://my.backend.com:1234\n    ```\n\n-   **Connect to an ABAP Environment on SAP Business Technology Platform**\n\n    If you want to connect to an ABAP Environment on SAP Business Technology Platform, you need to set the optional property `scp` to `true`. For any other target, remove this property or set it to `false`.\n\n    ```\n    - name: fiori-tools-proxy\n      afterMiddleware: compression\n      configuration:\n        backend:\n        - path: /sap\n          url: https://my.steampunk.com:1234\n          scp: true\n    ```\n\n-   **Connect to the SAP Business Accelerator Hub**\n\n    If you want to connect to the SAP Business Accelerator Hub, you need to set the optional property `apiHub` to `true`, and set the corresponding `path` and `url`.\n\n    ```\n    - name: fiori-tools-proxy\n      afterMiddleware: compression\n      configuration:\n        backend:\n        - path: /s4hanacloud\n          url: https://api.sap.com\n          apiHub: true\n    ```\n\n-   **Proxy WebSockets**\n\n    If you want the proxy to handle WebSockets, then you need to set the optional property `ws` to `true`.\n\n    ```\n    - name: fiori-tools-proxy\n      afterMiddleware: compression\n      configuration:\n        backend:\n        - path: /sap\n          url: https://my.backend.com:1234\n          ws: true\n    ```\n\n-   **Change the path to which a request is proxied**\n\n    It is possible to configure the proxy to send requests from a certain path `/services/odata` to a destination with a specified entry path `/my/entry/path`. To do so, use the following configuration:\n\n    ```\n    - name: fiori-tools-proxy\n      afterMiddleware: compression\n      configuration:\n        backend:\n        - path: /services/odata\n          pathPrefix: /my/entry/path\n          url: https://my.backend.com:1234\n          destination: my_backend\n    ```\n\n-   **SAPUI5**\n\n    By using the proxy configuration, the user can also change the SAPUI5 version, which is used to preview the application. The initial SAPUI5 configuration for the proxy is created along with the application generation. See the following example:\n\n    ```\n    - name: fiori-tools-proxy\n      afterMiddleware: compression\n      configuration:\n        ui5:\n          path:\n          - /resources\n          - /test-resources\n          url: https://sapui5.hana.ondemand.com\n          version: 1.78.0\n    ```\n\n    By using the `version` parameter, the user can select the SAPUI5 version which is used when `npx fiori run` is executed.\n\n\n\n\n<a name=\"loiodce5315a26964ba59d9f3e7f827dceca__section_xty_5vw_x4b\"/>\n\n## Serve Static\n\nThe serve static middleware provides the capability to serve any static resources locally from your machine. For example, you can serve SAPUI5 locally or any other resources.\n\n\n\n### Example Configuration for serving locally SAPUI5\n\n**Prerequisites**\n\nSAPUI5 SDK version is downloaded and extracted locally on your computer. You can download the SAPUI5 sources from the [SAP Development Tools](https://tools.hana.ondemand.com/#sapui5) page.\n\nIf you want to serve the SAPUI5 resources from your computer, execute `npx fiori run` in your project with the configuration below in the `ui5.yaml` file. Any request starting with the `path` parameter is forwarded to the local path provided in the `src` parameter.\n\n```\nserver:\n  customMiddleware:\n  - name: fiori-tools-servestatic\n    afterMiddleware: compression\n    configuration:\n      paths:\n        - path: /resources\n          src: \"Path/To/SAPUI5-SDK\"\n        - path: /test-resources\n          src: \"Path/To/SAPUI5-SDK\"\n```\n\n\n\n### Example Configuration for serving any resources locally\n\nIf you want to serve any resources from your computer, execute `npx fiori run` in your project with the configuration below in the `ui5.yaml` file. Any request starting with the `path` parameter is forwarded to the local path provided in the `src` parameter.\n\n```\nserver:\n  customMiddleware:\n  - name: fiori-tools-servestatic\n    afterMiddleware: compression\n    configuration:\n      paths:\n        - path: /images\n          src: \"Path/To/images\"\n        - path: /libs\n          src: \"Path/To/libs\"\n```\n\n",
  "excerpt": "<!-- loiodce5315a26964ba59d9f3e7f827dceca --> Use Custom Middlewares You can plug custom middleware implementations into the internal express server of the SAPUI5 Server module if you want to handle r...",
  "wordCount": 1028,
  "version": "1.0.0",
  "source": "btp-fiori-tools",
  "sourceType": "github"
}