{
  "id": "btp-fiori-tools-docs-developing-an-application-internationalization-support-db02ebf-md",
  "title": "Internationalization Support",
  "category": "fiori-tools",
  "path": "docs/Developing-an-Application/internationalization-support-db02ebf.md",
  "lastModified": "2025-09-01T18:17:10.142Z",
  "tags": [
    "fiori-tools",
    "md",
    "Internationalization",
    "Support"
  ],
  "headers": [
    "Internationalization Support",
    "Using Internationalization Support",
    "Adding Internationalized Values",
    "Highlighting and Fixing Missing References",
    "Updating Text Properties from Annotation File"
  ],
  "content": "<!-- loiodb02ebfcee1a47808ee4e4c4a9e07098 -->\n\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/sap-icons.css\"/>\n\n# Internationalization Support\n\n\n\nXML annotation language server provides support for internationalization of language-dependent strings in your annotation file.\n\nLanguage-dependent strings are the string values of annotation properties tagged with*IsLanguageDependent* in the respective vocabulary. For example, out of the two string values below, only that *Label* property is considered as language dependent, as it is tagged as *IsLanguageDependent* in the [UI vocabulary](https://sap.github.io/odata-vocabularies/vocabularies/UI.html). Any value of property ID that is not tagged as language dependent in the vocabulary is not considered for internationalization by Annotation LSP.\n\nWhen you open an annotation file, all language-dependent string values are checked against the `i18n.properties` file.\n\n> ### Note:  \n> Annotation LSP uses the `i18.properties` file referenced in the `@18n` model of the `manifest.json` file of your project. If the model or file is missing, you see the respective warning message for your annotation file.\n\nEach value that does not represent a valid reference to the existing text key in the`i18n.properties` file, is indicated in the annotation file with a warning. If the text key for the string value is already available in the `i18n.properties` file, you can apply a Quick Fix to automatically reference it in your annotation file. Otherwise, a Quick Fix action is suggested to generate a new text key and then substitute your string value with the reference to that entry.\n\nThe same check is performed when you add a new value for a language-dependent property. As an alternative, you can use the [Code Completion](code-completion-dd4fc3b.md) directly in the string value of the language-dependent property. It will show the list of references to text entries already available in the properties file. You can use [Documentation \\(Quick Info\\)](documentation-quick-info-8728bd7.md) feature to view the text value and attributes for each list item.\n\nIf you want to view or update the text value or attributes in the `i18n.properties` file, use the Pick Definition or Go To Definition features, see [Peek and Go to Definition](peek-and-go-to-definition-1ccb911.md).\n\n\n\n<a name=\"loiodb02ebfcee1a47808ee4e4c4a9e07098__section_yr4_3hl_1mb\"/>\n\n## Using Internationalization Support\n\n\n\n### Adding Internationalized Values\n\nReusing Existing Texts\n\n-   With Code Completion\n\n    -   Trigger the Code Completion, in Windows, [Ctrl\\] + [Space\\] , and macOS, [CMD\\] + [Space\\]  \\(Mac\\), for the string value in the language-dependent element.\n\n        The list of existing text key reference and text value pairs from the `i18n.properties` file is displayed.\n\n    -   Select a value from the Code Completion list.\n\n        The text key reference from the selected completion item is inserted.\n\n\n-   With Quick Fix Action\n\n    -   Click on the :bulb: \\(*Light Bulb*\\) icon that is shown along with a warning\n    -   Choose the suggested action\n\n\nDefining new texts\n\n-   Enter a string value for the language-dependent element.\n\n    Annotation LSP checks if the value is already provided as a text key in the `i18n.properties` file.\n\n    If the value is not provided a warning along with Quick Fix action is shown.\n\n-   Click on the :bulb: \\(*Light Bulb*\\) icon and choose the suggested action.\n\n    Text key and default attributes are generated in the `i18n.properties` file and the text string is substituted with the reference.\n\n    > ### Note:  \n    > You can add translation comments or update other attributes as described below.\n\n\n\n\n### Highlighting and Fixing Missing References\n\n-   Open the annotation file.\n\n    If missed referenced are found, a warning is shown.\n\n-   Apply the Quick Fix action. See Adding Internationalized Values for more details.\n\n\n\n\n### Updating Text Properties from Annotation File\n\n**Using Go to Definition**\n\nPlace your text cursor inside the path referencing the translatable string value and trigger *Go To Definition*:\n\n-   Using a keyboard: press [F12\\] in Visual Studio Code or [Ctrl\\] + [F11\\]  in SAP Business Application Studio\n\n-   Using the mouse: right-click and select *Go To Definition*\n\n-   Using the keyboard and mouse: [Ctrl\\] + mouse click in Windows and [CMD\\] + mouse click in macOS\n\n\n**Using Peek Definition**\n\nPlace your text cursor inside the path referencing to translatable string value and trigger *Peek Definition*:\n\n-   Using the keyboard: press [Alt\\] + [F12\\]  in Windows and [Option\\] + [F12\\]  in macOS.\n-   Using the mouse: right-click and select *Peek Definition*\n\n",
  "excerpt": "<!-- loiodb02ebfcee1a47808ee4e4c4a9e07098 --> <link rel=\"stylesheet\" type=\"text/css\" href=\"../css/sap-icons.css\"/> Internationalization Support XML annotation language server provides support for inte...",
  "wordCount": 675,
  "version": "1.0.0",
  "source": "btp-fiori-tools",
  "sourceType": "github"
}