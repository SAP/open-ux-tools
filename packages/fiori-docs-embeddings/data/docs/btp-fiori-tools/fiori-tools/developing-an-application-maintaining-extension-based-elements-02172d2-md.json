{
  "id": "btp-fiori-tools-developing-an-application-maintaining-extension-based-elements-02172d2-md",
  "title": "Maintaining Extension-Based Elements",
  "category": "fiori-tools",
  "path": "Developing-an-Application/maintaining-extension-based-elements-02172d2.md",
  "lastModified": "2025-09-29T10:06:38.695Z",
  "tags": [
    "fiori-tools",
    "md",
    "maintaining",
    "extension",
    "based",
    "elements",
    "02172d2"
  ],
  "headers": [
    "Maintaining Extension-Based Elements",
    "Adding Custom Column",
    "Custom Column \\(OData V2 Only\\)",
    "Custom Column \\(OData V4 Only\\)",
    "Adding Custom Section",
    "Adding Custom Action",
    "Adding Custom View",
    "Adding Controller Extension"
  ],
  "content": "<!-- loio02172d2bb461469f83c18c834613232c -->\n\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/sap-icons.css\"/>\n\n# Maintaining Extension-Based Elements\n\n> ### Note:  \n> For OData V4 based applications, the templates used by the *Page Editor* to provide this flexibility is published as part of our Open UX tools [`@sap-ux/fe-fpm-writer`](https://github.com/SAP/open-ux-tools/blob/main/packages/fe-fpm-writer/README.md). This new transparency allows everyone to inspect the source behind the scenes.\n\n<a name=\"loioa95f614fdbff4c60baa6467c913b6d44\"/>\n\n<!-- loioa95f614fdbff4c60baa6467c913b6d44 -->\n\n## Adding Custom Column\n\nYou have the ability to create a custom column for your table in a *List Report* or *Analytical Chart* page.\n\n\n\n<a name=\"loioa95f614fdbff4c60baa6467c913b6d44__section_ur2_br3_wnb\"/>\n\n## Custom Column \\(OData V2 Only\\)\n\n1.  In the *Page Editor* outline view next to the Columns header, click the :heavy_plus_sign: \\(*Add*\\) icon to add a new column.\n2.  Provide the following information:\n    -   **Column Key** - Key for the column\n    -   **Header Text** - column title\n    -   **ID** - unique ID is automatically created, but can be modified\n    -   **Select Column Fragment**\n        -   Create New Fragment\n        -   Use Existing Fragment\n\n    -   **Column Fragment Name**\n    -   **Select Cell Fragment** \\(in case of responsive table type\\)\n        -   Create New Fragment\n        -   Use Existing Fragment\n\n    -   **Cell Fragment Name**\n    -   **Anchor Column** - select one of existing columns in the table. You can select where you want to insert the custom column, before or after the selected target column.\n    -   **Placement** - Before/After\n    -   **Leading Property** - If the content of your custom column refers to a property such as \\{Price\\}, you need to include a corresponding `leadingProperty` entry in the column definition.\n\n\n![Custom Column](images/FIORI_TOOLS_CUSTOM_COLUMN_a723f6d.png)\n\nThe custom column fragment and cell code are looked up and written to the project's `ext` folder. A custom column can be dragged into a new position using the handle in outline view. Click the :wastebasket: \\(*Delete*\\) icon to delete a custom column.\n\n\n\n<a name=\"loioa95f614fdbff4c60baa6467c913b6d44__section_tnr_243_rsb\"/>\n\n## Custom Column \\(OData V4 Only\\)\n\n1.  In the *Page Editor* outline view next to the Columns header, click the :heavy_plus_sign: \\(*Add*\\) icon to add a new column.\n2.  Provide the following information:\n\n    -   **Header Text**- column title\n    -   **Select Column Fragment**\n        -   Create New Fragment\n        -   Use Existing Fragment\n\n    -   **Column Fragment Name**\n    -   **Anchor Column** - select one existing column in the table.\n    -   **Placement** - Before/After. You can select where you want to insert the custom column, before or after the selected anchor column.\n    -   **Generate Event Handler** - True/False\n    -   **Width** - width of the new column\n\n    ![](images/FIORI_TOOLS_CUSTOM_COLUMN_V4_bbd04e3.png)\n\n\nThe custom column fragment and optional default controller code is written to the project's `ext` folder. A custom column can be dragged into a new position using the handle in outline view. Click the :wastebasket: \\(*Delete*\\) icon to delete a custom column.\n\n<a name=\"loiode514dafa2364693baeabbb40d564006\"/>\n\n<!-- loiode514dafa2364693baeabbb40d564006 -->\n\n## Adding Custom Section\n\nYou can create a custom section as part of your *Object Page* using the *Page Editor*.\n\n1.  In the *Page Editor* outline view of your *Object Page*, click the :heavy_plus_sign: \\(*Add*\\) icon on the *Sections* node. For OData V4, click *Add Custom Section* from the menu. For OData V2, the selection will be prefilled.\n2.  Provide the following information:\n    -   **Title** - the label of the custom section\n    -   **View Type** - types are **View** or **Fragment** \\(`OData V2` only\\)\n    -   **Select Your Fragment/View**- choose new or existing\n    -   **Fragment/View Name** - the file name of the artifact\n    -   **Anchor Section** - select one of the existing sections in the *Object Page*\n    -   **Placement** - before, after or replace \\(OData V2 only\\)\n    -   **Generate Event Handler** - Decide whether a demo controller should be created \\(OData V4 only\\)\n\n\nOn clicking *Add*, the custom section fragment, view, and or controller code is written to the project's `ext` folder. A custom section can be dragged into a new position using the handle in outline view. Click the :wastebasket: \\(*Delete*\\) icon to delete a custom section.\n\n<a name=\"loio76374b198e514b39a96176094bb8aa1b\"/>\n\n<!-- loio76374b198e514b39a96176094bb8aa1b -->\n\n## Adding Custom Action\n\nYou can create a custom action in your *List Report* and *Object Page* using the *Page Editor* for OData V4 applications.\n\n1.  In the *Page Editor*, click the :heavy_plus_sign: \\(*Add*\\) icon on the *Actions* node and click *Add Custom Action* from the menu.![Custom Actions](images/FIORI_TOOLS_CUSTOM_ACTION_9d8cc49.png)\n2.  Provide the following information:\n    -   **Action ID** - ID for the action.\n    -   **Button Text** - Text displayed on the button.\n    -   **Anchor** - Key of another action to be used as placement anchor.\n    -   **Placement** - Define placement after or before the anchor action.\n    -   **Action Handler File** - Decide if you want to add to exiting file or create new action handler file.\n    -   **Handler File** - If you selected add to existing file, select the action handler file.\n    -   **Action Handler Method** - Select if you want to create new function or add to an existing function.\n    -   **Handler Method** - Select handler method.\n    -   **Required Selection** - Toggle if this is required or not.\n\n\nOn clicking *Add*, the custom action is written to the project's `ext` folder. A custom action can be dragged into a new position using the handle in outline view. Click the :wastebasket: \\(*Delete*\\) icon to delete a custom action.\n\n> ### Note:  \n> This feature is only available for OData V4 and with `@sap/ux-specification` version 1.96 or higher. For more information, see [https://www.npmjs.com/package/@sap/ux-specification](https://www.npmjs.com/package/@sap/ux-specification).\n\n<a name=\"loiodbb5c734f310444a93a612e3db4b9b97\"/>\n\n<!-- loiodbb5c734f310444a93a612e3db4b9b97 -->\n\n## Adding Custom View\n\nYou can create a custom view in your *List Report* and *Object Page* using the *Page Editor* for OData V4 applications.\n\n1.  In the *Page Editor*, click the :heavy_plus_sign: \\(*Add*\\) icon on the *View* node and click *Add Custom View* from the menu.\n\n    > ### Note:  \n    > The custom view feature is only available on List Reports that do not contain a chart.\n\n2.  Provide the following information:\n    -   **Key** - Unique tab identifier.\n    -   **Label** - View title.\n    -   **Select Your Fragment** - Enter new fragment or choose an existing one.\n    -   **Fragment Name** - The file name of the artifact.\n    -   **Generate Event Handler** - Decide whether a demo controller needs to be created.\n\n\nOn clicking *Add*, the custom view is written to the project's `ext` folder. A custom view can be dragged into a new position using the handle in outline view. Click the :wastebasket: \\(*Delete*\\) icon to delete a custom view.\n\n> ### Note:  \n> This feature is only available for OData V4 and with `@sap/ux-specification` version 1.96.29, 1.102.14 or higher. For more information, see [https://www.npmjs.com/package/@sap/ux-specification](https://www.npmjs.com/package/@sap/ux-specification).\n\n<a name=\"loiofe286b8483f84963877e44d4c817b0ed\"/>\n\n<!-- loiofe286b8483f84963877e44d4c817b0ed -->\n\n## Adding Controller Extension\n\nYou can create a controller extension as part of your *List Report* and *Object Page* using the *Page Map* for OData V4 applications.\n\n1.  Launch the *Page Map*. For more information, see the *Launching Page Map* section in [Define Application Structure](define-application-structure-bae38e6.md).\n\n2.  In the *Page Map* view, click the <span class=\"SAP-icons-TNT-V3\"></span> \\(*Show Controller Extensions*\\) icon for your selected page.\n\n    ![](images/Show_Controller_Extensions_in_Page_Map_View_d520940.png)\n\n3.  You see the list of existing controller extensions for the selected page in the Properties Panel.\n\n    ![](images/Fiori_Tools_Existing_Controller_Extensions_bc94fdc.png)\n\n4.  You can add a new controller extension by clicking *Add Controller Extension*.\n\n    ![](images/Fiori_Tools_Add_Controller_Extension_3458923.png)\n\n    In the pop-up window, provide the required information.\n\n5.  You can then change the order in which the extensions are executed using the drag-and-drop functionality, or using the <span class=\"SAP-icons-V5\"></span> \\(*Move Up*\\) or <span class=\"SAP-icons-V5\"></span> \\(*Move Down*\\) icons.\n\n6.  You can also click the <span class=\"SAP-icons-TNT-V3\"></span> \\(*Edit in source code*\\) icon to navigate to the respective controller code file.\n\n\n> ### Tip:  \n> For more information about controller extensions and related examples, see [Controller Extensions](https://sapui5.hana.ondemand.com/test-resources/sap/fe/core/fpmExplorer/index.html#/controllerExtensions/controllerExtensionsOverview/guidanceControllerExtensions).\n\n",
  "excerpt": "<!-- loio02172d2bb461469f83c18c834613232c --> <link rel=\"stylesheet\" type=\"text/css\" href=\"../css/sap-icons.css\"/> Maintaining Extension-Based Elements > Note:   > For OData V4 based applications, the...",
  "wordCount": 1229,
  "version": "1.0.0",
  "source": "btp-fiori-tools",
  "sourceType": "github"
}