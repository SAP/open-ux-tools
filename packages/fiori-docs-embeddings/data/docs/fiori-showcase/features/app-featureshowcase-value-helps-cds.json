{
  "id": "fiori-showcase-app-featureshowcase-value-helps-cds",
  "title": "value helps",
  "category": "features",
  "path": "app/featureShowcase/value-helps.cds",
  "lastModified": "2025-09-01T18:17:10.726Z",
  "tags": [
    "features",
    "cds",
    "value",
    "helps"
  ],
  "headers": [],
  "content": "# value helps.md\n\n```cds\n# value helps.md\n\n```cds\n# value helps.md\n\n```cds\n# value helps.md\n\n```cds\n# value helps.md\n\n```cds\n# value helps.md\n\n```cds\n# value helps.md\n\n```cds\n# value helps.md\n\n```cds\n# value-helps.cds\n\n```cds\nusing { sap.fe.featureShowcase as schema } from '../../db/schema';\n\n//\n// annotations for value helps\n// Search-Term: #ValueHelps\n//\n\nannotate schema.RootEntities with{\n    uom         @Common.ValueListWithFixedValues; //Instead of dialog box, the value help is a dropdown\n    criticality_code @(Common : {\n        ValueListWithFixedValues: true,\n        // Search-Term: #RadioButtons |Â Render Value help with radio buttons\n        ValueListWithFixedValues.@Common.ValueListShowValuesImmediately,\n        ValueList       : {\n            Label          : '{i18n>criticality}',\n            CollectionPath : 'Criticality',\n            Parameters     : [\n                {\n                    $Type               : 'Common.ValueListParameterInOut',\n                    ValueListProperty   : 'code',\n                    LocalDataProperty   : criticality_code\n                },\n            ]\n        }\n    });\n\n    //To have a Value help when editing and to show the name instead of the UUID\n    contact @(Common : {\n        Text            : contact.name,\n        TextArrangement : #TextOnly,\n        ValueList       : {\n            Label          : '{i18n>customer}', //Title of the value help dialog\n            CollectionPath : 'Contacts', //Entities of the value help. Refers to an entity name from the CAP service\n            Parameters     : [\n                {\n                    $Type               : 'Common.ValueListParameterInOut',\n                    ValueListProperty   : 'ID', //Binding between ID and contact_ID, that everything works\n                    LocalDataProperty   : contact_ID\n                },\n                {\n                    $Type               : 'Common.ValueListParameterDisplayOnly', //Displays additional information from the entity set of the value help \n                    ValueListProperty   : 'country_code',\n                },\n                {\n                    $Type               : 'Common.ValueListParameterDisplayOnly',\n                    ValueListProperty   : 'city',\n                }\n                \n            ]\n        }\n    });\n    association2one @(Common : {\n        ValueListWithFixedValues: true,\n        ValueList       : {\n            Label          : '{i18n>ChildEntity2}',\n            CollectionPath : 'ChildEntities2',\n            Parameters     : [\n                {\n                    $Type               : 'Common.ValueListParameterInOut',\n                    ValueListProperty   : 'ID',\n                    LocalDataProperty   : association2one_ID\n                },\n                {\n                    $Type               : 'Common.ValueListParameterDisplayOnly',\n                    ValueListProperty   : 'stringProperty',\n                },\n                {\n                    $Type               : 'Common.ValueListParameterDisplayOnly',\n                    ValueListProperty   : 'integerProperty',\n                },\n                {\n                    $Type               : 'Common.ValueListParameterDisplayOnly',\n                    ValueListProperty   : 'decimalProperty',\n                },\n                {\n                    $Type               : 'Common.ValueListParameterDisplayOnly',\n                    ValueListProperty   : 'country_code',\n                }\n                \n            ]\n        }\n    });\n    //Search-Term: #DependentFilter\n    region @(Common : {\n        Text            : region.name,\n        TextArrangement : #TextFirst,\n        ValueListWithFixedValues: true,\n        ValueList       : {\n            Label          : '{i18n>Region}',\n            CollectionPath : 'Regions',\n            Parameters     : [\n                {\n                    $Type               : 'Common.ValueListParameterInOut',\n                    ValueListProperty   : 'code',\n                    LocalDataProperty   : region_code\n                },\n                {\n                    $Type               : 'Common.ValueListParameterOut',\n                    ValueListProperty   : 'name',\n                    LocalDataProperty   : region.name,\n                },\n                //To only show the connected values\n                {\n                    $Type               : 'Common.ValueListParameterFilterOnly',\n                    ValueListProperty   : 'country_code',\n                },\n                {\n                    $Type               : 'Common.ValueListParameterIn', //Input parameter used for filtering\n                    LocalDataProperty   : country_code,\n                    ValueListProperty   : 'country_code',\n                },\n                \n            ]\n        }\n    });\n};\n\nannotate schema.AssignedRegions with {\n    //Search-Term: #MultiValueWithDependentFilter\n    region @(Common : {\n        Text            : region.name,\n        TextArrangement : #TextFirst,\n        ValueListWithFixedValues: true,\n        ValueList       : {\n            Label          : '{i18n>Region}',\n            CollectionPath : 'Regions',\n            Parameters     : [\n                {\n                    $Type               : 'Common.ValueListParameterInOut',\n                    ValueListProperty   : 'code',\n                    LocalDataProperty   : region_code\n                },\n                {\n                    $Type               : 'Common.ValueListParameterIn', //Input parameter used for filtering\n                    LocalDataProperty   : root.country_code,\n                    ValueListProperty   : 'country_code',\n                },\n                \n            ]\n        }\n    });\n}\n```\n```\n```\n```\n```\n```\n```\n```\n```",
  "excerpt": "value helps.md cds value helps.md cds value helps.md cds value helps.md cds value-helps.cds",
  "wordCount": 434,
  "version": "1.0.0",
  "source": "fiori-showcase",
  "sourceType": "github"
}