{
  "id": "fiori-showcase-app-featureshowcase-capabilities-cds",
  "title": "capabilities",
  "category": "features",
  "path": "app/featureShowcase/capabilities.cds",
  "lastModified": "2025-09-01T18:17:10.726Z",
  "tags": [
    "features",
    "cds",
    "capabilities"
  ],
  "headers": [],
  "content": "# capabilities.md\n\n```cds\n# capabilities.md\n\n```cds\n# capabilities.md\n\n```cds\n# capabilities.md\n\n```cds\n# capabilities.md\n\n```cds\n# capabilities.md\n\n```cds\n# capabilities.md\n\n```cds\n# capabilities.md\n\n```cds\n# capabilities.cds\n\n```cds\nusing service1 from '../../srv/service';\n\nannotate service1.RootEntities with @odata.draft.enabled; //Search-Term: #Draft\n\nannotate service1.RootEntityVariants with @odata.draft.enabled; //Annotation has to exists, without no entites would be visible on view with other entity set of List Report \n\nannotate service1.RootEntities with @(\n    //Disables the delete option dependent of the fields value\n    Capabilities.DeleteRestrictions : {\n        Deletable   : deletePossible, //Search-Term: #DynamicCRUD\n    },\n    /* Capabilities.UpdateRestrictions : {\n        Updatable : updatePossible, //UpdateRestrictions are ignored in determining if the edit button is visible or not, but it still affects wheather the fields are editable or not\n    }, */\n    UI.UpdateHidden : updateHidden,//Search-Term: #DynamicCRUD\n\n    UI.CreateHidden: { $edmJson: { $Path: '/service1.EntityContainer/Singleton/createHidden' } }, //Search-Term: #DynamicCRUD\n\n    Capabilities.FilterRestrictions : {\n        FilterExpressionRestrictions : [\n            {\n                //Search-Term: #SemanticDateFilter\n                Property : 'validFrom',\n                AllowedExpressions : 'SingleRange' //Other option: SingleValue\n            },\n        ],\n        // RequiredProperties : [\n        //     stringProperty //Search-Term: #RequiredFilter    \n        // ]\n    },\n) {\n    validTo @UI.DateTimeStyle : 'short'\n};\n\nannotate service1 with @(\n    Capabilities.FilterFunctions : [\n        'tolower' //Search-Term: #CaseInsensitiveFiltering\n    ],\n);\n\nannotate service1.ChartDataEntities with @(\n    //Search-Term: #ChartSection\n    Aggregation.ApplySupported : {\n        Transformations          : [\n            'aggregate',\n            'topcount',\n            'bottomcount',\n            'identity',\n            'concat',\n            'groupby',\n            'filter',\n            'expand',\n            'top',\n            'skip',\n            'orderby',\n            'search'\n        ],\n        Rollup                   : #None,\n        PropertyRestrictions     : true,\n        GroupableProperties : [\n            dimensions,\n            criticality_code\n        ],\n        AggregatableProperties : [\n            {Property : integerValue},\n        ],\n    }\n);\n\nannotate service1.ChartDataEntities with {\n    //Search-Term: #ChartSection\n    criticality @(\n        UI.ValueCriticality   : [\n            {\n                Value       : 0,\n                Criticality : #Neutral\n            },\n            {\n                Value       : 1,\n                Criticality : #Negative\n            },\n            {\n                Value       : 2,\n                Criticality : #Critical\n            },\n            {\n                Value       : 3,\n                Criticality : #Positive\n            }\n        ]\n    );\n\n    integerValue @(\n        Measures.ISOCurrency : uom_code,\n        Core.Immutable       : true,\n    );\n};\n```\n```\n```\n```\n```\n```\n```\n```\n```",
  "excerpt": "capabilities.md cds capabilities.md cds capabilities.md cds capabilities.md cds capabilities.cds",
  "wordCount": 289,
  "version": "1.0.0",
  "source": "fiori-showcase",
  "sourceType": "github"
}