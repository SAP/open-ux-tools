{
  "id": "fiori-samples-neo-migration-fioriapp-webapp-controller-object-dbg-controller-js",
  "title": "Object dbg.controller",
  "category": "fiori-samples",
  "path": "neo-migration/fioriapp/webapp/controller/Object-dbg.controller.js",
  "lastModified": "2025-09-29T10:06:39.528Z",
  "tags": [
    "fiori-samples",
    "js",
    "Object",
    "dbg",
    "controller"
  ],
  "headers": [],
  "content": "# Object-dbg.controller.js\n\n```javascript\nsap.ui.define([\n\t\"./BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/core/routing/History\",\n\t\"../model/formatter\",\n\t\"sap/ui/core/format/DateFormat\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\"\n], function (\n\tBaseController, JSONModel, History, formatter, DateFormat, Filter, FilterOperator) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"ns.manageproductsneo.controller.Object\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Called when the worklist controller is instantiated.\n\t\t * @public\n\t\t */\n\t\tonInit : function () {\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t// between the busy indication for loading the view's meta data\n\t\t\tvar iOriginalBusyDelay,\n\t\t\t\toViewModel = new JSONModel({\n\t\t\t\t\tbusy : true,\n\t\t\t\t\tdelay : 0\n\t\t\t\t});\n\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\n\t\t\t// Store original busy indicator delay, so it can be restored later on\n\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\t\t\tthis.setModel(oViewModel, \"objectView\");\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(function () {\n\t\t\t\t\t// Restore original busy indicator delay for the object view\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\n\t\t/**\n\t\t * Event handler  for navigating back.\n\t\t * It there is a history entry we go one step back in the browser history\n\t\t * If not, it will replace the current entry of the browser history with the worklist route.\n\t\t * @public\n\t\t */\n\t\tonNavBack : function() {\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\n\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\tthis.getRouter().navTo(\"worklist\", {}, true);\n\t\t\t}\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* internal methods                                            */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Binds the view to the object path.\n\t\t * @function\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t * @private\n\t\t */\n\t\t_onObjectMatched : function (oEvent) {\n\t\t\tvar sObjectId =  oEvent.getParameter(\"arguments\").objectId;\n\t\t\tthis.getModel().metadataLoaded().then( function() {\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"Products\", {\n\t\t\t\t\tProductID :  sObjectId\n\t\t\t\t});\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Binds the view to the object path.\n\t\t * @function\n\t\t * @param {string} sObjectPath path to the object to be bound\n\t\t * @private\n\t\t */\n\t\t_bindView : function (sObjectPath) {\n\t\t\tvar oViewModel = this.getModel(\"objectView\"),\n\t\t\t\toDataModel = this.getModel();\n\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sObjectPath,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\tdataRequested: function () {\n\t\t\t\t\t\toDataModel.metadataLoaded().then(function () {\n\t\t\t\t\t\t\t// Busy indicator on view should only be set if metadata is loaded,\n\t\t\t\t\t\t\t// otherwise there may be two busy indications next to each other on the\n\t\t\t\t\t\t\t// screen. This happens because route matched handler already calls '_bindView'\n\t\t\t\t\t\t\t// while metadata is loaded.\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tdataReceived: function () {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_onBindingChange : function () {\n\t\t\tvar oView = this.getView(),\n\t\t\t\toViewModel = this.getModel(\"objectView\"),\n\t\t\t\toElementBinding = oView.getElementBinding();\n\n\t\t\t// No data for the binding\n\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\tthis.getRouter().getTargets().display(\"objectNotFound\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oResourceBundle = this.getResourceBundle(),\n\t\t\t\toObject = oView.getBindingContext().getObject(),\n\t\t\t\tsObjectId = oObject.ProductID,\n\t\t\t\tsObjectName = oObject.ProductName;\n\n\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\n\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\n\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\n\n\t\t\t// Update the comments in the list\n\t\t\tvar oList = this.byId(\"idCommentsList\");\n\t\t\tvar oBinding = oList.getBinding(\"items\");\n\t\t\toBinding.filter(new Filter(\"productID\", FilterOperator.EQ, sObjectId));\n\t\t},\n\n\t\t/**\n\t\t * Updates the model with the user comments on Products.\n\t\t * @function\n\t\t * @param {sap.ui.base.Event} oEvent object of the user input\n\t\t */\n\t\tonPost: function (oEvent) {\n\t\t\tvar oFormat = DateFormat.getDateTimeInstance({style: \"medium\"});\n\t\t\tvar sDate = oFormat.format(new Date());\n\t\t\tvar oObject = this.getView().getBindingContext().getObject();\n\t\t\tvar sValue = oEvent.getParameter(\"value\");\n\t\t\tvar oEntry = {\n\t\t\t\tproductID: oObject.ProductID,\n\t\t\t\ttype: \"Comment\",\n\t\t\t\tdate: sDate,\n\t\t\t\tcomment: sValue\n\t\t\t};\n\t\t\t// update model\n\t\t\tvar oFeedbackModel = this.getModel(\"productFeedback\");\n\t\t\tvar aEntries = oFeedbackModel.getData().productComments;\n\t\t\taEntries.push(oEntry);\n\t\t\toFeedbackModel.setData({\n\t\t\t\tproductComments : aEntries\n\t\t\t});\n\t\t}\n\n\t});\n\n});\n```",
  "excerpt": "Object-dbg.controller.js",
  "wordCount": 535,
  "version": "1.0.0",
  "source": "fiori-samples",
  "sourceType": "github"
}