{
  "id": "fiori-samples-cap-cap-fiori-mta-standalone-challenge1-md",
  "title": "challenge1",
  "category": "fiori-samples",
  "path": "cap/cap-fiori-mta-standalone/challenge1.md",
  "lastModified": "2025-09-29T10:06:39.520Z",
  "tags": [
    "fiori-samples",
    "md",
    "challenge1"
  ],
  "headers": [],
  "content": "Deploy CAP Project using a Fiori UI and in-memory database with FLP support\n\n- Dev space is created using SAP Fiori or Full Stack Development\n- Ensure CDS is installed by runnging `npm i -g @sap/cds-dk`\n- Determine a valid MTA id, for example `standaloneCAPProject`\n\n1. Run the following commands;\n```bash\ncds init standaloneCAPProject\ncd  standaloneCAPProject/\ncds add samples\ncds add mta\n```\n\n2. The base of your CAP project is now configured\n\n3. Open `package.json` and make the following changes;\n\na. move `\"sqlite3\": \"^5.0.4\"` from `devDependencies` to `dependencies`\n\nb. add the following to `dependencies`\n```JSON\n  \"@sap/xsenv\": \"^4.2.0\",\n  \"@sap/xssec\": \"^3.6.0\", \n  \"passport\": \"^0.6.0\"\n```\n\nc. Connecting CDS to the SQLite in-memory database, open `package.json` and include the following `cds` node;\n```JSON\n    \"cds\": {\n        \"requires\": {\n            \"db\": {\n            \"kind\": \"sqlite\",\n            \"credentials\": {\n              \"database\": \":memory:\"\n            }\n         }\n        },\n        \"features\": {\n          \"in_memory_db\": true\n        }\n    }    \n```\n\n4. Open `mta.yaml` and make the following changes to `build-parameters`;\n```YAML\nbuild-parameters:\n  before-all:\n   - builder: custom\n     commands:\n      - npm install --production\n      - npx -p @sap/cds-dk cds build --production\n      - cp -r db/data gen/srv/srv/data\n```\n\n5. Open `srv/cat-service.cds`, append the following UI annotations;\n```JSON\n\tannotate CatalogService.Books with @(\n    UI : { \n        SelectionFields  : [\n            title\n        ],\n        LineItem  : [\n            { Value : ID },\n            { Value : title }, \n            { Value : stock }                                   \n        ],\n     }\n  ){\n      ID @( title: 'ID' );    \n      title @( title: 'Title' );\n      stock @( title: 'Stock' );\n  };\n```\n\n6. Run `npm install`\n\n7. Run `cds watch` to validate everything is working, follow the new tab to validate your catalog service is running\n\n8. Right click mta and select `Create MTA Module from Template`\n\t- Select `Approuter Configuration`\n\t- Select your HTML5 application runtime - select `Standalone Approuter`\n\t- Do you want to add authentication? - `Yes`\n\t- Do you plan to add a UI? - `Yes`\n\t- Select Next\n\n9. Right click mta and select `Create MTA Module from Template`\n\t- Select `SAP Fiori Application`\n\t- Select your application type and floor plan\n\t- Select `Use a Local CAP Project` and point to your new CAP project\n\t- Select OData Service\n\t- Select Main entity\n\t- Enter a unique project name i.e. `mystandalonecapproject`\n\t- Select Add deployment configuration to MTA project - `Yes` (will have detected your mta.yaml already generated)\n  - Select Add FLP configuration - `Yes`\n  - Select Next\n\t- Select Please choose the target - `Cloud Foundry`\n\t- Select `None` for your destination\n  - Select Semantic Object? - `MyStandaloneCapProject`\n  - Select Action? - `display`\n  - Select Title? - `The Title of my Standalone App`\n  - Select Finish\n\n10. Open app/mystandalonecapproject/xs-app.json, add the following route as the first route in the list;\n```JSON\t\n    {\n      \"authenticationType\": \"none\",\n      \"csrfProtection\": false,\n      \"source\": \"^/catalog/\",\n      \"destination\": \"cap-launchpad\"\n    },\t\n```\n\n11. Open `mta.yaml` make the following changes\n\n- Update the existing module standaloneCAPProject-srv to reflect the following attributes\n\n```YAML\n- name: standaloneCAPProject-srv\n  type: nodejs\n  path: gen/srv\n  provides:\n  - name: srv-api\n    properties:\n      srv-url: ${default-url}\n  parameters:\n    memory: 256M\n    disk-quota: 1024M\n    buildpack: nodejs_buildpack\n  build-parameters:\n    builder: npm-ci\n```   \t\t\n\t\n- add the following destination resource `standaloneCAPProject-destination-service`\n\n```YAML\n- Authentication: NoAuthentication\n  Name: cap-launchpad\n  ProxyType: Internet\n  Type: HTTP\n  URL: ~{srv-api/srv-url}\n  HTML5.DynamicDestination: true\n  HTML5.ForwardAuthToken: true\n```\n\n- also, add the following `requires` node\n\n```YAML\nrequires:\n  - name: srv-api \n```\n\nFull example:\n```YAML\n- name: standaloneCAPProject-destination-service\n  type: org.cloudfoundry.managed-service\n  requires:\n    - name: srv-api\n  parameters:\n    config:\n      HTML5Runtime_enabled: false\n      init_data:\n        instance:\n          destinations:\n          - Authentication: NoAuthentication\n            Name: ui5\n            ProxyType: Internet\n            Type: HTTP\n            URL: https://ui5.sap.com\n          - Authentication: NoAuthentication\n            Name: cap-launchpad\n            ProxyType: Internet\n            Type: HTTP\n            URL: ~{srv-api/srv-url}\n            HTML5.DynamicDestination: true\n            HTML5.ForwardAuthToken: true  \n          existing_destinations_policy: update\n      version: 1.0.0\n    service: destination\n    service-name: standaloneCAPProject-destination-service\n    service-plan: lite\n```\n\n12. Your application is now ready for deployment or local development    \n\nTo deploy the application to Cloud Foundry\n\n1. Open the <mta-id>-approuter folder and open `package.json`, change `\"@sap/approuter\": \"10.5.1\"` to `\"@sap/approuter\": \"11.5.0\"` and change `\"node\": \"^10.0.0 || ^12.0.0\"` to `\"node\": \">= 14.0.0\"` this is to support node v16 on Cloud Foundry\n\nUsing SAP Business Application Studio;\n\n2. Right click the mta.yaml and select `Build MTA Project`, this will generate an mtar archive\n\n3. Right click the mtar in the `mta_archives` folder and select `Deploy MTA Archive`, if not logged into Cloud Foundry it will fail\n\nUsing VSCode\n\n1. Run the following command\n```BASH\nnpm run build && npm run deploy\n```",
  "excerpt": "Deploy CAP Project using a Fiori UI and in-memory database with FLP support - Dev space is created using SAP Fiori or Full Stack Development - Ensure CDS is installed by runnging npm i -g @sap/cds-dk ...",
  "wordCount": 700,
  "version": "1.0.0",
  "source": "fiori-samples",
  "sourceType": "github"
}