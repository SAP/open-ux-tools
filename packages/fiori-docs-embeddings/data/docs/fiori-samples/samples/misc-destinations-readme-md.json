{
  "id": "fiori-samples-misc-destinations-readme-md",
  "title": "Consuming and validating SAP BTP destinations to support OData XML Service",
  "category": "samples",
  "path": "misc/destinations/README.md",
  "lastModified": "2025-09-01T18:17:10.806Z",
  "tags": [
    "samples",
    "md",
    "Consuming",
    "and",
    "validating",
    "SAP",
    "BTP",
    "destinations",
    "support",
    "OData",
    "XML",
    "Service"
  ],
  "headers": [
    "Consuming and validating SAP BTP destinations to support OData XML Service",
    "Overview",
    "Prerequisites",
    "Additional Resources",
    "Flow Diagram",
    "Sample Microsoft OData XML service endpoints",
    "Configuration",
    "Understanding `WebIDEUsage`",
    "Sample curl commands for `odata_gen`",
    "Sample curl commands for `odata_abap`",
    "Environment Check",
    "Troubleshooting",
    "Common Errors",
    "Issue One",
    "License"
  ],
  "content": "# Consuming and validating SAP BTP destinations to support OData XML Service\n\n# Overview\nSAP BTP destinations are used to connect to different services and systems in the cloud, On-Premise or any publicly available endpoints. They are used to define the connection parameters for the service you want to consume. The destination is a logical representation of the service and contains all the information required to connect to it.\n\n- This guide is focused on consuming OData XML services via SAP BTP destinations, when using [SAP Fiori tools](https://help.sap.com/docs/SAP_FIORI_tools) generator and [Service Centre](https://help.sap.com/docs/bas/sap-business-application-studio/explore-services-using-service-center) in Business Application Studio (BAS).\n- Other destination types are supported, for example, OData SAP HANA XS type services, but this guide is focused on OData XML service only.\n- We are going to use a publicly available endpoint to demonstrate how to configure the SAP BTP destination and how to consume the OData XML service using the SAP Fiori tools generator using different configurations and tools.\n\n# Prerequisites\n\n- You have SAP Cloud Foundry Runtime environment configured in your SAP BTP subaccount\n- You have admin rights to the SAP BTP cockpit to modify destinations\n- Only OData XML services are supported when creating SAP Fiori Elements applications when using SAP Fiori tools generator\n- Understanding [SAP BTP destinations](https://learning.sap.com/learning-journeys/administrating-sap-business-technology-platform/using-destinations)\n- Creating [SAP BTP destinations in the SAP BTP cockpit](https://developers.sap.com/tutorials/cp-cf-create-destination..html)\n\n# Additional Resources\n- Understanding [SAP BTP destination authentication types](https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/http-destinations)\n\n## Flow Diagram\n\nThe following sequence diagram illustrates a typical flow of how a user accesses an SAP BTP application that consumes an external API endpoint using a destination configured with Basic Authentication.\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant Browser as Web Browser\n    participant BTPApp as SAP BTP Application\n    participant DestinationService as SAP BTP Destination Service\n    participant ExternalAPI as External Basic Auth API Endpoint\n\n    User->>Browser: 1. Accesses BTP App URL (e.g., Fiori Launchpad tile)\n    Browser->>BTPApp: 2. Requests data/action requiring external API call\n    BTPApp->>DestinationService: 3. Looks up Destination \"MyBasicAuthEndpoint\"\n    DestinationService->>BTPApp: 4. Provides Destination Configuration (URL, Basic Auth Username/Password)\n    BTPApp->>ExternalAPI: 5. Makes API Call (HTTP Request with \"Authorization: Basic ...\" Header)\n    ExternalAPI->>BTPApp: 6. Validates credentials & Responds with Data\n    BTPApp->>Browser: 7. Sends processed data/response\n    Browser->>User: 8. Displays data/confirms action\n```\n\n# Sample Microsoft OData XML service endpoints\n\nThe endpoint `https://services.odata.org` exposes a number of OData service endpoints, as shown.\n\n```\n#1\nhttps://services.odata.org/v2/northwind/northwind.svc/\n#2\nhttps://services.odata.org/V3/Northwind/Northwind.svc/\n```\n\n# Configuration \n\nThis is a sample SAP BTP destination configuration for the Northwind OData service. The destination name is `northwind` and the URL is `https://services.odata.org`. The authentication type is set to `NoAuthentication`, and the proxy type is set to `Internet`.\n\n![Alt text](northwind_destination.png?raw=true \"Screenshot of SAP BTP destination\")\n\nThe [SAP BTP destination configuration](northwind?raw=true) can be imported directly into your SAP BTP destinations list and it contains the following properties;\n\n```\n#\nType=HTTP\nHTML5.DynamicDestination=true\nAuthentication=NoAuthentication\nHTML5.Timeout=60000\nWebIDEEnabled=true\nProxyType=Internet\nURL=https\\://services.odata.org\nName=northwind\nWebIDEUsage=odata_gen\n```\n\nTo understand more around these properties, refer to this [SAP Fiori tools documentation](https://ga.support.sap.com/dtp/viewer/index.html#/tree/3046/actions/45995:48363:53594:54336).\n\nQuick Summary of the properties;\n- `WebIDEUsage` is configured with `odata_gen`, this means that the destination is used for OData generation since it's exposing an OData XML service, there are many different values for this property i.e. `odata_cloud` which are used for different purposes\n- `WebIDEEnabled` is set to true; this means that the destination is enabled for use in the SAP Business Application Studio\n- `HTML5.Timeout` is set to 60000 ms; this is the time the destination will wait for a response from the service before timing out\n- `HTML5.DynamicDestination` is set to true; this means that the destination will be dynamically created at runtime\n- `Authentication` is set to `NoAuthentication`, this means that the destination will not require any authentication\n- Other properties can be added; some of these will be discussed in the next section, for example `odata_abap`\n\n# Understanding `WebIDEUsage`\n\nThe SAP BTP destination `WebIDEUsage` property is used to define the purpose of the destination. The following are some of the common values for this property: `dev_abap`, `ui5_execute_abap`, `bsp_execute_abap`, `odata_gen`, `odata_abap`. In the context of using it for generating SAP Fiori Elements applications using SAP Fiori tools, `odata_abap` or `odata_gen` are only required.\n\nHowever, `odata_gen` and `odata_abap` are the most common values used for OData services and are mutually exclusive, please only specify the one that meets your requirement. For example, if you are using `odata_gen`, then `odata_abap` should be removed and vice versa. The following table shows the common values for the `WebIDEUsage` property:\n\n| Value        | Description                                                                                             |\n|--------------|---------------------------------------------------------------------------------------------------------|\n| `odata_gen`  | To consume a specific service of your choice, service endpoint is known to the user                     |\n| `odata_abap` | Consume the V2 and V4 OData service ABAP catalogs, allowing you to search and select a specific service |\n\n\n# Sample curl commands for `odata_gen`\n\nSince `odata_gen` allows you to control which individual service you want to call, you can use the following curl commands to test the service:\n\nIn our `Sample Microsoft OData XML service endpoints` above, the `northwind` endpoint exposes different OData XML services. The following curl commands are used to test these specific service endpoints:\n\nCall a known service endpoint for V2\n```bash\ncurl \"https://dest.northwind/v2/northwind/northwind.svc/\" -vs > curl-datasrv-output.txt 2>&1\n```\n\nCall a known service endpoint for V2 with metadata query parameter\n```bash\ncurl \"https://dest.northwind/v2/northwind/northwind.svc/\\$metadata\" -vs > curl-datasrv-output.txt 2>&1\n```\n\nNote: since you are using curl, you need to escape the `$` sign with a backslash `\\` in order to pass it as a query parameter. The above command will return the metadata of the specified OData service.\n\nNote: `https://dest.<destination-name>/` is a placeholder that is appended with the name of your destination, it routes the HTTP request via the BAS proxy and sets up the connection to your API backend.\n\nNote: `https://dest.` can also be replaced with `$H2O_URL/destinations/<destination-name>/` for example.\n\nUnder the hood, the `northwind` destination is configured with the following URL property `https://services.odata.org` so when the curl command is executed, it will simply append any path that we have specified, for example;\n\nThe curl command contains the service path`/v2/northwind/northwind.svc/` which will be appended to the SAP BTP destination URL `https://services.odata.org` to form the complete URL `https://services.odata.org/v2/northwind/northwind.svc/`. The same applies to the metadata query parameter, it will be appended to the destination URL to form the complete URL `https://services.odata.org/v2/northwind/northwind.svc/$metadata`.\n\n# Sample curl commands for `odata_abap`\n\nIn most instances your SAP BTP destination will be configured with `odata_abap` to allow you to consume the OData V2 and V4 catalogs. You might only know the name of the service and not the specific service endpoint. The following curl commands are used to test the OData V2 and V4 catalogs:\n\nOData V2 Catalog\n\n```bash\ncurl \"https://dest.<destination-name>/sap/opu/odata/IWFND/CATALOGSERVICE;v=2/ServiceCollection\" -vs > curl-v2catalog-output.txt 2>&1\n```\n\nOData V4 Catalog\n```bash\ncurl \"https://dest.<destination_name>/sap/opu/odata4/iwfnd/config/default/iwfnd/catalog/0002/ServiceGroups?\\$expand=DefaultSystem(\\$expand=Services)\" -vs > curl-v4catalog-output.txt 2>&1\n```\n\nNote: since you are using curl, you need to escape the `$` sign with a backslash `\\` in order to pass it as a query parameter.\n\n__Question__: Do you know why we can't use these V2 and V4 catalog endpoints against the `northwind` destination?\n\n__Answer__: The `northwind` destination is not an ABAP system so the catalogs API endpoints are not available and will result in an HTTP 404 Not Found error\n\n# Environment Check\n\nEnvironment check is a tool used to validate the destination configuration and ensure that all the required parameters are set correctly to allow you to use both Service Centre and SAP Fiori tools. The environment check will also check if the destination is reachable and if the catalogs are available.\n\nEven if your destination is configured with `odata_gen`, it's still a valid tool to run to ensure that the destination is reachable and all the required parameters are set correctly. However, if your target system is not an ABAP system, then the V2 and V4 catalog endpoints will fail, as expected.\n\n1. Open SAP Business Application Studio.\n1. Open the Command Palette (View -> Find Command).\n1. Enter `Fiori: Open Environment Check`.\n1. Select `Check Destination`, then choose your destination.\n1. Enter credentials if prompted.\n1. Select `Save and view results`.\n1. A `Preview results.md` file will open—review the `Destination Details` section for missing parameters.\n\nFor more information https://help.sap.com/docs/SAP_FIORI_tools/17d50220bcd848aa854c9c182d65b699/75390cf5d81e43aea5db231ef4225268.html\n\nThe file contains all the information required to troubleshoot the issue and can be reviewed by the developer to get a better understanding of how the destination is configured.\n\nIf you have an ongoing support ticket, attach the generated zip file to the ticket for further investigation. The entire zip needs to be attached as it includes debug trace logs which help to determine connectivity issues and also provide a list of the services exposed by the destination.\n\n# Troubleshooting\n\nTo complete this task, you need to ensure you are subscribed to `SAP Build Work Zone` which will then expose a SAP BTP path called `dynamic_dest`, allowing you to call the SAP BTP destination from outside of Business Application Studio and using the IdP you are logged in with.\n\nThis is a recommended flow to validate the destination configuration outside of Business Application Studio or SAP Build Work Zone \n\n1. In your SAP BTP Cockpit, select your subaccount `Overview` page, on the left navigation bar\n1. Select the Overview page, note the `Subdomain` attribute i.e. my-subdomain and the `API endpoint region` i.e. `https://api.cf.eu10.hana.ondemand.com`, in this case the region will be `eu10`\n1. Next, select `Destinations` under `Connectivity`\n1. Filter the destinations using the name of your chosen destination\n1. Select your destination i.e. `MyDestination`\n1. Select `Edit`, ensure the following `Additional Properties` are configured;\n    ```\n    HTML5.DynamicDestination: true\n    HTML5.Timeout: 60000\n    WebIDEEnabled: true\n    WebIDEUsage=odata_abap (Or odata_gen if consuming a specific service)\n    ```\n1. Select `Save`, please ensure you have the client secret if required\n\nHere is a sample URL, replace the <attribute> values with your own values;\n```\nhttps://<subdomain>.launchpad.cfapps.<region>.hana.ondemand.com/dynamic_dest/<your-destination-name>/<service-path>\n```\n\nCalling a known service path;\n```\nhttps://my-subdomain.launchpad.cfapps.eu10.hana.ondemand.com/dynamic_dest/MyDestination/sap/opu/odata/sap/MyBusinessService/$metadata\n```\n\nCalling V2 Catalog;\n```\nhttps://my-subdomain.launchpad.cfapps.eu10.hana.ondemand.com/dynamic_dest/MyDestination/sap/opu/odata/IWFND/CATALOGSERVICE;v=2/ServiceCollection\n```\n\nOpen a new browser tab using the generated link to review the response, this should return a valid OData XML response.\n\n# Common Errors\n\n## Issue One \n\n__Issue: Getting HTTP 4** Exceptions When Calling the Destination__\n\nThe SAP BTP destination URL property, if hardcoded with additional properties, service paths or query parameters, will result in an HTTP 404 Not Found error. In some instances, this can also result in an HTTP 401/403 exception since you are calling an invalid service path.\n\nTake, for example, a SAP BTP destination URL populated as follows;\n```\nhttps://services.odata.org/odata/$format=JSON\n```\n\nWhen the Service Centre or SAP Fiori tools initiate an HTTP request, any service path appended to the request will fail since the URL already contains a hardcoded value;\n\nSAP BTP destination URL + Service path = Complete URL\n\nSo the complete URL will look like this when executed;\n```\nhttps://services.odata.org/odata/$format=JSON/sap/opu/odata/IWFND/CATALOGSERVICE;v=2/ServiceCollection\n```\n\nThere are some instances where you want to support a destination that exposes a hardcoded path to a specific service or resource. To support this use case, append a property to `Additional Properties` called `WebIDEAdditionalData` with the value `full_url`, for example;\n\n```\n#\nType=HTTP\nHTML5.DynamicDestination=true\nAuthentication=NoAuthentication\nHTML5.Timeout=60000\nWebIDEEnabled=true\nProxyType=Internet\nWebIDEAdditionalData=full_url\nURL=https\\://services.odata.org/v2/northwind/northwind.svc/\nName=northwind_fullurl\nWebIDEUsage=odata_gen\n```\n\n__Solution__\n\nEnsure the SAP BTP destination URL only contains the base URL and not a hardcoded service path or query parameter.\n\n### License\nCopyright (c) 2009-2025 SAP SE or an SAP affiliate company. This project is licensed under the Apache Software License, version 2.0 except as noted otherwise in the [LICENSE](../../LICENSES/Apache-2.0.txt) file.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "excerpt": "Consuming and validating SAP BTP destinations to support OData XML Service Overview SAP BTP destinations are used to connect to different services and systems in the cloud, On-Premise or any publicly ...",
  "wordCount": 1874,
  "version": "1.0.0",
  "source": "fiori-samples",
  "sourceType": "github"
}