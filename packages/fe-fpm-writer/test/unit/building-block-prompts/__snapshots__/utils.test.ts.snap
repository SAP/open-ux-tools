// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`utils -  annotation service -  getAnnotationPathQualifiers - existing annotations, absolute binding context path 1`] = `
Object {
  "@UI.Chart": "@UI.Chart",
  "@UI.LineItem": "@UI.LineItem",
  "@UI.SelectionFields": "@UI.SelectionFields",
}
`;

exports[`utils -  annotation service -  getAnnotationPathQualifiers - existing annotations, absolute binding context path, use namespace 1`] = `
Object {
  "@UI.Chart": "@com.sap.vocabularies.UI.v1.Chart",
  "@UI.LineItem": "@com.sap.vocabularies.UI.v1.LineItem",
  "@UI.SelectionFields": "@com.sap.vocabularies.UI.v1.SelectionFields",
}
`;

exports[`utils -  annotation service -  getAnnotationPathQualifiers - existing annotations, relative binding context path 1`] = `
Object {
  "to_CustomerBankDetails/@UI.Chart#C_CustomerBankDetailsOPType": "to_CustomerBankDetails/@UI.Chart#C_CustomerBankDetailsOPType",
  "to_CustomerBankDetails/@UI.LineItem#test": "to_CustomerBankDetails/@UI.LineItem#test",
}
`;

exports[`utils -  annotation service -  getAnnotationPathQualifiers - existing annotations, relative binding context path, filter isCollection 1`] = `
Object {
  "to_CustomerBankDetails/@UI.LineItem#test": "to_CustomerBankDetails/@UI.LineItem#test",
}
`;

exports[`utils -  prompts entityPrompt 1`] = `
Object {
  "choices": [Function],
  "dependantPromptNames": undefined,
  "message": "entity",
  "name": "buildingBlockData.metaPath.entitySet",
  "placeholder": "Select an entity",
  "selectType": "dynamic",
  "type": "list",
}
`;

exports[`utils -  prompts entityPrompt 2`] = `
Array [
  Object {
    "name": "C_CustomerBankDetailsOPType",
    "value": "C_CUSTOMER_OP_SRV.C_CustomerBankDetailsOPType",
  },
  Object {
    "name": "C_CustomerCompanyCodeOPType",
    "value": "C_CUSTOMER_OP_SRV.C_CustomerCompanyCodeOPType",
  },
  Object {
    "name": "C_CustomerOPType",
    "value": "C_CUSTOMER_OP_SRV.C_CustomerOPType",
  },
  Object {
    "name": "C_CustomerSalesAreaOPType",
    "value": "C_CUSTOMER_OP_SRV.C_CustomerSalesAreaOPType",
  },
  Object {
    "name": "C_CustrecnclnacctvhtempType",
    "value": "C_CUSTOMER_OP_SRV.C_CustrecnclnacctvhtempType",
  },
  Object {
    "name": "C_OrderIsBlockedTextVHTempType",
    "value": "C_CUSTOMER_OP_SRV.C_OrderIsBlockedTextVHTempType",
  },
  Object {
    "name": "I_AccountingClerkStdVHType",
    "value": "C_CUSTOMER_OP_SRV.I_AccountingClerkStdVHType",
  },
  Object {
    "name": "I_AccountingClerkType",
    "value": "C_CUSTOMER_OP_SRV.I_AccountingClerkType",
  },
  Object {
    "name": "I_BillingBlockReasonType",
    "value": "C_CUSTOMER_OP_SRV.I_BillingBlockReasonType",
  },
  Object {
    "name": "I_BusinessPartnerVHType",
    "value": "C_CUSTOMER_OP_SRV.I_BusinessPartnerVHType",
  },
  Object {
    "name": "I_ChartOfAccountsStdVHType",
    "value": "C_CUSTOMER_OP_SRV.I_ChartOfAccountsStdVHType",
  },
  Object {
    "name": "I_CompanyCodeStdVHType",
    "value": "C_CUSTOMER_OP_SRV.I_CompanyCodeStdVHType",
  },
  Object {
    "name": "I_CompanyCodeType",
    "value": "C_CUSTOMER_OP_SRV.I_CompanyCodeType",
  },
  Object {
    "name": "I_ContactPersonDepartmentTType",
    "value": "C_CUSTOMER_OP_SRV.I_ContactPersonDepartmentTType",
  },
  Object {
    "name": "I_ContactPersonFunctionTType",
    "value": "C_CUSTOMER_OP_SRV.I_ContactPersonFunctionTType",
  },
  Object {
    "name": "I_ControllingAreaStdVHType",
    "value": "C_CUSTOMER_OP_SRV.I_ControllingAreaStdVHType",
  },
  Object {
    "name": "I_CountryType",
    "value": "C_CUSTOMER_OP_SRV.I_CountryType",
  },
  Object {
    "name": "I_CreditControlAreaStdVHType",
    "value": "C_CUSTOMER_OP_SRV.I_CreditControlAreaStdVHType",
  },
  Object {
    "name": "I_Customer_to_BusinessPartnerType",
    "value": "C_CUSTOMER_OP_SRV.I_Customer_to_BusinessPartnerType",
  },
  Object {
    "name": "I_Customer_VHType",
    "value": "C_CUSTOMER_OP_SRV.I_Customer_VHType",
  },
  Object {
    "name": "I_CustomerContactOPType",
    "value": "C_CUSTOMER_OP_SRV.I_CustomerContactOPType",
  },
  Object {
    "name": "I_CustomerDunningType",
    "value": "C_CUSTOMER_OP_SRV.I_CustomerDunningType",
  },
  Object {
    "name": "I_CustomerGroupType",
    "value": "C_CUSTOMER_OP_SRV.I_CustomerGroupType",
  },
  Object {
    "name": "I_DeliveryBlockReasonType",
    "value": "C_CUSTOMER_OP_SRV.I_DeliveryBlockReasonType",
  },
  Object {
    "name": "I_DistributionChannelType",
    "value": "C_CUSTOMER_OP_SRV.I_DistributionChannelType",
  },
  Object {
    "name": "I_DivisionType",
    "value": "C_CUSTOMER_OP_SRV.I_DivisionType",
  },
  Object {
    "name": "I_PaymentBlockingReasonType",
    "value": "C_CUSTOMER_OP_SRV.I_PaymentBlockingReasonType",
  },
  Object {
    "name": "I_SalesGroupType",
    "value": "C_CUSTOMER_OP_SRV.I_SalesGroupType",
  },
  Object {
    "name": "I_SalesOfficeType",
    "value": "C_CUSTOMER_OP_SRV.I_SalesOfficeType",
  },
  Object {
    "name": "I_SalesOrganizationType",
    "value": "C_CUSTOMER_OP_SRV.I_SalesOrganizationType",
  },
]
`;

exports[`utils -  prompts getAggregationPathPrompt 1`] = `
Object {
  "choices": [Function],
  "message": "AggregationPathMessage",
  "name": "aggregationPath",
  "placeholder": "Select an aggregation path",
  "selectType": "dynamic",
  "type": "list",
}
`;

exports[`utils -  prompts getAggregationPathPrompt 2`] = `
Array [
  Object {
    "name": "/mvc:View",
    "value": "/mvc:View",
  },
  Object {
    "name": "/mvc:View/Page",
    "value": "/mvc:View/*[local-name()='Page']",
  },
  Object {
    "name": "/mvc:View/Page/content",
    "value": "/mvc:View/*[local-name()='Page']/*[local-name()='content']",
  },
]
`;

exports[`utils -  prompts getAnnotationPathQualifierPrompt 1`] = `
Object {
  "choices": [Function],
  "message": "testMessage",
  "name": "buildingBlockData.metaPath.qualifier",
  "selectType": "dynamic",
  "type": "list",
}
`;

exports[`utils -  prompts getAnnotationPathQualifierPrompt 2`] = `
Array [
  Object {
    "name": "@UI.LineItem",
    "value": "@com.sap.vocabularies.UI.v1.LineItem",
  },
]
`;

exports[`utils -  prompts getViewOrFragmentPathPrompt 1`] = `
Object {
  "choices": [Function],
  "dependantPromptNames": Array [
    "aggregationPath",
  ],
  "message": "testMessage",
  "name": "viewOrFragmentPath",
  "placeholder": "Select a view or fragment file",
  "selectType": "dynamic",
  "type": "list",
  "validate": [Function],
}
`;
