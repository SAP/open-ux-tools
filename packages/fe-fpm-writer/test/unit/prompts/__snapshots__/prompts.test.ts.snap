// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Prompts - no project getBuildingBlockTypePrompts 1`] = `
Object {
  "questions": Array [
    Object {
      "choices": Array [
        Object {
          "name": "Chart",
          "value": "chart",
        },
        Object {
          "name": "Filter Bar",
          "value": "filter-bar",
        },
        Object {
          "name": "Table",
          "value": "table",
        },
      ],
      "message": "Select a building block",
      "name": "buildingBlockType",
      "type": "list",
    },
  ],
}
`;

exports[`Prompts - no project getChartBuildingBlockPrompts 1`] = `
Object {
  "groups": Array [
    Object {
      "description": Array [
        "Select the \`View or Fragment File\` where you would like to insert the chart building block and provide a \`Building Block ID\` to identify the chart.",
        "Select an \`Entity Set\`, and a \`Chart Annotation\` you would like to use for the chart building block.",
        "Select an \`Aggregation Path\` to determine where you would like the chart to be placed on the page.",
      ],
      "id": "chartBuildingBlockProperties",
      "title": "Chart Building Block Properties",
    },
    Object {
      "description": Array [
        "Configure your chart using the properties below.",
      ],
      "id": "chartVisualizationProperties",
      "title": "Chart Visualization Properties",
    },
    Object {
      "description": Array [
        "Configure the below properties to react to events. Event handler methods are invoked when an event occurs.",
      ],
      "id": "chartConfigureEvents",
      "title": "Configure Events",
    },
    Object {
      "description": Array [
        "In order for macros to work, we need to ensure that the sap.fe.macros library is maintained in manifest.json. Please see the code snippet.",
      ],
      "id": "manifestLibraries",
      "title": "Manifest Libraries",
    },
  ],
  "initialAnswers": Object {
    "buildingBlockData": Object {
      "buildingBlockType": "chart",
    },
  },
  "questions": Array [
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "aggregationPath",
          "buildingBlockData.filterBar",
        ],
        "groupId": "chartBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select a view or fragment file",
        "selectType": "dynamic",
      },
      "message": "View or Fragment File",
      "name": "viewOrFragmentPath",
      "type": "list",
      "validate": [Function],
    },
    Object {
      "default": "Chart",
      "guiOptions": Object {
        "groupId": "chartBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Enter a building block ID",
      },
      "message": "Building Block ID",
      "name": "buildingBlockData.id",
      "type": "input",
      "validate": [Function],
    },
    Object {
      "choices": Array [
        Object {
          "name": "Relative",
          "value": "relative",
        },
        Object {
          "name": "Absolute",
          "value": "absolute",
        },
      ],
      "default": "absolute",
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.qualifier",
        ],
        "groupId": "chartBuildingBlockProperties",
        "mandatory": true,
        "selectType": "static",
      },
      "message": "Binding Context Path Type",
      "name": "buildingBlockData.metaPath.bindingContextType",
      "type": "list",
    },
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.qualifier",
        ],
        "groupId": "chartBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select an entity",
        "selectType": "dynamic",
      },
      "message": "Entity",
      "name": "buildingBlockData.metaPath.entitySet",
      "type": "list",
    },
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "groupId": "chartBuildingBlockProperties",
        "hint": "Values are dependent on entity set",
        "mandatory": true,
        "placeholder": "Select a chart annotation path",
        "selectType": "dynamic",
      },
      "message": "Chart Annotation Path",
      "name": "buildingBlockData.metaPath.qualifier",
      "type": "list",
    },
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "groupId": "chartBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select an aggregation path",
        "selectType": "dynamic",
      },
      "message": "Aggregation Path",
      "name": "aggregationPath",
      "type": "list",
    },
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "creation": Object {
          "placeholder": "Enter a new filter bar ID",
        },
        "groupId": "chartBuildingBlockProperties",
        "placeholder": "Select or enter a filter bar ID",
        "selectType": "dynamic",
      },
      "message": "Associated Filter Bar ID",
      "name": "buildingBlockData.filterBar",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "Type",
          "value": "Type",
        },
        Object {
          "name": "Item",
          "value": "Item",
        },
        Object {
          "name": "Sort",
          "value": "Sort",
        },
      ],
      "guiOptions": Object {
        "groupId": "chartVisualizationProperties",
        "placeholder": "Select chart personalization",
        "selectType": "static",
      },
      "message": "Chart Personalization",
      "name": "buildingBlockData.personalization",
      "type": "checkbox",
    },
    Object {
      "choices": Array [
        Object {
          "name": "Single",
          "value": "Single",
        },
        Object {
          "name": "Multiple",
          "value": "Multiple",
        },
      ],
      "guiOptions": Object {
        "groupId": "chartConfigureEvents",
        "selectType": "static",
      },
      "message": "Selection Mode",
      "name": "buildingBlockData.selectionMode",
      "type": "list",
    },
    Object {
      "guiOptions": Object {
        "groupId": "chartConfigureEvents",
        "placeholder": "Enter a function to be executed",
      },
      "message": "Selection Change Event",
      "name": "buildingBlockData.selectionChange",
      "type": "input",
    },
  ],
}
`;

exports[`Prompts - no project getChoices Choices for field of static list type 1`] = `
Array [
  Object {
    "name": "Responsive Table",
    "value": "ResponsiveTable",
  },
  Object {
    "name": "Grid Table",
    "value": "GridTable",
  },
]
`;

exports[`Prompts - no project getCodeSnippet Type "chart", get code snippet 1`] = `
"<macros:Chart
    id=\\"id\\"
    metaPath=\\"/REPLACE_WITH_A_QUALIFIER\\"
    contextPath=\\"REPLACE_WITH_ENTITY\\"
/>"
`;

exports[`Prompts - no project getCodeSnippet Type "filter-bar", get code snippet 1`] = `
"<macros:FilterBar
    id=\\"id\\"
    metaPath=\\"/REPLACE_WITH_ENTITY/REPLACE_WITH_A_QUALIFIER\\"
/>"
`;

exports[`Prompts - no project getCodeSnippet Type "table", get code snippet 1`] = `
"<macros:Table
    id=\\"id\\"
    metaPath=\\"/REPLACE_WITH_ENTITY/REPLACE_WITH_A_QUALIFIER\\"
/>"
`;

exports[`Prompts - no project getCodeSnippet get code snippet with placeholders 1`] = `
"<macros:Table
    id=\\"REPLACE_WITH_BUILDING_BLOCK_ID\\"
    metaPath=\\"/REPLACE_WITH_ENTITY/REPLACE_WITH_A_QUALIFIER\\"
    type=\\"GridTable\\"
/>"
`;

exports[`Prompts - no project getFilterBarBuildingBlockPrompts 1`] = `
Object {
  "groups": Array [
    Object {
      "description": Array [
        "Select the \`View or Fragment File\` where you would like to insert the filter bar building block and provide a \`Building Block ID\` to identify the filter bar.",
        "Select an \`Entity Set\`, and a \`Selection Field Annotation\` you would like to use for the filter bar building block.",
        "Select an \`Aggregation Path\` to determine where you would like the filter bar to be placed on the page.",
      ],
      "id": "filterBarBuildingBlockProperties",
      "title": "Filter Bar Building Block Properties",
    },
    Object {
      "description": Array [
        "Configure the below properties to react to events. Event handler methods are invoked when an event occurs.",
      ],
      "id": "filterConfigureEvents",
      "title": "Configure Events",
    },
    Object {
      "description": Array [
        "In order for macros to work, we need to ensure that the sap.fe.macros library is maintained in manifest.json. Please see the code snippet.",
      ],
      "id": "manifestLibraries",
      "title": "Manifest Libraries",
    },
  ],
  "initialAnswers": Object {
    "buildingBlockData": Object {
      "buildingBlockType": "filter-bar",
    },
  },
  "questions": Array [
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "aggregationPath",
        ],
        "groupId": "filterBarBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select a view or fragment file",
        "selectType": "dynamic",
      },
      "message": "View or Fragment File",
      "name": "viewOrFragmentPath",
      "type": "list",
      "validate": [Function],
    },
    Object {
      "default": "FilterBar",
      "guiOptions": Object {
        "groupId": "filterBarBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Enter a building block ID",
      },
      "message": "Building Block ID",
      "name": "buildingBlockData.id",
      "type": "input",
      "validate": [Function],
    },
    Object {
      "choices": Array [
        Object {
          "name": "Relative",
          "value": "relative",
        },
        Object {
          "name": "Absolute",
          "value": "absolute",
        },
      ],
      "default": "absolute",
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.qualifier",
        ],
        "groupId": "filterBarBuildingBlockProperties",
        "mandatory": true,
        "selectType": "static",
      },
      "message": "Binding Context Path Type",
      "name": "buildingBlockData.metaPath.bindingContextType",
      "type": "list",
    },
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "groupId": "filterBarBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select an aggregation path",
        "selectType": "dynamic",
      },
      "message": "Aggregation Path",
      "name": "aggregationPath",
      "type": "list",
    },
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.qualifier",
        ],
        "groupId": "filterBarBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select an entity",
        "selectType": "dynamic",
      },
      "message": "Entity",
      "name": "buildingBlockData.metaPath.entitySet",
      "type": "list",
    },
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "groupId": "filterBarBuildingBlockProperties",
        "hint": "Values are dependent on entity set",
        "mandatory": true,
        "placeholder": "Select a selection field annotation path",
        "selectType": "dynamic",
      },
      "message": "Selection Field Annotation Path",
      "name": "buildingBlockData.metaPath.qualifier",
      "type": "list",
    },
    Object {
      "guiOptions": Object {
        "groupId": "filterConfigureEvents",
        "placeholder": "Enter a function to be executed",
      },
      "message": "Filter Changed Event",
      "name": "buildingBlockData.filterChanged",
      "type": "input",
    },
    Object {
      "guiOptions": Object {
        "groupId": "filterConfigureEvents",
        "placeholder": "Enter a function to be executed",
      },
      "message": "Search Event",
      "name": "buildingBlockData.search",
      "type": "input",
    },
  ],
}
`;

exports[`Prompts - no project getPageBuildingBlockPrompts 1`] = `
Object {
  "initialAnswers": Object {
    "buildingBlockData": Object {
      "buildingBlockType": "page",
    },
  },
  "questions": Array [
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "aggregationPath",
        ],
        "mandatory": true,
        "placeholder": "Select a view or fragment file",
        "selectType": "dynamic",
      },
      "message": "View or Fragment File",
      "name": "viewOrFragmentPath",
      "type": "list",
      "validate": [Function],
    },
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "mandatory": true,
        "placeholder": "Select an aggregation path",
        "selectType": "dynamic",
      },
      "message": "Aggregation Path",
      "name": "aggregationPath",
      "type": "list",
    },
    Object {
      "default": "Page",
      "guiOptions": Object {
        "mandatory": true,
        "placeholder": "Enter a building block ID",
      },
      "message": "Building Block ID",
      "name": "buildingBlockData.id",
      "type": "input",
      "validate": [Function],
    },
    Object {
      "guiOptions": Object {
        "mandatory": true,
        "translationProperties": Object {
          "annotation": "Title of the Page.",
          "type": "XHED",
        },
      },
      "message": "Page Title",
      "name": "buildingBlockData.title",
      "type": "input",
    },
    Object {
      "guiOptions": Object {
        "translationProperties": Object {
          "annotation": "Description of the Page.",
          "type": "YDES",
        },
      },
      "message": "Page Description",
      "name": "buildingBlockData.description",
      "type": "input",
    },
  ],
}
`;

exports[`Prompts - no project getTableBuildingBlockPrompts 1`] = `
Object {
  "groups": Array [
    Object {
      "description": Array [
        "Select the \`View or Fragment File\` where you would like to insert the table building block and provide a \`Building Block ID\` to identify the table.",
        "Select an \`Entity Set\`, and a \`Line Item Annotation\` you would like to use for the table building block.",
        "Select an \`Aggregation Path\` to determine where you would like the table to appear on the page.",
        "Provide the Associated Filter Bar ID if you want to link the table to an existing filter bar.",
      ],
      "id": "tableBuildingBlockProperties",
      "title": "Table Building Block Properties",
    },
    Object {
      "description": Array [
        "Configure your table using the properties below.",
      ],
      "id": "tableVisualizationProperties",
      "title": "Table Visualization Properties",
    },
    Object {
      "description": Array [
        "In order for macros to work, we need to ensure that the sap.fe.macros library is maintained in manifest.json. Please see the code snippet.",
      ],
      "id": "manifestLibraries",
      "title": "Manifest Libraries",
    },
  ],
  "initialAnswers": Object {
    "buildingBlockData": Object {
      "buildingBlockType": "table",
    },
  },
  "questions": Array [
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "aggregationPath",
          "buildingBlockData.filterBar",
        ],
        "groupId": "tableBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select a view or fragment file",
        "selectType": "dynamic",
      },
      "message": "View or Fragment File",
      "name": "viewOrFragmentPath",
      "type": "list",
      "validate": [Function],
    },
    Object {
      "default": "Table",
      "guiOptions": Object {
        "groupId": "tableBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Enter a building block ID",
      },
      "message": "Building Block ID",
      "name": "buildingBlockData.id",
      "type": "input",
      "validate": [Function],
    },
    Object {
      "choices": Array [
        Object {
          "name": "Relative",
          "value": "relative",
        },
        Object {
          "name": "Absolute",
          "value": "absolute",
        },
      ],
      "default": "absolute",
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.qualifier",
        ],
        "groupId": "tableBuildingBlockProperties",
        "mandatory": true,
        "selectType": "static",
      },
      "message": "Binding Context Path Type",
      "name": "buildingBlockData.metaPath.bindingContextType",
      "type": "list",
    },
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.qualifier",
        ],
        "groupId": "tableBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select an entity",
        "selectType": "dynamic",
      },
      "message": "Entity",
      "name": "buildingBlockData.metaPath.entitySet",
      "type": "list",
    },
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "groupId": "tableBuildingBlockProperties",
        "hint": "Values are dependent on entity set",
        "mandatory": true,
        "placeholder": "Select a line item annotation path",
        "selectType": "dynamic",
      },
      "message": "Line Item Annotation Path",
      "name": "buildingBlockData.metaPath.qualifier",
      "type": "list",
    },
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "groupId": "tableBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select an aggregation path",
        "selectType": "dynamic",
      },
      "message": "Aggregation Path",
      "name": "aggregationPath",
      "type": "list",
    },
    Object {
      "choices": Array [],
      "guiOptions": Object {
        "creation": Object {
          "placeholder": "Enter a new filter bar ID",
        },
        "groupId": "tableBuildingBlockProperties",
        "placeholder": "Select or enter a filter bar ID",
        "selectType": "dynamic",
      },
      "message": "Associated Filter Bar ID",
      "name": "buildingBlockData.filterBar",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "Responsive Table",
          "value": "ResponsiveTable",
        },
        Object {
          "name": "Grid Table",
          "value": "GridTable",
        },
      ],
      "default": "ResponsiveTable",
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
      },
      "message": "Table Type",
      "name": "buildingBlockData.type",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "Single",
          "value": "Single",
        },
        Object {
          "name": "Multiple",
          "value": "Multi",
        },
        Object {
          "name": "Auto",
          "value": "Auto",
        },
        Object {
          "name": "None",
          "value": "None",
        },
      ],
      "default": "Single",
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
      },
      "message": "Select a Selection Mode",
      "name": "buildingBlockData.selectionMode",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": true,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Display Header",
      "name": "buildingBlockData.headerVisible",
      "type": "list",
    },
    Object {
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "translationProperties": Object {
          "annotation": "Header of the table",
          "type": "XTIT",
        },
      },
      "message": "Table Header Text",
      "name": "buildingBlockData.header",
      "type": "input",
    },
    Object {
      "choices": Array [
        Object {
          "name": "Sort",
          "value": "Sort",
        },
        Object {
          "name": "Column",
          "value": "Column",
        },
        Object {
          "name": "Filter",
          "value": "Filter",
        },
      ],
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
      },
      "message": "Table Personalization",
      "name": "buildingBlockData.personalization",
      "type": "checkbox",
    },
    Object {
      "choices": Array [
        Object {
          "name": "Page",
          "value": "Page",
        },
        Object {
          "name": "Control",
          "value": "Control",
        },
        Object {
          "name": "None",
          "value": "None",
        },
      ],
      "default": "None",
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
      },
      "message": "Select a Table Variant Management",
      "name": "buildingBlockData.variantManagement",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": false,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Enable Read Only Mode",
      "name": "buildingBlockData.readOnly",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": false,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Enable Auto Column Width",
      "name": "buildingBlockData.enableAutoColumnWidth",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": false,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Enable Data Export",
      "name": "buildingBlockData.enableExport",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": false,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Enable Full Screen Mode",
      "name": "buildingBlockData.enableFullScreen",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": false,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Enable Paste From Clipboard",
      "name": "buildingBlockData.enablePaste",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": true,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Table Searchable Toggle",
      "name": "buildingBlockData.isSearchable",
      "type": "list",
    },
  ],
}
`;

exports[`Prompts - no project validateAnswers Type "chart", required fields validation 1`] = `
Object {
  "aggregationPath": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.filterBar": Object {
    "isValid": true,
  },
  "buildingBlockData.id": Object {
    "errorMessage": "Please enter a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.bindingContextType": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.entitySet": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.qualifier": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.personalization": Object {
    "isValid": true,
  },
  "buildingBlockData.selectionChange": Object {
    "isValid": true,
  },
  "buildingBlockData.selectionMode": Object {
    "isValid": true,
  },
  "viewOrFragmentPath": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
}
`;

exports[`Prompts - no project validateAnswers Type "filter-bar", required fields validation 1`] = `
Object {
  "aggregationPath": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.filterChanged": Object {
    "isValid": true,
  },
  "buildingBlockData.id": Object {
    "errorMessage": "Please enter a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.bindingContextType": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.entitySet": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.qualifier": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.search": Object {
    "isValid": true,
  },
  "viewOrFragmentPath": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
}
`;

exports[`Prompts - no project validateAnswers Type "table", required fields validation 1`] = `
Object {
  "aggregationPath": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.enableAutoColumnWidth": Object {
    "isValid": true,
  },
  "buildingBlockData.enableExport": Object {
    "isValid": true,
  },
  "buildingBlockData.enableFullScreen": Object {
    "isValid": true,
  },
  "buildingBlockData.enablePaste": Object {
    "isValid": true,
  },
  "buildingBlockData.filterBar": Object {
    "isValid": true,
  },
  "buildingBlockData.header": Object {
    "isValid": true,
  },
  "buildingBlockData.headerVisible": Object {
    "isValid": true,
  },
  "buildingBlockData.id": Object {
    "errorMessage": "Please enter a value",
    "isValid": false,
  },
  "buildingBlockData.isSearchable": Object {
    "isValid": true,
  },
  "buildingBlockData.metaPath.bindingContextType": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.entitySet": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.qualifier": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.personalization": Object {
    "isValid": true,
  },
  "buildingBlockData.readOnly": Object {
    "isValid": true,
  },
  "buildingBlockData.selectionMode": Object {
    "isValid": true,
  },
  "buildingBlockData.type": Object {
    "isValid": true,
  },
  "buildingBlockData.variantManagement": Object {
    "isValid": true,
  },
  "viewOrFragmentPath": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
}
`;

exports[`Prompts getBuildingBlockTypePrompts 1`] = `
Object {
  "questions": Array [
    Object {
      "choices": Array [
        Object {
          "name": "Chart",
          "value": "chart",
        },
        Object {
          "name": "Filter Bar",
          "value": "filter-bar",
        },
        Object {
          "name": "Table",
          "value": "table",
        },
      ],
      "message": "Select a building block",
      "name": "buildingBlockType",
      "type": "list",
    },
  ],
}
`;

exports[`Prompts getChartBuildingBlockPrompts 1`] = `
Object {
  "groups": Array [
    Object {
      "description": Array [
        "Select the \`View or Fragment File\` where you would like to insert the chart building block and provide a \`Building Block ID\` to identify the chart.",
        "Select an \`Entity Set\`, and a \`Chart Annotation\` you would like to use for the chart building block.",
        "Select an \`Aggregation Path\` to determine where you would like the chart to be placed on the page.",
      ],
      "id": "chartBuildingBlockProperties",
      "title": "Chart Building Block Properties",
    },
    Object {
      "description": Array [
        "Configure your chart using the properties below.",
      ],
      "id": "chartVisualizationProperties",
      "title": "Chart Visualization Properties",
    },
    Object {
      "description": Array [
        "Configure the below properties to react to events. Event handler methods are invoked when an event occurs.",
      ],
      "id": "chartConfigureEvents",
      "title": "Configure Events",
    },
    Object {
      "description": Array [
        "In order for macros to work, we need to ensure that the sap.fe.macros library is maintained in manifest.json. Please see the code snippet.",
      ],
      "id": "manifestLibraries",
      "title": "Manifest Libraries",
    },
  ],
  "initialAnswers": Object {
    "buildingBlockData": Object {
      "buildingBlockType": "chart",
    },
  },
  "questions": Array [
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "aggregationPath",
          "buildingBlockData.filterBar",
        ],
        "groupId": "chartBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select a view or fragment file",
        "selectType": "dynamic",
      },
      "message": "View or Fragment File",
      "name": "viewOrFragmentPath",
      "type": "list",
      "validate": [Function],
    },
    Object {
      "default": "Chart",
      "guiOptions": Object {
        "groupId": "chartBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Enter a building block ID",
      },
      "message": "Building Block ID",
      "name": "buildingBlockData.id",
      "type": "input",
      "validate": [Function],
    },
    Object {
      "choices": Array [
        Object {
          "name": "Relative",
          "value": "relative",
        },
        Object {
          "name": "Absolute",
          "value": "absolute",
        },
      ],
      "default": "absolute",
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.qualifier",
        ],
        "groupId": "chartBuildingBlockProperties",
        "mandatory": true,
        "selectType": "static",
      },
      "message": "Binding Context Path Type",
      "name": "buildingBlockData.metaPath.bindingContextType",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.qualifier",
        ],
        "groupId": "chartBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select an entity",
        "selectType": "dynamic",
      },
      "message": "Entity",
      "name": "buildingBlockData.metaPath.entitySet",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "groupId": "chartBuildingBlockProperties",
        "hint": "Values are dependent on entity set",
        "mandatory": true,
        "placeholder": "Select a chart annotation path",
        "selectType": "dynamic",
      },
      "message": "Chart Annotation Path",
      "name": "buildingBlockData.metaPath.qualifier",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "groupId": "chartBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select an aggregation path",
        "selectType": "dynamic",
      },
      "message": "Aggregation Path",
      "name": "aggregationPath",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "creation": Object {
          "placeholder": "Enter a new filter bar ID",
        },
        "groupId": "chartBuildingBlockProperties",
        "placeholder": "Select or enter a filter bar ID",
        "selectType": "dynamic",
      },
      "message": "Associated Filter Bar ID",
      "name": "buildingBlockData.filterBar",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "Type",
          "value": "Type",
        },
        Object {
          "name": "Item",
          "value": "Item",
        },
        Object {
          "name": "Sort",
          "value": "Sort",
        },
      ],
      "guiOptions": Object {
        "groupId": "chartVisualizationProperties",
        "placeholder": "Select chart personalization",
        "selectType": "static",
      },
      "message": "Chart Personalization",
      "name": "buildingBlockData.personalization",
      "type": "checkbox",
    },
    Object {
      "choices": Array [
        Object {
          "name": "Single",
          "value": "Single",
        },
        Object {
          "name": "Multiple",
          "value": "Multiple",
        },
      ],
      "guiOptions": Object {
        "groupId": "chartConfigureEvents",
        "selectType": "static",
      },
      "message": "Selection Mode",
      "name": "buildingBlockData.selectionMode",
      "type": "list",
    },
    Object {
      "guiOptions": Object {
        "groupId": "chartConfigureEvents",
        "placeholder": "Enter a function to be executed",
      },
      "message": "Selection Change Event",
      "name": "buildingBlockData.selectionChange",
      "type": "input",
    },
  ],
}
`;

exports[`Prompts getChoices Choices for field "entitySet" 1`] = `
Array [
  "C_CustomerBankDetailsOP",
  "C_CustomerCompanyCodeOP",
  "C_CustomerOP",
  "C_CustomerSalesAreaOP",
  "C_Custrecnclnacctvhtemp",
  "C_OrderIsBlockedTextVHTemp",
  "I_AccountingClerk",
  "I_AccountingClerkStdVH",
  "I_BillingBlockReason",
  "I_BusinessPartnerVH",
  "I_ChartOfAccountsStdVH",
  "I_CompanyCode",
  "I_CompanyCodeStdVH",
  "I_ContactPersonDepartmentT",
  "I_ContactPersonFunctionT",
  "I_ControllingAreaStdVH",
  "I_Country",
  "I_CreditControlAreaStdVH",
  "I_Customer_to_BusinessPartner",
  "I_Customer_VH",
  "I_CustomerContactOP",
  "I_CustomerDunning",
  "I_CustomerGroup",
  "I_DeliveryBlockReason",
  "I_DistributionChannel",
  "I_Division",
  "I_PaymentBlockingReason",
  "I_SalesGroup",
  "I_SalesOffice",
  "I_SalesOrganization",
]
`;

exports[`Prompts getChoices Choices for field "filterBar" 1`] = `
Array [
  "dummyId",
  "FilterBar",
  "FilterBar2",
]
`;

exports[`Prompts getChoices Choices for field "viewOrFragmentPath" and "aggregationPath" 1`] = `
Array [
  Object {
    "name": "/mvc:View",
    "value": "/mvc:View",
  },
  Object {
    "name": "/mvc:View/Page",
    "value": "/mvc:View/*[local-name()='Page']",
  },
  Object {
    "name": "/mvc:View/Page/content",
    "value": "/mvc:View/*[local-name()='Page']/*[local-name()='content']",
  },
]
`;

exports[`Prompts getChoices Choices for field of static list type 1`] = `
Array [
  Object {
    "name": "Responsive Table",
    "value": "ResponsiveTable",
  },
  Object {
    "name": "Grid Table",
    "value": "GridTable",
  },
]
`;

exports[`Prompts getChoices Type "chart", choices for field "qualifier" 1`] = `
Array [
  Object {
    "name": "@UI.Chart",
    "value": "@com.sap.vocabularies.UI.v1.Chart",
  },
]
`;

exports[`Prompts getChoices Type "filter-bar", choices for field "qualifier" 1`] = `
Array [
  Object {
    "name": "@UI.SelectionFields",
    "value": "@com.sap.vocabularies.UI.v1.SelectionFields",
  },
]
`;

exports[`Prompts getChoices Type "table", choices for field "qualifier" 1`] = `
Array [
  Object {
    "name": "@UI.LineItem",
    "value": "@com.sap.vocabularies.UI.v1.LineItem",
  },
]
`;

exports[`Prompts getCodeSnippet Type "chart", get code snippet 1`] = `
"<macros:Chart
    id=\\"id\\"
    metaPath=\\"qualifier\\"
    contextPath=\\"/entity\\"
    filterBar=\\"filterBar\\"
    selectionMode=\\"testSelectionMode\\"
    selectionChange=\\"function1\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "chart", get code snippet, min ui5Version = 1.96.25 1`] = `
"<macros:Chart
    id=\\"id\\"
    metaPath=\\"qualifier\\"
    contextPath=\\"/entity\\"
    filterBar=\\"filterBar\\"
    selectionMode=\\"testSelectionMode\\"
    selectionChange=\\"function1\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "chart", get code snippet, min ui5Version = 1.97.0 1`] = `
"<macros:Chart
    id=\\"id\\"
    metaPath=\\"qualifier\\"
    contextPath=\\"/entity\\"
    filterBar=\\"filterBar\\"
    selectionMode=\\"testSelectionMode\\"
    selectionChange=\\"function1\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "chart", get code snippet, min ui5Version = 1.97.35 1`] = `
"<macros:Chart
    id=\\"id\\"
    metaPath=\\"qualifier\\"
    contextPath=\\"/entity\\"
    filterBar=\\"filterBar\\"
    selectionMode=\\"testSelectionMode\\"
    selectionChange=\\"function1\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "chart", get code snippet, min ui5Version is undefined 1`] = `
"<macros:Chart
    id=\\"id\\"
    metaPath=\\"qualifier\\"
    contextPath=\\"/entity\\"
    filterBar=\\"filterBar\\"
    selectionMode=\\"testSelectionMode\\"
    selectionChange=\\"function1\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "filter-bar", get code snippet 1`] = `
"<macros:FilterBar
    id=\\"id\\"
    metaPath=\\"/entity/qualifier\\"
    search=\\"function2\\"
    filterChanged=\\"function1\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "filter-bar", get code snippet, min ui5Version = 1.96.25 1`] = `
"<macros:FilterBar
    id=\\"id\\"
    metaPath=\\"qualifier\\"
    contextPath=\\"/entity\\"
    search=\\"function2\\"
    filterChanged=\\"function1\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "filter-bar", get code snippet, min ui5Version = 1.97.0 1`] = `
"<macros:FilterBar
    id=\\"id\\"
    metaPath=\\"/entity/qualifier\\"
    search=\\"function2\\"
    filterChanged=\\"function1\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "filter-bar", get code snippet, min ui5Version = 1.97.35 1`] = `
"<macros:FilterBar
    id=\\"id\\"
    metaPath=\\"/entity/qualifier\\"
    search=\\"function2\\"
    filterChanged=\\"function1\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "filter-bar", get code snippet, min ui5Version is undefined 1`] = `
"<macros:FilterBar
    id=\\"id\\"
    metaPath=\\"/entity/qualifier\\"
    search=\\"function2\\"
    filterChanged=\\"function1\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "table", get code snippet 1`] = `
"<macros:Table
    id=\\"id\\"
    metaPath=\\"/entity/qualifier\\"
    filterBar=\\"filterBar\\"
    header=\\"header\\"
    headerVisible=\\"true\\"
    type=\\"ResponsiveTable\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "table", get code snippet, min ui5Version = 1.96.25 1`] = `
"<macros:Table
    id=\\"id\\"
    metaPath=\\"qualifier\\"
    contextPath=\\"/entity\\"
    filterBar=\\"filterBar\\"
    header=\\"header\\"
    headerVisible=\\"true\\"
    type=\\"ResponsiveTable\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "table", get code snippet, min ui5Version = 1.97.0 1`] = `
"<macros:Table
    id=\\"id\\"
    metaPath=\\"/entity/qualifier\\"
    filterBar=\\"filterBar\\"
    header=\\"header\\"
    headerVisible=\\"true\\"
    type=\\"ResponsiveTable\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "table", get code snippet, min ui5Version = 1.97.35 1`] = `
"<macros:Table
    id=\\"id\\"
    metaPath=\\"/entity/qualifier\\"
    filterBar=\\"filterBar\\"
    header=\\"header\\"
    headerVisible=\\"true\\"
    type=\\"ResponsiveTable\\"
/>"
`;

exports[`Prompts getCodeSnippet Type "table", get code snippet, min ui5Version is undefined 1`] = `
"<macros:Table
    id=\\"id\\"
    metaPath=\\"/entity/qualifier\\"
    filterBar=\\"filterBar\\"
    header=\\"header\\"
    headerVisible=\\"true\\"
    type=\\"ResponsiveTable\\"
/>"
`;

exports[`Prompts getCodeSnippet get code snippet with placeholders 1`] = `
"<macros:Table
    id=\\"REPLACE_WITH_BUILDING_BLOCK_ID\\"
    metaPath=\\"/REPLACE_WITH_ENTITY/REPLACE_WITH_A_QUALIFIER\\"
    type=\\"GridTable\\"
/>"
`;

exports[`Prompts getFilterBarBuildingBlockPrompts 1`] = `
Object {
  "groups": Array [
    Object {
      "description": Array [
        "Select the \`View or Fragment File\` where you would like to insert the filter bar building block and provide a \`Building Block ID\` to identify the filter bar.",
        "Select an \`Entity Set\`, and a \`Selection Field Annotation\` you would like to use for the filter bar building block.",
        "Select an \`Aggregation Path\` to determine where you would like the filter bar to be placed on the page.",
      ],
      "id": "filterBarBuildingBlockProperties",
      "title": "Filter Bar Building Block Properties",
    },
    Object {
      "description": Array [
        "Configure the below properties to react to events. Event handler methods are invoked when an event occurs.",
      ],
      "id": "filterConfigureEvents",
      "title": "Configure Events",
    },
    Object {
      "description": Array [
        "In order for macros to work, we need to ensure that the sap.fe.macros library is maintained in manifest.json. Please see the code snippet.",
      ],
      "id": "manifestLibraries",
      "title": "Manifest Libraries",
    },
  ],
  "initialAnswers": Object {
    "buildingBlockData": Object {
      "buildingBlockType": "filter-bar",
    },
  },
  "questions": Array [
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "aggregationPath",
        ],
        "groupId": "filterBarBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select a view or fragment file",
        "selectType": "dynamic",
      },
      "message": "View or Fragment File",
      "name": "viewOrFragmentPath",
      "type": "list",
      "validate": [Function],
    },
    Object {
      "default": "FilterBar",
      "guiOptions": Object {
        "groupId": "filterBarBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Enter a building block ID",
      },
      "message": "Building Block ID",
      "name": "buildingBlockData.id",
      "type": "input",
      "validate": [Function],
    },
    Object {
      "choices": Array [
        Object {
          "name": "Relative",
          "value": "relative",
        },
        Object {
          "name": "Absolute",
          "value": "absolute",
        },
      ],
      "default": "absolute",
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.qualifier",
        ],
        "groupId": "filterBarBuildingBlockProperties",
        "mandatory": true,
        "selectType": "static",
      },
      "message": "Binding Context Path Type",
      "name": "buildingBlockData.metaPath.bindingContextType",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "groupId": "filterBarBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select an aggregation path",
        "selectType": "dynamic",
      },
      "message": "Aggregation Path",
      "name": "aggregationPath",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.qualifier",
        ],
        "groupId": "filterBarBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select an entity",
        "selectType": "dynamic",
      },
      "message": "Entity",
      "name": "buildingBlockData.metaPath.entitySet",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "groupId": "filterBarBuildingBlockProperties",
        "hint": "Values are dependent on entity set",
        "mandatory": true,
        "placeholder": "Select a selection field annotation path",
        "selectType": "dynamic",
      },
      "message": "Selection Field Annotation Path",
      "name": "buildingBlockData.metaPath.qualifier",
      "type": "list",
    },
    Object {
      "guiOptions": Object {
        "groupId": "filterConfigureEvents",
        "placeholder": "Enter a function to be executed",
      },
      "message": "Filter Changed Event",
      "name": "buildingBlockData.filterChanged",
      "type": "input",
    },
    Object {
      "guiOptions": Object {
        "groupId": "filterConfigureEvents",
        "placeholder": "Enter a function to be executed",
      },
      "message": "Search Event",
      "name": "buildingBlockData.search",
      "type": "input",
    },
  ],
}
`;

exports[`Prompts getPageBuildingBlockPrompts 1`] = `
Object {
  "initialAnswers": Object {
    "buildingBlockData": Object {
      "buildingBlockType": "page",
    },
  },
  "questions": Array [
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "aggregationPath",
        ],
        "mandatory": true,
        "placeholder": "Select a view or fragment file",
        "selectType": "dynamic",
      },
      "message": "View or Fragment File",
      "name": "viewOrFragmentPath",
      "type": "list",
      "validate": [Function],
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "mandatory": true,
        "placeholder": "Select an aggregation path",
        "selectType": "dynamic",
      },
      "message": "Aggregation Path",
      "name": "aggregationPath",
      "type": "list",
    },
    Object {
      "default": "Page",
      "guiOptions": Object {
        "mandatory": true,
        "placeholder": "Enter a building block ID",
      },
      "message": "Building Block ID",
      "name": "buildingBlockData.id",
      "type": "input",
      "validate": [Function],
    },
    Object {
      "guiOptions": Object {
        "mandatory": true,
        "translationProperties": Object {
          "annotation": "Title of the Page.",
          "type": "XHED",
        },
      },
      "message": "Page Title",
      "name": "buildingBlockData.title",
      "type": "input",
    },
    Object {
      "guiOptions": Object {
        "translationProperties": Object {
          "annotation": "Description of the Page.",
          "type": "YDES",
        },
      },
      "message": "Page Description",
      "name": "buildingBlockData.description",
      "type": "input",
    },
  ],
}
`;

exports[`Prompts getRichTextEditorBuildingBlockPrompts 1`] = `
Object {
  "initialAnswers": Object {
    "buildingBlockData": Object {
      "buildingBlockType": "rich-text-editor",
      "buttonGroup": Object {
        "buttons": "bold,italic,underline",
        "name": "font-style",
        "visible": true,
      },
    },
  },
  "questions": Array [
    Object {
      "guiOptions": Object {
        "mandatory": true,
        "placeholder": "Enter a building block ID",
      },
      "message": "Building Block ID",
      "name": "buildingBlockData.id",
      "type": "input",
      "validate": [Function],
    },
    Object {
      "choices": Array [
        Object {
          "name": "Relative",
          "value": "relative",
        },
        Object {
          "name": "Absolute",
          "value": "absolute",
        },
      ],
      "default": "absolute",
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.entitySet",
        ],
        "mandatory": true,
        "selectType": "static",
      },
      "message": "Binding Context",
      "name": "buildingBlockData.metaPath.bindingContextType",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "default": undefined,
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.targetProperty",
        ],
        "mandatory": true,
        "placeholder": "Select an entity",
        "selectType": "dynamic",
      },
      "message": "Entity",
      "name": "buildingBlockData.metaPath.entitySet",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "mandatory": true,
        "placeholder": "Select a target property",
        "selectType": "dynamic",
      },
      "message": "Target Property",
      "name": "buildingBlockData.targetProperty",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "mandatory": true,
        "placeholder": "Select an aggregation path",
        "selectType": "dynamic",
      },
      "message": "Aggregation Path",
      "name": "aggregationPath",
      "type": "list",
    },
    Object {
      "default": "font-style",
      "message": "Button Group Name",
      "name": "buildingBlockData.buttonGroup.name",
      "type": "input",
    },
    Object {
      "default": "bold,italic,underline",
      "message": "Buttons",
      "name": "buildingBlockData.buttonGroup.buttons",
      "type": "input",
    },
    Object {
      "default": true,
      "message": "Visible",
      "name": "buildingBlockData.buttonGroup.visible",
      "type": "input",
    },
    Object {
      "message": "Priority",
      "name": "buildingBlockData.buttonGroup.priority",
      "type": "input",
    },
    Object {
      "message": "Custom Toolbar Priority",
      "name": "buildingBlockData.buttonGroup.customToolbarPriority",
      "type": "input",
    },
    Object {
      "message": "Row",
      "name": "buildingBlockData.buttonGroup.row",
      "type": "input",
    },
  ],
}
`;

exports[`Prompts getTableBuildingBlockPrompts 1`] = `
Object {
  "groups": Array [
    Object {
      "description": Array [
        "Select the \`View or Fragment File\` where you would like to insert the table building block and provide a \`Building Block ID\` to identify the table.",
        "Select an \`Entity Set\`, and a \`Line Item Annotation\` you would like to use for the table building block.",
        "Select an \`Aggregation Path\` to determine where you would like the table to appear on the page.",
        "Provide the Associated Filter Bar ID if you want to link the table to an existing filter bar.",
      ],
      "id": "tableBuildingBlockProperties",
      "title": "Table Building Block Properties",
    },
    Object {
      "description": Array [
        "Configure your table using the properties below.",
      ],
      "id": "tableVisualizationProperties",
      "title": "Table Visualization Properties",
    },
    Object {
      "description": Array [
        "In order for macros to work, we need to ensure that the sap.fe.macros library is maintained in manifest.json. Please see the code snippet.",
      ],
      "id": "manifestLibraries",
      "title": "Manifest Libraries",
    },
  ],
  "initialAnswers": Object {
    "buildingBlockData": Object {
      "buildingBlockType": "table",
    },
  },
  "questions": Array [
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "aggregationPath",
          "buildingBlockData.filterBar",
        ],
        "groupId": "tableBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select a view or fragment file",
        "selectType": "dynamic",
      },
      "message": "View or Fragment File",
      "name": "viewOrFragmentPath",
      "type": "list",
      "validate": [Function],
    },
    Object {
      "default": "Table",
      "guiOptions": Object {
        "groupId": "tableBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Enter a building block ID",
      },
      "message": "Building Block ID",
      "name": "buildingBlockData.id",
      "type": "input",
      "validate": [Function],
    },
    Object {
      "choices": Array [
        Object {
          "name": "Relative",
          "value": "relative",
        },
        Object {
          "name": "Absolute",
          "value": "absolute",
        },
      ],
      "default": "absolute",
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.qualifier",
        ],
        "groupId": "tableBuildingBlockProperties",
        "mandatory": true,
        "selectType": "static",
      },
      "message": "Binding Context Path Type",
      "name": "buildingBlockData.metaPath.bindingContextType",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "dependantPromptNames": Array [
          "buildingBlockData.metaPath.qualifier",
        ],
        "groupId": "tableBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select an entity",
        "selectType": "dynamic",
      },
      "message": "Entity",
      "name": "buildingBlockData.metaPath.entitySet",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "groupId": "tableBuildingBlockProperties",
        "hint": "Values are dependent on entity set",
        "mandatory": true,
        "placeholder": "Select a line item annotation path",
        "selectType": "dynamic",
      },
      "message": "Line Item Annotation Path",
      "name": "buildingBlockData.metaPath.qualifier",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "groupId": "tableBuildingBlockProperties",
        "mandatory": true,
        "placeholder": "Select an aggregation path",
        "selectType": "dynamic",
      },
      "message": "Aggregation Path",
      "name": "aggregationPath",
      "type": "list",
    },
    Object {
      "choices": [Function],
      "guiOptions": Object {
        "creation": Object {
          "placeholder": "Enter a new filter bar ID",
        },
        "groupId": "tableBuildingBlockProperties",
        "placeholder": "Select or enter a filter bar ID",
        "selectType": "dynamic",
      },
      "message": "Associated Filter Bar ID",
      "name": "buildingBlockData.filterBar",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "Responsive Table",
          "value": "ResponsiveTable",
        },
        Object {
          "name": "Grid Table",
          "value": "GridTable",
        },
      ],
      "default": "ResponsiveTable",
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
      },
      "message": "Table Type",
      "name": "buildingBlockData.type",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "Single",
          "value": "Single",
        },
        Object {
          "name": "Multiple",
          "value": "Multi",
        },
        Object {
          "name": "Auto",
          "value": "Auto",
        },
        Object {
          "name": "None",
          "value": "None",
        },
      ],
      "default": "Single",
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
      },
      "message": "Select a Selection Mode",
      "name": "buildingBlockData.selectionMode",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": true,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Display Header",
      "name": "buildingBlockData.headerVisible",
      "type": "list",
    },
    Object {
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "translationProperties": Object {
          "annotation": "Header of the table",
          "type": "XTIT",
        },
      },
      "message": "Table Header Text",
      "name": "buildingBlockData.header",
      "type": "input",
    },
    Object {
      "choices": Array [
        Object {
          "name": "Sort",
          "value": "Sort",
        },
        Object {
          "name": "Column",
          "value": "Column",
        },
        Object {
          "name": "Filter",
          "value": "Filter",
        },
      ],
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
      },
      "message": "Table Personalization",
      "name": "buildingBlockData.personalization",
      "type": "checkbox",
    },
    Object {
      "choices": Array [
        Object {
          "name": "Page",
          "value": "Page",
        },
        Object {
          "name": "Control",
          "value": "Control",
        },
        Object {
          "name": "None",
          "value": "None",
        },
      ],
      "default": "None",
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
      },
      "message": "Select a Table Variant Management",
      "name": "buildingBlockData.variantManagement",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": false,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Enable Read Only Mode",
      "name": "buildingBlockData.readOnly",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": false,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Enable Auto Column Width",
      "name": "buildingBlockData.enableAutoColumnWidth",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": false,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Enable Data Export",
      "name": "buildingBlockData.enableExport",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": false,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Enable Full Screen Mode",
      "name": "buildingBlockData.enableFullScreen",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": false,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Enable Paste From Clipboard",
      "name": "buildingBlockData.enablePaste",
      "type": "list",
    },
    Object {
      "choices": Array [
        Object {
          "name": "False",
          "value": false,
        },
        Object {
          "name": "True",
          "value": true,
        },
      ],
      "default": true,
      "guiOptions": Object {
        "groupId": "tableVisualizationProperties",
        "selectType": "static",
      },
      "message": "Table Searchable Toggle",
      "name": "buildingBlockData.isSearchable",
      "type": "list",
    },
  ],
}
`;

exports[`Prompts submitAnswers Type "chart" 1`] = `
"<mvc:View xmlns:core=\\"sap.ui.core\\" xmlns:mvc=\\"sap.ui.core.mvc\\" xmlns=\\"sap.m\\" xmlns:html=\\"http://www.w3.org/1999/xhtml\\" controllerName=\\"com.test.myApp.ext.main.Main\\" xmlns:macros=\\"sap.fe.macros\\">
    <Page title=\\"Main\\">
        <content>
            <macros:Chart id=\\"id\\" metaPath=\\"qualifier\\" contextPath=\\"/entity\\" filterBar=\\"filterBar\\" selectionMode=\\"testSelectionMode\\" selectionChange=\\"function1\\"/>
        </content>
    </Page>
</mvc:View>"
`;

exports[`Prompts submitAnswers Type "chart", min ui5Version = 1.96.0 1`] = `
"<mvc:View xmlns:core=\\"sap.ui.core\\" xmlns:mvc=\\"sap.ui.core.mvc\\" xmlns=\\"sap.m\\" xmlns:html=\\"http://www.w3.org/1999/xhtml\\" controllerName=\\"com.test.myApp.ext.main.Main\\" xmlns:macros=\\"sap.fe.macros\\">
    <Page title=\\"Main\\">
        <content>
            <macros:Chart id=\\"id\\" metaPath=\\"qualifier\\" contextPath=\\"/entity\\" filterBar=\\"filterBar\\" selectionMode=\\"testSelectionMode\\" selectionChange=\\"function1\\"/>
        </content>
    </Page>
</mvc:View>"
`;

exports[`Prompts submitAnswers Type "filter-bar" 1`] = `
"<mvc:View xmlns:core=\\"sap.ui.core\\" xmlns:mvc=\\"sap.ui.core.mvc\\" xmlns=\\"sap.m\\" xmlns:html=\\"http://www.w3.org/1999/xhtml\\" controllerName=\\"com.test.myApp.ext.main.Main\\" xmlns:macros=\\"sap.fe.macros\\">
    <Page title=\\"Main\\">
        <content>
            <macros:FilterBar id=\\"id\\" metaPath=\\"/entity/qualifier\\" search=\\"function2\\" filterChanged=\\"function1\\"/>
        </content>
    </Page>
</mvc:View>"
`;

exports[`Prompts submitAnswers Type "filter-bar", min ui5Version = 1.96.0 1`] = `
"<mvc:View xmlns:core=\\"sap.ui.core\\" xmlns:mvc=\\"sap.ui.core.mvc\\" xmlns=\\"sap.m\\" xmlns:html=\\"http://www.w3.org/1999/xhtml\\" controllerName=\\"com.test.myApp.ext.main.Main\\" xmlns:macros=\\"sap.fe.macros\\">
    <Page title=\\"Main\\">
        <content>
            <macros:FilterBar id=\\"id\\" metaPath=\\"qualifier\\" contextPath=\\"/entity\\" search=\\"function2\\" filterChanged=\\"function1\\"/>
        </content>
    </Page>
</mvc:View>"
`;

exports[`Prompts submitAnswers Type "table" 1`] = `
"<mvc:View xmlns:core=\\"sap.ui.core\\" xmlns:mvc=\\"sap.ui.core.mvc\\" xmlns=\\"sap.m\\" xmlns:html=\\"http://www.w3.org/1999/xhtml\\" controllerName=\\"com.test.myApp.ext.main.Main\\" xmlns:macros=\\"sap.fe.macros\\">
    <Page title=\\"Main\\">
        <content>
            <macros:Table id=\\"id\\" metaPath=\\"/entity/qualifier\\" filterBar=\\"filterBar\\" header=\\"header\\" headerVisible=\\"true\\" type=\\"ResponsiveTable\\"/>
        </content>
    </Page>
</mvc:View>"
`;

exports[`Prompts submitAnswers Type "table", min ui5Version = 1.96.0 1`] = `
"<mvc:View xmlns:core=\\"sap.ui.core\\" xmlns:mvc=\\"sap.ui.core.mvc\\" xmlns=\\"sap.m\\" xmlns:html=\\"http://www.w3.org/1999/xhtml\\" controllerName=\\"com.test.myApp.ext.main.Main\\" xmlns:macros=\\"sap.fe.macros\\">
    <Page title=\\"Main\\">
        <content>
            <macros:Table id=\\"id\\" metaPath=\\"qualifier\\" contextPath=\\"/entity\\" filterBar=\\"filterBar\\" header=\\"header\\" headerVisible=\\"true\\" type=\\"ResponsiveTable\\"/>
        </content>
    </Page>
</mvc:View>"
`;

exports[`Prompts submitAnswers Type generation prompts type without generator 1`] = `
"<mvc:View xmlns:core=\\"sap.ui.core\\" xmlns:mvc=\\"sap.ui.core.mvc\\" xmlns=\\"sap.m\\"
    xmlns:html=\\"http://www.w3.org/1999/xhtml\\" controllerName=\\"com.test.myApp.ext.main.Main\\"
    xmlns:macros=\\"sap.fe.macros\\">
    <Page title=\\"Main\\">
        <content />
    </Page>
</mvc:View>"
`;

exports[`Prompts submitAnswers Type generation prompts type without generator 2`] = `
"<mvc:View xmlns:core=\\"sap.ui.core\\" xmlns:mvc=\\"sap.ui.core.mvc\\" xmlns=\\"sap.m\\" xmlns:html=\\"http://www.w3.org/1999/xhtml\\" controllerName=\\"com.test.myApp.ext.main.Main\\" xmlns:macros=\\"sap.fe.macros\\">
    <macros:Page id=\\"TestPage\\" title=\\"Test Page\\"/>
</mvc:View>"
`;

exports[`Prompts validateAnswers Type "chart", required fields validation 1`] = `
Object {
  "aggregationPath": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.filterBar": Object {
    "isValid": true,
  },
  "buildingBlockData.id": Object {
    "errorMessage": "Please enter a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.bindingContextType": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.entitySet": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.qualifier": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.personalization": Object {
    "isValid": true,
  },
  "buildingBlockData.selectionChange": Object {
    "isValid": true,
  },
  "buildingBlockData.selectionMode": Object {
    "isValid": true,
  },
  "viewOrFragmentPath": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
}
`;

exports[`Prompts validateAnswers Type "filter-bar", required fields validation 1`] = `
Object {
  "aggregationPath": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.filterChanged": Object {
    "isValid": true,
  },
  "buildingBlockData.id": Object {
    "errorMessage": "Please enter a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.bindingContextType": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.entitySet": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.qualifier": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.search": Object {
    "isValid": true,
  },
  "viewOrFragmentPath": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
}
`;

exports[`Prompts validateAnswers Type "table", required fields validation 1`] = `
Object {
  "aggregationPath": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.enableAutoColumnWidth": Object {
    "isValid": true,
  },
  "buildingBlockData.enableExport": Object {
    "isValid": true,
  },
  "buildingBlockData.enableFullScreen": Object {
    "isValid": true,
  },
  "buildingBlockData.enablePaste": Object {
    "isValid": true,
  },
  "buildingBlockData.filterBar": Object {
    "isValid": true,
  },
  "buildingBlockData.header": Object {
    "isValid": true,
  },
  "buildingBlockData.headerVisible": Object {
    "isValid": true,
  },
  "buildingBlockData.id": Object {
    "errorMessage": "Please enter a value",
    "isValid": false,
  },
  "buildingBlockData.isSearchable": Object {
    "isValid": true,
  },
  "buildingBlockData.metaPath.bindingContextType": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.entitySet": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.metaPath.qualifier": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
  "buildingBlockData.personalization": Object {
    "isValid": true,
  },
  "buildingBlockData.readOnly": Object {
    "isValid": true,
  },
  "buildingBlockData.selectionMode": Object {
    "isValid": true,
  },
  "buildingBlockData.type": Object {
    "isValid": true,
  },
  "buildingBlockData.variantManagement": Object {
    "isValid": true,
  },
  "viewOrFragmentPath": Object {
    "errorMessage": "Please select a value",
    "isValid": false,
  },
}
`;
