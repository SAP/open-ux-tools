// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`use FPM with existing apps extend UI5 application with FPM generateCustomHeaderSection in ObjectPage 1`] = `
Object {
  "js/webapp/ext/anotherCustomAction/AnotherCustomAction.js": Object {
    "contents": "sap.ui.define([
    \\"sap/m/MessageToast\\"
], function(MessageToast) {
    'use strict';

    return {
        onPress: function(oEvent) {
            MessageToast.show(\\"Custom handler invoked.\\");
        },
        onAppended: function() {
            window.location.href += '/_Booking';
        }
    };
});
",
    "state": "modified",
  },
  "js/webapp/ext/myControllerExtension/MyControllerExtension.controller.js": Object {
    "contents": "sap.ui.define(['sap/ui/core/mvc/ControllerExtension'], function (ControllerExtension) {
	'use strict';

	return ControllerExtension.extend('v4travel.ext.myControllerExtension.MyControllerExtension', {
		// this section allows to extend lifecycle hooks or hooks provided by Fiori elements
		override: {
			/**
             * Called when a controller is instantiated and its View controls (if available) are already created.
             * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
             * @memberOf v4travel.ext.myControllerExtension.MyControllerExtension
             */
			onInit: function () {
				// you can access the Fiori elements extensionAPI via this.base.getExtensionAPI
				var oModel = this.base.getExtensionAPI().getModel();
			}
		}
	});
});
",
    "state": "modified",
  },
  "js/webapp/ext/myCustomAction/MyCustomAction.js": Object {
    "contents": "sap.ui.define([
    \\"sap/m/MessageToast\\"
], function(MessageToast) {
    'use strict';

    return {
        onPress: function(oEvent) {
            MessageToast.show(\\"Custom handler invoked.\\");
        }
    };
});
",
    "state": "modified",
  },
  "js/webapp/ext/myCustomHeaderSection/MyCustomHeaderSection.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\" xmlns:macros=\\"sap.fe.macros\\">
	<VBox>
		<Button core:require=\\"{ handler: 'v4travel/ext/myCustomHeaderSection/MyCustomHeaderSection'}\\" text=\\"MyCustomHeaderSection\\" press=\\"handler.onPress\\" />
	</VBox>
</core:FragmentDefinition>",
    "state": "modified",
  },
  "js/webapp/ext/myCustomHeaderSection/MyCustomHeaderSection.js": Object {
    "contents": "sap.ui.define([
    \\"sap/m/MessageToast\\"
], function(MessageToast) {
    'use strict';

    return {
        onPress: function(oEvent) {
            MessageToast.show(\\"Custom handler invoked.\\");
        }
    };
});
",
    "state": "modified",
  },
  "js/webapp/ext/myCustomHeaderSectionEdit/MyCustomHeaderSectionEdit.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\">
	<VBox>
		<Input core:require=\\"{ handler: 'v4travel/ext/myCustomHeaderSectionEdit/MyCustomHeaderSectionEdit'}\\" label=\\"MyCustomHeaderSectionEdit\\" change=\\"handler.onChange\\" />
	</VBox>
</core:FragmentDefinition>",
    "state": "modified",
  },
  "js/webapp/ext/myCustomHeaderSectionEdit/MyCustomHeaderSectionEdit.js": Object {
    "contents": "sap.ui.define([
    \\"sap/m/MessageToast\\"
], function(MessageToast) {
    'use strict';

    return {
        onChange: function(oEvent) {
            MessageToast.show(\\"Custom handler invoked.\\");
        }
    };
});
",
    "state": "modified",
  },
  "js/webapp/ext/myCustomPage/MyCustomPage.controller.js": Object {
    "contents": "sap.ui.define(
    [
        'sap/fe/core/PageController'
    ],
    function(PageController) {
        'use strict';

        return PageController.extend('v4travel.ext.myCustomPage.MyCustomPage', {
            /**
             * Called when a controller is instantiated and its View controls (if available) are already created.
             * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
             * @memberOf v4travel.ext.myCustomPage.MyCustomPage
             */
            //  onInit: function () {
            //
            //  },

            /**
             * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
             * (NOT before the first rendering! onInit() is used for that one!).
             * @memberOf v4travel.ext.myCustomPage.MyCustomPage
             */
            //  onBeforeRendering: function() {
            //
            //  },

            /**
             * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
             * This hook is the same one that SAPUI5 controls get after being rendered.
             * @memberOf v4travel.ext.myCustomPage.MyCustomPage
             */
            //  onAfterRendering: function() {
            //
            //  },

            /**
             * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
             * @memberOf v4travel.ext.myCustomPage.MyCustomPage
             */
            //  onExit: function() {
            //
            //  }
        });
    }
);
",
    "state": "modified",
  },
  "js/webapp/ext/myCustomPage/MyCustomPage.view.xml": Object {
    "contents": "<mvc:View xmlns:core=\\"sap.ui.core\\" xmlns:mvc=\\"sap.ui.core.mvc\\" xmlns=\\"sap.m\\" xmlns:macros=\\"sap.fe.macros\\"
    xmlns:html=\\"http://www.w3.org/1999/xhtml\\" controllerName=\\"v4travel.ext.myCustomPage.MyCustomPage\\">
    <Page id=\\"MyCustomPage\\" title=\\"MyCustomPage\\">
        <content></content>
    </Page>
</mvc:View>",
    "state": "modified",
  },
  "js/webapp/ext/myCustomSection/MyCustomSection.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\" xmlns:macros=\\"sap.fe.macros\\">
	<VBox>
		<Button core:require=\\"{ handler: 'v4travel/ext/myCustomSection/MyCustomSection'}\\" text=\\"MyCustomSection\\" press=\\"handler.onPress\\" />
	</VBox>
</core:FragmentDefinition>",
    "state": "modified",
  },
  "js/webapp/ext/myCustomSection/MyCustomSection.js": Object {
    "contents": "sap.ui.define([
    \\"sap/m/MessageToast\\"
], function(MessageToast) {
    'use strict';

    return {
        onPress: function(oEvent) {
            MessageToast.show(\\"Custom handler invoked.\\");
        }
    };
});
",
    "state": "modified",
  },
  "js/webapp/ext/myCustomSubSection/MyCustomSubSection.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\" xmlns:macros=\\"sap.fe.macros\\">
	<VBox>
		<Button core:require=\\"{ handler: 'v4travel/ext/myCustomSubSection/MyCustomSubSection'}\\" text=\\"MyCustomSubSection\\" press=\\"handler.onPress\\" />
	</VBox>
</core:FragmentDefinition>",
    "state": "modified",
  },
  "js/webapp/ext/myCustomSubSection/MyCustomSubSection.js": Object {
    "contents": "sap.ui.define([
    \\"sap/m/MessageToast\\"
], function(MessageToast) {
    'use strict';

    return {
        onPress: function(oEvent) {
            MessageToast.show(\\"Custom handler invoked.\\");
        }
    };
});
",
    "state": "modified",
  },
  "js/webapp/ext/newCustomColumn/NewCustomColumn.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\">
	<Button core:require=\\"{ handler: 'v4travel/ext/newCustomColumn/NewCustomColumn'}\\" text=\\"{=%{TotalPrice} + ' ' + %{CurrencyCode}}\\" press=\\"handler.onPress\\" />
</core:FragmentDefinition>",
    "state": "modified",
  },
  "js/webapp/ext/newCustomColumn/NewCustomColumn.js": Object {
    "contents": "sap.ui.define([
    \\"sap/m/MessageToast\\"
], function(MessageToast) {
    'use strict';

    return {
        onPress: function(oEvent) {
            MessageToast.show(\\"Custom handler invoked.\\");
        }
    };
});
",
    "state": "modified",
  },
  "js/webapp/ext/newCustomFilter/NewCustomFilter.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\">
        <ComboBox
            id=\\"testID\\"
            core:require=\\"{handler: 'v4travel/ext/newCustomFilter/NewCustomFilter'}\\"
            selectedKey=\\"{path: 'filterValues>', type: 'sap.fe.macros.filter.type.Value', formatOptions: { operator: 'v4travel.ext.newCustomFilter.NewCustomFilter.filterItems' }}\\"
        >
            <items>
                <core:Item key=\\"0\\" text=\\"Item1\\"/>
                <core:Item key=\\"1\\" text=\\"Item2\\"/>
                <core:Item key=\\"2\\" text=\\"Item3\\"/>
            </items>
        </ComboBox>
</core:FragmentDefinition>",
    "state": "modified",
  },
  "js/webapp/ext/newCustomFilter/NewCustomFilter.js": Object {
    "contents": "sap.ui.define([\\"sap/ui/model/Filter\\", \\"sap/ui/model/FilterOperator\\"], function(Filter, FilterOperator) {
    \\"use strict\\";
    return {
        filterItems: function(sValue) {
            switch (sValue) {
                case \\"0\\":
                        return new Filter({ path: \\"Testing\\", operator: FilterOperator.LT, value1: 100 });
                case \\"1\\":
                        return new Filter({
                        filters: [
                            new Filter({ path: \\"Testing\\", operator: FilterOperator.GT, value1: 100 }),
                            new Filter({ path: \\"Testing\\", operator: FilterOperator.LT, value1: 500 })
                        ],
                        and: true
                    });
                case \\"2\\":
                        return new Filter({ path: \\"Testing\\", operator: FilterOperator.GT, value1: 500 });
            }
        }
    };
});
",
    "state": "modified",
  },
  "js/webapp/ext/newCustomView/NewCustomView.controller.js": Object {
    "contents": "sap.ui.define([
    \\"sap/m/MessageToast\\"
], function(MessageToast) {
    'use strict';

    return {
        onPress: function(oEvent) {
            MessageToast.show(\\"Custom handler invoked.\\");
        }
    };
});
",
    "state": "modified",
  },
  "js/webapp/ext/newCustomView/NewCustomView.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\">
	<Button core:require=\\"{ handler: 'v4travel/ext/newCustomView/NewCustomView.controller'}\\" text=\\"NewCustomView\\" press=\\"handler.onPress\\" />
</core:FragmentDefinition>",
    "state": "modified",
  },
  "js/webapp/manifest.json": Object {
    "contents": "{
  \\"_version\\": \\"1.32.0\\",
  \\"sap.app\\": {
    \\"id\\": \\"v4travel\\",
    \\"type\\": \\"application\\",
    \\"i18n\\": \\"i18n/i18n.properties\\",
    \\"applicationVersion\\": {
      \\"version\\": \\"1.0.0\\"
    },
    \\"title\\": \\"{{appTitle}}\\",
    \\"description\\": \\"{{appDescription}}\\",
    \\"dataSources\\": {
      \\"mainService\\": {
        \\"uri\\": \\"/sap/opu/odata4/dmo/ui_travel_uuid_um_v4/srvd/dmo/ui_travel_uuid_um/0001/\\",
        \\"type\\": \\"OData\\",
        \\"settings\\": {
          \\"annotations\\": [
            \\"annotation\\"
          ],
          \\"odataVersion\\": \\"4.0\\",
          \\"localUri\\": \\"localService/metadata.xml\\"
        }
      },
      \\"annotation\\": {
        \\"type\\": \\"ODataAnnotation\\",
        \\"uri\\": \\"annotations/annotation.xml\\",
        \\"settings\\": {
          \\"localUri\\": \\"annotations/annotation.xml\\"
        }
      }
    },
    \\"offline\\": false,
    \\"resources\\": \\"resources.json\\",
    \\"sourceTemplate\\": {
      \\"id\\": \\"ui5template.fiorielements.v4.lrop\\",
      \\"version\\": \\"1.0.0\\"
    }
  },
  \\"sap.ui\\": {
    \\"technology\\": \\"UI5\\",
    \\"icons\\": {
      \\"icon\\": \\"\\",
      \\"favIcon\\": \\"\\",
      \\"phone\\": \\"\\",
      \\"phone@2\\": \\"\\",
      \\"tablet\\": \\"\\",
      \\"tablet@2\\": \\"\\"
    },
    \\"deviceTypes\\": {
      \\"desktop\\": true,
      \\"tablet\\": true,
      \\"phone\\": true
    }
  },
  \\"sap.ui5\\": {
    \\"resources\\": {
      \\"js\\": [],
      \\"css\\": []
    },
    \\"dependencies\\": {
      \\"minUI5Version\\": \\"1.108.0\\",
      \\"libs\\": {
        \\"sap.ui.core\\": {},
        \\"sap.fe.templates\\": {}
      }
    },
    \\"models\\": {
      \\"i18n\\": {
        \\"type\\": \\"sap.ui.model.resource.ResourceModel\\",
        \\"uri\\": \\"i18n/i18n.properties\\"
      },
      \\"\\": {
        \\"dataSource\\": \\"mainService\\",
        \\"preload\\": true,
        \\"settings\\": {
          \\"synchronizationMode\\": \\"None\\",
          \\"operationMode\\": \\"Server\\",
          \\"autoExpandSelect\\": true,
          \\"earlyRequests\\": true
        }
      }
    },
    \\"routing\\": {
      \\"routes\\": [
        {
          \\"name\\": \\"TravelListReport\\",
          \\"pattern\\": \\":?query:\\",
          \\"target\\": \\"TravelListReport\\"
        },
        {
          \\"name\\": \\"TravelObjectPage\\",
          \\"pattern\\": \\"Travel({TravelKey}):?query:\\",
          \\"target\\": \\"TravelObjectPage\\"
        },
        {
          \\"name\\": \\"BookingMyCustomPage\\",
          \\"pattern\\": \\"Travel({TravelKey})/_Booking:?query:\\",
          \\"target\\": \\"BookingMyCustomPage\\"
        }
      ],
      \\"targets\\": {
        \\"TravelListReport\\": {
          \\"type\\": \\"Component\\",
          \\"id\\": \\"TravelListReport\\",
          \\"name\\": \\"sap.fe.templates.ListReport\\",
          \\"options\\": {
            \\"settings\\": {
              \\"navigation\\": {
                \\"Travel\\": {
                  \\"detail\\": {
                    \\"route\\": \\"TravelObjectPage\\"
                  }
                }
              },
              \\"contextPath\\": \\"/Travel\\",
              \\"controlConfiguration\\": {
                \\"@com.sap.vocabularies.UI.v1.LineItem\\": {
                  \\"columns\\": {
                    \\"NewCustomColumn\\": {
                      \\"header\\": \\"Custom Price and Currency\\",
                      \\"position\\": {
                        \\"placement\\": \\"After\\",
                        \\"anchor\\": \\"DataField::TravelID\\"
                      },
                      \\"template\\": \\"v4travel.ext.newCustomColumn.NewCustomColumn\\",
                      \\"properties\\": [
                        \\"TotalPrice\\",
                        \\"CurrencyCode\\"
                      ]
                    }
                  },
                  \\"actions\\": {
                    \\"MyCustomAction\\": {
                      \\"press\\": \\"v4travel.ext.myCustomAction.MyCustomAction.onPress\\",
                      \\"visible\\": true,
                      \\"enabled\\": true,
                      \\"text\\": \\"My Custom Action\\"
                    }
                  }
                },
                \\"@com.sap.vocabularies.UI.v1.SelectionFields\\": {
                  \\"filterFields\\": {
                    \\"NewCustomFilter\\": {
                      \\"label\\": \\"Test Custom Filter\\",
                      \\"property\\": \\"Testing\\",
                      \\"template\\": \\"v4travel.ext.newCustomFilter.NewCustomFilter\\",
                      \\"required\\": false,
                      \\"position\\": {
                        \\"placement\\": \\"After\\",
                        \\"anchor\\": \\"DummyFacet\\"
                      }
                    }
                  }
                }
              },
              \\"views\\": {
                \\"paths\\": [
                  {
                    \\"key\\": \\"LineItemView\\",
                    \\"annotationPath\\": \\"com.sap.vocabularies.UI.v1.LineItem\\"
                  },
                  {
                    \\"key\\": \\"CustomViewKey\\",
                    \\"label\\": \\"Custom View\\",
                    \\"template\\": \\"v4travel.ext.newCustomView.NewCustomView\\"
                  },
                  {
                    \\"key\\": \\"SecondCustomView\\",
                    \\"label\\": \\"Custom View\\",
                    \\"template\\": \\"v4travel.ext.newCustomView.NewCustomView\\"
                  }
                ]
              }
            }
          }
        },
        \\"TravelObjectPage\\": {
          \\"type\\": \\"Component\\",
          \\"id\\": \\"TravelObjectPage\\",
          \\"name\\": \\"sap.fe.templates.ObjectPage\\",
          \\"options\\": {
            \\"settings\\": {
              \\"navigation\\": {
                \\"_Booking\\": {
                  \\"detail\\": {
                    \\"route\\": \\"BookingMyCustomPage\\"
                  }
                }
              },
              \\"contextPath\\": \\"/Travel\\",
              \\"content\\": {
                \\"header\\": {
                  \\"actions\\": {
                    \\"AnotherCustomAction\\": {
                      \\"press\\": \\"v4travel.ext.anotherCustomAction.AnotherCustomAction.onPress\\",
                      \\"visible\\": true,
                      \\"enabled\\": true,
                      \\"text\\": \\"My other Action\\"
                    },
                    \\"AppendedAction\\": {
                      \\"press\\": \\"v4travel.ext.anotherCustomAction.AnotherCustomAction.onAppended\\",
                      \\"visible\\": true,
                      \\"enabled\\": true,
                      \\"text\\": \\"Navigate to CustomPage (appended action)\\"
                    }
                  },
                  \\"facets\\": {
                    \\"MyCustomHeaderSection\\": {
                      \\"template\\": \\"v4travel.ext.myCustomHeaderSection.MyCustomHeaderSection\\",
                      \\"templateEdit\\": \\"v4travel.ext.myCustomHeaderSectionEdit.MyCustomHeaderSectionEdit\\",
                      \\"position\\": {
                        \\"placement\\": \\"After\\",
                        \\"anchor\\": \\"DummyHeaderAnchor\\"
                      },
                      \\"title\\": \\"My Custom Header Section\\",
                      \\"requestGroupId\\": \\"Decoration\\",
                      \\"flexSettings\\": {
                        \\"designtime\\": \\"Default\\"
                      }
                    }
                  }
                },
                \\"body\\": {
                  \\"sections\\": {
                    \\"MyCustomSection\\": {
                      \\"template\\": \\"v4travel.ext.myCustomSection.MyCustomSection\\",
                      \\"position\\": {
                        \\"placement\\": \\"After\\",
                        \\"anchor\\": \\"DummyFacet\\"
                      },
                      \\"title\\": \\"My Custom Section\\"
                    },
                    \\"ReferenceFacet1\\": {
                      \\"subSections\\": {
                        \\"MyCustomSubSection\\": {
                          \\"template\\": \\"v4travel.ext.myCustomSubSection.MyCustomSubSection\\",
                          \\"position\\": {
                            \\"placement\\": \\"After\\",
                            \\"anchor\\": \\"DummySubAnchor\\"
                          },
                          \\"title\\": \\"My Custom Sub Section\\"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        \\"BookingMyCustomPage\\": {
          \\"type\\": \\"Component\\",
          \\"id\\": \\"BookingMyCustomPage\\",
          \\"name\\": \\"sap.fe.core.fpm\\",
          \\"options\\": {
            \\"settings\\": {
              \\"navigation\\": {},
              \\"contextPath\\": \\"/Booking\\",
              \\"viewName\\": \\"v4travel.ext.myCustomPage.MyCustomPage\\"
            }
          }
        }
      }
    },
    \\"contentDensities\\": {
      \\"compact\\": true,
      \\"cozy\\": true
    },
    \\"extends\\": {
      \\"extensions\\": {
        \\"sap.ui.controllerExtensions\\": {
          \\"sap.fe.templates.ListReport.ListReportController\\": {
            \\"controllerName\\": \\"v4travel.ext.newCustomView.NewCustomView\\"
          },
          \\"sap.fe.templates.ObjectPage.ObjectPageController\\": {
            \\"controllerName\\": \\"v4travel.ext.myControllerExtension.MyControllerExtension\\"
          }
        }
      }
    }
  },
  \\"sap.platform.abap\\": {
    \\"_version\\": \\"1.1.0\\",
    \\"uri\\": \\"\\"
  },
  \\"sap.platform.hcp\\": {
    \\"_version\\": \\"1.1.0\\",
    \\"uri\\": \\"\\"
  },
  \\"sap.fiori\\": {
    \\"_version\\": \\"1.1.0\\",
    \\"registrationIds\\": [],
    \\"archeType\\": \\"transactional\\"
  }
}
",
    "state": "modified",
  },
  "ts/webapp/Component.ts": Object {
    "contents": "import AppComponent from \\"sap/fe/core/AppComponent\\";

/**
 * @namespace v4travel
 */
export default class Component extends AppComponent {

	public static metadata = {
		manifest: \\"json\\"
	};
}
",
    "state": "modified",
  },
  "ts/webapp/ext/anotherCustomAction/AnotherCustomAction.ts": Object {
    "contents": "import ExtensionAPI from 'sap/fe/core/ExtensionAPI';
import Context from 'sap/ui/model/odata/v4/Context';
import MessageToast from 'sap/m/MessageToast';

/**
 * Generated event handler.
 *
 * @param this reference to the 'this' that the event handler is bound to.
 * @param pageContext the context of the page on which the event was fired
 */
export function onPress(this: ExtensionAPI, pageContext: Context) {
    MessageToast.show(\\"Custom handler invoked.\\");
}
         
export function onAppended() {
	window.location.href += '/_Booking';
}",
    "state": "modified",
  },
  "ts/webapp/ext/controller/ControllerExtension.d.ts": Object {
    "contents": "/**
 * Helper to be able to define how to get the page specific extension API when writing a controller extension.
 */
declare module 'sap/ui/core/mvc/ControllerExtension' {
    export default class ControllerExtension<API> {
        static overrides: unknown;
        base: {
            getExtensionAPI(): API;
        }
    }
}
",
    "state": "modified",
  },
  "ts/webapp/ext/myControllerExtension/MyControllerExtension.controller.ts": Object {
    "contents": "import ControllerExtension from 'sap/ui/core/mvc/ControllerExtension';
import ExtensionAPI from 'sap/fe/templates/ObjectPage/ExtensionAPI';

/**
 * @namespace v4travel.ext.myControllerExtension.MyControllerExtension
 * @controller
 */
export default class MyControllerExtension extends ControllerExtension<ExtensionAPI> {
	static overrides = {
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf v4travel.ext.myControllerExtension.MyControllerExtension
		 */
		onInit(this: MyControllerExtension) {
			// you can access the Fiori elements extensionAPI via this.base.getExtensionAPI
			const model = this.base.getExtensionAPI().getModel();
		}
	}
}",
    "state": "modified",
  },
  "ts/webapp/ext/myCustomAction/MyCustomAction.ts": Object {
    "contents": "import ExtensionAPI from 'sap/fe/core/ExtensionAPI';
import Context from 'sap/ui/model/odata/v4/Context';
import MessageToast from 'sap/m/MessageToast';

/**
 * Generated event handler.
 *
 * @param this reference to the 'this' that the event handler is bound to.
 * @param pageContext the context of the page on which the event was fired
 */
export function onPress(this: ExtensionAPI, pageContext: Context) {
    MessageToast.show(\\"Custom handler invoked.\\");
}",
    "state": "modified",
  },
  "ts/webapp/ext/myCustomHeaderSection/MyCustomHeaderSection.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\" xmlns:macros=\\"sap.fe.macros\\">
	<VBox>
		<Button core:require=\\"{ handler: 'v4travel/ext/myCustomHeaderSection/MyCustomHeaderSection'}\\" text=\\"MyCustomHeaderSection\\" press=\\"handler.onPress\\" />
	</VBox>
</core:FragmentDefinition>",
    "state": "modified",
  },
  "ts/webapp/ext/myCustomHeaderSection/MyCustomHeaderSection.ts": Object {
    "contents": "import ExtensionAPI from 'sap/fe/core/ExtensionAPI';
import UI5Event from 'sap/ui/base/Event';
import MessageToast from 'sap/m/MessageToast';

/**
 * Generated event handler.
 *
 * @param this reference to the 'this' that the event handler is bound to.
 * @param event the event object provided by the event provider
 */
export function onPress(this: ExtensionAPI, event: UI5Event) {
    MessageToast.show(\\"Custom handler invoked.\\");
}",
    "state": "modified",
  },
  "ts/webapp/ext/myCustomHeaderSectionEdit/MyCustomHeaderSectionEdit.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\">
	<VBox>
		<Input core:require=\\"{ handler: 'v4travel/ext/myCustomHeaderSectionEdit/MyCustomHeaderSectionEdit'}\\" label=\\"MyCustomHeaderSectionEdit\\" change=\\"handler.onChange\\" />
	</VBox>
</core:FragmentDefinition>",
    "state": "modified",
  },
  "ts/webapp/ext/myCustomHeaderSectionEdit/MyCustomHeaderSectionEdit.ts": Object {
    "contents": "import ExtensionAPI from 'sap/fe/core/ExtensionAPI';
import UI5Event from 'sap/ui/base/Event';
import MessageToast from 'sap/m/MessageToast';

/**
 * Generated event handler.
 *
 * @param this reference to the 'this' that the event handler is bound to.
 * @param event the event object provided by the event provider
 */
export function onChange(this: ExtensionAPI, event: UI5Event) {
    MessageToast.show(\\"Custom handler invoked.\\");
}",
    "state": "modified",
  },
  "ts/webapp/ext/myCustomPage/MyCustomPage.controller.ts": Object {
    "contents": "import Controller from \\"sap/fe/core/PageController\\";

/**
 * @namespace v4travel.ext.myCustomPage.MyCustomPage.controller
 */
export default class MyCustomPage extends Controller {

    /**
     * Called when a controller is instantiated and its View controls (if available) are already created.
     * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
     * @memberOf v4travel.ext.myCustomPage.MyCustomPage
     */
    // public onInit(): void {
    //
    //}

    /**
     * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
     * (NOT before the first rendering! onInit() is used for that one!).
     * @memberOf v4travel.ext.myCustomPage.MyCustomPage
     */
    // public  onBeforeRendering(): void {
    //
    //  }

    /**
     * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
     * This hook is the same one that SAPUI5 controls get after being rendered.
     * @memberOf v4travel.ext.myCustomPage.MyCustomPage
     */
    // public  onAfterRendering(): void {
    //
    //  }

    /**
     * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
     * @memberOf v4travel.ext.myCustomPage.MyCustomPage
     */
    // public onExit(): void {
    //
    //  }
}",
    "state": "modified",
  },
  "ts/webapp/ext/myCustomPage/MyCustomPage.view.xml": Object {
    "contents": "<mvc:View xmlns:core=\\"sap.ui.core\\" xmlns:mvc=\\"sap.ui.core.mvc\\" xmlns=\\"sap.m\\" xmlns:macros=\\"sap.fe.macros\\"
    xmlns:html=\\"http://www.w3.org/1999/xhtml\\" controllerName=\\"v4travel.ext.myCustomPage.MyCustomPage\\">
    <Page id=\\"MyCustomPage\\" title=\\"MyCustomPage\\">
        <content></content>
    </Page>
</mvc:View>",
    "state": "modified",
  },
  "ts/webapp/ext/myCustomSection/MyCustomSection.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\" xmlns:macros=\\"sap.fe.macros\\">
	<VBox>
		<Button core:require=\\"{ handler: 'v4travel/ext/myCustomSection/MyCustomSection'}\\" text=\\"MyCustomSection\\" press=\\"handler.onPress\\" />
	</VBox>
</core:FragmentDefinition>",
    "state": "modified",
  },
  "ts/webapp/ext/myCustomSection/MyCustomSection.ts": Object {
    "contents": "import ExtensionAPI from 'sap/fe/core/ExtensionAPI';
import UI5Event from 'sap/ui/base/Event';
import MessageToast from 'sap/m/MessageToast';

/**
 * Generated event handler.
 *
 * @param this reference to the 'this' that the event handler is bound to.
 * @param event the event object provided by the event provider
 */
export function onPress(this: ExtensionAPI, event: UI5Event) {
    MessageToast.show(\\"Custom handler invoked.\\");
}",
    "state": "modified",
  },
  "ts/webapp/ext/myCustomSubSection/MyCustomSubSection.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\" xmlns:macros=\\"sap.fe.macros\\">
	<VBox>
		<Button core:require=\\"{ handler: 'v4travel/ext/myCustomSubSection/MyCustomSubSection'}\\" text=\\"MyCustomSubSection\\" press=\\"handler.onPress\\" />
	</VBox>
</core:FragmentDefinition>",
    "state": "modified",
  },
  "ts/webapp/ext/myCustomSubSection/MyCustomSubSection.ts": Object {
    "contents": "import ExtensionAPI from 'sap/fe/core/ExtensionAPI';
import UI5Event from 'sap/ui/base/Event';
import MessageToast from 'sap/m/MessageToast';

/**
 * Generated event handler.
 *
 * @param this reference to the 'this' that the event handler is bound to.
 * @param event the event object provided by the event provider
 */
export function onPress(this: ExtensionAPI, event: UI5Event) {
    MessageToast.show(\\"Custom handler invoked.\\");
}",
    "state": "modified",
  },
  "ts/webapp/ext/newCustomColumn/NewCustomColumn.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\">
	<Button core:require=\\"{ handler: 'v4travel/ext/newCustomColumn/NewCustomColumn'}\\" text=\\"{=%{TotalPrice} + ' ' + %{CurrencyCode}}\\" press=\\"handler.onPress\\" />
</core:FragmentDefinition>",
    "state": "modified",
  },
  "ts/webapp/ext/newCustomColumn/NewCustomColumn.ts": Object {
    "contents": "import ExtensionAPI from 'sap/fe/core/ExtensionAPI';
import UI5Event from 'sap/ui/base/Event';
import MessageToast from 'sap/m/MessageToast';

/**
 * Generated event handler.
 *
 * @param this reference to the 'this' that the event handler is bound to.
 * @param event the event object provided by the event provider
 */
export function onPress(this: ExtensionAPI, event: UI5Event) {
    MessageToast.show(\\"Custom handler invoked.\\");
}",
    "state": "modified",
  },
  "ts/webapp/ext/newCustomFilter/NewCustomFilter.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\">
        <ComboBox
            id=\\"testID\\"
            core:require=\\"{handler: 'v4travel/ext/newCustomFilter/NewCustomFilter'}\\"
            selectedKey=\\"{path: 'filterValues>', type: 'sap.fe.macros.filter.type.Value', formatOptions: { operator: 'v4travel.ext.newCustomFilter.NewCustomFilter.filterItems' }}\\"
        >
            <items>
                <core:Item key=\\"0\\" text=\\"Item1\\"/>
                <core:Item key=\\"1\\" text=\\"Item2\\"/>
                <core:Item key=\\"2\\" text=\\"Item3\\"/>
            </items>
        </ComboBox>
</core:FragmentDefinition>",
    "state": "modified",
  },
  "ts/webapp/ext/newCustomFilter/NewCustomFilter.ts": Object {
    "contents": "import Filter from 'sap/ui/model/Filter';
import FilterOperator from 'sap/ui/model/FilterOperator';

/**
 * Custom filter
 * @param sValue selected filter item
 * @returns new Filter
 */
export function filterItems(value: string) {
    switch (value) {
        case \\"0\\":
            return new Filter({ path: \\"Testing\\", operator: FilterOperator.LT, value1: 100 });
        case \\"1\\":
            return new Filter({
                filters: [
                    new Filter({ path: \\"Testing\\", operator: FilterOperator.GT, value1: 100 }),
                    new Filter({ path: \\"Testing\\", operator: FilterOperator.LT, value1: 500 })
                ],
                and: true
            });
        case \\"2\\":
            return new Filter({ path: \\"Testing\\", operator: FilterOperator.GT, value1: 500 });
    }
}",
    "state": "modified",
  },
  "ts/webapp/ext/newCustomView/NewCustomView.controller.ts": Object {
    "contents": "import ExtensionAPI from 'sap/fe/core/ExtensionAPI';
import UI5Event from 'sap/ui/base/Event';
import MessageToast from 'sap/m/MessageToast';

/**
 * Generated event handler.
 *
 * @param this reference to the 'this' that the event handler is bound to.
 * @param event the event object provided by the event provider
 */
export function onPress(this: ExtensionAPI, event: UI5Event) {
    MessageToast.show(\\"Custom handler invoked.\\");
}",
    "state": "modified",
  },
  "ts/webapp/ext/newCustomView/NewCustomView.fragment.xml": Object {
    "contents": "<core:FragmentDefinition xmlns:core=\\"sap.ui.core\\" xmlns=\\"sap.m\\">
	<Button core:require=\\"{ handler: 'v4travel/ext/newCustomView/NewCustomView.controller'}\\" text=\\"NewCustomView\\" press=\\"handler.onPress\\" />
</core:FragmentDefinition>",
    "state": "modified",
  },
  "ts/webapp/manifest.json": Object {
    "contents": "{
  \\"_version\\": \\"1.32.0\\",
  \\"sap.app\\": {
    \\"id\\": \\"v4travel\\",
    \\"type\\": \\"application\\",
    \\"i18n\\": \\"i18n/i18n.properties\\",
    \\"applicationVersion\\": {
      \\"version\\": \\"1.0.0\\"
    },
    \\"title\\": \\"{{appTitle}}\\",
    \\"description\\": \\"{{appDescription}}\\",
    \\"dataSources\\": {
      \\"mainService\\": {
        \\"uri\\": \\"/sap/opu/odata4/dmo/ui_travel_uuid_um_v4/srvd/dmo/ui_travel_uuid_um/0001/\\",
        \\"type\\": \\"OData\\",
        \\"settings\\": {
          \\"annotations\\": [
            \\"annotation\\"
          ],
          \\"odataVersion\\": \\"4.0\\",
          \\"localUri\\": \\"localService/metadata.xml\\"
        }
      },
      \\"annotation\\": {
        \\"type\\": \\"ODataAnnotation\\",
        \\"uri\\": \\"annotations/annotation.xml\\",
        \\"settings\\": {
          \\"localUri\\": \\"annotations/annotation.xml\\"
        }
      }
    },
    \\"offline\\": false,
    \\"resources\\": \\"resources.json\\",
    \\"sourceTemplate\\": {
      \\"id\\": \\"ui5template.fiorielements.v4.lrop\\",
      \\"version\\": \\"1.0.0\\"
    }
  },
  \\"sap.ui\\": {
    \\"technology\\": \\"UI5\\",
    \\"icons\\": {
      \\"icon\\": \\"\\",
      \\"favIcon\\": \\"\\",
      \\"phone\\": \\"\\",
      \\"phone@2\\": \\"\\",
      \\"tablet\\": \\"\\",
      \\"tablet@2\\": \\"\\"
    },
    \\"deviceTypes\\": {
      \\"desktop\\": true,
      \\"tablet\\": true,
      \\"phone\\": true
    }
  },
  \\"sap.ui5\\": {
    \\"resources\\": {
      \\"js\\": [],
      \\"css\\": []
    },
    \\"dependencies\\": {
      \\"minUI5Version\\": \\"1.108.0\\",
      \\"libs\\": {
        \\"sap.ui.core\\": {},
        \\"sap.fe.templates\\": {}
      }
    },
    \\"models\\": {
      \\"i18n\\": {
        \\"type\\": \\"sap.ui.model.resource.ResourceModel\\",
        \\"uri\\": \\"i18n/i18n.properties\\"
      },
      \\"\\": {
        \\"dataSource\\": \\"mainService\\",
        \\"preload\\": true,
        \\"settings\\": {
          \\"synchronizationMode\\": \\"None\\",
          \\"operationMode\\": \\"Server\\",
          \\"autoExpandSelect\\": true,
          \\"earlyRequests\\": true
        }
      }
    },
    \\"routing\\": {
      \\"routes\\": [
        {
          \\"name\\": \\"TravelListReport\\",
          \\"pattern\\": \\":?query:\\",
          \\"target\\": \\"TravelListReport\\"
        },
        {
          \\"name\\": \\"TravelObjectPage\\",
          \\"pattern\\": \\"Travel({TravelKey}):?query:\\",
          \\"target\\": \\"TravelObjectPage\\"
        },
        {
          \\"name\\": \\"BookingMyCustomPage\\",
          \\"pattern\\": \\"Travel({TravelKey})/_Booking:?query:\\",
          \\"target\\": \\"BookingMyCustomPage\\"
        }
      ],
      \\"targets\\": {
        \\"TravelListReport\\": {
          \\"type\\": \\"Component\\",
          \\"id\\": \\"TravelListReport\\",
          \\"name\\": \\"sap.fe.templates.ListReport\\",
          \\"options\\": {
            \\"settings\\": {
              \\"navigation\\": {
                \\"Travel\\": {
                  \\"detail\\": {
                    \\"route\\": \\"TravelObjectPage\\"
                  }
                }
              },
              \\"contextPath\\": \\"/Travel\\",
              \\"controlConfiguration\\": {
                \\"@com.sap.vocabularies.UI.v1.LineItem\\": {
                  \\"columns\\": {
                    \\"NewCustomColumn\\": {
                      \\"header\\": \\"Custom Price and Currency\\",
                      \\"position\\": {
                        \\"placement\\": \\"After\\",
                        \\"anchor\\": \\"DataField::TravelID\\"
                      },
                      \\"template\\": \\"v4travel.ext.newCustomColumn.NewCustomColumn\\",
                      \\"properties\\": [
                        \\"TotalPrice\\",
                        \\"CurrencyCode\\"
                      ]
                    }
                  },
                  \\"actions\\": {
                    \\"MyCustomAction\\": {
                      \\"press\\": \\"v4travel.ext.myCustomAction.MyCustomAction.onPress\\",
                      \\"visible\\": true,
                      \\"enabled\\": true,
                      \\"text\\": \\"My Custom Action\\"
                    }
                  }
                },
                \\"@com.sap.vocabularies.UI.v1.SelectionFields\\": {
                  \\"filterFields\\": {
                    \\"NewCustomFilter\\": {
                      \\"label\\": \\"Test Custom Filter\\",
                      \\"property\\": \\"Testing\\",
                      \\"template\\": \\"v4travel.ext.newCustomFilter.NewCustomFilter\\",
                      \\"required\\": false,
                      \\"position\\": {
                        \\"placement\\": \\"After\\",
                        \\"anchor\\": \\"DummyFacet\\"
                      }
                    }
                  }
                }
              },
              \\"views\\": {
                \\"paths\\": [
                  {
                    \\"key\\": \\"LineItemView\\",
                    \\"annotationPath\\": \\"com.sap.vocabularies.UI.v1.LineItem\\"
                  },
                  {
                    \\"key\\": \\"CustomViewKey\\",
                    \\"label\\": \\"Custom View\\",
                    \\"template\\": \\"v4travel.ext.newCustomView.NewCustomView\\"
                  },
                  {
                    \\"key\\": \\"SecondCustomView\\",
                    \\"label\\": \\"Custom View\\",
                    \\"template\\": \\"v4travel.ext.newCustomView.NewCustomView\\"
                  }
                ]
              }
            }
          }
        },
        \\"TravelObjectPage\\": {
          \\"type\\": \\"Component\\",
          \\"id\\": \\"TravelObjectPage\\",
          \\"name\\": \\"sap.fe.templates.ObjectPage\\",
          \\"options\\": {
            \\"settings\\": {
              \\"navigation\\": {
                \\"_Booking\\": {
                  \\"detail\\": {
                    \\"route\\": \\"BookingMyCustomPage\\"
                  }
                }
              },
              \\"contextPath\\": \\"/Travel\\",
              \\"content\\": {
                \\"header\\": {
                  \\"actions\\": {
                    \\"AnotherCustomAction\\": {
                      \\"press\\": \\"v4travel.ext.anotherCustomAction.AnotherCustomAction.onPress\\",
                      \\"visible\\": true,
                      \\"enabled\\": true,
                      \\"text\\": \\"My other Action\\"
                    },
                    \\"AppendedAction\\": {
                      \\"press\\": \\"v4travel.ext.anotherCustomAction.AnotherCustomAction.onAppended\\",
                      \\"visible\\": true,
                      \\"enabled\\": true,
                      \\"text\\": \\"Navigate to CustomPage (appended action)\\"
                    }
                  },
                  \\"facets\\": {
                    \\"MyCustomHeaderSection\\": {
                      \\"template\\": \\"v4travel.ext.myCustomHeaderSection.MyCustomHeaderSection\\",
                      \\"templateEdit\\": \\"v4travel.ext.myCustomHeaderSectionEdit.MyCustomHeaderSectionEdit\\",
                      \\"position\\": {
                        \\"placement\\": \\"After\\",
                        \\"anchor\\": \\"DummyHeaderAnchor\\"
                      },
                      \\"title\\": \\"My Custom Header Section\\",
                      \\"requestGroupId\\": \\"Decoration\\",
                      \\"flexSettings\\": {
                        \\"designtime\\": \\"Default\\"
                      }
                    }
                  }
                },
                \\"body\\": {
                  \\"sections\\": {
                    \\"MyCustomSection\\": {
                      \\"template\\": \\"v4travel.ext.myCustomSection.MyCustomSection\\",
                      \\"position\\": {
                        \\"placement\\": \\"After\\",
                        \\"anchor\\": \\"DummyFacet\\"
                      },
                      \\"title\\": \\"My Custom Section\\"
                    },
                    \\"ReferenceFacet1\\": {
                      \\"subSections\\": {
                        \\"MyCustomSubSection\\": {
                          \\"template\\": \\"v4travel.ext.myCustomSubSection.MyCustomSubSection\\",
                          \\"position\\": {
                            \\"placement\\": \\"After\\",
                            \\"anchor\\": \\"DummySubAnchor\\"
                          },
                          \\"title\\": \\"My Custom Sub Section\\"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        \\"BookingMyCustomPage\\": {
          \\"type\\": \\"Component\\",
          \\"id\\": \\"BookingMyCustomPage\\",
          \\"name\\": \\"sap.fe.core.fpm\\",
          \\"options\\": {
            \\"settings\\": {
              \\"navigation\\": {},
              \\"contextPath\\": \\"/Booking\\",
              \\"viewName\\": \\"v4travel.ext.myCustomPage.MyCustomPage\\"
            }
          }
        }
      }
    },
    \\"contentDensities\\": {
      \\"compact\\": true,
      \\"cozy\\": true
    },
    \\"extends\\": {
      \\"extensions\\": {
        \\"sap.ui.controllerExtensions\\": {
          \\"sap.fe.templates.ListReport.ListReportController\\": {
            \\"controllerName\\": \\"v4travel.ext.newCustomView.NewCustomView\\"
          },
          \\"sap.fe.templates.ObjectPage.ObjectPageController\\": {
            \\"controllerName\\": \\"v4travel.ext.myControllerExtension.MyControllerExtension\\"
          }
        }
      }
    }
  },
  \\"sap.platform.abap\\": {
    \\"_version\\": \\"1.1.0\\",
    \\"uri\\": \\"\\"
  },
  \\"sap.platform.hcp\\": {
    \\"_version\\": \\"1.1.0\\",
    \\"uri\\": \\"\\"
  },
  \\"sap.fiori\\": {
    \\"_version\\": \\"1.1.0\\",
    \\"registrationIds\\": [],
    \\"archeType\\": \\"transactional\\"
  }
}
",
    "state": "modified",
  },
}
`;
