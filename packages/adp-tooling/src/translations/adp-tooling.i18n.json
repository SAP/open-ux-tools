{
    "prompts": {
        "oDataSourceLabel": "Target OData Service",
        "oDataSourceTooltip": "Select the OData service you want to replace",
        "oDataSourceURILabel": "OData Source URI",
        "oDataSourceURITooltip": "Enter the URI for the new OData source",
        "maxAgeLabel": "New maxAge",
        "maxAgeTooltip": "(Optional) Enter the time in seconds it takes for a cached response of the service to expire.",
        "oDataAnnotationSourceURILabel": "OData Annotation Data Source URI",
        "oDataAnnotationSourceURITooltip": "Server side annotations have been detected for the selected OData service. If needed, enter new annotation data source URI  for the changed service",
        "oDataURIInfoLabel": "Have in mind that common OData Service path prefixes are '{{- v2Prefix}}' or '{{- v4Prefix}}'",
        "isInSafeModeLabel": "Making manifest changes is not upgrade safe and the project will be set in advanced mode. Please continue if you are sure you want to have your project in advanced mode.",
        "oDataURIV2InfoLabel": "Have in mind that you are trying to replace OData {{versionOne}} Service with OData {{versionTwo}} Service",

        "targetEnvLabel": "Select environment",
        "targetEnvTooltip": "Select the target environment for your Adaptation Project",
        "appTitleLabel": "Application Title",
        "appTitleTooltip": "Enter an application title for your application variant",
        "appTitleDefault": "App Variant Title",
        "namespaceLabel": "Namespace"
    },
    "validators": {
        "manifestContainsNoODataServices": "Manifest contains no OData Services.",
        "inputCannotBeEmpty": "Input cannot be empty.",
        "inpuCannotHaveSpaces": "{{input}} cannot contain spaces.",

        "externalLoginDisabled": "CF Login cannot be detected as extension in current installation of VSCode, please refer to documentation (link not yet available) in order to install it.",
        "projectNameLengthErrorExt": "The name cannot contain more than 61 characters or end with 'component'.",
        "projectNameLengthErrorInt": "The name cannot start with 'customer' or contain more than 61 characters or end with 'component'.",
        "projectNameValidationErrorExt": "The name must contain only Latin alphanumeric characters. Different parts can be separated by period and every part must start with a letter.",
        "projectNameValidationErrorInt": "The name must contain only Latin alphanumeric characters and it must have at least two parts. The different parts must be separated by period and every part must start with a letter.",
        "projectNameUppercaseError": "The name cannot contain uppercase letters.",
        "namespaceSameAsProjectNameError": "Namespace should be the same as Project Name.",
        "namespaceLengthError": "Namespace cannot contain more than 61 characters or end with 'component'.",
        "namespaceValidationError": "The namespace must contain only Latin alphanumeric characters. Different parts can be separated by period and every part must start with a letter."
    }
}
