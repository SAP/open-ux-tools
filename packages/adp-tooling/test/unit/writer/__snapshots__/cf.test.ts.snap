// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`CF Writer generateCf config with managed approuter 1`] = `
Object {
  "../minimal-cf/mta.yaml": Object {
    "contents": "ID: mta-project
version: 1.0.0
modules:
  - name: mta-project-approuter
    type: approuter.nodejs
    path: mta-project-approuter
    requires:
      - name: mta-project_html_repo_runtime
      - name: mta-project_uaa
      - name: portal_resources_mta-project
      - name: test-service
    parameters:
      disk-quota: 256M
      memory: 256M
  - name: mta-project_ui_deployer
    type: com.sap.application.content
    path: .
    requires:
      - name: mta-project_html_repo_host
        parameters:
          content-target: true
    build-parameters:
      build-result: resources
      requires:
        - artifacts:
            - my.test.cf.app.zip
          name: my.test.cf.app
          target-path: resources/
  - name: my.test.cf.app
    type: html5
    path: my.test.cf.app
    build-parameters:
      builder: custom
      commands:
        - npm install
        - npm run build
      supported-platforms: []
resources:
  - name: test-destination-service
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
      service-name: test-destination-service
  - name: mta-project_html_repo_host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host
      service-name: mta-project-html5_app_host
  - name: mta-project_uaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      path: ./xs-security.json
      service-plan: application
      service-name: mta-project_1234567890-xsuaa
  - name: portal_resources_mta-project
    type: org.cloudfoundry.managed-service
    parameters:
      service: portal
      service-plan: standard
  - name: mta-project_html_repo_runtime
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-runtime
_schema-version: '3.3'
description: Test MTA Project for CF Writer Tests
",
    "state": "modified",
  },
  "../minimal-cf/test-cf-project/.adp/config.json": Object {
    "contents": "{
  \\"componentname\\": \\"test.namespace\\",
  \\"appvariant\\": \\"test-cf-project\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"isOVPApp\\": false,
  \\"isFioriElement\\": false,
  \\"environment\\": \\"CF\\",
  \\"ui5Version\\": \\"1.120.0\\",
  \\"cfApiUrl\\": \\"/test.cf.com\\",
  \\"cfSpace\\": \\"space-guid\\",
  \\"cfOrganization\\": \\"org-guid\\"
}
",
    "state": "modified",
  },
  "../minimal-cf/test-cf-project/.gitignore": Object {
    "contents": "/node_modules/
/preview/
/dist/
*.tar
*.zip
UIAdaptation*.html
",
    "state": "modified",
  },
  "../minimal-cf/test-cf-project/package.json": Object {
    "contents": "{
	\\"name\\": \\"test-cf-project\\",
	\\"version\\": \\"1.0.0\\",
	\\"description\\": \\"\\",
	\\"main\\": \\"index.js\\",
	\\"scripts\\": {
		\\"build\\": \\"npm run clean && ui5 build --include-task=generateCachebusterInfo && npm run zip\\",
		\\"zip\\": \\"cd dist && npx bestzip ../test-cf-project.zip *\\",
		\\"clean\\": \\"npx rimraf test-cf-project.zip dist\\",
		\\"build-ui5\\": \\"npm explore @ui5/task-adaptation -- npm run rollup\\"
	},
	\\"repository\\": {
		\\"type\\": \\"git\\",
		\\"build\\": \\"ui5.js build --verbose --include-task generateCachebusterInfo\\"
	},
	\\"ui5\\": {
		\\"dependencies\\": [
			\\"@sap/ui5-builder-webide-extension\\",
			\\"@ui5/task-adaptation\\"
		]
	},
	\\"devDependencies\\": {
		\\"@sap/ui5-builder-webide-extension\\": \\"1.0.x\\",
		\\"@sapui5/ts-types\\": \\"^1.85.1\\",
		\\"@ui5/cli\\": \\"^3.0.0\\",
		\\"@ui5/task-adaptation\\": \\"^1.0.x\\",
		\\"bestzip\\": \\"2.1.4\\",
		\\"rimraf\\": \\"3.0.2\\"
	}
}
",
    "state": "modified",
  },
  "../minimal-cf/test-cf-project/ui5.yaml": Object {
    "contents": "---
specVersion: \\"2.2\\"
type: application
metadata:
  name: test-cf-project
builder:
  customTasks:
    - name: app-variant-bundler-build
      beforeTask: escapeNonAsciiCharacters
      configuration:
        appHostId: app-host-id
        appName: Base App
        appVersion: 1.0.0
        moduleName: test-cf-project
        org: org-guid
        space: space-guid
        html5RepoRuntime: runtime-guid
        sapCloudService: test-solution
",
    "state": "modified",
  },
  "../minimal-cf/test-cf-project/webapp/i18n/i18n.properties": Object {
    "contents": "#Make sure you provide a unique prefix to the newly added keys in this file, to avoid overriding of SAP Fiori application keys.
#XTIT: Application name
test.namespace_sap.app.title=Test CF App",
    "state": "modified",
  },
  "../minimal-cf/test-cf-project/webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"fileType\\": \\"appdescr_variant\\",
  \\"reference\\": \\"my.test.cf.app\\",
  \\"id\\": \\"test.namespace\\",
  \\"namespace\\": \\"apps/my.test.cf.app/appVariants/test.namespace/\\",
  \\"version\\": \\"0.1.0\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_ui5_setMinUI5Version\\",
      \\"content\\": {
        \\"minUI5Version\\": \\"1.120.0\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
  "../minimal-cf/xs-security.json": Object {
    "contents": "{
	\\"xsappname\\": \\"test-cf-project\\",
	\\"tenant-mode\\": \\"dedicated\\",
	\\"description\\": \\"Security profile of called application\\",
	\\"scopes\\": [],
	\\"role-templates\\": []
}
",
    "state": "modified",
  },
  "mta.yaml": Object {
    "contents": "ID: mta-project
version: 1.0.0
modules:
  - name: mta-project-destination-content
    type: com.sap.application.content
    requires:
      - name: mta-project_uaa
        parameters:
          service-key:
            name: mta-project-uaa-key
      - name: mta-project_html_repo_host
        parameters:
          service-key:
            name: mta-project-html_repo_host-key
      - name: mta-project-destination
        parameters:
          content-target: true
      - name: test-service
        parameters:
          service-key:
            name: test-service-key
    build-parameters:
      no-source: true
    parameters:
      content:
        instance:
          destinations:
            - Name: test-solution-mta-project-html_repo_host
              ServiceInstanceName: mta-project-html5_app_host
              ServiceKeyName: mta-project-html_repo_host-key
              sap.cloud.service: test-solution
            - Name: test-solution-uaa-mta-project
              ServiceInstanceName: mta-project-xsuaa
              ServiceKeyName: mta-project_uaa-key
              Authentication: OAuth2UserTokenExchange
              sap.cloud.service: test-solution
            - Name: test-service-service_instance_name
              Authentication: OAuth2UserTokenExchange
              ServiceInstanceName: test-service
              ServiceKeyName: test-service-key
          existing_destinations_policy: update
  - name: mta-project_ui_deployer
    type: com.sap.application.content
    path: .
    requires:
      - name: mta-project_html_repo_host
        parameters:
          content-target: true
    build-parameters:
      build-result: resources
      requires:
        - artifacts:
            - my.test.cf.app.zip
          name: my.test.cf.app
          target-path: resources/
  - name: my.test.cf.app
    type: html5
    path: my.test.cf.app
    build-parameters:
      builder: custom
      commands:
        - npm install
        - npm run build
      supported-platforms: []
resources:
  - name: test-destination-service
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
      service-name: test-destination-service
  - name: mta-project_html_repo_host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host
      service-name: mta-project-html5_app_host
  - name: mta-project_uaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      path: ./xs-security.json
      service-plan: application
      service-name: mta-project_1234567890-xsuaa
  - name: mta-project-destination
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-name: mta-project-destination
      service-plan: lite
      config:
        HTML5Runtime_enabled: true
        version: 1.0.0
_schema-version: '3.3'
description: Test MTA Project for CF Writer Tests
",
    "state": "modified",
  },
  "test-cf-project/.adp/config.json": Object {
    "contents": "{
  \\"componentname\\": \\"test.namespace\\",
  \\"appvariant\\": \\"test-cf-project\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"isOVPApp\\": false,
  \\"isFioriElement\\": false,
  \\"environment\\": \\"CF\\",
  \\"ui5Version\\": \\"1.120.0\\",
  \\"cfApiUrl\\": \\"/test.cf.com\\",
  \\"cfSpace\\": \\"space-guid\\",
  \\"cfOrganization\\": \\"org-guid\\"
}
",
    "state": "modified",
  },
  "test-cf-project/.gitignore": Object {
    "contents": "/node_modules/
/preview/
/dist/
*.tar
*.zip
UIAdaptation*.html
",
    "state": "modified",
  },
  "test-cf-project/package.json": Object {
    "contents": "{
	\\"name\\": \\"test-cf-project\\",
	\\"version\\": \\"1.0.0\\",
	\\"description\\": \\"\\",
	\\"main\\": \\"index.js\\",
	\\"scripts\\": {
		\\"build\\": \\"npm run clean && ui5 build --include-task=generateCachebusterInfo && npm run zip\\",
		\\"zip\\": \\"cd dist && npx bestzip ../test-cf-project.zip *\\",
		\\"clean\\": \\"npx rimraf test-cf-project.zip dist\\",
		\\"build-ui5\\": \\"npm explore @ui5/task-adaptation -- npm run rollup\\"
	},
	\\"repository\\": {
		\\"type\\": \\"git\\",
		\\"build\\": \\"ui5.js build --verbose --include-task generateCachebusterInfo\\"
	},
	\\"ui5\\": {
		\\"dependencies\\": [
			\\"@sap/ui5-builder-webide-extension\\",
			\\"@ui5/task-adaptation\\"
		]
	},
	\\"devDependencies\\": {
		\\"@sap/ui5-builder-webide-extension\\": \\"1.0.x\\",
		\\"@sapui5/ts-types\\": \\"^1.85.1\\",
		\\"@ui5/cli\\": \\"^3.0.0\\",
		\\"@ui5/task-adaptation\\": \\"^1.0.x\\",
		\\"bestzip\\": \\"2.1.4\\",
		\\"rimraf\\": \\"3.0.2\\"
	}
}
",
    "state": "modified",
  },
  "test-cf-project/ui5.yaml": Object {
    "contents": "---
specVersion: \\"2.2\\"
type: application
metadata:
  name: test-cf-project
builder:
  customTasks:
    - name: app-variant-bundler-build
      beforeTask: escapeNonAsciiCharacters
      configuration:
        appHostId: app-host-id
        appName: Base App
        appVersion: 1.0.0
        moduleName: test-cf-project
        org: org-guid
        space: space-guid
        html5RepoRuntime: runtime-guid
        sapCloudService: test-solution
",
    "state": "modified",
  },
  "test-cf-project/webapp/i18n/i18n.properties": Object {
    "contents": "#Make sure you provide a unique prefix to the newly added keys in this file, to avoid overriding of SAP Fiori application keys.
#XTIT: Application name
test.namespace_sap.app.title=Test CF App",
    "state": "modified",
  },
  "test-cf-project/webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"fileType\\": \\"appdescr_variant\\",
  \\"reference\\": \\"my.test.cf.app\\",
  \\"id\\": \\"test.namespace\\",
  \\"namespace\\": \\"apps/my.test.cf.app/appVariants/test.namespace/\\",
  \\"version\\": \\"0.1.0\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_ui5_setMinUI5Version\\",
      \\"content\\": {
        \\"minUI5Version\\": \\"1.120.0\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
  "xs-security.json": Object {
    "contents": "{
	\\"xsappname\\": \\"test-cf-project\\",
	\\"tenant-mode\\": \\"dedicated\\",
	\\"description\\": \\"Security profile of called application\\",
	\\"scopes\\": [],
	\\"role-templates\\": []
}
",
    "state": "modified",
  },
}
`;

exports[`CF Writer generateCf config with options 1`] = `
Object {
  "../managed-approuter/mta.yaml": Object {
    "contents": "ID: mta-project
version: 1.0.0
modules:
  - name: mta-project-destination-content
    type: com.sap.application.content
    requires:
      - name: mta-project_uaa
        parameters:
          service-key:
            name: mta-project-uaa-key
      - name: mta-project_html_repo_host
        parameters:
          service-key:
            name: mta-project-html_repo_host-key
      - name: mta-project-destination
        parameters:
          content-target: true
      - name: test-service
        parameters:
          service-key:
            name: test-service-key
    build-parameters:
      no-source: true
    parameters:
      content:
        instance:
          destinations:
            - Name: test-solution-mta-project-html_repo_host
              ServiceInstanceName: mta-project-html5_app_host
              ServiceKeyName: mta-project-html_repo_host-key
              sap.cloud.service: test-solution
            - Name: test-solution-uaa-mta-project
              ServiceInstanceName: mta-project-xsuaa
              ServiceKeyName: mta-project_uaa-key
              Authentication: OAuth2UserTokenExchange
              sap.cloud.service: test-solution
            - Name: test-service-service_instance_name
              Authentication: OAuth2UserTokenExchange
              ServiceInstanceName: test-service
              ServiceKeyName: test-service-key
          existing_destinations_policy: update
  - name: mta-project_ui_deployer
    type: com.sap.application.content
    path: .
    requires:
      - name: mta-project_html_repo_host
        parameters:
          content-target: true
    build-parameters:
      build-result: resources
      requires:
        - artifacts:
            - my.test.cf.app.zip
          name: my.test.cf.app
          target-path: resources/
  - name: my.test.cf.app
    type: html5
    path: my.test.cf.app
    build-parameters:
      builder: custom
      commands:
        - npm install
        - npm run build
      supported-platforms: []
resources:
  - name: test-destination-service
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
      service-name: test-destination-service
  - name: mta-project_html_repo_host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host
      service-name: mta-project-html5_app_host
  - name: mta-project_uaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      path: ./xs-security.json
      service-plan: application
      service-name: mta-project_1234567890-xsuaa
  - name: mta-project-destination
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-name: mta-project-destination
      service-plan: lite
      config:
        HTML5Runtime_enabled: true
        version: 1.0.0
_schema-version: '3.3'
description: Test MTA Project for CF Writer Tests
",
    "state": "modified",
  },
  "../managed-approuter/test-cf-project/.adp/config.json": Object {
    "contents": "{
  \\"componentname\\": \\"test.namespace\\",
  \\"appvariant\\": \\"test-cf-project\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"isOVPApp\\": false,
  \\"isFioriElement\\": false,
  \\"environment\\": \\"CF\\",
  \\"ui5Version\\": \\"1.120.0\\",
  \\"cfApiUrl\\": \\"/test.cf.com\\",
  \\"cfSpace\\": \\"space-guid\\",
  \\"cfOrganization\\": \\"org-guid\\"
}
",
    "state": "modified",
  },
  "../managed-approuter/test-cf-project/.gitignore": Object {
    "contents": "/node_modules/
/preview/
/dist/
*.tar
*.zip
UIAdaptation*.html
",
    "state": "modified",
  },
  "../managed-approuter/test-cf-project/package.json": Object {
    "contents": "{
	\\"name\\": \\"test-cf-project\\",
	\\"version\\": \\"1.0.0\\",
	\\"description\\": \\"\\",
	\\"main\\": \\"index.js\\",
	\\"scripts\\": {
		\\"build\\": \\"npm run clean && ui5 build --include-task=generateCachebusterInfo && npm run zip\\",
		\\"zip\\": \\"cd dist && npx bestzip ../test-cf-project.zip *\\",
		\\"clean\\": \\"npx rimraf test-cf-project.zip dist\\",
		\\"build-ui5\\": \\"npm explore @ui5/task-adaptation -- npm run rollup\\"
	},
	\\"repository\\": {
		\\"type\\": \\"git\\",
		\\"build\\": \\"ui5.js build --verbose --include-task generateCachebusterInfo\\"
	},
	\\"ui5\\": {
		\\"dependencies\\": [
			\\"@sap/ui5-builder-webide-extension\\",
			\\"@ui5/task-adaptation\\"
		]
	},
	\\"devDependencies\\": {
		\\"@sap/ui5-builder-webide-extension\\": \\"1.0.x\\",
		\\"@sapui5/ts-types\\": \\"^1.85.1\\",
		\\"@ui5/cli\\": \\"^3.0.0\\",
		\\"@ui5/task-adaptation\\": \\"^1.0.x\\",
		\\"bestzip\\": \\"2.1.4\\",
		\\"rimraf\\": \\"3.0.2\\"
	}
}
",
    "state": "modified",
  },
  "../managed-approuter/test-cf-project/ui5.yaml": Object {
    "contents": "---
specVersion: \\"2.2\\"
type: application
metadata:
  name: test-cf-project
builder:
  customTasks:
    - name: app-variant-bundler-build
      beforeTask: escapeNonAsciiCharacters
      configuration:
        appHostId: app-host-id
        appName: Base App
        appVersion: 1.0.0
        moduleName: test-cf-project
        org: org-guid
        space: space-guid
        html5RepoRuntime: runtime-guid
        sapCloudService: test-solution
",
    "state": "modified",
  },
  "../managed-approuter/test-cf-project/webapp/i18n/i18n.properties": Object {
    "contents": "#Make sure you provide a unique prefix to the newly added keys in this file, to avoid overriding of SAP Fiori application keys.
#XTIT: Application name
test.namespace_sap.app.title=Test CF App",
    "state": "modified",
  },
  "../managed-approuter/test-cf-project/webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"fileType\\": \\"appdescr_variant\\",
  \\"reference\\": \\"my.test.cf.app\\",
  \\"id\\": \\"test.namespace\\",
  \\"namespace\\": \\"apps/my.test.cf.app/appVariants/test.namespace/\\",
  \\"version\\": \\"0.1.0\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_ui5_setMinUI5Version\\",
      \\"content\\": {
        \\"minUI5Version\\": \\"1.120.0\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
  "../managed-approuter/xs-security.json": Object {
    "contents": "{
	\\"xsappname\\": \\"test-cf-project\\",
	\\"tenant-mode\\": \\"dedicated\\",
	\\"description\\": \\"Security profile of called application\\",
	\\"scopes\\": [],
	\\"role-templates\\": []
}
",
    "state": "modified",
  },
  "../minimal-cf/mta.yaml": Object {
    "contents": "ID: mta-project
version: 1.0.0
modules:
  - name: mta-project-approuter
    type: approuter.nodejs
    path: mta-project-approuter
    requires:
      - name: mta-project_html_repo_runtime
      - name: mta-project_uaa
      - name: portal_resources_mta-project
      - name: test-service
    parameters:
      disk-quota: 256M
      memory: 256M
  - name: mta-project_ui_deployer
    type: com.sap.application.content
    path: .
    requires:
      - name: mta-project_html_repo_host
        parameters:
          content-target: true
    build-parameters:
      build-result: resources
      requires:
        - artifacts:
            - my.test.cf.app.zip
          name: my.test.cf.app
          target-path: resources/
  - name: my.test.cf.app
    type: html5
    path: my.test.cf.app
    build-parameters:
      builder: custom
      commands:
        - npm install
        - npm run build
      supported-platforms: []
resources:
  - name: test-destination-service
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
      service-name: test-destination-service
  - name: mta-project_html_repo_host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host
      service-name: mta-project-html5_app_host
  - name: mta-project_uaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      path: ./xs-security.json
      service-plan: application
      service-name: mta-project_1234567890-xsuaa
  - name: portal_resources_mta-project
    type: org.cloudfoundry.managed-service
    parameters:
      service: portal
      service-plan: standard
  - name: mta-project_html_repo_runtime
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-runtime
_schema-version: '3.3'
description: Test MTA Project for CF Writer Tests
",
    "state": "modified",
  },
  "../minimal-cf/test-cf-project/.adp/config.json": Object {
    "contents": "{
  \\"componentname\\": \\"test.namespace\\",
  \\"appvariant\\": \\"test-cf-project\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"isOVPApp\\": false,
  \\"isFioriElement\\": false,
  \\"environment\\": \\"CF\\",
  \\"ui5Version\\": \\"1.120.0\\",
  \\"cfApiUrl\\": \\"/test.cf.com\\",
  \\"cfSpace\\": \\"space-guid\\",
  \\"cfOrganization\\": \\"org-guid\\"
}
",
    "state": "modified",
  },
  "../minimal-cf/test-cf-project/.gitignore": Object {
    "contents": "/node_modules/
/preview/
/dist/
*.tar
*.zip
UIAdaptation*.html
",
    "state": "modified",
  },
  "../minimal-cf/test-cf-project/package.json": Object {
    "contents": "{
	\\"name\\": \\"test-cf-project\\",
	\\"version\\": \\"1.0.0\\",
	\\"description\\": \\"\\",
	\\"main\\": \\"index.js\\",
	\\"scripts\\": {
		\\"build\\": \\"npm run clean && ui5 build --include-task=generateCachebusterInfo && npm run zip\\",
		\\"zip\\": \\"cd dist && npx bestzip ../test-cf-project.zip *\\",
		\\"clean\\": \\"npx rimraf test-cf-project.zip dist\\",
		\\"build-ui5\\": \\"npm explore @ui5/task-adaptation -- npm run rollup\\"
	},
	\\"repository\\": {
		\\"type\\": \\"git\\",
		\\"build\\": \\"ui5.js build --verbose --include-task generateCachebusterInfo\\"
	},
	\\"ui5\\": {
		\\"dependencies\\": [
			\\"@sap/ui5-builder-webide-extension\\",
			\\"@ui5/task-adaptation\\"
		]
	},
	\\"devDependencies\\": {
		\\"@sap/ui5-builder-webide-extension\\": \\"1.0.x\\",
		\\"@sapui5/ts-types\\": \\"^1.85.1\\",
		\\"@ui5/cli\\": \\"^3.0.0\\",
		\\"@ui5/task-adaptation\\": \\"^1.0.x\\",
		\\"bestzip\\": \\"2.1.4\\",
		\\"rimraf\\": \\"3.0.2\\"
	}
}
",
    "state": "modified",
  },
  "../minimal-cf/test-cf-project/ui5.yaml": Object {
    "contents": "---
specVersion: \\"2.2\\"
type: application
metadata:
  name: test-cf-project
builder:
  customTasks:
    - name: app-variant-bundler-build
      beforeTask: escapeNonAsciiCharacters
      configuration:
        appHostId: app-host-id
        appName: Base App
        appVersion: 1.0.0
        moduleName: test-cf-project
        org: org-guid
        space: space-guid
        html5RepoRuntime: runtime-guid
        sapCloudService: test-solution
",
    "state": "modified",
  },
  "../minimal-cf/test-cf-project/webapp/i18n/i18n.properties": Object {
    "contents": "#Make sure you provide a unique prefix to the newly added keys in this file, to avoid overriding of SAP Fiori application keys.
#XTIT: Application name
test.namespace_sap.app.title=Test CF App",
    "state": "modified",
  },
  "../minimal-cf/test-cf-project/webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"fileType\\": \\"appdescr_variant\\",
  \\"reference\\": \\"my.test.cf.app\\",
  \\"id\\": \\"test.namespace\\",
  \\"namespace\\": \\"apps/my.test.cf.app/appVariants/test.namespace/\\",
  \\"version\\": \\"0.1.0\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_ui5_setMinUI5Version\\",
      \\"content\\": {
        \\"minUI5Version\\": \\"1.120.0\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
  "../minimal-cf/xs-security.json": Object {
    "contents": "{
	\\"xsappname\\": \\"test-cf-project\\",
	\\"tenant-mode\\": \\"dedicated\\",
	\\"description\\": \\"Security profile of called application\\",
	\\"scopes\\": [],
	\\"role-templates\\": []
}
",
    "state": "modified",
  },
  "mta.yaml": Object {
    "contents": "ID: mta-project
version: 1.0.0
modules:
  - name: mta-project-destination-content
    type: com.sap.application.content
    requires:
      - name: mta-project_uaa
        parameters:
          service-key:
            name: mta-project-uaa-key
      - name: mta-project_html_repo_host
        parameters:
          service-key:
            name: mta-project-html_repo_host-key
      - name: mta-project-destination
        parameters:
          content-target: true
      - name: test-service
        parameters:
          service-key:
            name: test-service-key
    build-parameters:
      no-source: true
    parameters:
      content:
        instance:
          destinations:
            - Name: test-solution-mta-project-html_repo_host
              ServiceInstanceName: mta-project-html5_app_host
              ServiceKeyName: mta-project-html_repo_host-key
              sap.cloud.service: test-solution
            - Name: test-solution-uaa-mta-project
              ServiceInstanceName: mta-project-xsuaa
              ServiceKeyName: mta-project_uaa-key
              Authentication: OAuth2UserTokenExchange
              sap.cloud.service: test-solution
            - Name: test-service-service_instance_name
              Authentication: OAuth2UserTokenExchange
              ServiceInstanceName: test-service
              ServiceKeyName: test-service-key
          existing_destinations_policy: update
  - name: mta-project_ui_deployer
    type: com.sap.application.content
    path: .
    requires:
      - name: mta-project_html_repo_host
        parameters:
          content-target: true
    build-parameters:
      build-result: resources
      requires:
        - artifacts:
            - my.test.cf.app.zip
          name: my.test.cf.app
          target-path: resources/
  - name: my.test.cf.app
    type: html5
    path: my.test.cf.app
    build-parameters:
      builder: custom
      commands:
        - npm install
        - npm run build
      supported-platforms: []
resources:
  - name: test-destination-service
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
      service-name: test-destination-service
  - name: mta-project_html_repo_host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host
      service-name: mta-project-html5_app_host
  - name: mta-project_uaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      path: ./xs-security.json
      service-plan: application
      service-name: mta-project_1234567890-xsuaa
  - name: mta-project-destination
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-name: mta-project-destination
      service-plan: lite
      config:
        HTML5Runtime_enabled: true
        version: 1.0.0
_schema-version: '3.3'
description: Test MTA Project for CF Writer Tests
",
    "state": "modified",
  },
  "test-cf-project-approuter/package.json": Object {
    "contents": "{
	\\"name\\": \\"test-cf-project-approuter\\",
	\\"description\\": \\"Node.js based application router service for html5-apps\\",
	\\"engines\\": {
		\\"node\\": \\"^10.0.0\\"
	},
	\\"dependencies\\": {
		\\"@sap/approuter\\": \\"^7.0.0\\"
	},
	\\"scripts\\": {
		\\"start\\": \\"node node_modules/@sap/approuter/approuter.js\\"
	}
}
",
    "state": "modified",
  },
  "test-cf-project-approuter/xs-app.json": Object {
    "contents": "{
	\\"welcomeFile\\": \\"/cp.portal\\",
	\\"authenticationMethod\\": \\"route\\",
	\\"logout\\": {
		\\"logoutEndpoint\\": \\"/do/logout\\"
	},
	\\"routes\\": [
		{
			\\"source\\": \\"^(.*)$\\",
			\\"target\\": \\"$1\\",
			\\"service\\": \\"html5-apps-repo-rt\\",
			\\"authenticationType\\": \\"xsuaa\\"
		}
	]
}
",
    "state": "modified",
  },
  "test-cf-project/.adp/config.json": Object {
    "contents": "{
  \\"componentname\\": \\"test.namespace\\",
  \\"appvariant\\": \\"test-cf-project\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"isOVPApp\\": false,
  \\"isFioriElement\\": false,
  \\"environment\\": \\"CF\\",
  \\"ui5Version\\": \\"1.120.0\\",
  \\"cfApiUrl\\": \\"/test.cf.com\\",
  \\"cfSpace\\": \\"space-guid\\",
  \\"cfOrganization\\": \\"org-guid\\"
}
",
    "state": "modified",
  },
  "test-cf-project/.gitignore": Object {
    "contents": "/node_modules/
/preview/
/dist/
*.tar
*.zip
UIAdaptation*.html
",
    "state": "modified",
  },
  "test-cf-project/package.json": Object {
    "contents": "{
	\\"name\\": \\"test-cf-project\\",
	\\"version\\": \\"1.0.0\\",
	\\"description\\": \\"\\",
	\\"main\\": \\"index.js\\",
	\\"scripts\\": {
		\\"build\\": \\"npm run clean && ui5 build --include-task=generateCachebusterInfo && npm run zip\\",
		\\"zip\\": \\"cd dist && npx bestzip ../test-cf-project.zip *\\",
		\\"clean\\": \\"npx rimraf test-cf-project.zip dist\\",
		\\"build-ui5\\": \\"npm explore @ui5/task-adaptation -- npm run rollup\\"
	},
	\\"repository\\": {
		\\"type\\": \\"git\\",
		\\"build\\": \\"ui5.js build --verbose --include-task generateCachebusterInfo\\"
	},
	\\"ui5\\": {
		\\"dependencies\\": [
			\\"@sap/ui5-builder-webide-extension\\",
			\\"@ui5/task-adaptation\\"
		]
	},
	\\"devDependencies\\": {
		\\"@sap/ui5-builder-webide-extension\\": \\"1.0.x\\",
		\\"@sapui5/ts-types\\": \\"^1.85.1\\",
		\\"@ui5/cli\\": \\"^3.0.0\\",
		\\"@ui5/task-adaptation\\": \\"^1.0.x\\",
		\\"bestzip\\": \\"2.1.4\\",
		\\"rimraf\\": \\"3.0.2\\"
	}
}
",
    "state": "modified",
  },
  "test-cf-project/ui5.yaml": Object {
    "contents": "---
specVersion: \\"2.2\\"
type: application
metadata:
  name: test-cf-project
builder:
  customTasks:
    - name: app-variant-bundler-build
      beforeTask: escapeNonAsciiCharacters
      configuration:
        appHostId: app-host-id
        appName: Base App
        appVersion: 1.0.0
        moduleName: test-cf-project
        org: org-guid
        space: space-guid
        html5RepoRuntime: runtime-guid
        sapCloudService: test-solution
",
    "state": "modified",
  },
  "test-cf-project/webapp/i18n/i18n.properties": Object {
    "contents": "#Make sure you provide a unique prefix to the newly added keys in this file, to avoid overriding of SAP Fiori application keys.
#XTIT: Application name
test.namespace_sap.app.title=Test CF App",
    "state": "modified",
  },
  "test-cf-project/webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"fileType\\": \\"appdescr_variant\\",
  \\"reference\\": \\"my.test.cf.app\\",
  \\"id\\": \\"test.namespace\\",
  \\"namespace\\": \\"apps/my.test.cf.app/appVariants/test.namespace/\\",
  \\"version\\": \\"0.1.0\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_ui5_setMinUI5Version\\",
      \\"content\\": {
        \\"minUI5Version\\": \\"1.120.0\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
  "xs-security.json": Object {
    "contents": "{
	\\"xsappname\\": \\"test-cf-project\\",
	\\"tenant-mode\\": \\"dedicated\\",
	\\"description\\": \\"Security profile of called application\\",
	\\"scopes\\": [],
	\\"role-templates\\": []
}
",
    "state": "modified",
  },
}
`;

exports[`CF Writer generateCf minimal config 1`] = `
Object {
  "mta.yaml": Object {
    "contents": "ID: mta-project
version: 1.0.0
modules:
  - name: mta-project-approuter
    type: approuter.nodejs
    path: mta-project-approuter
    requires:
      - name: mta-project_html_repo_runtime
      - name: mta-project_uaa
      - name: portal_resources_mta-project
      - name: test-service
    parameters:
      disk-quota: 256M
      memory: 256M
  - name: mta-project_ui_deployer
    type: com.sap.application.content
    path: .
    requires:
      - name: mta-project_html_repo_host
        parameters:
          content-target: true
    build-parameters:
      build-result: resources
      requires:
        - artifacts:
            - my.test.cf.app.zip
          name: my.test.cf.app
          target-path: resources/
  - name: my.test.cf.app
    type: html5
    path: my.test.cf.app
    build-parameters:
      builder: custom
      commands:
        - npm install
        - npm run build
      supported-platforms: []
resources:
  - name: test-destination-service
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
      service-name: test-destination-service
  - name: mta-project_html_repo_host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host
      service-name: mta-project-html5_app_host
  - name: mta-project_uaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      path: ./xs-security.json
      service-plan: application
      service-name: mta-project_1234567890-xsuaa
  - name: portal_resources_mta-project
    type: org.cloudfoundry.managed-service
    parameters:
      service: portal
      service-plan: standard
  - name: mta-project_html_repo_runtime
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-runtime
_schema-version: '3.3'
description: Test MTA Project for CF Writer Tests
",
    "state": "modified",
  },
  "test-cf-project/.adp/config.json": Object {
    "contents": "{
  \\"componentname\\": \\"test.namespace\\",
  \\"appvariant\\": \\"test-cf-project\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"isOVPApp\\": false,
  \\"isFioriElement\\": false,
  \\"environment\\": \\"CF\\",
  \\"ui5Version\\": \\"1.120.0\\",
  \\"cfApiUrl\\": \\"/test.cf.com\\",
  \\"cfSpace\\": \\"space-guid\\",
  \\"cfOrganization\\": \\"org-guid\\"
}
",
    "state": "modified",
  },
  "test-cf-project/.gitignore": Object {
    "contents": "/node_modules/
/preview/
/dist/
*.tar
*.zip
UIAdaptation*.html
",
    "state": "modified",
  },
  "test-cf-project/package.json": Object {
    "contents": "{
	\\"name\\": \\"test-cf-project\\",
	\\"version\\": \\"1.0.0\\",
	\\"description\\": \\"\\",
	\\"main\\": \\"index.js\\",
	\\"scripts\\": {
		\\"build\\": \\"npm run clean && ui5 build --include-task=generateCachebusterInfo && npm run zip\\",
		\\"zip\\": \\"cd dist && npx bestzip ../test-cf-project.zip *\\",
		\\"clean\\": \\"npx rimraf test-cf-project.zip dist\\",
		\\"build-ui5\\": \\"npm explore @ui5/task-adaptation -- npm run rollup\\"
	},
	\\"repository\\": {
		\\"type\\": \\"git\\",
		\\"build\\": \\"ui5.js build --verbose --include-task generateCachebusterInfo\\"
	},
	\\"ui5\\": {
		\\"dependencies\\": [
			\\"@sap/ui5-builder-webide-extension\\",
			\\"@ui5/task-adaptation\\"
		]
	},
	\\"devDependencies\\": {
		\\"@sap/ui5-builder-webide-extension\\": \\"1.0.x\\",
		\\"@sapui5/ts-types\\": \\"^1.85.1\\",
		\\"@ui5/cli\\": \\"^3.0.0\\",
		\\"@ui5/task-adaptation\\": \\"^1.0.x\\",
		\\"bestzip\\": \\"2.1.4\\",
		\\"rimraf\\": \\"3.0.2\\"
	}
}
",
    "state": "modified",
  },
  "test-cf-project/ui5.yaml": Object {
    "contents": "---
specVersion: \\"2.2\\"
type: application
metadata:
  name: test-cf-project
builder:
  customTasks:
    - name: app-variant-bundler-build
      beforeTask: escapeNonAsciiCharacters
      configuration:
        appHostId: app-host-id
        appName: Base App
        appVersion: 1.0.0
        moduleName: test-cf-project
        org: org-guid
        space: space-guid
        html5RepoRuntime: runtime-guid
        sapCloudService: test-solution
",
    "state": "modified",
  },
  "test-cf-project/webapp/i18n/i18n.properties": Object {
    "contents": "#Make sure you provide a unique prefix to the newly added keys in this file, to avoid overriding of SAP Fiori application keys.
#XTIT: Application name
test.namespace_sap.app.title=Test CF App",
    "state": "modified",
  },
  "test-cf-project/webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"fileType\\": \\"appdescr_variant\\",
  \\"reference\\": \\"my.test.cf.app\\",
  \\"id\\": \\"test.namespace\\",
  \\"namespace\\": \\"apps/my.test.cf.app/appVariants/test.namespace/\\",
  \\"version\\": \\"0.1.0\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_ui5_setMinUI5Version\\",
      \\"content\\": {
        \\"minUI5Version\\": \\"1.120.0\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
  "xs-security.json": Object {
    "contents": "{
	\\"xsappname\\": \\"test-cf-project\\",
	\\"tenant-mode\\": \\"dedicated\\",
	\\"description\\": \\"Security profile of called application\\",
	\\"scopes\\": [],
	\\"role-templates\\": []
}
",
    "state": "modified",
  },
}
`;
