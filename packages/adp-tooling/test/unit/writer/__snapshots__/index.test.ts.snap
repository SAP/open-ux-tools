// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ADP writer generate add deploy config 1`] = `
Object {
  "package.json": Object {
    "contents": "{
    \\"name\\": \\"my-test-app\\",
    \\"version\\": \\"0.1.0\\", 
    \\"private\\": true,
    \\"description\\": \\"Adaptation of the.original.app\\",
    \\"keywords\\": [
        \\"ui5\\",
        \\"sapui5\\",
        \\"adaptation-project\\"
    ],
    \\"devDependencies\\": {
        \\"@sap-ux/backend-proxy-middleware\\": \\"^0.7.5\\",
        \\"@sap-ux/preview-middleware\\": \\"^0.11.1\\",
        \\"@sap-ux/ui5-proxy-middleware\\": \\"^1.3.0\\",
        \\"@sap-ux/deploy-tooling\\": \\"^0.11.7\\",
        \\"@ui5/cli\\": \\"^3.6.0\\"
    },
    \\"scripts\\": {
        \\"build\\": \\"ui5 build --exclude-task generateFlexChangesBundle generateComponentPreload --clean-dest\\",
        \\"start\\": \\"ui5 serve --open /test/flp.html#app-preview\\",
        \\"start-editor\\": \\"ui5 serve --open /test/adaptation-editor.html\\",
        \\"deploy\\": \\"ui5 build --config ui5-deploy.yaml --exclude-task abap-deploy-task generateFlexChangesBundle generateComponentPreload --clean-dest && deploy --config ui5-deploy.yaml\\",
        \\"undeploy\\": \\"undeploy --config ui5-deploy.yaml --lrep \\\\\\"apps/the.original.app/appVariants/my.test.app/\\\\\\"\\"
    }
}
",
    "state": "modified",
  },
  "ui5-deploy.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my-test-app
type: application
builder:
  resources:
    excludes:
      - /test/**
      - /localService/**
  customTasks:
    - name: abap-deploy-task
      afterTask: generateCachebusterInfo
      configuration:
        target:
          url: http://sap.example
        app:
          package: $TMP
",
    "state": "modified",
  },
}
`;

exports[`ADP writer generate enable Fiori tools 1`] = `
Object {
  "package.json": Object {
    "contents": "{
    \\"name\\": \\"my-test-app\\",
    \\"version\\": \\"0.1.0\\", 
    \\"private\\": true,
    \\"description\\": \\"Adaptation of the.original.app\\",
    \\"keywords\\": [
        \\"ui5\\",
        \\"sapui5\\",
        \\"adaptation-project\\"
    ],
    \\"devDependencies\\": {
        \\"@sap/ux-ui5-tooling\\": \\"^1.11.4\\",
        \\"@ui5/cli\\": \\"^3.6.0\\"
    },
    \\"scripts\\": {
        \\"build\\": \\"ui5 build --exclude-task generateFlexChangesBundle generateComponentPreload --clean-dest\\",
        \\"start\\": \\"fiori run --open /test/flp.html#app-preview\\",
        \\"start-editor\\": \\"fiori run --open /test/adaptation-editor.html\\",
        \\"deploy\\": \\"ui5 build --config ui5-deploy.yaml --exclude-task deploy-to-abap generateFlexChangesBundle generateComponentPreload --clean-dest && fiori deploy --config ui5-deploy.yaml\\",
        \\"undeploy\\": \\"fiori undeploy --config ui5-deploy.yaml --lrep \\\\\\"apps/the.original.app/appVariants/my.test.app/\\\\\\"\\"
    }
}
",
    "state": "modified",
  },
  "ui5-deploy.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my-test-app
type: application
builder:
  resources:
    excludes:
      - /test/**
      - /localService/**
  customTasks:
    - name: deploy-to-abap
      afterTask: generateCachebusterInfo
      configuration:
        target:
          url: http://sap.example
        app:
          package: $TMP
",
    "state": "modified",
  },
  "ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my-test-app
type: application
resources:
  configuration:
    propertiesFileSourceEncoding: UTF-8
server:
  customMiddleware:
    - name: fiori-tools-preview
      afterMiddleware: compression
      configuration:
        adp:
          target:
            url: http://sap.example
          ignoreCertErrors: false
    - name: fiori-tools-proxy
      afterMiddleware: fiori-tools-preview
      configuration:
        ignoreCertErrors: false
        ui5:
          path:
            - /resources
            - /test-resources
        backend:
          - url: http://sap.example
            path: /sap
",
    "state": "modified",
  },
}
`;

exports[`ADP writer generate enable s4hana cloud 1`] = `
Object {
  "package.json": Object {
    "contents": "{
    \\"name\\": \\"my-test-app\\",
    \\"version\\": \\"0.1.0\\",
    \\"main\\": \\"index.js\\", 
    \\"private\\": true,
    \\"description\\": \\"Adaptation of the.original.app\\",
    \\"keywords\\": [
        \\"ui5\\",
        \\"sapui5\\",
        \\"adaptation-project\\"
    ],
	\\"repository\\": {
		\\"type\\": \\"git\\",
		\\"build\\": \\"ui5.js build --verbose --include-task generateCachebusterInfo\\"
	},
	\\"author\\": \\"\\",
	\\"license\\": \\"ISC\\",
	\\"ui5\\": {
		\\"dependencies\\": [\\"@sap/ui5-builder-webide-extension\\", \\"@ui5/task-adaptation\\"]
	},
    \\"devDependencies\\": {
        \\"@sap/ux-ui5-tooling\\": \\"^1.11.4\\",
        \\"@sap/ui5-builder-webide-extension\\": \\"1.0.x\\",
        \\"@sapui5/ts-types\\": \\"^1.85.1\\",
        \\"@types/js-yaml\\": \\"^4.0.5\\",
        \\"@types/semver\\": \\"^7.3.13\\",
        \\"@ui5/task-adaptation\\": \\"^1.0.10\\",
        \\"bestzip\\": \\"2.1.4\\",
        \\"rimraf\\": \\"3.0.2\\",
        \\"@ui5/cli\\": \\"^3.6.0\\"
    },
    \\"dependencies\\": {
        \\"dotenv\\": \\"^16.0.3\\",
        \\"inquirer\\": \\"^8.2.5\\",
        \\"json-diff\\": \\"^1.0.6\\",
        \\"prompt-sync\\": \\"^4.2.0\\",
        \\"prompts\\": \\"^2.4.2\\",
        \\"xml-js\\": \\"^1.6.11\\"
    },
    \\"scripts\\": {
        \\"build\\": \\"ui5 build --include-task=generateCachebusterInfo && npm run zip\\",
        \\"prebuild\\": \\"npm run clean\\",
        \\"zip\\": \\"cd dist && npx bestzip ../my-test-app.zip *\\",
        \\"clean\\": \\"npx rimraf my-test-app.zip dist\\",
        \\"build-ui5\\": \\"npm explore @ui5/task-adaptation && npm run rollup\\",
        \\"deploy\\": \\"npm run build && fiori deploy --config ui5-deploy.yaml && rimraf archive.zip\\",
        \\"undeploy\\": \\"fiori undeploy --config ui5-deploy.yaml\\",
        \\"deploy-test\\": \\"npm run build && fiori deploy --config ui5-deploy.yaml --testMode true\\"
    }
}
",
    "state": "modified",
  },
  "ui5-deploy.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my-test-app
type: application
builder:
  resources:
    excludes:
      - /test/**
      - /localService/**
  customTasks:
    - name: deploy-to-abap
      afterTask: generateCachebusterInfo
      configuration:
        target:
          url: http://sap.example
        app:
          package: $TMP
",
    "state": "modified",
  },
  "ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my-test-app
type: application
resources:
  configuration:
    propertiesFileSourceEncoding: UTF-8
server:
  customMiddleware:
    - name: fiori-tools-preview
      afterMiddleware: compression
      configuration:
        adp:
          target:
            url: http://sap.example
          ignoreCertErrors: false
    - name: fiori-tools-proxy
      afterMiddleware: fiori-tools-preview
      configuration:
        ignoreCertErrors: false
        ui5:
          path:
            - /resources
            - /test-resources
        backend:
          - url: http://sap.example
            path: /sap
customConfiguration:
  adp:
    safeMode: false
framework:
  name: SAPUI5
  version: 1.122.1
  libraries:
    - name: themelib_sap_fiori_3
builder:
  customTasks:
    - name: app-variant-bundler-build
      beforeTask: escapeNonAsciiCharacters
      configuration:
        type: abap
        appName: bsp.test.app
        languages:
          - sap: testId
            i18n: testKey
        credentials:
          username: env:ABAP_USERNAME
          password: env:ABAP_PASSWORD
",
    "state": "modified",
  },
}
`;

exports[`ADP writer generate minimal config 1`] = `Object {}`;

exports[`ADP writer generateCf add standalone approuter 1`] = `
Object {
  ".adp/config.json": Object {
    "contents": "{
  \\"componentname\\": \\"\\",
  \\"safeMode\\": false,
  \\"appvariant\\": \\"\\",
  \\"layer\\": \\"VENDOR\\",
  \\"isOVPApp\\": false,
  \\"isFioriElement\\": false,
  \\"environment\\": \\"\\",
  \\"ui5Version\\": \\"\\",
  \\"cfSpace\\": \\"\\",
  \\"cfOrganization\\": \\"\\",
  \\"cfApiUrl\\": \\"\\"
}
",
    "state": "modified",
  },
  ".gitignore": Object {
    "contents": "/node_modules/
/preview/
/dist/
*.tar
*.zip
UIAdaptation*.html
",
    "state": "modified",
  },
  "approuter": Object {
    "contents": null,
  },
  "approuter/package.json": Object {
    "contents": "{
	\\"name\\": \\"test_app-approuter\\",
	\\"description\\": \\"Node.js based application router service for html5-apps\\",
	\\"engines\\": {
		\\"node\\": \\"^10.0.0\\"
	},
	\\"dependencies\\": {
		\\"@sap/approuter\\": \\"^7.0.0\\"
	},
	\\"scripts\\": {
		\\"start\\": \\"node node_modules/@sap/approuter/approuter.js\\"
	}
}
",
    "state": "modified",
  },
  "approuter/xs-app.json": Object {
    "contents": "{
	\\"welcomeFile\\": \\"/cp.portal\\",
	\\"authenticationMethod\\": \\"route\\",
	\\"logout\\": {
		\\"logoutEndpoint\\": \\"/do/logout\\"
	},
	\\"routes\\": [
		{
			\\"source\\": \\"^(.*)$\\",
			\\"target\\": \\"$1\\",
			\\"service\\": \\"html5-apps-repo-rt\\",
			\\"authenticationType\\": \\"xsuaa\\"
		}
	]
}
",
    "state": "modified",
  },
  "package.json": Object {
    "contents": "{
	\\"name\\": \\"test_app\\",
	\\"version\\": \\"1.0.0\\",
	\\"description\\": \\"\\",
	\\"main\\": \\"index.js\\",
	\\"scripts\\": {
		\\"build\\": \\"npm run clean && ui5 build --include-task=generateCachebusterInfo && npm run zip\\",
		\\"zip\\": \\"cd dist && npx bestzip ../test_app.zip *\\",
		\\"clean\\": \\"npx rimraf test_app.zip dist\\",
		\\"build-ui5\\": \\"npm explore @ui5/task-adaptation -- npm run rollup\\"
	},
	\\"repository\\": {
		\\"type\\": \\"git\\",
		\\"build\\": \\"ui5.js build --verbose --include-task generateCachebusterInfo\\"
	},
	\\"ui5\\": {
		\\"dependencies\\": [
			\\"@sap/ui5-builder-webide-extension\\",
			\\"@ui5/task-adaptation\\"
		]
	},
	\\"devDependencies\\": {
		\\"@sap/ui5-builder-webide-extension\\": \\"1.0.x\\",
		\\"@sapui5/ts-types\\": \\"^1.85.1\\",
		\\"@ui5/cli\\": \\"^2.7.0\\",
		\\"@ui5/task-adaptation\\": \\"^1.0.x\\",
		\\"bestzip\\": \\"2.1.4\\",
		\\"rimraf\\": \\"3.0.2\\"
	}
}
",
    "state": "modified",
  },
  "ui5.yaml": Object {
    "contents": "---
specVersion: \\"2.2\\"
type: application
metadata:
  name: test_app
builder:
  customTasks:
    - name: app-variant-bundler-build
      beforeTask: escapeNonAsciiCharacters
      configuration:
        appHostId: app.id
        appName: test_app
        appVersion: 
        moduleName: test_app
        org: 
        space: 
        html5RepoRuntime: 
        sapCloudService: 
",
    "state": "modified",
  },
  "webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"VENDOR\\",
  \\"fileType\\": \\"\\",
  \\"reference\\": \\"\\",
  \\"id\\": \\"\\",
  \\"namespace\\": \\"\\",
  \\"version\\": \\"\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
}
`;

exports[`ADP writer generateCf minimal config 1`] = `
Object {
  "../deploy/.gitignore": Object {
    "contents": "node_modules/
dist/
.tmp
.env
*.zip",
    "state": "modified",
  },
  "../deploy/package.json": Object {
    "contents": "{
    \\"name\\": \\"my-test-app\\",
    \\"version\\": \\"0.1.0\\", 
    \\"private\\": true,
    \\"description\\": \\"Adaptation of the.original.app\\",
    \\"keywords\\": [
        \\"ui5\\",
        \\"sapui5\\",
        \\"adaptation-project\\"
    ],
    \\"devDependencies\\": {
        \\"@sap-ux/backend-proxy-middleware\\": \\"^0.7.5\\",
        \\"@sap-ux/preview-middleware\\": \\"^0.11.1\\",
        \\"@sap-ux/ui5-proxy-middleware\\": \\"^1.3.0\\",
        \\"@sap-ux/deploy-tooling\\": \\"^0.11.7\\",
        \\"@ui5/cli\\": \\"^3.6.0\\"
    },
    \\"scripts\\": {
        \\"build\\": \\"ui5 build --exclude-task generateFlexChangesBundle generateComponentPreload --clean-dest\\",
        \\"start\\": \\"ui5 serve --open /test/flp.html#app-preview\\",
        \\"start-editor\\": \\"ui5 serve --open /test/adaptation-editor.html\\",
        \\"deploy\\": \\"ui5 build --config ui5-deploy.yaml --exclude-task abap-deploy-task generateFlexChangesBundle generateComponentPreload --clean-dest && deploy --config ui5-deploy.yaml\\",
        \\"undeploy\\": \\"undeploy --config ui5-deploy.yaml --lrep \\\\\\"apps/the.original.app/appVariants/my.test.app/\\\\\\"\\"
    }
}
",
    "state": "modified",
  },
  "../deploy/ui5-deploy.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my-test-app
type: application
builder:
  resources:
    excludes:
      - /test/**
      - /localService/**
  customTasks:
    - name: abap-deploy-task
      afterTask: generateCachebusterInfo
      configuration:
        target:
          url: http://sap.example
        app:
          package: $TMP
",
    "state": "modified",
  },
  "../deploy/ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my-test-app
type: application
resources:
  configuration:
    propertiesFileSourceEncoding: UTF-8
server:
  customMiddleware:
    - name: preview-middleware
      afterMiddleware: compression
      configuration:
        adp:
          target:
            url: http://sap.example
          ignoreCertErrors: false
        rta:
          editors:
            - path: /test/adaptation-editor.html
              developerMode: true
    - name: ui5-proxy-middleware
      afterMiddleware: preview-middleware
    - name: backend-proxy-middleware
      afterMiddleware: preview-middleware
      configuration:
        backend:
          url: http://sap.example
          path: /sap
        options:
          secure: true
",
    "state": "modified",
  },
  "../deploy/webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for my.test.app

#Texts for manifest.json

#XTIT: Application name
my.test.app_sap.app.title=Adaptation of the.original.app
",
    "state": "modified",
  },
  "../deploy/webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"fileType\\": \\"appdescr_variant\\",
  \\"reference\\": \\"the.original.app\\",
  \\"id\\": \\"my.test.app\\",
  \\"namespace\\": \\"apps/the.original.app/appVariants/my.test.app/\\",
  \\"version\\": \\"0.1.0\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_ui5_addNewModelEnhanceWith\\",
      \\"content\\": {
        \\"modelId\\": \\"i18n\\",
        \\"bundleUrl\\": \\"i18n/i18n.properties\\",
        \\"supportedLocales\\": [
          \\"\\"
        ],
        \\"fallbackLocale\\": \\"\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
  "../env/.env": Object {
    "contents": "ABAP_USERNAME: test_name
                          ABAP_PASSWORD: test_pass",
    "state": "modified",
  },
  "../fiori-tools/.gitignore": Object {
    "contents": "node_modules/
dist/
.tmp
.env
*.zip",
    "state": "modified",
  },
  "../fiori-tools/package.json": Object {
    "contents": "{
    \\"name\\": \\"my-test-app\\",
    \\"version\\": \\"0.1.0\\", 
    \\"private\\": true,
    \\"description\\": \\"Adaptation of the.original.app\\",
    \\"keywords\\": [
        \\"ui5\\",
        \\"sapui5\\",
        \\"adaptation-project\\"
    ],
    \\"devDependencies\\": {
        \\"@sap/ux-ui5-tooling\\": \\"^1.11.4\\",
        \\"@ui5/cli\\": \\"^3.6.0\\"
    },
    \\"scripts\\": {
        \\"build\\": \\"ui5 build --exclude-task generateFlexChangesBundle generateComponentPreload --clean-dest\\",
        \\"start\\": \\"fiori run --open /test/flp.html#app-preview\\",
        \\"start-editor\\": \\"fiori run --open /test/adaptation-editor.html\\",
        \\"deploy\\": \\"ui5 build --config ui5-deploy.yaml --exclude-task deploy-to-abap generateFlexChangesBundle generateComponentPreload --clean-dest && fiori deploy --config ui5-deploy.yaml\\",
        \\"undeploy\\": \\"fiori undeploy --config ui5-deploy.yaml --lrep \\\\\\"apps/the.original.app/appVariants/my.test.app/\\\\\\"\\"
    }
}
",
    "state": "modified",
  },
  "../fiori-tools/ui5-deploy.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my-test-app
type: application
builder:
  resources:
    excludes:
      - /test/**
      - /localService/**
  customTasks:
    - name: deploy-to-abap
      afterTask: generateCachebusterInfo
      configuration:
        target:
          url: http://sap.example
        app:
          package: $TMP
",
    "state": "modified",
  },
  "../fiori-tools/ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my-test-app
type: application
resources:
  configuration:
    propertiesFileSourceEncoding: UTF-8
server:
  customMiddleware:
    - name: fiori-tools-preview
      afterMiddleware: compression
      configuration:
        adp:
          target:
            url: http://sap.example
          ignoreCertErrors: false
    - name: fiori-tools-proxy
      afterMiddleware: fiori-tools-preview
      configuration:
        ignoreCertErrors: false
        ui5:
          path:
            - /resources
            - /test-resources
        backend:
          - url: http://sap.example
            path: /sap
",
    "state": "modified",
  },
  "../fiori-tools/webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for my.test.app

#Texts for manifest.json

#XTIT: Application name
my.test.app_sap.app.title=Adaptation of the.original.app
",
    "state": "modified",
  },
  "../fiori-tools/webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"fileType\\": \\"appdescr_variant\\",
  \\"reference\\": \\"the.original.app\\",
  \\"id\\": \\"my.test.app\\",
  \\"namespace\\": \\"apps/the.original.app/appVariants/my.test.app/\\",
  \\"version\\": \\"0.1.0\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_ui5_addNewModelEnhanceWith\\",
      \\"content\\": {
        \\"modelId\\": \\"i18n\\",
        \\"bundleUrl\\": \\"i18n/i18n.properties\\",
        \\"supportedLocales\\": [
          \\"\\"
        ],
        \\"fallbackLocale\\": \\"\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
  "../s4hana/.gitignore": Object {
    "contents": "node_modules/
dist/
.tmp
.env
*.zip",
    "state": "modified",
  },
  "../s4hana/package.json": Object {
    "contents": "{
    \\"name\\": \\"my-test-app\\",
    \\"version\\": \\"0.1.0\\",
    \\"main\\": \\"index.js\\", 
    \\"private\\": true,
    \\"description\\": \\"Adaptation of the.original.app\\",
    \\"keywords\\": [
        \\"ui5\\",
        \\"sapui5\\",
        \\"adaptation-project\\"
    ],
	\\"repository\\": {
		\\"type\\": \\"git\\",
		\\"build\\": \\"ui5.js build --verbose --include-task generateCachebusterInfo\\"
	},
	\\"author\\": \\"\\",
	\\"license\\": \\"ISC\\",
	\\"ui5\\": {
		\\"dependencies\\": [\\"@sap/ui5-builder-webide-extension\\", \\"@ui5/task-adaptation\\"]
	},
    \\"devDependencies\\": {
        \\"@sap/ux-ui5-tooling\\": \\"^1.11.4\\",
        \\"@sap/ui5-builder-webide-extension\\": \\"1.0.x\\",
        \\"@sapui5/ts-types\\": \\"^1.85.1\\",
        \\"@types/js-yaml\\": \\"^4.0.5\\",
        \\"@types/semver\\": \\"^7.3.13\\",
        \\"@ui5/task-adaptation\\": \\"^1.0.10\\",
        \\"bestzip\\": \\"2.1.4\\",
        \\"rimraf\\": \\"3.0.2\\",
        \\"@ui5/cli\\": \\"^3.6.0\\"
    },
    \\"dependencies\\": {
        \\"dotenv\\": \\"^16.0.3\\",
        \\"inquirer\\": \\"^8.2.5\\",
        \\"json-diff\\": \\"^1.0.6\\",
        \\"prompt-sync\\": \\"^4.2.0\\",
        \\"prompts\\": \\"^2.4.2\\",
        \\"xml-js\\": \\"^1.6.11\\"
    },
    \\"scripts\\": {
        \\"build\\": \\"ui5 build --include-task=generateCachebusterInfo && npm run zip\\",
        \\"prebuild\\": \\"npm run clean\\",
        \\"zip\\": \\"cd dist && npx bestzip ../my-test-app.zip *\\",
        \\"clean\\": \\"npx rimraf my-test-app.zip dist\\",
        \\"build-ui5\\": \\"npm explore @ui5/task-adaptation && npm run rollup\\",
        \\"deploy\\": \\"npm run build && fiori deploy --config ui5-deploy.yaml && rimraf archive.zip\\",
        \\"undeploy\\": \\"fiori undeploy --config ui5-deploy.yaml\\",
        \\"deploy-test\\": \\"npm run build && fiori deploy --config ui5-deploy.yaml --testMode true\\"
    }
}
",
    "state": "modified",
  },
  "../s4hana/pom.xml": Object {
    "contents": "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<project xmlns=\\"http://maven.apache.org/POM/4.0.0\\" xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\"
	xsi:schemaLocation=\\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\\">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.sap.fiori</groupId>
	<artifactId>my.test.app</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>\${project.artifactId}</name>
	<description>Adaptation Project</description>

	<parent>
		<groupId>com.sap.fiori</groupId>
		<artifactId>fnf-flex-parent-pom</artifactId>
		<version>1.24.0</version>
	</parent>
	<properties>
		<!-- Possibly properties for Cloud deployment -->
	</properties>

	<profiles>
		<profile>
			<id>test.build</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/test/qunit</directory>
						<targetPath>META-INF/test-resources</targetPath>
					</resource>
				</resources>
			</build>
		</profile>
	</profiles>

	<!-- 
        YOU NEED TO SPECIFY the translationDeveloper and the translationCollection 
        For Fiori On-Premise apps: Use FIORI_ as the prefix followed by your
        app name. Please use a meaningful short version of the app name and 
        not the GIT project name.The string must not exceed 32 character
    -->
	<!--<build>
		<plugins>
			<plugin>
				<groupId>com.sap.ldi</groupId>
				<artifactId>translation-plugin</artifactId>
				<configuration>
					<translationDomain>BC</translationDomain>
					<translationDeveloper>DXXXXXX</translationDeveloper>
					<translationCollection>FIORI_XXXAPPNAMEXXX</translationCollection>
				</configuration>
			</plugin>
		</plugins>
	</build>-->
	<dependencies>
		<!-- Possibly dependency for qunit test <dependency> <groupId>com.sap.fiori</groupId> 
			<artifactId>nw.epm.refapps.lib.reuse</artifactId> <version>1.9.23-SNAPSHOT</version> 
			</dependency> -->
	</dependencies>
</project>",
    "state": "modified",
  },
  "../s4hana/ui5-deploy.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my-test-app
type: application
builder:
  resources:
    excludes:
      - /test/**
      - /localService/**
  customTasks:
    - name: deploy-to-abap
      afterTask: generateCachebusterInfo
      configuration:
        target:
          url: http://sap.example
        app:
          package: $TMP
",
    "state": "modified",
  },
  "../s4hana/ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my-test-app
type: application
resources:
  configuration:
    propertiesFileSourceEncoding: UTF-8
server:
  customMiddleware:
    - name: fiori-tools-preview
      afterMiddleware: compression
      configuration:
        adp:
          target:
            url: http://sap.example
          ignoreCertErrors: false
    - name: fiori-tools-proxy
      afterMiddleware: fiori-tools-preview
      configuration:
        ignoreCertErrors: false
        ui5:
          path:
            - /resources
            - /test-resources
        backend:
          - url: http://sap.example
            path: /sap
customConfiguration:
  adp:
    safeMode: false
framework:
  name: SAPUI5
  version: 1.122.1
  libraries:
    - name: themelib_sap_fiori_3
builder:
  customTasks:
    - name: app-variant-bundler-build
      beforeTask: escapeNonAsciiCharacters
      configuration:
        type: abap
        appName: bsp.test.app
        languages:
          - sap: testId
            i18n: testKey
        credentials:
          username: env:ABAP_USERNAME
          password: env:ABAP_PASSWORD
",
    "state": "modified",
  },
  "../s4hana/webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for my.test.app

#Texts for manifest.json

#XTIT: Application name
my.test.app_sap.app.title=Adaptation of the.original.app

# FLP Configuration

my.test.app_sap.app.crossNavigation.inbounds..title=
",
    "state": "modified",
  },
  "../s4hana/webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"fileType\\": \\"appdescr_variant\\",
  \\"reference\\": \\"the.original.app\\",
  \\"id\\": \\"my.test.app\\",
  \\"namespace\\": \\"apps/the.original.app/appVariants/my.test.app/\\",
  \\"version\\": \\"0.1.0\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_ui5_addNewModelEnhanceWith\\",
      \\"content\\": {
        \\"modelId\\": \\"i18n\\",
        \\"bundleUrl\\": \\"i18n/i18n.properties\\",
        \\"supportedLocales\\": [
          \\"\\"
        ],
        \\"fallbackLocale\\": \\"\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
}
`;
exports[`ADP writer migrate migrate minimal config 1`] = `
Object {
  "../deploy/.gitignore": Object {
    "contents": "node_modules/
dist/
.tmp
.env
*.zip",
    "state": "modified",
  },
  "../deploy/package.json": Object {
    "contents": "{
    \\"name\\": \\"my-test-app\\",
    \\"version\\": \\"0.1.0\\",
    \\"private\\": true,
    \\"description\\": \\"Adaptation of the.original.app\\",
    \\"keywords\\": [
        \\"ui5\\",
        \\"sapui5\\",
        \\"adaptation-project\\"
    ],
    \\"dependencies\\": {},
    \\"devDependencies\\": {
        \\"@sap-ux/backend-proxy-middleware\\": \\"^0.7.5\\",
        \\"@sap-ux/preview-middleware\\": \\"^0.11.1\\",
        \\"@sap-ux/ui5-proxy-middleware\\": \\"^1.3.0\\",
        \\"@sap-ux/deploy-tooling\\": \\"^0.11.7\\",
        \\"@ui5/cli\\": \\"^3.9.1\\"
    },
    \\"scripts\\": {
        \\"build\\": \\"ui5 build --exclude-task generateFlexChangesBundle generateComponentPreload --clean-dest\\",
        \\"start\\": \\"ui5 serve --open /test/flp.html#app-preview\\",
        \\"start-editor\\": \\"ui5 serve --open /test/adaptation-editor.html\\",
        \\"deploy\\": \\"ui5 build --config ui5-deploy.yaml --exclude-task abap-deploy-task generateFlexChangesBundle generateComponentPreload --clean-dest && deploy --config ui5-deploy.yaml\\",
        \\"undeploy\\": \\"undeploy --config ui5-deploy.yaml --lrep \\\\\\"apps/the.original.app/appVariants/my.test.app/\\\\\\"\\"
    }
}
",
    "state": "modified",
  },
  "../deploy/ui5-deploy.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my.test.app
type: application
builder:
  resources:
    excludes:
      - /test/**
      - /localService/**
  customTasks:
    - name: abap-deploy-task
      afterTask: generateCachebusterInfo
      configuration:
        target:
          url: http://sap.example
        app:
          package: $TMP
",
    "state": "modified",
  },
  "../deploy/ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my.test.app
type: application
server:
  customMiddleware:
    - name: preview-middleware
      afterMiddleware: compression
      configuration:
        adp:
          target:
            url: http://sap.example
          ignoreCertErrors: false
        rta:
          editors:
            - path: /test/adaptation-editor.html
              developerMode: true
    - name: ui5-proxy-middleware
      afterMiddleware: preview-middleware
    - name: backend-proxy-middleware
      afterMiddleware: preview-middleware
      configuration:
        backend:
          url: http://sap.example
          path: /sap
        options:
          secure: true
",
    "state": "modified",
  },
  "../deploy/webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for my.test.app

#Texts for manifest.json

#XTIT: Application name
my.test.app_sap.app.title=Adaptation of the.original.app",
    "state": "modified",
  },
  "../deploy/webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"fileType\\": \\"appdescr_variant\\",
  \\"reference\\": \\"the.original.app\\",
  \\"id\\": \\"my.test.app\\",
  \\"namespace\\": \\"apps/the.original.app/appVariants/my.test.app/\\",
  \\"version\\": \\"0.1.0\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_ui5_addNewModelEnhanceWith\\",
      \\"content\\": {
        \\"modelId\\": \\"i18n\\",
        \\"bundleUrl\\": \\"i18n/i18n.properties\\",
        \\"supportedLocales\\": [
          \\"\\"
        ],
        \\"fallbackLocale\\": \\"\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
  "../fiori-tools/.gitignore": Object {
    "contents": "node_modules/
dist/
.tmp
.env
*.zip",
    "state": "modified",
  },
  "../fiori-tools/package.json": Object {
    "contents": "{
    \\"name\\": \\"my-test-app\\",
    \\"version\\": \\"0.1.0\\",
    \\"private\\": true,
    \\"description\\": \\"Adaptation of the.original.app\\",
    \\"keywords\\": [
        \\"ui5\\",
        \\"sapui5\\",
        \\"adaptation-project\\"
    ],
    \\"dependencies\\": {},
    \\"devDependencies\\": {
        \\"@sap/ux-ui5-tooling\\": \\"^1.11.4\\",
        \\"@ui5/cli\\": \\"^3.9.1\\"
    },
    \\"scripts\\": {
        \\"build\\": \\"ui5 build --exclude-task generateFlexChangesBundle generateComponentPreload --clean-dest\\",
        \\"start\\": \\"fiori run --open /test/flp.html#app-preview\\",
        \\"start-editor\\": \\"fiori run --open /test/adaptation-editor.html\\",
        \\"deploy\\": \\"ui5 build --config ui5-deploy.yaml --exclude-task deploy-to-abap generateFlexChangesBundle generateComponentPreload --clean-dest && fiori deploy --config ui5-deploy.yaml\\",
        \\"undeploy\\": \\"fiori undeploy --config ui5-deploy.yaml --lrep \\\\\\"apps/the.original.app/appVariants/my.test.app/\\\\\\"\\"
    }
}
",
    "state": "modified",
  },
  "../fiori-tools/ui5-deploy.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my.test.app
type: application
builder:
  resources:
    excludes:
      - /test/**
      - /localService/**
  customTasks:
    - name: deploy-to-abap
      afterTask: generateCachebusterInfo
      configuration:
        target:
          url: http://sap.example
        app:
          package: $TMP
",
    "state": "modified",
  },
  "../fiori-tools/ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my.test.app
type: application
server:
  customMiddleware:
    - name: fiori-tools-preview
      afterMiddleware: compression
      configuration:
        adp:
          target:
            url: http://sap.example
          ignoreCertErrors: false
    - name: fiori-tools-proxy
      afterMiddleware: fiori-tools-preview
      configuration:
        ignoreCertErrors: false
        ui5:
          path:
            - /resources
            - /test-resources
          url: https://ui5.sap.com
        backend:
          - url: http://sap.example
            path: /sap
",
    "state": "modified",
  },
  "../fiori-tools/webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for my.test.app

#Texts for manifest.json

#XTIT: Application name
my.test.app_sap.app.title=Adaptation of the.original.app",
    "state": "modified",
  },
  "../fiori-tools/webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"fileType\\": \\"appdescr_variant\\",
  \\"reference\\": \\"the.original.app\\",
  \\"id\\": \\"my.test.app\\",
  \\"namespace\\": \\"apps/the.original.app/appVariants/my.test.app/\\",
  \\"version\\": \\"0.1.0\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_ui5_addNewModelEnhanceWith\\",
      \\"content\\": {
        \\"modelId\\": \\"i18n\\",
        \\"bundleUrl\\": \\"i18n/i18n.properties\\",
        \\"supportedLocales\\": [
          \\"\\"
        ],
        \\"fallbackLocale\\": \\"\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
  "../minimal/.gitignore": Object {
    "contents": "node_modules/
dist/
.tmp
.env
*.zip",
    "state": "modified",
  },
  "../minimal/package.json": Object {
    "contents": "{
    \\"name\\": \\"my-test-app\\",
    \\"version\\": \\"0.1.0\\",
    \\"private\\": true,
    \\"description\\": \\"Adaptation of the.original.app\\",
    \\"keywords\\": [
        \\"ui5\\",
        \\"sapui5\\",
        \\"adaptation-project\\"
    ],
    \\"dependencies\\": {},
    \\"devDependencies\\": {
        \\"@sap-ux/backend-proxy-middleware\\": \\"^0.7.5\\",
        \\"@sap-ux/preview-middleware\\": \\"^0.11.1\\",
        \\"@sap-ux/ui5-proxy-middleware\\": \\"^1.3.0\\",
        \\"@sap-ux/deploy-tooling\\": \\"^0.11.7\\",
        \\"@ui5/cli\\": \\"^3.9.1\\"
    },
    \\"scripts\\": {
        \\"build\\": \\"ui5 build --exclude-task generateFlexChangesBundle generateComponentPreload --clean-dest\\",
        \\"start\\": \\"ui5 serve --open /test/flp.html#app-preview\\",
        \\"start-editor\\": \\"ui5 serve --open /test/adaptation-editor.html\\"
    }
}
",
    "state": "modified",
  },
  "../minimal/ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my.test.app
type: application
server:
  customMiddleware:
    - name: preview-middleware
      afterMiddleware: compression
      configuration:
        adp:
          target:
            url: http://sap.example
          ignoreCertErrors: false
        rta:
          editors:
            - path: /test/adaptation-editor.html
              developerMode: true
    - name: ui5-proxy-middleware
      afterMiddleware: preview-middleware
    - name: backend-proxy-middleware
      afterMiddleware: preview-middleware
      configuration:
        backend:
          url: http://sap.example
          path: /sap
        options:
          secure: true
",
    "state": "modified",
  },
  "../minimal/webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for my.test.app

#Texts for manifest.json

#XTIT: Application name
my.test.app_sap.app.title=Adaptation of the.original.app",
    "state": "modified",
  },
  "../minimal/webapp/manifest.appdescr_variant": Object {
    "contents": "{
  \\"fileName\\": \\"manifest\\",
  \\"layer\\": \\"CUSTOMER_BASE\\",
  \\"fileType\\": \\"appdescr_variant\\",
  \\"reference\\": \\"the.original.app\\",
  \\"id\\": \\"my.test.app\\",
  \\"namespace\\": \\"apps/the.original.app/appVariants/my.test.app/\\",
  \\"version\\": \\"0.1.0\\",
  \\"content\\": [
    {
      \\"changeType\\": \\"appdescr_app_setTitle\\",
      \\"content\\": {},
      \\"texts\\": {
        \\"i18n\\": \\"i18n/i18n.properties\\"
      }
    },
    {
      \\"changeType\\": \\"appdescr_ui5_addNewModelEnhanceWith\\",
      \\"content\\": {
        \\"modelId\\": \\"i18n\\",
        \\"bundleUrl\\": \\"i18n/i18n.properties\\",
        \\"supportedLocales\\": [
          \\"\\"
        ],
        \\"fallbackLocale\\": \\"\\"
      }
    }
  ]
}
",
    "state": "modified",
  },
  ".che/project.json": Object {
    "contents": null,
    "state": "deleted",
  },
  ".gitignore": Object {
    "contents": "node_modules/
dist/
.tmp
.env
*.zip",
    "state": "modified",
  },
  "neo-app.json": Object {
    "contents": null,
    "state": "deleted",
  },
  "package.json": Object {
    "contents": "{
    \\"name\\": \\"my-test-app\\",
    \\"version\\": \\"0.1.0\\",
    \\"private\\": true,
    \\"description\\": \\"Adaptation of the.original.app\\",
    \\"keywords\\": [
        \\"ui5\\",
        \\"sapui5\\",
        \\"adaptation-project\\"
    ],
    \\"dependencies\\": {},
    \\"devDependencies\\": {
        \\"@sap-ux/backend-proxy-middleware\\": \\"^0.7.5\\",
        \\"@sap-ux/preview-middleware\\": \\"^0.11.1\\",
        \\"@sap-ux/ui5-proxy-middleware\\": \\"^1.3.0\\",
        \\"@sap-ux/deploy-tooling\\": \\"^0.11.7\\",
        \\"@ui5/cli\\": \\"^3.9.1\\"
    },
    \\"scripts\\": {
        \\"build\\": \\"ui5 build --exclude-task generateFlexChangesBundle generateComponentPreload --clean-dest\\",
        \\"start\\": \\"ui5 serve --open /test/flp.html#app-preview\\",
        \\"start-editor\\": \\"ui5 serve --open /test/adaptation-editor.html\\"
    }
}
",
    "state": "modified",
  },
  "ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"3.0\\"
metadata:
  name: my.test.app
type: application
server:
  customMiddleware:
    - name: preview-middleware
      afterMiddleware: compression
      configuration:
        adp:
          target:
            url: http://sap.example
          ignoreCertErrors: false
        rta:
          editors:
            - path: /test/adaptation-editor.html
              developerMode: true
    - name: ui5-proxy-middleware
      afterMiddleware: preview-middleware
    - name: backend-proxy-middleware
      afterMiddleware: preview-middleware
      configuration:
        backend:
          url: http://sap.example
          path: /sap
        options:
          secure: true
",
    "state": "modified",
  },
  "webapp/i18n/ListReport/SEPMRA_C_PD_Product/i18n.properties": Object {
    "contents": "#Make sure you provide a unique prefix to the newly added keys in this file, to avoid overriding of SAP Fiori application keys.

# This is the resource bundle for migrate test
#__ldi.translation.uuid=6b635390-a732-6e83-ca32-2430183951cf",
    "state": "modified",
  },
  "webapp/i18n/ObjectPage/SEPMRA_C_PD_Product/i18n.properties": Object {
    "contents": "#Make sure you provide a unique prefix to the newly added keys in this file, to avoid overriding of SAP Fiori application keys.

# This is the resource bundle for migrate test
#__ldi.translation.uuid=5646828c-ce8d-edb5-e36c-c7317be581e2",
    "state": "modified",
  },
  "webapp/i18n/i18n.properties": Object {
    "contents": "#Make sure you provide a unique prefix to the newly added keys in this file, to avoid overriding of SAP Fiori application keys.

# This is the resource bundle for migrate test
#__ldi.translation.uuid=0ebc351c-414c-dada-d429-c852998b8c80

#XTIT: Application name
migrate.test_sap.app.title=migrate test",
    "state": "modified",
  },
  "webapp/manifest.appdescr_variant": Object {
    "contents": "{
	\\"fileName\\": \\"manifest\\",
	\\"layer\\": \\"VENDOR\\",
	\\"fileType\\": \\"appdescr_variant\\",
	\\"reference\\": \\"sap.ui.demoapps.rta.fiorielements\\",
	\\"id\\": \\"migrate.test\\",
	\\"namespace\\": \\"apps/sap.ui.demoapps.rta.fiorielements/appVariants/migrate.test/\\",
	\\"version\\": \\"\${project.version}\\",
	\\"content\\": [
		{
			\\"changeType\\": \\"appdescr_app_setTitle\\",
			\\"content\\": {},
			\\"texts\\": {
				\\"i18n\\": \\"i18n/i18n.properties\\"
			}
		},
		{
			\\"changeType\\": \\"appdescr_ui5_addNewModelEnhanceWith\\",
			\\"content\\": {
				\\"modelId\\": \\"i18n|sap.suite.ui.generic.template.ListReport|SEPMRA_C_PD_Product\\"
			},
			\\"texts\\": {
				\\"i18n\\": \\"i18n/ListReport/SEPMRA_C_PD_Product/i18n.properties\\"
			}
		},
		{
			\\"changeType\\": \\"appdescr_ui5_addNewModelEnhanceWith\\",
			\\"content\\": {
				\\"modelId\\": \\"i18n|sap.suite.ui.generic.template.ObjectPage|SEPMRA_C_PD_Product\\"
			},
			\\"texts\\": {
				\\"i18n\\": \\"i18n/ObjectPage/SEPMRA_C_PD_Product/i18n.properties\\"
			}
		},
		{
			\\"changeType\\": \\"appdescr_fiori_setRegistrationIds\\",
			\\"content\\": {
				\\"registrationIds\\": [
					\\"F1647\\"
				]
			}
		},
		{
			\\"changeType\\": \\"appdescr_app_setAch\\",
			\\"content\\": {
				\\"ach\\": \\"CA-UI5-FL-RTA\\"
			}
		}
	]
}",
    "state": "modified",
  },
  "webapp/test/Adaptation_index.html": Object {
    "contents": "<!DOCTYPE HTML>

<html>

	<!-- IMPORTANT
			This HTML file is meant for testing the application/component standalone, outside the Unified Shell.
			Some integration functionality, personalization etc. will not be available when running standalone.
	-->

<head>

<meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\" />
<meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\" />
<meta charset=\\"UTF-8\\">

<script id=\\"sap-ui-script-placeholder\\"></script>

<!-- this is loaded to enable ushell services -->
<script src=\\"../../test-resources/sap/ushell/bootstrap/sandbox.js\\" id=\\"sap-ushell-bootstrap\\"></script>
<script id=\\"sap-ui-bootstrap\\"
		src=\\"./../resources/sap-ui-core.js\\"
		data-sap-ui-libs=\\"sap.m, sap.ushell, sap.me, sap.ui.table, sap.ui.layout, sap.ui.rta, sap.ui.dt, sap.viz, sap.ui.fl, sap.ui.comp, sap.suite.ui.generic.template\\"
		data-sap-ui-theme=\\"sap_belize\\"
		data-sap-ui-xx-bindingSyntax=\\"complex\\"
		data-sap-ui-compatVersion=\\"edge\\">
</script>
<!-- Change loading will be injected -->
<script>
    document.title = \\"migrate test\\";
	//Application launch configuration
	sap.ui.getCore().attachInitEvent(function() {
			var sVariantID = \\"migrate.test\\", sLayer = \\"VENDOR\\", oComponent, oComponentConfig, sComponentName = \\"sap.ui.demoapps.rta.fiorielements\\", oMergedManifest = window['manifest'];
		    if(window['manifest']){
				//if MergedDescriptor is available from app previre service
				console.log(\\"App variant running on merged manifest from backend.\\");
				appVariantPreview.mergedDescriptorAppPreview(oMergedManifest, sVariantID, sLayer).then(function(oShell){
					oShell.placeAt(\\"content\\");
				});
			}else{
				//fallback mechanism
				console.log(\\"Merged descriptor could not be fetched from backend, falling back to non-merged execution\\");
				appVariantPreview.fallbackAppVariantPreview(sComponentName, sVariantID, sLayer, window[\\"isInternal\\"]).then(function(oShell){
					oShell.placeAt(\\"content\\");
				});
			}
		});
</script>
</head>

<!-- UI Content -->
<body class=\\"sapUiBody\\" id=\\"content\\" role=\\"application\\">
</body>

</html>",
    "state": "modified",
  },
  "webapp/test/flpSandbox.html": Object {
    "contents": "<!DOCTYPE HTML>
<html>
<head>
	<meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\" />
	<meta http-equiv=\\"Content-Type\\" content=\\"text/html;charset=UTF-8\\"/>
	<meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\" />
	<title>migrate test</title>

	<!-- Bootstrap the unified shell in sandbox mode for standalone usage.

         The renderer is specified in the global Unified Shell configuration object \\"sap-ushell-config\\".

         The fiori2 renderer will render the shell header allowing, for instance,
         testing of additional application setting buttons.

         The navigation target resolution service is configured in a way that the empty URL hash is
         resolved to our own application.

         This example uses relative path references for the SAPUI5 resources and test-resources;
         it might be necessary to adapt them depending on the target runtime platform.
         The sandbox platform is restricted to development or demo use cases and must NOT be used
         for productive scenarios.
    -->
	<script type=\\"text/javascript\\">
		window[\\"sap-ushell-config\\"] = {
			defaultRenderer : \\"fiori2\\",
			renderers: {
				fiori2: {
					componentData: {
						config: {
							search: \\"hidden\\"
						}
					}
				}
			},
			applications: {
				\\"adaptationproject-display\\": {
					title: \\"migrate test\\",
					additionalInformation: \\"SAPUI5.Component=sap.ui.demoapps.rta.fiorielements\\",
					applicationType: \\"URL\\",
					url: \\"/webapp/parent\\"
				}
			}
		};
	</script>

	<script src=\\"../../test-resources/sap/ushell/bootstrap/sandbox.js\\" id=\\"sap-ushell-bootstrap\\"></script>

	<!-- Bootstrap the UI5 core library -->
	<script id=\\"sap-ui-bootstrap\\"
			src=\\"../../resources/sap-ui-core.js\\"
			data-sap-ui-libs=\\"sap.m, sap.ushell, sap.collaboration\\"
			data-sap-ui-theme=\\"sap_belize\\"
			data-sap-ui-compatVersion=\\"edge\\"
			data-sap-ui-resourceroots='{\\"sap.ui.demoapps.rta.fiorielements\\": \\"/webapp/parent\\"}'
			data-sap-ui-frameOptions='allow'> 	// NON-SECURE setting for testing environment
	</script>

	<script type=\\"text/javascript\\">
		sap.ui.getCore().attachInit(function() {
			// initialize the ushell sandbox component
			sap.ushell.Container.createRenderer().placeAt(\\"content\\");
		});
	</script>

</head>

<!-- UI Content -->
<body class=\\"sapUiBody\\" id=\\"content\\">
</body>
</html>",
    "state": "modified",
  },
}
`;
