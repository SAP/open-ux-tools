// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Fiori freestyle templates: allTemplate Generate files for template: basic 1`] = `
Object {
  ".gitignore": Object {
    "contents": "node_modules/
dist/
.scp/
.env
Makefile*.mta
mta_archives
mta-*
resources
archive.zip
.*_mta_build_tmp",
    "state": "modified",
  },
  "package.json": Object {
    "contents": "{
  \\"name\\": \\"test.me\\",
  \\"version\\": \\"0.0.1\\",
  \\"private\\": true,
  \\"description\\": \\"Test App Description\\",
  \\"keywords\\": [
    \\"ui5\\",
    \\"openui5\\",
    \\"sapui5\\"
  ],
  \\"main\\": \\"webapp/index.html\\",
  \\"dependencies\\": {},
  \\"devDependencies\\": {
    \\"@ui5/cli\\": \\"^2.14.1\\",
    \\"@sap/ux-ui5-tooling\\": \\"1\\",
    \\"@sap-ux/ui5-middleware-fe-mockserver\\": \\"2\\"
  },
  \\"scripts\\": {
    \\"start\\": \\"fiori run --open \\\\\\"test/flpSandbox.html?sap-ui-xx-viewCache=false#testme-app\\\\\\"\\",
    \\"start-local\\": \\"fiori run --config ./ui5-local.yaml --open \\\\\\"test/flpSandbox.html?sap-ui-xx-viewCache=false#testme-app\\\\\\"\\",
    \\"build\\": \\"ui5 build --config=ui5.yaml --clean-dest --dest dist\\",
    \\"deploy\\": \\"fiori verify\\",
    \\"deploy-config\\": \\"fiori add deploy-config\\",
    \\"start-noflp\\": \\"fiori run --open \\\\\\"index.html?sap-ui-xx-viewCache=false\\\\\\"\\",
    \\"start-mock\\": \\"fiori run --config ./ui5-mock.yaml --open \\\\\\"test/flpSandbox.html?sap-ui-xx-viewCache=false#testme-app\\\\\\"\\"
  },
  \\"ui5\\": {
    \\"dependencies\\": [
      \\"@sap/ux-ui5-tooling\\",
      \\"@sap-ux/ui5-middleware-fe-mockserver\\"
    ]
  }
}
",
    "state": "modified",
  },
  "ui5-local.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.5\\"
metadata:
  name: test.me
type: application
framework:
  name: SAPUI5
  version: 1.90.0
  libraries:
    - name: sap.m
    - name: sap.ui.core
    - name: sap.ushell
    - name: themelib_sap_fiori_3
server:
  customMiddleware:
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        backend:
          - path: /V2
            url: https://services.odata.org
    - name: sap-fe-mockserver
      beforeMiddleware: csp
      configuration:
        mountPath: /
        services:
          - urlPath: /V2/Northwind/Northwind.svc
            metadataPath: ./webapp/localService/metadata.xml
            mockdataPath: ./webapp/localService/data
            generateMockData: true
        annotations: []
",
    "state": "modified",
  },
  "ui5-mock.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.5\\"
metadata:
  name: test.me
type: application
server:
  customMiddleware:
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        ui5:
          path:
            - /resources
            - /test-resources
          url: https://ui5.sap.com
        backend:
          - path: /V2
            url: https://services.odata.org
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
    - name: sap-fe-mockserver
      beforeMiddleware: csp
      configuration:
        mountPath: /
        services:
          - urlPath: /V2/Northwind/Northwind.svc
            metadataPath: ./webapp/localService/metadata.xml
            mockdataPath: ./webapp/localService/data
            generateMockData: true
        annotations: []
",
    "state": "modified",
  },
  "ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.5\\"
metadata:
  name: test.me
type: application
server:
  customMiddleware:
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        ui5:
          path:
            - /resources
            - /test-resources
          url: https://ui5.sap.com
        backend:
          - path: /V2
            url: https://services.odata.org
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
",
    "state": "modified",
  },
  "webapp/Component.js": Object {
    "contents": "/**
 * eslint-disable @sap/ui5-jsdocs/no-jsdoc
 */

sap.ui.define([
        \\"sap/ui/core/UIComponent\\",
        \\"sap/ui/Device\\",
        \\"test/me/model/models\\"
    ],
    function (UIComponent, Device, models) {
        \\"use strict\\";

        return UIComponent.extend(\\"test.me.Component\\", {
            metadata: {
                manifest: \\"json\\"
            },

            /**
             * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.
             * @public
             * @override
             */
            init: function () {
                // call the base component's init function
                UIComponent.prototype.init.apply(this, arguments);

                // enable routing
                this.getRouter().initialize();

                // set the device model
                this.setModel(models.createDeviceModel(), \\"device\\");
            }
        });
    }
);",
    "state": "modified",
  },
  "webapp/controller/App.controller.js": Object {
    "contents": "sap.ui.define(
    [
        \\"sap/ui/core/mvc/Controller\\"
    ],
    function(BaseController) {
      \\"use strict\\";
  
      return BaseController.extend(\\"test.me.controller.App\\", {
        onInit() {
        }
      });
    }
  );
  ",
    "state": "modified",
  },
  "webapp/controller/View1.controller.js": Object {
    "contents": "sap.ui.define([
    \\"sap/ui/core/mvc/Controller\\"
],
    /**
     * @param {typeof sap.ui.core.mvc.Controller} Controller
     */
    function (Controller) {
        \\"use strict\\";

        return Controller.extend(\\"test.me.controller.View1\\", {
            onInit: function () {

            }
        });
    });
",
    "state": "modified",
  },
  "webapp/css/style.css": Object {
    "contents": "/* Enter your custom styles here */",
    "state": "modified",
  },
  "webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for test.me

#Texts for manifest.json

#XTIT: Application name
appTitle=My Test App

#YDES: Application description
appDescription=Test App Description
#XTIT: Main view title
title=My Test App",
    "state": "modified",
  },
  "webapp/index.html": Object {
    "contents": "<!DOCTYPE html>
<html lang=\\"en\\">
<head>
    <meta charset=\\"UTF-8\\">
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">
    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
    <title>My Test App</title>
    <style>
        html, body, body > div, #container, #container-uiarea {
            height: 100%;
        }
    </style>
    <script
        id=\\"sap-ui-bootstrap\\"
        src=\\"resources/sap-ui-core.js\\"
        data-sap-ui-theme=\\"sap_fiori_3\\"
        data-sap-ui-resourceroots='{
            \\"test.me\\": \\"./\\"
        }'
        data-sap-ui-compatVersion=\\"edge\\"
        data-sap-ui-async=\\"true\\"
        data-sap-ui-frameOptions=\\"trusted\\"
    ></script>
    <script id=\\"locate-reuse-libs\\" src=\\"./utils/locate-reuse-libs.js\\"
        data-sap-ui-manifest-uri=\\"./manifest.json\\"
        data-sap-ui-componentName=\\"test.me\\">
    </script> 
</head>
<body class=\\"sapUiBody sapUiSizeCompact\\" id=\\"content\\">
    <div
        data-sap-ui-component
        data-name=\\"test.me\\"
        data-id=\\"container\\"
        data-settings='{\\"id\\" : \\"test.me\\"}'
        data-handle-validation=\\"true\\"
    ></div>
</body>
</html>",
    "state": "modified",
  },
  "webapp/localService/metadata.xml": Object {
    "contents": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\" standalone=\\"yes\\"?>
<edmx:Edmx Version=\\"1.0\\" xmlns:edmx=\\"http://schemas.microsoft.com/ado/2007/06/edmx\\">
    <edmx:DataServices xmlns:m=\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\" m:DataServiceVersion=\\"1.0\\">
        <Schema Namespace=\\"NorthwindModel\\" xmlns:d=\\"http://schemas.microsoft.com/ado/2007/08/dataservices\\" xmlns:m=\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\" xmlns=\\"http://schemas.microsoft.com/ado/2008/09/edm\\">
            <EntityType Name=\\"Category\\">
                <Key>
                    <PropertyRef Name=\\"CategoryID\\" />
                </Key>
                <Property Name=\\"CategoryID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Description\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"Max\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Picture\\" Type=\\"Edm.Binary\\" Nullable=\\"true\\" MaxLength=\\"Max\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Products\\" Relationship=\\"NorthwindModel.FK_Products_Categories\\" FromRole=\\"Categories\\" ToRole=\\"Products\\" />
            </EntityType>
            <EntityType Name=\\"CustomerDemographic\\">
                <Key>
                    <PropertyRef Name=\\"CustomerTypeID\\" />
                </Key>
                <Property Name=\\"CustomerTypeID\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"CustomerDesc\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"Max\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Customers\\" Relationship=\\"NorthwindModel.CustomerCustomerDemo\\" FromRole=\\"CustomerDemographics\\" ToRole=\\"Customers\\" />
            </EntityType>
            <EntityType Name=\\"Customer\\">
                <Key>
                    <PropertyRef Name=\\"CustomerID\\" />
                </Key>
                <Property Name=\\"CustomerID\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"5\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactTitle\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Phone\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Fax\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Orders\\" Relationship=\\"NorthwindModel.FK_Orders_Customers\\" FromRole=\\"Customers\\" ToRole=\\"Orders\\" />
                <NavigationProperty Name=\\"CustomerDemographics\\" Relationship=\\"NorthwindModel.CustomerCustomerDemo\\" FromRole=\\"Customers\\" ToRole=\\"CustomerDemographics\\" />
            </EntityType>
            <EntityType Name=\\"Employee\\">
                <Key>
                    <PropertyRef Name=\\"EmployeeID\\" />
                </Key>
                <Property Name=\\"EmployeeID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"LastName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"FirstName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Title\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"TitleOfCourtesy\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"25\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"BirthDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"HireDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"HomePhone\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Extension\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"4\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Photo\\" Type=\\"Edm.Binary\\" Nullable=\\"true\\" MaxLength=\\"Max\\" FixedLength=\\"false\\" />
                <Property Name=\\"Notes\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"Max\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ReportsTo\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"PhotoPath\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"255\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Employees1\\" Relationship=\\"NorthwindModel.FK_Employees_Employees\\" FromRole=\\"Employees\\" ToRole=\\"Employees1\\" />
                <NavigationProperty Name=\\"Employee1\\" Relationship=\\"NorthwindModel.FK_Employees_Employees\\" FromRole=\\"Employees1\\" ToRole=\\"Employees\\" />
                <NavigationProperty Name=\\"Orders\\" Relationship=\\"NorthwindModel.FK_Orders_Employees\\" FromRole=\\"Employees\\" ToRole=\\"Orders\\" />
                <NavigationProperty Name=\\"Territories\\" Relationship=\\"NorthwindModel.EmployeeTerritories\\" FromRole=\\"Employees\\" ToRole=\\"Territories\\" />
            </EntityType>
            <EntityType Name=\\"Order_Detail\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"ProductID\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"false\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"Quantity\\" Type=\\"Edm.Int16\\" Nullable=\\"false\\" />
                <Property Name=\\"Discount\\" Type=\\"Edm.Single\\" Nullable=\\"false\\" />
                <NavigationProperty Name=\\"Order\\" Relationship=\\"NorthwindModel.FK_Order_Details_Orders\\" FromRole=\\"Order_Details\\" ToRole=\\"Orders\\" />
                <NavigationProperty Name=\\"Product\\" Relationship=\\"NorthwindModel.FK_Order_Details_Products\\" FromRole=\\"Order_Details\\" ToRole=\\"Products\\" />
            </EntityType>
            <EntityType Name=\\"Order\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"CustomerID\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"5\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"EmployeeID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"OrderDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"RequiredDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShipVia\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"Freight\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"ShipName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipAddress\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCity\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipRegion\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipPostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCountry\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Customer\\" Relationship=\\"NorthwindModel.FK_Orders_Customers\\" FromRole=\\"Orders\\" ToRole=\\"Customers\\" />
                <NavigationProperty Name=\\"Employee\\" Relationship=\\"NorthwindModel.FK_Orders_Employees\\" FromRole=\\"Orders\\" ToRole=\\"Employees\\" />
                <NavigationProperty Name=\\"Order_Details\\" Relationship=\\"NorthwindModel.FK_Order_Details_Orders\\" FromRole=\\"Orders\\" ToRole=\\"Order_Details\\" />
                <NavigationProperty Name=\\"Shipper\\" Relationship=\\"NorthwindModel.FK_Orders_Shippers\\" FromRole=\\"Orders\\" ToRole=\\"Shippers\\" />
            </EntityType>
            <EntityType Name=\\"Product\\">
                <Key>
                    <PropertyRef Name=\\"ProductID\\" />
                </Key>
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"SupplierID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"CategoryID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"QuantityPerUnit\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"UnitsInStock\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"UnitsOnOrder\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"ReorderLevel\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"Discontinued\\" Type=\\"Edm.Boolean\\" Nullable=\\"false\\" />
                <NavigationProperty Name=\\"Category\\" Relationship=\\"NorthwindModel.FK_Products_Categories\\" FromRole=\\"Products\\" ToRole=\\"Categories\\" />
                <NavigationProperty Name=\\"Order_Details\\" Relationship=\\"NorthwindModel.FK_Order_Details_Products\\" FromRole=\\"Products\\" ToRole=\\"Order_Details\\" />
                <NavigationProperty Name=\\"Supplier\\" Relationship=\\"NorthwindModel.FK_Products_Suppliers\\" FromRole=\\"Products\\" ToRole=\\"Suppliers\\" />
            </EntityType>
            <EntityType Name=\\"Region\\">
                <Key>
                    <PropertyRef Name=\\"RegionID\\" />
                </Key>
                <Property Name=\\"RegionID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"RegionDescription\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"50\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <NavigationProperty Name=\\"Territories\\" Relationship=\\"NorthwindModel.FK_Territories_Region\\" FromRole=\\"Region\\" ToRole=\\"Territories\\" />
            </EntityType>
            <EntityType Name=\\"Shipper\\">
                <Key>
                    <PropertyRef Name=\\"ShipperID\\" />
                </Key>
                <Property Name=\\"ShipperID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Phone\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Orders\\" Relationship=\\"NorthwindModel.FK_Orders_Shippers\\" FromRole=\\"Shippers\\" ToRole=\\"Orders\\" />
            </EntityType>
            <EntityType Name=\\"Supplier\\">
                <Key>
                    <PropertyRef Name=\\"SupplierID\\" />
                </Key>
                <Property Name=\\"SupplierID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactTitle\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Phone\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Fax\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"HomePage\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"Max\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Products\\" Relationship=\\"NorthwindModel.FK_Products_Suppliers\\" FromRole=\\"Suppliers\\" ToRole=\\"Products\\" />
            </EntityType>
            <EntityType Name=\\"Territory\\">
                <Key>
                    <PropertyRef Name=\\"TerritoryID\\" />
                </Key>
                <Property Name=\\"TerritoryID\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"TerritoryDescription\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"50\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"RegionID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <NavigationProperty Name=\\"Region\\" Relationship=\\"NorthwindModel.FK_Territories_Region\\" FromRole=\\"Territories\\" ToRole=\\"Region\\" />
                <NavigationProperty Name=\\"Employees\\" Relationship=\\"NorthwindModel.EmployeeTerritories\\" FromRole=\\"Territories\\" ToRole=\\"Employees\\" />
            </EntityType>
            <EntityType Name=\\"Alphabetical_list_of_product\\">
                <Key>
                    <PropertyRef Name=\\"ProductID\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                    <PropertyRef Name=\\"Discontinued\\" />
                    <PropertyRef Name=\\"CategoryName\\" />
                </Key>
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"SupplierID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"CategoryID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"QuantityPerUnit\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"UnitsInStock\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"UnitsOnOrder\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"ReorderLevel\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"Discontinued\\" Type=\\"Edm.Boolean\\" Nullable=\\"false\\" />
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Category_Sales_for_1997\\">
                <Key>
                    <PropertyRef Name=\\"CategoryName\\" />
                </Key>
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"CategorySales\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Current_Product_List\\">
                <Key>
                    <PropertyRef Name=\\"ProductID\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                </Key>
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Customer_and_Suppliers_by_City\\">
                <Key>
                    <PropertyRef Name=\\"CompanyName\\" />
                    <PropertyRef Name=\\"Relationship\\" />
                </Key>
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Relationship\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"9\\" Unicode=\\"false\\" FixedLength=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Invoice\\">
                <Key>
                    <PropertyRef Name=\\"CustomerName\\" />
                    <PropertyRef Name=\\"Salesperson\\" />
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"ShipperName\\" />
                    <PropertyRef Name=\\"ProductID\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                    <PropertyRef Name=\\"UnitPrice\\" />
                    <PropertyRef Name=\\"Quantity\\" />
                    <PropertyRef Name=\\"Discount\\" />
                </Key>
                <Property Name=\\"ShipName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipAddress\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCity\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipRegion\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipPostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCountry\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"CustomerID\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"5\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"CustomerName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Salesperson\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"31\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"OrderDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"RequiredDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShipperName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"false\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"Quantity\\" Type=\\"Edm.Int16\\" Nullable=\\"false\\" />
                <Property Name=\\"Discount\\" Type=\\"Edm.Single\\" Nullable=\\"false\\" />
                <Property Name=\\"ExtendedPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"Freight\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Order_Details_Extended\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"ProductID\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                    <PropertyRef Name=\\"UnitPrice\\" />
                    <PropertyRef Name=\\"Quantity\\" />
                    <PropertyRef Name=\\"Discount\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"false\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"Quantity\\" Type=\\"Edm.Int16\\" Nullable=\\"false\\" />
                <Property Name=\\"Discount\\" Type=\\"Edm.Single\\" Nullable=\\"false\\" />
                <Property Name=\\"ExtendedPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Order_Subtotal\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"Subtotal\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Orders_Qry\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"CompanyName\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"CustomerID\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"5\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"EmployeeID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"OrderDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"RequiredDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShipVia\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"Freight\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"ShipName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipAddress\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCity\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipRegion\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipPostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCountry\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Product_Sales_for_1997\\">
                <Key>
                    <PropertyRef Name=\\"CategoryName\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                </Key>
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductSales\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Products_Above_Average_Price\\">
                <Key>
                    <PropertyRef Name=\\"ProductName\\" />
                </Key>
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Products_by_Category\\">
                <Key>
                    <PropertyRef Name=\\"CategoryName\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                    <PropertyRef Name=\\"Discontinued\\" />
                </Key>
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"QuantityPerUnit\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitsInStock\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"Discontinued\\" Type=\\"Edm.Boolean\\" Nullable=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Sales_by_Category\\">
                <Key>
                    <PropertyRef Name=\\"CategoryID\\" />
                    <PropertyRef Name=\\"CategoryName\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                </Key>
                <Property Name=\\"CategoryID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductSales\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Sales_Totals_by_Amount\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"CompanyName\\" />
                </Key>
                <Property Name=\\"SaleAmount\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
            </EntityType>
            <EntityType Name=\\"Summary_of_Sales_by_Quarter\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                </Key>
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"Subtotal\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Summary_of_Sales_by_Year\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                </Key>
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"Subtotal\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <Association Name=\\"FK_Products_Categories\\">
                <End Role=\\"Categories\\" Type=\\"NorthwindModel.Category\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Products\\" Type=\\"NorthwindModel.Product\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Categories\\">
                        <PropertyRef Name=\\"CategoryID\\" />
                    </Principal>
                    <Dependent Role=\\"Products\\">
                        <PropertyRef Name=\\"CategoryID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Orders_Customers\\">
                <End Role=\\"Customers\\" Type=\\"NorthwindModel.Customer\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Orders\\" Type=\\"NorthwindModel.Order\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Customers\\">
                        <PropertyRef Name=\\"CustomerID\\" />
                    </Principal>
                    <Dependent Role=\\"Orders\\">
                        <PropertyRef Name=\\"CustomerID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Employees_Employees\\">
                <End Role=\\"Employees\\" Type=\\"NorthwindModel.Employee\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Employees1\\" Type=\\"NorthwindModel.Employee\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Employees\\">
                        <PropertyRef Name=\\"EmployeeID\\" />
                    </Principal>
                    <Dependent Role=\\"Employees1\\">
                        <PropertyRef Name=\\"ReportsTo\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Orders_Employees\\">
                <End Role=\\"Employees\\" Type=\\"NorthwindModel.Employee\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Orders\\" Type=\\"NorthwindModel.Order\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Employees\\">
                        <PropertyRef Name=\\"EmployeeID\\" />
                    </Principal>
                    <Dependent Role=\\"Orders\\">
                        <PropertyRef Name=\\"EmployeeID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Order_Details_Orders\\">
                <End Role=\\"Orders\\" Type=\\"NorthwindModel.Order\\" Multiplicity=\\"1\\" />
                <End Role=\\"Order_Details\\" Type=\\"NorthwindModel.Order_Detail\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Orders\\">
                        <PropertyRef Name=\\"OrderID\\" />
                    </Principal>
                    <Dependent Role=\\"Order_Details\\">
                        <PropertyRef Name=\\"OrderID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Order_Details_Products\\">
                <End Role=\\"Products\\" Type=\\"NorthwindModel.Product\\" Multiplicity=\\"1\\" />
                <End Role=\\"Order_Details\\" Type=\\"NorthwindModel.Order_Detail\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Products\\">
                        <PropertyRef Name=\\"ProductID\\" />
                    </Principal>
                    <Dependent Role=\\"Order_Details\\">
                        <PropertyRef Name=\\"ProductID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Orders_Shippers\\">
                <End Role=\\"Shippers\\" Type=\\"NorthwindModel.Shipper\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Orders\\" Type=\\"NorthwindModel.Order\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Shippers\\">
                        <PropertyRef Name=\\"ShipperID\\" />
                    </Principal>
                    <Dependent Role=\\"Orders\\">
                        <PropertyRef Name=\\"ShipVia\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Products_Suppliers\\">
                <End Role=\\"Suppliers\\" Type=\\"NorthwindModel.Supplier\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Products\\" Type=\\"NorthwindModel.Product\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Suppliers\\">
                        <PropertyRef Name=\\"SupplierID\\" />
                    </Principal>
                    <Dependent Role=\\"Products\\">
                        <PropertyRef Name=\\"SupplierID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Territories_Region\\">
                <End Role=\\"Region\\" Type=\\"NorthwindModel.Region\\" Multiplicity=\\"1\\" />
                <End Role=\\"Territories\\" Type=\\"NorthwindModel.Territory\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Region\\">
                        <PropertyRef Name=\\"RegionID\\" />
                    </Principal>
                    <Dependent Role=\\"Territories\\">
                        <PropertyRef Name=\\"RegionID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"CustomerCustomerDemo\\">
                <End Role=\\"CustomerDemographics\\" Type=\\"NorthwindModel.CustomerDemographic\\" Multiplicity=\\"*\\" />
                <End Role=\\"Customers\\" Type=\\"NorthwindModel.Customer\\" Multiplicity=\\"*\\" />
            </Association>
            <Association Name=\\"EmployeeTerritories\\">
                <End Role=\\"Employees\\" Type=\\"NorthwindModel.Employee\\" Multiplicity=\\"*\\" />
                <End Role=\\"Territories\\" Type=\\"NorthwindModel.Territory\\" Multiplicity=\\"*\\" />
            </Association>
        </Schema>
        <Schema Namespace=\\"ODataWeb.Northwind.Model\\" xmlns:d=\\"http://schemas.microsoft.com/ado/2007/08/dataservices\\" xmlns:m=\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\" xmlns=\\"http://schemas.microsoft.com/ado/2008/09/edm\\">
            <EntityContainer Name=\\"NorthwindEntities\\" p7:LazyLoadingEnabled=\\"true\\" m:IsDefaultEntityContainer=\\"true\\" xmlns:p7=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\">
                <EntitySet Name=\\"Categories\\" EntityType=\\"NorthwindModel.Category\\" />
                <EntitySet Name=\\"CustomerDemographics\\" EntityType=\\"NorthwindModel.CustomerDemographic\\" />
                <EntitySet Name=\\"Customers\\" EntityType=\\"NorthwindModel.Customer\\" />
                <EntitySet Name=\\"Employees\\" EntityType=\\"NorthwindModel.Employee\\" />
                <EntitySet Name=\\"Order_Details\\" EntityType=\\"NorthwindModel.Order_Detail\\" />
                <EntitySet Name=\\"Orders\\" EntityType=\\"NorthwindModel.Order\\" />
                <EntitySet Name=\\"Products\\" EntityType=\\"NorthwindModel.Product\\" />
                <EntitySet Name=\\"Regions\\" EntityType=\\"NorthwindModel.Region\\" />
                <EntitySet Name=\\"Shippers\\" EntityType=\\"NorthwindModel.Shipper\\" />
                <EntitySet Name=\\"Suppliers\\" EntityType=\\"NorthwindModel.Supplier\\" />
                <EntitySet Name=\\"Territories\\" EntityType=\\"NorthwindModel.Territory\\" />
                <EntitySet Name=\\"Alphabetical_list_of_products\\" EntityType=\\"NorthwindModel.Alphabetical_list_of_product\\" />
                <EntitySet Name=\\"Category_Sales_for_1997\\" EntityType=\\"NorthwindModel.Category_Sales_for_1997\\" />
                <EntitySet Name=\\"Current_Product_Lists\\" EntityType=\\"NorthwindModel.Current_Product_List\\" />
                <EntitySet Name=\\"Customer_and_Suppliers_by_Cities\\" EntityType=\\"NorthwindModel.Customer_and_Suppliers_by_City\\" />
                <EntitySet Name=\\"Invoices\\" EntityType=\\"NorthwindModel.Invoice\\" />
                <EntitySet Name=\\"Order_Details_Extendeds\\" EntityType=\\"NorthwindModel.Order_Details_Extended\\" />
                <EntitySet Name=\\"Order_Subtotals\\" EntityType=\\"NorthwindModel.Order_Subtotal\\" />
                <EntitySet Name=\\"Orders_Qries\\" EntityType=\\"NorthwindModel.Orders_Qry\\" />
                <EntitySet Name=\\"Product_Sales_for_1997\\" EntityType=\\"NorthwindModel.Product_Sales_for_1997\\" />
                <EntitySet Name=\\"Products_Above_Average_Prices\\" EntityType=\\"NorthwindModel.Products_Above_Average_Price\\" />
                <EntitySet Name=\\"Products_by_Categories\\" EntityType=\\"NorthwindModel.Products_by_Category\\" />
                <EntitySet Name=\\"Sales_by_Categories\\" EntityType=\\"NorthwindModel.Sales_by_Category\\" />
                <EntitySet Name=\\"Sales_Totals_by_Amounts\\" EntityType=\\"NorthwindModel.Sales_Totals_by_Amount\\" />
                <EntitySet Name=\\"Summary_of_Sales_by_Quarters\\" EntityType=\\"NorthwindModel.Summary_of_Sales_by_Quarter\\" />
                <EntitySet Name=\\"Summary_of_Sales_by_Years\\" EntityType=\\"NorthwindModel.Summary_of_Sales_by_Year\\" />
                <AssociationSet Name=\\"FK_Products_Categories\\" Association=\\"NorthwindModel.FK_Products_Categories\\">
                    <End Role=\\"Categories\\" EntitySet=\\"Categories\\" />
                    <End Role=\\"Products\\" EntitySet=\\"Products\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Orders_Customers\\" Association=\\"NorthwindModel.FK_Orders_Customers\\">
                    <End Role=\\"Customers\\" EntitySet=\\"Customers\\" />
                    <End Role=\\"Orders\\" EntitySet=\\"Orders\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Employees_Employees\\" Association=\\"NorthwindModel.FK_Employees_Employees\\">
                    <End Role=\\"Employees\\" EntitySet=\\"Employees\\" />
                    <End Role=\\"Employees1\\" EntitySet=\\"Employees\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Orders_Employees\\" Association=\\"NorthwindModel.FK_Orders_Employees\\">
                    <End Role=\\"Employees\\" EntitySet=\\"Employees\\" />
                    <End Role=\\"Orders\\" EntitySet=\\"Orders\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Order_Details_Orders\\" Association=\\"NorthwindModel.FK_Order_Details_Orders\\">
                    <End Role=\\"Orders\\" EntitySet=\\"Orders\\" />
                    <End Role=\\"Order_Details\\" EntitySet=\\"Order_Details\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Order_Details_Products\\" Association=\\"NorthwindModel.FK_Order_Details_Products\\">
                    <End Role=\\"Products\\" EntitySet=\\"Products\\" />
                    <End Role=\\"Order_Details\\" EntitySet=\\"Order_Details\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Orders_Shippers\\" Association=\\"NorthwindModel.FK_Orders_Shippers\\">
                    <End Role=\\"Shippers\\" EntitySet=\\"Shippers\\" />
                    <End Role=\\"Orders\\" EntitySet=\\"Orders\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Products_Suppliers\\" Association=\\"NorthwindModel.FK_Products_Suppliers\\">
                    <End Role=\\"Suppliers\\" EntitySet=\\"Suppliers\\" />
                    <End Role=\\"Products\\" EntitySet=\\"Products\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Territories_Region\\" Association=\\"NorthwindModel.FK_Territories_Region\\">
                    <End Role=\\"Region\\" EntitySet=\\"Regions\\" />
                    <End Role=\\"Territories\\" EntitySet=\\"Territories\\" />
                </AssociationSet>
                <AssociationSet Name=\\"CustomerCustomerDemo\\" Association=\\"NorthwindModel.CustomerCustomerDemo\\">
                    <End Role=\\"CustomerDemographics\\" EntitySet=\\"CustomerDemographics\\" />
                    <End Role=\\"Customers\\" EntitySet=\\"Customers\\" />
                </AssociationSet>
                <AssociationSet Name=\\"EmployeeTerritories\\" Association=\\"NorthwindModel.EmployeeTerritories\\">
                    <End Role=\\"Employees\\" EntitySet=\\"Employees\\" />
                    <End Role=\\"Territories\\" EntitySet=\\"Territories\\" />
                </AssociationSet>
            </EntityContainer>
        </Schema>
    </edmx:DataServices>
</edmx:Edmx>",
    "state": "modified",
  },
  "webapp/manifest.json": Object {
    "contents": "{
  \\"_version\\": \\"1.12.0\\",
  \\"sap.app\\": {
    \\"id\\": \\"test.me\\",
    \\"type\\": \\"application\\",
    \\"i18n\\": \\"i18n/i18n.properties\\",
    \\"applicationVersion\\": {
      \\"version\\": \\"0.0.1\\"
    },
    \\"title\\": \\"{{appTitle}}\\",
    \\"description\\": \\"{{appDescription}}\\",
    \\"resources\\": \\"resources.json\\",
    \\"sourceTemplate\\": {
      \\"id\\": \\"test-template\\",
      \\"version\\": \\"1.2.3-test\\"
    },
    \\"dataSources\\": {
      \\"mainService\\": {
        \\"uri\\": \\"/V2/Northwind/Northwind.svc/\\",
        \\"type\\": \\"OData\\",
        \\"settings\\": {
          \\"annotations\\": [],
          \\"localUri\\": \\"localService/metadata.xml\\",
          \\"odataVersion\\": \\"2.0\\"
        }
      }
    }
  },
  \\"sap.ui\\": {
    \\"technology\\": \\"UI5\\",
    \\"icons\\": {
      \\"icon\\": \\"\\",
      \\"favIcon\\": \\"\\",
      \\"phone\\": \\"\\",
      \\"phone@2\\": \\"\\",
      \\"tablet\\": \\"\\",
      \\"tablet@2\\": \\"\\"
    },
    \\"deviceTypes\\": {
      \\"desktop\\": true,
      \\"tablet\\": true,
      \\"phone\\": true
    }
  },
  \\"sap.ui5\\": {
    \\"flexEnabled\\": true,
    \\"dependencies\\": {
      \\"minUI5Version\\": \\"1.60.0\\",
      \\"libs\\": {
        \\"sap.m\\": {},
        \\"sap.ui.core\\": {},
        \\"sap.ushell\\": {}
      }
    },
    \\"contentDensities\\": {
      \\"compact\\": true,
      \\"cozy\\": true
    },
    \\"models\\": {
      \\"i18n\\": {
        \\"type\\": \\"sap.ui.model.resource.ResourceModel\\",
        \\"settings\\": {
          \\"bundleName\\": \\"test.me.i18n.i18n\\"
        }
      },
      \\"\\": {
        \\"dataSource\\": \\"mainService\\",
        \\"preload\\": true,
        \\"settings\\": {}
      }
    },
    \\"resources\\": {
      \\"css\\": [
        {
          \\"uri\\": \\"css/style.css\\"
        }
      ]
    },
    \\"routing\\": {
      \\"config\\": {
        \\"routerClass\\": \\"sap.m.routing.Router\\",
        \\"viewType\\": \\"XML\\",
        \\"async\\": true,
        \\"viewPath\\": \\"test.me.view\\",
        \\"controlAggregation\\": \\"pages\\",
        \\"controlId\\": \\"app\\",
        \\"clearControlAggregation\\": false
      },
      \\"routes\\": [
        {
          \\"name\\": \\"RouteView1\\",
          \\"pattern\\": \\":?query:\\",
          \\"target\\": [
            \\"TargetView1\\"
          ]
        }
      ],
      \\"targets\\": {
        \\"TargetView1\\": {
          \\"viewType\\": \\"XML\\",
          \\"transition\\": \\"slide\\",
          \\"clearControlAggregation\\": false,
          \\"viewId\\": \\"View1\\",
          \\"viewName\\": \\"View1\\"
        }
      }
    },
    \\"rootView\\": {
      \\"viewName\\": \\"test.me.view.App\\",
      \\"type\\": \\"XML\\",
      \\"async\\": true,
      \\"id\\": \\"App\\"
    }
  }
}
",
    "state": "modified",
  },
  "webapp/model/models.js": Object {
    "contents": "sap.ui.define([
    \\"sap/ui/model/json/JSONModel\\",
    \\"sap/ui/Device\\"
], 
    /**
     * provide app-view type models (as in the first \\"V\\" in MVVC)
     * 
     * @param {typeof sap.ui.model.json.JSONModel} JSONModel
     * @param {typeof sap.ui.Device} Device
     * 
     * @returns {Function} createDeviceModel() for providing runtime info for the device the UI5 app is running on
     */
    function (JSONModel, Device) {
        \\"use strict\\";

        return {
            createDeviceModel: function () {
                var oModel = new JSONModel(Device);
                oModel.setDefaultBindingMode(\\"OneWay\\");
                return oModel;
        }
    };
});",
    "state": "modified",
  },
  "webapp/test/flpSandbox.html": Object {
    "contents": "<!DOCTYPE HTML>
<html lang=\\"en\\">
<!-- Copyright (c) 2015 SAP AG, All Rights Reserved -->
<head>
    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
    <meta charset=\\"UTF-8\\">
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">
    <title>{{appTitle}}</title>

    <!-- Bootstrap the unified shell in sandbox mode for standalone usage.

         The renderer is specified in the global Unified Shell configuration object \\"sap-ushell-config\\".

         The fiori2 renderer will render the shell header allowing, for instance,
         testing of additional application setting buttons.

         The navigation target resolution service is configured in a way that the empty URL hash is
         resolved to our own application.

         This example uses relative path references for the SAPUI5 resources and test-resources;
         it might be necessary to adapt them depending on the target runtime platform.
         The sandbox platform is restricted to development or demo use cases and must NOT be used
         for productive scenarios.
    -->
    <script type=\\"text/javascript\\">
        window[\\"sap-ushell-config\\"] = {
            defaultRenderer: \\"fiori2\\",
            bootstrapPlugins: {
                \\"RuntimeAuthoringPlugin\\": {
                    component: \\"sap.ushell.plugins.rta\\",
                    config: {
                        validateAppVersion: false
                    }
                }
            },
            renderers: {
                fiori2: {
                    componentData: {
                        config: {
                            search: \\"hidden\\"
                        }
                    }
                }
            },
            applications: {
                \\"testme-app\\": {
                    title: \\"My Test App\\",
                    description: \\"Test App Description\\",
                    additionalInformation: \\"SAPUI5.Component=test.me\\",
                    applicationType: \\"URL\\",
                    url: \\"../\\"
                }
            }
        };
    </script>

    <script src=\\"../test-resources/sap/ushell/bootstrap/sandbox.js\\" id=\\"sap-ushell-bootstrap\\"></script>
    <!-- Bootstrap the UI5 core library. 'data-sap-ui-frameOptions=\\"allow\\"'' is a NON-SECURE setting for test environments -->
    <script id=\\"sap-ui-bootstrap\\"
        src=\\"../resources/sap-ui-core.js\\"
        data-sap-ui-libs=\\"sap.m,sap.ui.core,sap.ushell\\"
        data-sap-ui-async=\\"true\\"
        data-sap-ui-preload=\\"async\\"
        data-sap-ui-theme=\\"sap_fiori_3\\"
        data-sap-ui-compatVersion=\\"edge\\"
        data-sap-ui-language=\\"en\\"
        data-sap-ui-resourceroots='{\\"test.me\\": \\"../\\"}'
        data-sap-ui-frameOptions=\\"allow\\">
    </script>
    <script id=\\"locate-reuse-libs\\" src=\\"../utils/locate-reuse-libs.js\\" data-sap-ui-manifest-uri=\\"../manifest.json\\">
    </script>
</head>

<!-- UI Content -->

<body class=\\"sapUiBody\\" id=\\"content\\">
</body>

</html>
",
    "state": "modified",
  },
  "webapp/utils/locate-reuse-libs.js": Object {
    "contents": "/*eslint-disable semi, no-console*/
(function (sap) {
    var getKeys = function (libOrComp, libOrCompKeysString) {
        // SAPUI5 delivered namespaces from https://ui5.sap.com/#/api/sap
        var ui5Libs = [
            \\"sap.apf\\",
            \\"sap.base\\",
            \\"sap.chart\\",
            \\"sap.collaboration\\",
            \\"sap.f\\",
            \\"sap.fe\\",
            \\"sap.fileviewer\\",
            \\"sap.gantt\\",
            \\"sap.landvisz\\",
            \\"sap.m\\",
            \\"sap.ndc\\",
            \\"sap.ovp\\",
            \\"sap.rules\\",
            \\"sap.suite\\",
            \\"sap.tnt\\",
            \\"sap.ui\\",
            \\"sap.uiext\\",
            \\"sap.ushell\\",
            \\"sap.uxap\\",
            \\"sap.viz\\",
            \\"sap.webanalytics\\",
            \\"sap.zen\\"
        ];
        Object.keys(libOrComp).forEach(function (libOrCompKey) {
            // ignore libs or Components that start with SAPUI5 delivered namespaces
            if (
                !ui5Libs.some(function (substring) {
                    return libOrCompKey === substring || libOrCompKey.startsWith(substring + \\".\\");
                })
            ) {
                if (libOrCompKeysString.length > 0) {
                    libOrCompKeysString = libOrCompKeysString + \\",\\" + libOrCompKey;
                } else {
                    libOrCompKeysString = libOrCompKey;
                }
            }
        });
        return libOrCompKeysString;
    };

    var updateManifest = function (manifest) {
        var result = \\"\\";
        if (manifest) {
            if (manifest[\\"sap.ui5\\"] && manifest[\\"sap.ui5\\"].dependencies) {
                if (manifest[\\"sap.ui5\\"].dependencies.libs) {
                    result = getKeys(manifest[\\"sap.ui5\\"].dependencies.libs, result);
                }
                if (manifest[\\"sap.ui5\\"].dependencies.components) {
                    result = getKeys(manifest[\\"sap.ui5\\"].dependencies.components, result);
                }
            }
            if (manifest[\\"sap.ui5\\"] && manifest[\\"sap.ui5\\"].componentUsages) {
                result = getKeys(manifest[\\"sap.ui5\\"].componentUsages, result);
            }
        }
        return result;
    };

    var fioriToolsGetManifestLibs = function (manifestPath) {
        var url = manifestPath;
        return new Promise(function (resolve, reject) {
            $.ajax(url)
                .done(function (manifest) {
                    resolve(updateManifest(manifest));
                })
                .fail(function () {
                    reject(new Error(\\"Could not fetch manifest at '\\" + manifestPath));
                });
        });
    };

    var updateModuleDefinition = function (data) {
        if (data) {
            Object.keys(data).forEach(function (moduleDefinitionKey) {
                var moduleDefinition = data[moduleDefinitionKey];
                if (moduleDefinition && moduleDefinition.dependencies) {
                    moduleDefinition.dependencies.forEach(function (dependency) {
                        if (dependency.url && dependency.url.length > 0 && dependency.type === \\"UI5LIB\\") {
                            jQuery.sap.log.info(
                                \\"Registering Library \\" + dependency.componentId + \\" from server \\" + dependency.url
                            );
                            jQuery.sap.registerModulePath(dependency.componentId, dependency.url);
                        }
                    });
                }
            });
        }
    };

    /**
     * Registers the module paths for dependencies of the given component.
     * @param {string} manifestPath The the path to the app manifest path
     * for which the dependencies should be registered.
     * @returns {Promise} A promise which is resolved when the ajax request for
     * the app-index was successful and the module paths were registered.
     */
    sap.registerComponentDependencyPaths = function (manifestPath) {
        /*eslint-disable semi, consistent-return*/
        return fioriToolsGetManifestLibs(manifestPath).then(function (libs) {
            if (libs && libs.length > 0) {
                var url = \\"/sap/bc/ui2/app_index/ui5_app_info?id=\\" + libs;
                var sapClient = jQuery.sap.getUriParameters().get(\\"sap-client\\");
                if (sapClient && sapClient.length === 3) {
                    url = url + \\"&sap-client=\\" + sapClient;
                }
                return $.ajax(url).done(updateModuleDefinition);
            }
        });
    };
})(sap);

/*eslint-disable sap-browser-api-warning, sap-no-dom-access*/
var scripts = document.getElementsByTagName(\\"script\\");
var currentScript = document.getElementById(\\"locate-reuse-libs\\");
if (!currentScript) {
    currentScript = document.currentScript;
}
var manifestUri = currentScript.getAttribute(\\"data-sap-ui-manifest-uri\\");
var componentName = currentScript.getAttribute(\\"data-sap-ui-componentName\\");
var useMockserver = currentScript.getAttribute(\\"data-sap-ui-use-mockserver\\");
var bundleResources = function () {
    jQuery.sap.require(\\"jquery.sap.resources\\");
    var sLocale = sap.ui.getCore().getConfiguration().getLanguage();
    var oBundle = jQuery.sap.resources({
        url: \\"i18n/i18n.properties\\",
        locale: sLocale
    });
    document.title = oBundle.getText(\\"appTitle\\");
};
sap.registerComponentDependencyPaths(manifestUri)
    .catch(function (error) {
        jQuery.sap.log.error(error);
    })
    .finally(function () {
        // setting the app title with internationalization
        sap.ui.getCore().attachInit(bundleResources);

        if (componentName && componentName.length > 0) {
            if (useMockserver && useMockserver === \\"true\\") {
                sap.ui.getCore().attachInit(function () {
                    sap.ui.require([componentName.replace(/\\\\./g, \\"/\\") + \\"/localService/mockserver\\"], function (server) {
                        // set up test service for local testing
                        server.init();
                        // initialize the ushell sandbox component
                        sap.ushell.Container.createRenderer().placeAt(\\"content\\");
                    });
                });
            } else {
                // Requiring the ComponentSupport module automatically executes the component initialisation for all declaratively defined components
                sap.ui.require([\\"sap/ui/core/ComponentSupport\\"]);

                // setting the app title with the i18n text
                sap.ui.getCore().attachInit(bundleResources);
            }
        } else {
            sap.ui.getCore().attachInit(function () {
                // initialize the ushell sandbox component
                sap.ushell.Container.createRenderer().placeAt(\\"content\\");
            });
        }
    });

sap.registerComponentDependencyPaths(manifestUri);
",
    "state": "modified",
  },
  "webapp/view/App.view.xml": Object {
    "contents": "<mvc:View controllerName=\\"test.me.controller.App\\"
    xmlns:html=\\"http://www.w3.org/1999/xhtml\\"
    xmlns:mvc=\\"sap.ui.core.mvc\\" displayBlock=\\"true\\"
    xmlns=\\"sap.m\\">
    <App id=\\"app\\">
    </App>
</mvc:View>
",
    "state": "modified",
  },
  "webapp/view/View1.view.xml": Object {
    "contents": "<mvc:View controllerName=\\"test.me.controller.View1\\"
    xmlns:mvc=\\"sap.ui.core.mvc\\" displayBlock=\\"true\\"
    xmlns=\\"sap.m\\">
    <Page id=\\"page\\" title=\\"{i18n>title}\\">
        <content />
    </Page>
</mvc:View>
",
    "state": "modified",
  },
}
`;

exports[`Fiori freestyle templates: allTemplate Generate files for template: listdetail 1`] = `
Object {
  ".gitignore": Object {
    "contents": "node_modules/
dist/
.scp/
.env
Makefile*.mta
mta_archives
mta-*
resources
archive.zip
.*_mta_build_tmp",
    "state": "modified",
  },
  "package.json": Object {
    "contents": "{
  \\"name\\": \\"test.me\\",
  \\"version\\": \\"0.0.1\\",
  \\"private\\": true,
  \\"description\\": \\"Test App Description\\",
  \\"keywords\\": [
    \\"ui5\\",
    \\"openui5\\",
    \\"sapui5\\"
  ],
  \\"main\\": \\"webapp/index.html\\",
  \\"dependencies\\": {},
  \\"devDependencies\\": {
    \\"@ui5/cli\\": \\"^2.14.1\\",
    \\"@sap/ux-ui5-tooling\\": \\"1\\",
    \\"@sap-ux/ui5-middleware-fe-mockserver\\": \\"2\\"
  },
  \\"scripts\\": {
    \\"start\\": \\"fiori run --open \\\\\\"test/flpSandbox.html?sap-ui-xx-viewCache=false#testme-app\\\\\\"\\",
    \\"start-local\\": \\"fiori run --config ./ui5-local.yaml --open \\\\\\"test/flpSandbox.html?sap-ui-xx-viewCache=false#testme-app\\\\\\"\\",
    \\"build\\": \\"ui5 build --config=ui5.yaml --clean-dest --dest dist\\",
    \\"deploy\\": \\"fiori verify\\",
    \\"deploy-config\\": \\"fiori add deploy-config\\",
    \\"start-noflp\\": \\"fiori run --open \\\\\\"index.html?sap-ui-xx-viewCache=false\\\\\\"\\",
    \\"start-mock\\": \\"fiori run --config ./ui5-mock.yaml --open \\\\\\"test/flpSandbox.html?sap-ui-xx-viewCache=false#testme-app\\\\\\"\\"
  },
  \\"ui5\\": {
    \\"dependencies\\": [
      \\"@sap/ux-ui5-tooling\\",
      \\"@sap-ux/ui5-middleware-fe-mockserver\\"
    ]
  }
}
",
    "state": "modified",
  },
  "ui5-local.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.5\\"
metadata:
  name: test.me
type: application
framework:
  name: SAPUI5
  version: 1.90.0
  libraries:
    - name: sap.m
    - name: sap.ui.core
    - name: sap.ushell
    - name: themelib_sap_fiori_3
server:
  customMiddleware:
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        backend:
          - path: /V2
            url: https://services.odata.org
    - name: sap-fe-mockserver
      beforeMiddleware: csp
      configuration:
        mountPath: /
        services:
          - urlPath: /V2/Northwind/Northwind.svc
            metadataPath: ./webapp/localService/metadata.xml
            mockdataPath: ./webapp/localService/data
            generateMockData: true
        annotations: []
",
    "state": "modified",
  },
  "ui5-mock.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.5\\"
metadata:
  name: test.me
type: application
server:
  customMiddleware:
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        ui5:
          path:
            - /resources
            - /test-resources
          url: https://ui5.sap.com
        backend:
          - path: /V2
            url: https://services.odata.org
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
    - name: sap-fe-mockserver
      beforeMiddleware: csp
      configuration:
        mountPath: /
        services:
          - urlPath: /V2/Northwind/Northwind.svc
            metadataPath: ./webapp/localService/metadata.xml
            mockdataPath: ./webapp/localService/data
            generateMockData: true
        annotations: []
",
    "state": "modified",
  },
  "ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.5\\"
metadata:
  name: test.me
type: application
server:
  customMiddleware:
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        ui5:
          path:
            - /resources
            - /test-resources
          url: https://ui5.sap.com
        backend:
          - path: /V2
            url: https://services.odata.org
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
",
    "state": "modified",
  },
  "webapp/Component.js": Object {
    "contents": "sap.ui.define([
    \\"sap/ui/core/UIComponent\\",
    \\"sap/ui/Device\\",
    \\"./model/models\\",
    \\"./controller/ListSelector\\",
    \\"./controller/ErrorHandler\\"
], 
function (UIComponent, Device, models, ListSelector, ErrorHandler) {
    \\"use strict\\";

    return UIComponent.extend(\\"test.me.Component\\", {
        /**
         * @param {typeof sap.ui.model.json.JSONModel} JSONModel
         * @param {typeof sap.ui.Device} Device
         */ 
        metadata : {
            manifest : \\"json\\"
        },

        /**
         * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.
         * In this method, the device models are set and the router is initialized.
         * @public
         * @override
         */
        init : function () {
            this.oListSelector = new ListSelector();
            this._oErrorHandler = new ErrorHandler(this);

            // set the device model
            this.setModel(models.createDeviceModel(), \\"device\\");

            // call the base component's init function and create the App view
            UIComponent.prototype.init.apply(this, arguments);

            // create the views based on the url/hash
            this.getRouter().initialize();
        },

        /**
         * The component is destroyed by UI5 automatically.
         * In this method, the ListSelector and ErrorHandler are destroyed.
         * @public
         * @override
         */
        destroy : function () {
            this.oListSelector.destroy();
            this._oErrorHandler.destroy();
            // call the base component's destroy function
            UIComponent.prototype.destroy.apply(this, arguments);
        },

        /**
         * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy
         * design mode class should be set, which influences the size appearance of some controls.
         * @public
         * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set
         */
        getContentDensityClass : function() {
            if (this._sContentDensityClass === undefined) {
                // check whether FLP has already set the content density class; do nothing in this case
                // eslint-disable-next-line sap-no-proprietary-browser-api
                if (document.body.classList.contains(\\"sapUiSizeCozy\\") || document.body.classList.contains(\\"sapUiSizeCompact\\")) {
                    this._sContentDensityClass = \\"\\";
                } else if (!Device.support.touch) { // apply \\"compact\\" mode if touch is not supported
                    this._sContentDensityClass = \\"sapUiSizeCompact\\";
                } else {
                    // \\"cozy\\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table
                    this._sContentDensityClass = \\"sapUiSizeCozy\\";
                }
            }
            return this._sContentDensityClass;
        }

    });
});",
    "state": "modified",
  },
  "webapp/controller/App.controller.js": Object {
    "contents": "sap.ui.define([
    \\"./BaseController\\",
    \\"sap/ui/model/json/JSONModel\\"
], function (BaseController, JSONModel) {
    \\"use strict\\";

    return BaseController.extend(\\"test.me.controller.App\\", {

        onInit : function () {
            var oViewModel,
                fnSetAppNotBusy,
                iOriginalBusyDelay = this.getView().getBusyIndicatorDelay();

            oViewModel = new JSONModel({
                busy : true,
                delay : 0,
                layout : \\"OneColumn\\",
                previousLayout : \\"\\",
                actionButtonsInfo : {
                    midColumn : {
                        fullScreen : false
                    }
                }
            });
            this.setModel(oViewModel, \\"appView\\");

            fnSetAppNotBusy = function() {
                oViewModel.setProperty(\\"/busy\\", false);
                oViewModel.setProperty(\\"/delay\\", iOriginalBusyDelay);
            };

            // since then() has no \\"reject\\"-path attach to the MetadataFailed-Event to disable the busy indicator in case of an error
            this.getOwnerComponent().getModel().metadataLoaded().then(fnSetAppNotBusy);
            this.getOwnerComponent().getModel().attachMetadataFailed(fnSetAppNotBusy);

            // apply content density mode to root view
            this.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());
        }

    });
});",
    "state": "modified",
  },
  "webapp/controller/BaseController.js": Object {
    "contents": "sap.ui.define([
    \\"sap/ui/core/mvc/Controller\\",
    \\"sap/ui/core/routing/History\\"
], function (Controller, History) {
    \\"use strict\\";

    return Controller.extend(\\"test.me.controller.BaseController\\", {
        /**
         * Convenience method for accessing the router in every controller of the application.
         * @public
         * @returns {sap.ui.core.routing.Router} the router for this component
         */
        getRouter : function () {
            return this.getOwnerComponent().getRouter();
        },

        /**
         * Convenience method for getting the view model by name in every controller of the application.
         * @public
         * @param {string} sName the model name
         * @returns {sap.ui.model.Model} the model instance
         */
        getModel : function (sName) {
            return this.getView().getModel(sName);
        },

        /**
         * Convenience method for setting the view model in every controller of the application.
         * @public
         * @param {sap.ui.model.Model} oModel the model instance
         * @param {string} sName the model name
         * @returns {sap.ui.mvc.View} the view instance
         */
        setModel : function (oModel, sName) {
            return this.getView().setModel(oModel, sName);
        },

        /**
         * Convenience method for getting the resource bundle.
         * @public
         * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component
         */
        getResourceBundle : function () {
            return this.getOwnerComponent().getModel(\\"i18n\\").getResourceBundle();
        },

        /**
         * Event handler for navigating back.
         * It there is a history entry we go one step back in the browser history
         * If not, it will replace the current entry of the browser history with the list route.
         * @public
         */
        onNavBack : function() {
            var sPreviousHash = History.getInstance().getPreviousHash();

            if (sPreviousHash !== undefined) {
                // eslint-disable-next-line sap-no-history-manipulation
                history.go(-1);
            } else {
                this.getRouter().navTo(\\"list\\", {}, true);
            }
        }

    });

});",
    "state": "modified",
  },
  "webapp/controller/Detail.controller.js": Object {
    "contents": "sap.ui.define([
    \\"./BaseController\\",
    \\"sap/ui/model/json/JSONModel\\",
    \\"../model/formatter\\",
    \\"sap/m/library\\"
], function (BaseController, JSONModel, formatter, mobileLibrary) {
    \\"use strict\\";

    // shortcut for sap.m.URLHelper
    var URLHelper = mobileLibrary.URLHelper;

    return BaseController.extend(\\"test.me.controller.Detail\\", {

        formatter: formatter,

        /* =========================================================== */
        /* lifecycle methods                                           */
        /* =========================================================== */

        onInit: function () {
            // Model used to manipulate control states. The chosen values make sure,
            // detail page is busy indication immediately so there is no break in
            // between the busy indication for loading the view's meta data
            var oViewModel = new JSONModel({
                busy : false,
                delay : 0,
                lineItemListTitle : this.getResourceBundle().getText(\\"detailLineItemTableHeading\\")
            });

            this.getRouter().getRoute(\\"object\\").attachPatternMatched(this._onObjectMatched, this);

            this.setModel(oViewModel, \\"detailView\\");

            this.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));
        },

        /* =========================================================== */
        /* event handlers                                              */
        /* =========================================================== */

        /**
         * Event handler when the share by E-Mail button has been clicked
         * @public
         */
        onSendEmailPress: function () {
            var oViewModel = this.getModel(\\"detailView\\");

            URLHelper.triggerEmail(
                null,
                oViewModel.getProperty(\\"/shareSendEmailSubject\\"),
                oViewModel.getProperty(\\"/shareSendEmailMessage\\")
            );
        },

        
        /**
         * Updates the item count within the line item table's header
         * @param {object} oEvent an event containing the total number of items in the list
         * @private
         */
        onListUpdateFinished: function (oEvent) {
            var sTitle,
                iTotalItems = oEvent.getParameter(\\"total\\"),
                oViewModel = this.getModel(\\"detailView\\");

            // only update the counter if the length is final
            if (this.byId(\\"lineItemsList\\").getBinding(\\"items\\").isLengthFinal()) {
                if (iTotalItems) {
                    sTitle = this.getResourceBundle().getText(\\"detailLineItemTableHeadingCount\\", [iTotalItems]);
                } else {
                    //Display 'Line Items' instead of 'Line items (0)'
                    sTitle = this.getResourceBundle().getText(\\"detailLineItemTableHeading\\");
                }
                oViewModel.setProperty(\\"/lineItemListTitle\\", sTitle);
            }
        },

        /* =========================================================== */
        /* begin: internal methods                                     */
        /* =========================================================== */

        /**
         * Binds the view to the object path and expands the aggregated line items.
         * @function
         * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'
         * @private
         */
        _onObjectMatched: function (oEvent) {
            var sObjectId =  oEvent.getParameter(\\"arguments\\").objectId;
            this.getModel(\\"appView\\").setProperty(\\"/layout\\", \\"TwoColumnsMidExpanded\\");
            this.getModel().metadataLoaded().then( function() {
                var sObjectPath = this.getModel().createKey(\\"Products\\", {
                    ProductID:  sObjectId
                });
                this._bindView(\\"/\\" + sObjectPath);
            }.bind(this));
        },

        /**
         * Binds the view to the object path. Makes sure that detail view displays
         * a busy indicator while data for the corresponding element binding is loaded.
         * @function
         * @param {string} sObjectPath path to the object to be bound to the view.
         * @private
         */
        _bindView: function (sObjectPath) {
            // Set busy indicator during view binding
            var oViewModel = this.getModel(\\"detailView\\");

            // If the view was not bound yet its not busy, only if the binding requests data it is set to busy again
            oViewModel.setProperty(\\"/busy\\", false);

            this.getView().bindElement({
                path : sObjectPath,
                events: {
                    change : this._onBindingChange.bind(this),
                    dataRequested : function () {
                        oViewModel.setProperty(\\"/busy\\", true);
                    },
                    dataReceived: function () {
                        oViewModel.setProperty(\\"/busy\\", false);
                    }
                }
            });
        },

        _onBindingChange: function () {
            var oView = this.getView(),
                oElementBinding = oView.getElementBinding();

            // No data for the binding
            if (!oElementBinding.getBoundContext()) {
                this.getRouter().getTargets().display(\\"detailObjectNotFound\\");
                // if object could not be found, the selection in the list
                // does not make sense anymore.
                this.getOwnerComponent().oListSelector.clearListListSelection();
                return;
            }

            var sPath = oElementBinding.getPath(),
                oResourceBundle = this.getResourceBundle(),
                oObject = oView.getModel().getObject(sPath),
                sObjectId = oObject.ProductID,
                sObjectName = oObject.ProductName,
                oViewModel = this.getModel(\\"detailView\\");

            this.getOwnerComponent().oListSelector.selectAListItem(sPath);

            oViewModel.setProperty(\\"/shareSendEmailSubject\\",
                oResourceBundle.getText(\\"shareSendEmailObjectSubject\\", [sObjectId]));
            oViewModel.setProperty(\\"/shareSendEmailMessage\\",
                oResourceBundle.getText(\\"shareSendEmailObjectMessage\\", [sObjectName, sObjectId, location.href]));
        },

        _onMetadataLoaded: function () {
            // Store original busy indicator delay for the detail view
            var iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),
                oViewModel = this.getModel(\\"detailView\\"),
                oLineItemTable = this.byId(\\"lineItemsList\\"),
                iOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();

            // Make sure busy indicator is displayed immediately when
            // detail view is displayed for the first time
            oViewModel.setProperty(\\"/delay\\", 0);
            oViewModel.setProperty(\\"/lineItemTableDelay\\", 0);

            oLineItemTable.attachEventOnce(\\"updateFinished\\", function() {
                // Restore original busy indicator delay for line item table
                oViewModel.setProperty(\\"/lineItemTableDelay\\", iOriginalLineItemTableBusyDelay);
            });

            // Binding the view will set it to not busy - so the view is always busy if it is not bound
            oViewModel.setProperty(\\"/busy\\", true);
            // Restore original busy indicator delay for the detail view
            oViewModel.setProperty(\\"/delay\\", iOriginalViewBusyDelay);
        },

        /**
         * Set the full screen mode to false and navigate to list page
         */
        onCloseDetailPress: function () {
            this.getModel(\\"appView\\").setProperty(\\"/actionButtonsInfo/midColumn/fullScreen\\", false);
            // No item should be selected on list after detail page is closed
            this.getOwnerComponent().oListSelector.clearListListSelection();
            this.getRouter().navTo(\\"list\\");
        },

        /**
         * Toggle between full and non full screen mode.
         */
        toggleFullScreen: function () {
            var bFullScreen = this.getModel(\\"appView\\").getProperty(\\"/actionButtonsInfo/midColumn/fullScreen\\");
            this.getModel(\\"appView\\").setProperty(\\"/actionButtonsInfo/midColumn/fullScreen\\", !bFullScreen);
            if (!bFullScreen) {
                // store current layout and go full screen
                this.getModel(\\"appView\\").setProperty(\\"/previousLayout\\", this.getModel(\\"appView\\").getProperty(\\"/layout\\"));
                this.getModel(\\"appView\\").setProperty(\\"/layout\\", \\"MidColumnFullScreen\\");
            } else {
                // reset to previous layout
                this.getModel(\\"appView\\").setProperty(\\"/layout\\",  this.getModel(\\"appView\\").getProperty(\\"/previousLayout\\"));
            }
        }
    });

});",
    "state": "modified",
  },
  "webapp/controller/DetailObjectNotFound.controller.js": Object {
    "contents": "sap.ui.define([
    \\"./BaseController\\"
], function (BaseController) {
    \\"use strict\\";

    return BaseController.extend(\\"test.me.controller.DetailObjectNotFound\\", {});
});",
    "state": "modified",
  },
  "webapp/controller/ErrorHandler.js": Object {
    "contents": "sap.ui.define([
    \\"sap/ui/base/Object\\",
    \\"sap/m/MessageBox\\"
], function (UI5Object, MessageBox) {
    \\"use strict\\";

    return UI5Object.extend(\\"test.me.controller.ErrorHandler\\", {

        /**
         * Handles application errors by automatically attaching to the model events and displaying errors when needed.
         * @class
         * @param {sap.ui.core.UIComponent} oComponent reference to the app's component
         * @public
         * @alias test.me.controller.ErrorHandler
         */
        constructor : function (oComponent) {
            this._oResourceBundle = oComponent.getModel(\\"i18n\\").getResourceBundle();
            this._oComponent = oComponent;
            this._oModel = oComponent.getModel();
            this._bMessageOpen = false;
            this._sErrorText = this._oResourceBundle.getText(\\"errorText\\");

            this._oModel.attachMetadataFailed(function (oEvent) {
                var oParams = oEvent.getParameters();
                this._showServiceError(oParams.response);
            }, this);

            this._oModel.attachRequestFailed(function (oEvent) {
                var oParams = oEvent.getParameters();
                // An entity that was not found in the service is also throwing a 404 error in oData.
                // We already cover this case with a notFound target so we skip it here.
                // A request that cannot be sent to the server is a technical error that we have to handle though
                if (oParams.response.statusCode !== \\"404\\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\\"Cannot POST\\") === 0)) {
                    this._showServiceError(oParams.response);
                }
            }, this);
        },

        /**
         * Shows a {@link sap.m.MessageBox} when a service call has failed.
         * Only the first error message will be display.
         * @param {string} sDetails a technical error to be displayed on request
         * @private
         */
        _showServiceError : function (sDetails) {
            if (this._bMessageOpen) {
                return;
            }
            this._bMessageOpen = true;
            MessageBox.error(
                this._sErrorText,
                {
                    id : \\"serviceErrorMessageBox\\",
                    details : sDetails,
                    styleClass : this._oComponent.getContentDensityClass(),
                    actions : [MessageBox.Action.CLOSE],
                    onClose : function () {
                        this._bMessageOpen = false;
                    }.bind(this)
                }
            );
        }

    });

});",
    "state": "modified",
  },
  "webapp/controller/List.controller.js": Object {
    "contents": "sap.ui.define([
    \\"./BaseController\\",
    \\"sap/ui/model/json/JSONModel\\",
    \\"sap/ui/model/Filter\\",
    \\"sap/ui/model/Sorter\\",
    \\"sap/ui/model/FilterOperator\\",
    \\"sap/m/GroupHeaderListItem\\",
    \\"sap/ui/Device\\",
    \\"sap/ui/core/Fragment\\",
    \\"../model/formatter\\"
], function (BaseController, JSONModel, Filter, Sorter, FilterOperator, GroupHeaderListItem, Device, Fragment, formatter) {
    \\"use strict\\";

    return BaseController.extend(\\"test.me.controller.List\\", {

        formatter: formatter,

        /* =========================================================== */
        /* lifecycle methods                                           */
        /* =========================================================== */

        /**
         * Called when the list controller is instantiated. It sets up the event handling for the list/detail communication and other lifecycle tasks.
         * @public
         */
        onInit : function () {
            // Control state model
            var oList = this.byId(\\"list\\"),
                oViewModel = this._createViewModel(),
                // Put down list's original value for busy indicator delay,
                // so it can be restored later on. Busy handling on the list is
                // taken care of by the list itself.
                iOriginalBusyDelay = oList.getBusyIndicatorDelay();


            this._oGroupFunctions = {
                UnitsInStock: function(oContext) {
                    var iNumber = oContext.getProperty('UnitsInStock'),
                        key, text;
                    if (iNumber <= 20) {
                        key = \\"LE20\\";
                        text = this.getResourceBundle().getText(\\"listGroup1Header1\\");
                    } else {
                        key = \\"GT20\\";
                        text = this.getResourceBundle().getText(\\"listGroup1Header2\\");
                    }
                    return {
                        key: key,
                        text: text
                    };
                }.bind(this)
            };

            this._oList = oList;
            // keeps the filter and search state
            this._oListFilterState = {
                aFilter : [],
                aSearch : []
            };

            this.setModel(oViewModel, \\"listView\\");
            // Make sure, busy indication is showing immediately so there is no
            // break after the busy indication for loading the view's meta data is
            // ended (see promise 'oWhenMetadataIsLoaded' in AppController)
            oList.attachEventOnce(\\"updateFinished\\", function(){
                // Restore original busy indicator delay for the list
                oViewModel.setProperty(\\"/delay\\", iOriginalBusyDelay);
            });

            this.getView().addEventDelegate({
                onBeforeFirstShow: function () {
                    this.getOwnerComponent().oListSelector.setBoundMasterList(oList);
                }.bind(this)
            });

            this.getRouter().getRoute(\\"list\\").attachPatternMatched(this._onMasterMatched, this);
            this.getRouter().attachBypassed(this.onBypassed, this);
        },

        /* =========================================================== */
        /* event handlers                                              */
        /* =========================================================== */

        /**
         * After list data is available, this handler method updates the
         * list counter
         * @param {sap.ui.base.Event} oEvent the update finished event
         * @public
         */
        onUpdateFinished : function (oEvent) {
            // update the list object counter after new data is loaded
            this._updateListItemCount(oEvent.getParameter(\\"total\\"));
        },

        /**
         * Event handler for the list search field. Applies current
         * filter value and triggers a new search. If the search field's
         * 'refresh' button has been pressed, no new search is triggered
         * and the list binding is refresh instead.
         * @param {sap.ui.base.Event} oEvent the search event
         * @public
         */
        onSearch: function (oEvent) {
            if (oEvent.getParameters().refreshButtonPressed) {
                // Search field's 'refresh' button has been pressed.
                // This is visible if you select any list item.
                // In this case no new search is triggered, we only
                // refresh the list binding.
                this.onRefresh();
                return;
            }

            var sQuery = oEvent.getParameter(\\"query\\");

            if (sQuery) {
                this._oListFilterState.aSearch = [new Filter(\\"ProductName\\", FilterOperator.Contains, sQuery)];
            } else {
                this._oListFilterState.aSearch = [];
            }
            this._applyFilterSearch();

        },

        /**
         * Event handler for refresh event. Keeps filter, sort
         * and group settings and refreshes the list binding.
         * @public
         */
        onRefresh: function () {
            this._oList.getBinding(\\"items\\").refresh();
        },

        /**
         * Event handler for the filter, sort and group buttons to open the ViewSettingsDialog.
         * @param {sap.ui.base.Event} oEvent the button press event
         * @public
         */
        onOpenViewSettings: function (oEvent) {
            var sDialogTab = \\"filter\\";
            if (oEvent.getSource() instanceof sap.m.Button) {
                var sButtonId = oEvent.getSource().getId();
                if (sButtonId.match(\\"sort\\")) {
                    sDialogTab = \\"sort\\";
                } else if (sButtonId.match(\\"group\\")) {
                    sDialogTab = \\"group\\";
                }
            }
            // load asynchronous XML fragment
            if (!this.byId(\\"viewSettingsDialog\\")) {
                Fragment.load({
                    id: this.getView().getId(),
                    name: \\"test.me.view.ViewSettingsDialog\\",
                    controller: this
                }).then(function(oDialog){
                    // connect dialog to the root view of this component (models, lifecycle)
                    this.getView().addDependent(oDialog);
                    oDialog.addStyleClass(this.getOwnerComponent().getContentDensityClass());
                    oDialog.open(sDialogTab);
                }.bind(this));
            } else {
                this.byId(\\"viewSettingsDialog\\").open(sDialogTab);
            }
        },

        /**
         * Event handler called when ViewSettingsDialog has been confirmed, i.e.
         * has been closed with 'OK'. In the case, the currently chosen filters, sorters or groupers
         * are applied to the list, which can also mean that they
         * are removed from the list, in case they are
         * removed in the ViewSettingsDialog.
         * @param {sap.ui.base.Event} oEvent the confirm event
         * @public
         */
        onConfirmViewSettingsDialog: function (oEvent) {
            
            var aFilterItems = oEvent.getParameters().filterItems,
                aFilters = [],
                aCaptions = [];

            // update filter state:
            // combine the filter array and the filter string
            aFilterItems.forEach(function (oItem) {
                switch (oItem.getKey()) {
                    case \\"Filter1\\" :
                        aFilters.push(new Filter(\\"UnitsInStock\\", FilterOperator.LE, 100));
                        break;
                    case \\"Filter2\\" :
                        aFilters.push(new Filter(\\"UnitsInStock\\", FilterOperator.GT, 100));
                        break;
                    default :
                        break;
                }
                aCaptions.push(oItem.getText());
            });

            this._oListFilterState.aFilter = aFilters;
            this._updateFilterBar(aCaptions.join(\\", \\"));
            this._applyFilterSearch();
            this._applySortGroup(oEvent);
        },

        /**
         * Apply the chosen sorter and grouper to the list
         * @param {sap.ui.base.Event} oEvent the confirm event
         * @private
         */
        _applySortGroup: function (oEvent) {
            var mParams = oEvent.getParameters(),
                sPath,
                bDescending,
                aSorters = [];
            
            // apply sorter to binding
            // (grouping comes before sorting)
            if (mParams.groupItem) {
                sPath = mParams.groupItem.getKey();
                bDescending = mParams.groupDescending;
                var vGroup = this._oGroupFunctions[sPath];
                aSorters.push(new Sorter(sPath, bDescending, vGroup));
            }
            
            sPath = mParams.sortItem.getKey();
            bDescending = mParams.sortDescending;
            aSorters.push(new Sorter(sPath, bDescending));
            this._oList.getBinding(\\"items\\").sort(aSorters);
        },

        /**
         * Event handler for the list selection event
         * @param {sap.ui.base.Event} oEvent the list selectionChange event
         * @public
         */
        onSelectionChange: function (oEvent) {
            var oList = oEvent.getSource(),
                bSelected = oEvent.getParameter(\\"selected\\");

            // skip navigation when deselecting an item in multi selection mode
            if (!(oList.getMode() === \\"MultiSelect\\" && !bSelected)) {
                // get the list item, either from the listItem parameter or from the event's source itself (will depend on the device-dependent mode).
                this._showDetail(oEvent.getParameter(\\"listItem\\") || oEvent.getSource());
            }
        },

        /**
         * Event handler for the bypassed event, which is fired when no routing pattern matched.
         * If there was an object selected in the list, that selection is removed.
         * @public
         */
        onBypassed: function () {
            this._oList.removeSelections(true);
        },

        /**
         * Used to create GroupHeaders with non-capitalized caption.
         * These headers are inserted into the list to
         * group the list's items.
         * @param {Object} oGroup group whose text is to be displayed
         * @public
         * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.
         */
        createGroupHeader: function (oGroup) {
            return new GroupHeaderListItem({
                title : oGroup.text,
                upperCase : false
            });
        },

        /**
         * Event handler for navigating back.
         * We navigate back in the browser history
         * @public
         */
        onNavBack: function() {
            // eslint-disable-next-line sap-no-history-manipulation
            history.go(-1);
        },

        /* =========================================================== */
        /* begin: internal methods                                     */
        /* =========================================================== */


        _createViewModel: function() {
            return new JSONModel({
                isFilterBarVisible: false,
                filterBarLabel: \\"\\",
                delay: 0,
                title: this.getResourceBundle().getText(\\"listTitleCount\\", [0]),
                noDataText: this.getResourceBundle().getText(\\"listListNoDataText\\"),
                sortBy: \\"ProductName\\",
                groupBy: \\"None\\"
            });
        },

        _onMasterMatched:  function() {
            //Set the layout property of the FCL control to 'OneColumn'
            this.getModel(\\"appView\\").setProperty(\\"/layout\\", \\"OneColumn\\");
        },

        /**
         * Shows the selected item on the detail page
         * On phones a additional history entry is created
         * @param {sap.m.ObjectListItem} oItem selected Item
         * @private
         */
        _showDetail: function (oItem) {
            var bReplace = !Device.system.phone;
            // set the layout property of FCL control to show two columns
            this.getModel(\\"appView\\").setProperty(\\"/layout\\", \\"TwoColumnsMidExpanded\\");
            this.getRouter().navTo(\\"object\\", {
                objectId : oItem.getBindingContext().getProperty(\\"ProductID\\")
            }, bReplace);
        },

        /**
         * Sets the item count on the list header
         * @param {integer} iTotalItems the total number of items in the list
         * @private
         */
        _updateListItemCount: function (iTotalItems) {
            var sTitle;
            // only update the counter if the length is final
            if (this._oList.getBinding(\\"items\\").isLengthFinal()) {
                sTitle = this.getResourceBundle().getText(\\"listTitleCount\\", [iTotalItems]);
                this.getModel(\\"listView\\").setProperty(\\"/title\\", sTitle);
            }
        },

        /**
         * Internal helper method to apply both filter and search state together on the list binding
         * @private
         */
        _applyFilterSearch: function () {
            var aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),
                oViewModel = this.getModel(\\"listView\\");
            this._oList.getBinding(\\"items\\").filter(aFilters, \\"Application\\");
            // changes the noDataText of the list in case there are no filter results
            if (aFilters.length !== 0) {
                oViewModel.setProperty(\\"/noDataText\\", this.getResourceBundle().getText(\\"listListNoDataWithFilterOrSearchText\\"));
            } else if (this._oListFilterState.aSearch.length > 0) {
                // only reset the no data text to default when no new search was triggered
                oViewModel.setProperty(\\"/noDataText\\", this.getResourceBundle().getText(\\"listListNoDataText\\"));
            }
        },

        /**
         * Internal helper method that sets the filter bar visibility property and the label's caption to be shown
         * @param {string} sFilterBarText the selected filter value
         * @private
         */
        _updateFilterBar : function (sFilterBarText) {
            var oViewModel = this.getModel(\\"listView\\");
            oViewModel.setProperty(\\"/isFilterBarVisible\\", (this._oListFilterState.aFilter.length > 0));
            oViewModel.setProperty(\\"/filterBarLabel\\", this.getResourceBundle().getText(\\"listFilterBarText\\", [sFilterBarText]));
        }

    });

});",
    "state": "modified",
  },
  "webapp/controller/ListSelector.js": Object {
    "contents": "sap.ui.define([
    \\"sap/ui/base/Object\\",
    \\"sap/base/Log\\"
], function (BaseObject, Log) {
    \\"use strict\\";

    return BaseObject.extend(\\"test.me.controller.ListSelector\\", {

        /**
         * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList
         * function.
         * @class
         * @public
         */

        constructor : function () {
            this._oWhenListHasBeenSet = new Promise(function (fnResolveListHasBeenSet) {
                this._fnResolveListHasBeenSet = fnResolveListHasBeenSet;
            }.bind(this));
            // This promise needs to be created in the constructor, since it is allowed to
            // invoke selectItem functions before calling setBoundMasterList
            this.oWhenListLoadingIsDone = new Promise(function (fnResolve, fnReject) {
                this._oWhenListHasBeenSet
                    .then(function (oList) {
                        oList.getBinding(\\"items\\").attachEventOnce(\\"dataReceived\\",
                            function () {
                                if (this._oList.getItems().length) {
                                    fnResolve({
                                        list : oList
                                    });
                                } else {
                                    // No items in the list
                                    fnReject({
                                        list : oList
                                    });
                                }
                            }.bind(this)
                        );
                    }.bind(this));
            }.bind(this));
        },

        /**
         * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.
         * May only be invoked once per ListSelector instance.
         * @param {sap.m.List} oList The list all the select functions will be invoked on.
         * @public
         */
        setBoundMasterList : function (oList) {
            this._oList = oList;
            this._fnResolveListHasBeenSet(oList);
        },

        /**
         * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,
         * no selection/scrolling will happen
         * @param {string} sBindingPath the binding path matching the binding path of a list item
         * @public
         */
        selectAListItem : function (sBindingPath) {

            this.oWhenListLoadingIsDone.then(
                function () {
                    var oList = this._oList,
                        oSelectedItem;

                    if (oList.getMode() === \\"None\\") {
                        return;
                    }

                    oSelectedItem = oList.getSelectedItem();

                    // skip update if the current selection is already matching the object path
                    if (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {
                        return;
                    }

                    oList.getItems().some(function (oItem) {
                        if (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {
                            oList.setSelectedItem(oItem);
                            return true;
                        }
                    });
                }.bind(this),
                function () {
                    Log.warning(\\"Could not select the list item with the path\\" + sBindingPath + \\" because the list encountered an error or had no items\\");
                }
            );
        },

        /**
         * Removes all selections from list.
         * Does not trigger 'selectionChange' event on list, though.
         * @public
         */
        clearMasterListSelection : function () {
            //use promise to make sure that 'this._oList' is available
            this._oWhenListHasBeenSet.then(function () {
                this._oList.removeSelections(true);
            }.bind(this));
        }
    });
});",
    "state": "modified",
  },
  "webapp/controller/NotFound.controller.js": Object {
    "contents": "sap.ui.define([
    \\"./BaseController\\"
], function (BaseController) {
    \\"use strict\\";

    return BaseController.extend(\\"test.me.controller.NotFound\\", {

        onInit: function () {
            this.getRouter().getTarget(\\"notFound\\").attachDisplay(this._onNotFoundDisplayed, this);
        },

        _onNotFoundDisplayed : function () {
            this.getModel(\\"appView\\").setProperty(\\"/layout\\", \\"OneColumn\\");
        }
    });
});",
    "state": "modified",
  },
  "webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for test.me

#Texts for manifest.json

#XTIT: Application name
appTitle=My Test App

#YDES: Application description
appDescription=Test App Description
#~~~ List View ~~~~~~~~~~~~~~~~~~~~~~~~~~

#XTIT: List view title with placeholder for the number of items
listTitleCount=Products ({0})

#XTOL: Tooltip for the search field
listSearchTooltip=Enter an Products name or a part of it.

#XBLI: text for a list with no data
listListNoDataText=No Products are currently available

#XBLI: text for a list with no data with filter or search
listListNoDataWithFilterOrSearchText=No matching Products found

#XSEL: Option to sort the list by ProductName
listSort1=Sort By ProductName


#XSEL: Option to sort the list by UnitsInStock
listSort2=Sort By UnitsInStock

#XSEL: Option to filter the list by UnitsInStock
listFilterName=UnitsInStock

#XSEL: Option to not filter the list
listFilterNone=none

#XSEL: Option to filter the list by  if the value is less than 100
listFilter1=<100 

#XSEL: Option to filter the list by  if the value is greater than 100
listFilter2=>100 

#YMSG: Filter text that is displayed above the list
listFilterBarText=Filtered by {0}

#XSEL: Option to not group the list
listGroupNone=(Not grouped)

#XSEL: Option to group the list by UnitsInStock
listGroup1=UnitsInStock Group

#XGRP: Group header UnitsInStock
listGroup1Header1=UnitsInStock 20 or less

#XGRP: Group header UnitsInStock
listGroup1Header2=UnitsInStock higher than 20


#~~~ Detail View ~~~~~~~~~~~~~~~~~~~~~~~~~~

#XTOL: Icon Tab Bar Info
detailIconTabBarInfo=Info

#XTOL: Icon Tab Bar Attachments
detailIconTabBarAttachments=Attachments

#XTOL: Tooltip text for close column button
closeColumn=Close


#XBLI: Text for the Products table with no data
detailLineItemTableNoDataText=No Products

#XTIT: Title of the Products table
detailLineItemTableHeading=Products

#XTIT: Title of the Products table
detailLineItemTableHeadingCount=Products ({0})

#XGRP: Title for the  column in the Products table
detailLineItemTableIDColumn=

#XGRP: Title for the  column in the Products table
detailLineItemTableUnitNumberColumn=


#XTIT: Send E-Mail subject
shareSendEmailObjectSubject=<Email subject including object identifier PLEASE REPLACE ACCORDING TO YOUR USE CASE> {0}

#YMSG: Send E-Mail message
shareSendEmailObjectMessage=<Email body PLEASE REPLACE ACCORDING TO YOUR USE CASE> {0} (id: {1})\\\\r\\\\n{2}

#XBUT: Text for the send e-mail button
sendEmail=Send E-Mail

#XTIT: Title text for the price
priceTitle=Price

#~~~ Not Found View ~~~~~~~~~~~~~~~~~~~~~~~

#XTIT: Not found view title
notFoundTitle=Not Found

#YMSG: The Products not found text is displayed when there is no Products with this id
noObjectFoundText=This Products is not available

#YMSG: The not found text is displayed when there was an error loading the resource (404 error)
notFoundText=The requested resource was not found

#~~~ Not Available View ~~~~~~~~~~~~~~~~~~~~~~~

#XTIT: List view title
notAvailableViewTitle=Products

#~~~ Error Handling ~~~~~~~~~~~~~~~~~~~~~~~

#YMSG: Error dialog description
errorText=Sorry, a technical error occurred! Please try again later.",
    "state": "modified",
  },
  "webapp/index.html": Object {
    "contents": "<!DOCTYPE html>
<html lang=\\"en\\">
<head>
    <meta charset=\\"UTF-8\\">
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">
    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
    <title>My Test App</title>
    <style>
        html, body, body > div, #container, #container-uiarea {
            height: 100%;
        }
    </style>
    <script
        id=\\"sap-ui-bootstrap\\"
        src=\\"resources/sap-ui-core.js\\"
        data-sap-ui-theme=\\"sap_fiori_3\\"
        data-sap-ui-resourceroots='{
            \\"test.me\\": \\"./\\"
        }'
        data-sap-ui-compatVersion=\\"edge\\"
        data-sap-ui-async=\\"true\\"
        data-sap-ui-frameOptions=\\"trusted\\"
    ></script>
    <script id=\\"locate-reuse-libs\\" src=\\"./utils/locate-reuse-libs.js\\"
        data-sap-ui-manifest-uri=\\"./manifest.json\\"
        data-sap-ui-componentName=\\"test.me\\">
    </script> 
</head>
<body class=\\"sapUiBody sapUiSizeCompact\\" id=\\"content\\">
    <div
        data-sap-ui-component
        data-name=\\"test.me\\"
        data-id=\\"container\\"
        data-settings='{\\"id\\" : \\"test.me\\"}'
        data-handle-validation=\\"true\\"
    ></div>
</body>
</html>",
    "state": "modified",
  },
  "webapp/localService/metadata.xml": Object {
    "contents": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\" standalone=\\"yes\\"?>
<edmx:Edmx Version=\\"1.0\\" xmlns:edmx=\\"http://schemas.microsoft.com/ado/2007/06/edmx\\">
    <edmx:DataServices xmlns:m=\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\" m:DataServiceVersion=\\"1.0\\">
        <Schema Namespace=\\"NorthwindModel\\" xmlns:d=\\"http://schemas.microsoft.com/ado/2007/08/dataservices\\" xmlns:m=\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\" xmlns=\\"http://schemas.microsoft.com/ado/2008/09/edm\\">
            <EntityType Name=\\"Category\\">
                <Key>
                    <PropertyRef Name=\\"CategoryID\\" />
                </Key>
                <Property Name=\\"CategoryID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Description\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"Max\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Picture\\" Type=\\"Edm.Binary\\" Nullable=\\"true\\" MaxLength=\\"Max\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Products\\" Relationship=\\"NorthwindModel.FK_Products_Categories\\" FromRole=\\"Categories\\" ToRole=\\"Products\\" />
            </EntityType>
            <EntityType Name=\\"CustomerDemographic\\">
                <Key>
                    <PropertyRef Name=\\"CustomerTypeID\\" />
                </Key>
                <Property Name=\\"CustomerTypeID\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"CustomerDesc\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"Max\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Customers\\" Relationship=\\"NorthwindModel.CustomerCustomerDemo\\" FromRole=\\"CustomerDemographics\\" ToRole=\\"Customers\\" />
            </EntityType>
            <EntityType Name=\\"Customer\\">
                <Key>
                    <PropertyRef Name=\\"CustomerID\\" />
                </Key>
                <Property Name=\\"CustomerID\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"5\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactTitle\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Phone\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Fax\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Orders\\" Relationship=\\"NorthwindModel.FK_Orders_Customers\\" FromRole=\\"Customers\\" ToRole=\\"Orders\\" />
                <NavigationProperty Name=\\"CustomerDemographics\\" Relationship=\\"NorthwindModel.CustomerCustomerDemo\\" FromRole=\\"Customers\\" ToRole=\\"CustomerDemographics\\" />
            </EntityType>
            <EntityType Name=\\"Employee\\">
                <Key>
                    <PropertyRef Name=\\"EmployeeID\\" />
                </Key>
                <Property Name=\\"EmployeeID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"LastName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"FirstName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Title\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"TitleOfCourtesy\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"25\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"BirthDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"HireDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"HomePhone\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Extension\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"4\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Photo\\" Type=\\"Edm.Binary\\" Nullable=\\"true\\" MaxLength=\\"Max\\" FixedLength=\\"false\\" />
                <Property Name=\\"Notes\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"Max\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ReportsTo\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"PhotoPath\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"255\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Employees1\\" Relationship=\\"NorthwindModel.FK_Employees_Employees\\" FromRole=\\"Employees\\" ToRole=\\"Employees1\\" />
                <NavigationProperty Name=\\"Employee1\\" Relationship=\\"NorthwindModel.FK_Employees_Employees\\" FromRole=\\"Employees1\\" ToRole=\\"Employees\\" />
                <NavigationProperty Name=\\"Orders\\" Relationship=\\"NorthwindModel.FK_Orders_Employees\\" FromRole=\\"Employees\\" ToRole=\\"Orders\\" />
                <NavigationProperty Name=\\"Territories\\" Relationship=\\"NorthwindModel.EmployeeTerritories\\" FromRole=\\"Employees\\" ToRole=\\"Territories\\" />
            </EntityType>
            <EntityType Name=\\"Order_Detail\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"ProductID\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"false\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"Quantity\\" Type=\\"Edm.Int16\\" Nullable=\\"false\\" />
                <Property Name=\\"Discount\\" Type=\\"Edm.Single\\" Nullable=\\"false\\" />
                <NavigationProperty Name=\\"Order\\" Relationship=\\"NorthwindModel.FK_Order_Details_Orders\\" FromRole=\\"Order_Details\\" ToRole=\\"Orders\\" />
                <NavigationProperty Name=\\"Product\\" Relationship=\\"NorthwindModel.FK_Order_Details_Products\\" FromRole=\\"Order_Details\\" ToRole=\\"Products\\" />
            </EntityType>
            <EntityType Name=\\"Order\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"CustomerID\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"5\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"EmployeeID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"OrderDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"RequiredDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShipVia\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"Freight\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"ShipName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipAddress\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCity\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipRegion\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipPostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCountry\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Customer\\" Relationship=\\"NorthwindModel.FK_Orders_Customers\\" FromRole=\\"Orders\\" ToRole=\\"Customers\\" />
                <NavigationProperty Name=\\"Employee\\" Relationship=\\"NorthwindModel.FK_Orders_Employees\\" FromRole=\\"Orders\\" ToRole=\\"Employees\\" />
                <NavigationProperty Name=\\"Order_Details\\" Relationship=\\"NorthwindModel.FK_Order_Details_Orders\\" FromRole=\\"Orders\\" ToRole=\\"Order_Details\\" />
                <NavigationProperty Name=\\"Shipper\\" Relationship=\\"NorthwindModel.FK_Orders_Shippers\\" FromRole=\\"Orders\\" ToRole=\\"Shippers\\" />
            </EntityType>
            <EntityType Name=\\"Product\\">
                <Key>
                    <PropertyRef Name=\\"ProductID\\" />
                </Key>
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"SupplierID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"CategoryID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"QuantityPerUnit\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"UnitsInStock\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"UnitsOnOrder\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"ReorderLevel\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"Discontinued\\" Type=\\"Edm.Boolean\\" Nullable=\\"false\\" />
                <NavigationProperty Name=\\"Category\\" Relationship=\\"NorthwindModel.FK_Products_Categories\\" FromRole=\\"Products\\" ToRole=\\"Categories\\" />
                <NavigationProperty Name=\\"Order_Details\\" Relationship=\\"NorthwindModel.FK_Order_Details_Products\\" FromRole=\\"Products\\" ToRole=\\"Order_Details\\" />
                <NavigationProperty Name=\\"Supplier\\" Relationship=\\"NorthwindModel.FK_Products_Suppliers\\" FromRole=\\"Products\\" ToRole=\\"Suppliers\\" />
            </EntityType>
            <EntityType Name=\\"Region\\">
                <Key>
                    <PropertyRef Name=\\"RegionID\\" />
                </Key>
                <Property Name=\\"RegionID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"RegionDescription\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"50\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <NavigationProperty Name=\\"Territories\\" Relationship=\\"NorthwindModel.FK_Territories_Region\\" FromRole=\\"Region\\" ToRole=\\"Territories\\" />
            </EntityType>
            <EntityType Name=\\"Shipper\\">
                <Key>
                    <PropertyRef Name=\\"ShipperID\\" />
                </Key>
                <Property Name=\\"ShipperID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Phone\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Orders\\" Relationship=\\"NorthwindModel.FK_Orders_Shippers\\" FromRole=\\"Shippers\\" ToRole=\\"Orders\\" />
            </EntityType>
            <EntityType Name=\\"Supplier\\">
                <Key>
                    <PropertyRef Name=\\"SupplierID\\" />
                </Key>
                <Property Name=\\"SupplierID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactTitle\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Phone\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Fax\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"HomePage\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"Max\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Products\\" Relationship=\\"NorthwindModel.FK_Products_Suppliers\\" FromRole=\\"Suppliers\\" ToRole=\\"Products\\" />
            </EntityType>
            <EntityType Name=\\"Territory\\">
                <Key>
                    <PropertyRef Name=\\"TerritoryID\\" />
                </Key>
                <Property Name=\\"TerritoryID\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"TerritoryDescription\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"50\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"RegionID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <NavigationProperty Name=\\"Region\\" Relationship=\\"NorthwindModel.FK_Territories_Region\\" FromRole=\\"Territories\\" ToRole=\\"Region\\" />
                <NavigationProperty Name=\\"Employees\\" Relationship=\\"NorthwindModel.EmployeeTerritories\\" FromRole=\\"Territories\\" ToRole=\\"Employees\\" />
            </EntityType>
            <EntityType Name=\\"Alphabetical_list_of_product\\">
                <Key>
                    <PropertyRef Name=\\"ProductID\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                    <PropertyRef Name=\\"Discontinued\\" />
                    <PropertyRef Name=\\"CategoryName\\" />
                </Key>
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"SupplierID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"CategoryID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"QuantityPerUnit\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"UnitsInStock\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"UnitsOnOrder\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"ReorderLevel\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"Discontinued\\" Type=\\"Edm.Boolean\\" Nullable=\\"false\\" />
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Category_Sales_for_1997\\">
                <Key>
                    <PropertyRef Name=\\"CategoryName\\" />
                </Key>
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"CategorySales\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Current_Product_List\\">
                <Key>
                    <PropertyRef Name=\\"ProductID\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                </Key>
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Customer_and_Suppliers_by_City\\">
                <Key>
                    <PropertyRef Name=\\"CompanyName\\" />
                    <PropertyRef Name=\\"Relationship\\" />
                </Key>
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Relationship\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"9\\" Unicode=\\"false\\" FixedLength=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Invoice\\">
                <Key>
                    <PropertyRef Name=\\"CustomerName\\" />
                    <PropertyRef Name=\\"Salesperson\\" />
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"ShipperName\\" />
                    <PropertyRef Name=\\"ProductID\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                    <PropertyRef Name=\\"UnitPrice\\" />
                    <PropertyRef Name=\\"Quantity\\" />
                    <PropertyRef Name=\\"Discount\\" />
                </Key>
                <Property Name=\\"ShipName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipAddress\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCity\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipRegion\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipPostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCountry\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"CustomerID\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"5\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"CustomerName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Salesperson\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"31\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"OrderDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"RequiredDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShipperName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"false\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"Quantity\\" Type=\\"Edm.Int16\\" Nullable=\\"false\\" />
                <Property Name=\\"Discount\\" Type=\\"Edm.Single\\" Nullable=\\"false\\" />
                <Property Name=\\"ExtendedPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"Freight\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Order_Details_Extended\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"ProductID\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                    <PropertyRef Name=\\"UnitPrice\\" />
                    <PropertyRef Name=\\"Quantity\\" />
                    <PropertyRef Name=\\"Discount\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"false\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"Quantity\\" Type=\\"Edm.Int16\\" Nullable=\\"false\\" />
                <Property Name=\\"Discount\\" Type=\\"Edm.Single\\" Nullable=\\"false\\" />
                <Property Name=\\"ExtendedPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Order_Subtotal\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"Subtotal\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Orders_Qry\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"CompanyName\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"CustomerID\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"5\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"EmployeeID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"OrderDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"RequiredDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShipVia\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"Freight\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"ShipName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipAddress\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCity\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipRegion\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipPostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCountry\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Product_Sales_for_1997\\">
                <Key>
                    <PropertyRef Name=\\"CategoryName\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                </Key>
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductSales\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Products_Above_Average_Price\\">
                <Key>
                    <PropertyRef Name=\\"ProductName\\" />
                </Key>
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Products_by_Category\\">
                <Key>
                    <PropertyRef Name=\\"CategoryName\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                    <PropertyRef Name=\\"Discontinued\\" />
                </Key>
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"QuantityPerUnit\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitsInStock\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"Discontinued\\" Type=\\"Edm.Boolean\\" Nullable=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Sales_by_Category\\">
                <Key>
                    <PropertyRef Name=\\"CategoryID\\" />
                    <PropertyRef Name=\\"CategoryName\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                </Key>
                <Property Name=\\"CategoryID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductSales\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Sales_Totals_by_Amount\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"CompanyName\\" />
                </Key>
                <Property Name=\\"SaleAmount\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
            </EntityType>
            <EntityType Name=\\"Summary_of_Sales_by_Quarter\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                </Key>
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"Subtotal\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Summary_of_Sales_by_Year\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                </Key>
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"Subtotal\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <Association Name=\\"FK_Products_Categories\\">
                <End Role=\\"Categories\\" Type=\\"NorthwindModel.Category\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Products\\" Type=\\"NorthwindModel.Product\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Categories\\">
                        <PropertyRef Name=\\"CategoryID\\" />
                    </Principal>
                    <Dependent Role=\\"Products\\">
                        <PropertyRef Name=\\"CategoryID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Orders_Customers\\">
                <End Role=\\"Customers\\" Type=\\"NorthwindModel.Customer\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Orders\\" Type=\\"NorthwindModel.Order\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Customers\\">
                        <PropertyRef Name=\\"CustomerID\\" />
                    </Principal>
                    <Dependent Role=\\"Orders\\">
                        <PropertyRef Name=\\"CustomerID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Employees_Employees\\">
                <End Role=\\"Employees\\" Type=\\"NorthwindModel.Employee\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Employees1\\" Type=\\"NorthwindModel.Employee\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Employees\\">
                        <PropertyRef Name=\\"EmployeeID\\" />
                    </Principal>
                    <Dependent Role=\\"Employees1\\">
                        <PropertyRef Name=\\"ReportsTo\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Orders_Employees\\">
                <End Role=\\"Employees\\" Type=\\"NorthwindModel.Employee\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Orders\\" Type=\\"NorthwindModel.Order\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Employees\\">
                        <PropertyRef Name=\\"EmployeeID\\" />
                    </Principal>
                    <Dependent Role=\\"Orders\\">
                        <PropertyRef Name=\\"EmployeeID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Order_Details_Orders\\">
                <End Role=\\"Orders\\" Type=\\"NorthwindModel.Order\\" Multiplicity=\\"1\\" />
                <End Role=\\"Order_Details\\" Type=\\"NorthwindModel.Order_Detail\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Orders\\">
                        <PropertyRef Name=\\"OrderID\\" />
                    </Principal>
                    <Dependent Role=\\"Order_Details\\">
                        <PropertyRef Name=\\"OrderID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Order_Details_Products\\">
                <End Role=\\"Products\\" Type=\\"NorthwindModel.Product\\" Multiplicity=\\"1\\" />
                <End Role=\\"Order_Details\\" Type=\\"NorthwindModel.Order_Detail\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Products\\">
                        <PropertyRef Name=\\"ProductID\\" />
                    </Principal>
                    <Dependent Role=\\"Order_Details\\">
                        <PropertyRef Name=\\"ProductID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Orders_Shippers\\">
                <End Role=\\"Shippers\\" Type=\\"NorthwindModel.Shipper\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Orders\\" Type=\\"NorthwindModel.Order\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Shippers\\">
                        <PropertyRef Name=\\"ShipperID\\" />
                    </Principal>
                    <Dependent Role=\\"Orders\\">
                        <PropertyRef Name=\\"ShipVia\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Products_Suppliers\\">
                <End Role=\\"Suppliers\\" Type=\\"NorthwindModel.Supplier\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Products\\" Type=\\"NorthwindModel.Product\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Suppliers\\">
                        <PropertyRef Name=\\"SupplierID\\" />
                    </Principal>
                    <Dependent Role=\\"Products\\">
                        <PropertyRef Name=\\"SupplierID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Territories_Region\\">
                <End Role=\\"Region\\" Type=\\"NorthwindModel.Region\\" Multiplicity=\\"1\\" />
                <End Role=\\"Territories\\" Type=\\"NorthwindModel.Territory\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Region\\">
                        <PropertyRef Name=\\"RegionID\\" />
                    </Principal>
                    <Dependent Role=\\"Territories\\">
                        <PropertyRef Name=\\"RegionID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"CustomerCustomerDemo\\">
                <End Role=\\"CustomerDemographics\\" Type=\\"NorthwindModel.CustomerDemographic\\" Multiplicity=\\"*\\" />
                <End Role=\\"Customers\\" Type=\\"NorthwindModel.Customer\\" Multiplicity=\\"*\\" />
            </Association>
            <Association Name=\\"EmployeeTerritories\\">
                <End Role=\\"Employees\\" Type=\\"NorthwindModel.Employee\\" Multiplicity=\\"*\\" />
                <End Role=\\"Territories\\" Type=\\"NorthwindModel.Territory\\" Multiplicity=\\"*\\" />
            </Association>
        </Schema>
        <Schema Namespace=\\"ODataWeb.Northwind.Model\\" xmlns:d=\\"http://schemas.microsoft.com/ado/2007/08/dataservices\\" xmlns:m=\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\" xmlns=\\"http://schemas.microsoft.com/ado/2008/09/edm\\">
            <EntityContainer Name=\\"NorthwindEntities\\" p7:LazyLoadingEnabled=\\"true\\" m:IsDefaultEntityContainer=\\"true\\" xmlns:p7=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\">
                <EntitySet Name=\\"Categories\\" EntityType=\\"NorthwindModel.Category\\" />
                <EntitySet Name=\\"CustomerDemographics\\" EntityType=\\"NorthwindModel.CustomerDemographic\\" />
                <EntitySet Name=\\"Customers\\" EntityType=\\"NorthwindModel.Customer\\" />
                <EntitySet Name=\\"Employees\\" EntityType=\\"NorthwindModel.Employee\\" />
                <EntitySet Name=\\"Order_Details\\" EntityType=\\"NorthwindModel.Order_Detail\\" />
                <EntitySet Name=\\"Orders\\" EntityType=\\"NorthwindModel.Order\\" />
                <EntitySet Name=\\"Products\\" EntityType=\\"NorthwindModel.Product\\" />
                <EntitySet Name=\\"Regions\\" EntityType=\\"NorthwindModel.Region\\" />
                <EntitySet Name=\\"Shippers\\" EntityType=\\"NorthwindModel.Shipper\\" />
                <EntitySet Name=\\"Suppliers\\" EntityType=\\"NorthwindModel.Supplier\\" />
                <EntitySet Name=\\"Territories\\" EntityType=\\"NorthwindModel.Territory\\" />
                <EntitySet Name=\\"Alphabetical_list_of_products\\" EntityType=\\"NorthwindModel.Alphabetical_list_of_product\\" />
                <EntitySet Name=\\"Category_Sales_for_1997\\" EntityType=\\"NorthwindModel.Category_Sales_for_1997\\" />
                <EntitySet Name=\\"Current_Product_Lists\\" EntityType=\\"NorthwindModel.Current_Product_List\\" />
                <EntitySet Name=\\"Customer_and_Suppliers_by_Cities\\" EntityType=\\"NorthwindModel.Customer_and_Suppliers_by_City\\" />
                <EntitySet Name=\\"Invoices\\" EntityType=\\"NorthwindModel.Invoice\\" />
                <EntitySet Name=\\"Order_Details_Extendeds\\" EntityType=\\"NorthwindModel.Order_Details_Extended\\" />
                <EntitySet Name=\\"Order_Subtotals\\" EntityType=\\"NorthwindModel.Order_Subtotal\\" />
                <EntitySet Name=\\"Orders_Qries\\" EntityType=\\"NorthwindModel.Orders_Qry\\" />
                <EntitySet Name=\\"Product_Sales_for_1997\\" EntityType=\\"NorthwindModel.Product_Sales_for_1997\\" />
                <EntitySet Name=\\"Products_Above_Average_Prices\\" EntityType=\\"NorthwindModel.Products_Above_Average_Price\\" />
                <EntitySet Name=\\"Products_by_Categories\\" EntityType=\\"NorthwindModel.Products_by_Category\\" />
                <EntitySet Name=\\"Sales_by_Categories\\" EntityType=\\"NorthwindModel.Sales_by_Category\\" />
                <EntitySet Name=\\"Sales_Totals_by_Amounts\\" EntityType=\\"NorthwindModel.Sales_Totals_by_Amount\\" />
                <EntitySet Name=\\"Summary_of_Sales_by_Quarters\\" EntityType=\\"NorthwindModel.Summary_of_Sales_by_Quarter\\" />
                <EntitySet Name=\\"Summary_of_Sales_by_Years\\" EntityType=\\"NorthwindModel.Summary_of_Sales_by_Year\\" />
                <AssociationSet Name=\\"FK_Products_Categories\\" Association=\\"NorthwindModel.FK_Products_Categories\\">
                    <End Role=\\"Categories\\" EntitySet=\\"Categories\\" />
                    <End Role=\\"Products\\" EntitySet=\\"Products\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Orders_Customers\\" Association=\\"NorthwindModel.FK_Orders_Customers\\">
                    <End Role=\\"Customers\\" EntitySet=\\"Customers\\" />
                    <End Role=\\"Orders\\" EntitySet=\\"Orders\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Employees_Employees\\" Association=\\"NorthwindModel.FK_Employees_Employees\\">
                    <End Role=\\"Employees\\" EntitySet=\\"Employees\\" />
                    <End Role=\\"Employees1\\" EntitySet=\\"Employees\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Orders_Employees\\" Association=\\"NorthwindModel.FK_Orders_Employees\\">
                    <End Role=\\"Employees\\" EntitySet=\\"Employees\\" />
                    <End Role=\\"Orders\\" EntitySet=\\"Orders\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Order_Details_Orders\\" Association=\\"NorthwindModel.FK_Order_Details_Orders\\">
                    <End Role=\\"Orders\\" EntitySet=\\"Orders\\" />
                    <End Role=\\"Order_Details\\" EntitySet=\\"Order_Details\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Order_Details_Products\\" Association=\\"NorthwindModel.FK_Order_Details_Products\\">
                    <End Role=\\"Products\\" EntitySet=\\"Products\\" />
                    <End Role=\\"Order_Details\\" EntitySet=\\"Order_Details\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Orders_Shippers\\" Association=\\"NorthwindModel.FK_Orders_Shippers\\">
                    <End Role=\\"Shippers\\" EntitySet=\\"Shippers\\" />
                    <End Role=\\"Orders\\" EntitySet=\\"Orders\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Products_Suppliers\\" Association=\\"NorthwindModel.FK_Products_Suppliers\\">
                    <End Role=\\"Suppliers\\" EntitySet=\\"Suppliers\\" />
                    <End Role=\\"Products\\" EntitySet=\\"Products\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Territories_Region\\" Association=\\"NorthwindModel.FK_Territories_Region\\">
                    <End Role=\\"Region\\" EntitySet=\\"Regions\\" />
                    <End Role=\\"Territories\\" EntitySet=\\"Territories\\" />
                </AssociationSet>
                <AssociationSet Name=\\"CustomerCustomerDemo\\" Association=\\"NorthwindModel.CustomerCustomerDemo\\">
                    <End Role=\\"CustomerDemographics\\" EntitySet=\\"CustomerDemographics\\" />
                    <End Role=\\"Customers\\" EntitySet=\\"Customers\\" />
                </AssociationSet>
                <AssociationSet Name=\\"EmployeeTerritories\\" Association=\\"NorthwindModel.EmployeeTerritories\\">
                    <End Role=\\"Employees\\" EntitySet=\\"Employees\\" />
                    <End Role=\\"Territories\\" EntitySet=\\"Territories\\" />
                </AssociationSet>
            </EntityContainer>
        </Schema>
    </edmx:DataServices>
</edmx:Edmx>",
    "state": "modified",
  },
  "webapp/manifest.json": Object {
    "contents": "{
  \\"_version\\": \\"1.12.0\\",
  \\"sap.app\\": {
    \\"id\\": \\"test.me\\",
    \\"type\\": \\"application\\",
    \\"i18n\\": \\"i18n/i18n.properties\\",
    \\"applicationVersion\\": {
      \\"version\\": \\"0.0.1\\"
    },
    \\"title\\": \\"{{appTitle}}\\",
    \\"description\\": \\"{{appDescription}}\\",
    \\"resources\\": \\"resources.json\\",
    \\"sourceTemplate\\": {
      \\"id\\": \\"test-template\\",
      \\"version\\": \\"1.2.3-test\\"
    },
    \\"dataSources\\": {
      \\"mainService\\": {
        \\"uri\\": \\"/V2/Northwind/Northwind.svc/\\",
        \\"type\\": \\"OData\\",
        \\"settings\\": {
          \\"annotations\\": [],
          \\"localUri\\": \\"localService/metadata.xml\\",
          \\"odataVersion\\": \\"2.0\\"
        }
      }
    }
  },
  \\"sap.ui\\": {
    \\"technology\\": \\"UI5\\",
    \\"icons\\": {
      \\"icon\\": \\"\\",
      \\"favIcon\\": \\"\\",
      \\"phone\\": \\"\\",
      \\"phone@2\\": \\"\\",
      \\"tablet\\": \\"\\",
      \\"tablet@2\\": \\"\\"
    },
    \\"deviceTypes\\": {
      \\"desktop\\": true,
      \\"tablet\\": true,
      \\"phone\\": true
    }
  },
  \\"sap.ui5\\": {
    \\"flexEnabled\\": true,
    \\"dependencies\\": {
      \\"minUI5Version\\": \\"1.60.0\\",
      \\"libs\\": {
        \\"sap.m\\": {},
        \\"sap.ui.core\\": {},
        \\"sap.ushell\\": {},
        \\"sap.f\\": {}
      }
    },
    \\"contentDensities\\": {
      \\"compact\\": true,
      \\"cozy\\": true
    },
    \\"models\\": {
      \\"i18n\\": {
        \\"type\\": \\"sap.ui.model.resource.ResourceModel\\",
        \\"settings\\": {
          \\"bundleName\\": \\"test.me.i18n.i18n\\"
        }
      },
      \\"\\": {
        \\"dataSource\\": \\"mainService\\",
        \\"preload\\": true,
        \\"settings\\": {}
      }
    },
    \\"resources\\": {
      \\"css\\": []
    },
    \\"routing\\": {
      \\"config\\": {
        \\"routerClass\\": \\"sap.f.routing.Router\\",
        \\"viewType\\": \\"XML\\",
        \\"viewPath\\": \\"test.me.view\\",
        \\"controlId\\": \\"layout\\",
        \\"controlAggregation\\": \\"beginColumnPages\\",
        \\"bypassed\\": {
          \\"target\\": [
            \\"notFound\\"
          ]
        },
        \\"async\\": true
      },
      \\"routes\\": [
        {
          \\"pattern\\": \\"\\",
          \\"name\\": \\"list\\",
          \\"target\\": \\"list\\"
        },
        {
          \\"pattern\\": \\"Products/{objectId}\\",
          \\"name\\": \\"object\\",
          \\"target\\": [
            \\"list\\",
            \\"object\\"
          ]
        }
      ],
      \\"targets\\": {
        \\"list\\": {
          \\"viewName\\": \\"List\\",
          \\"viewLevel\\": 1,
          \\"viewId\\": \\"list\\"
        },
        \\"object\\": {
          \\"viewName\\": \\"Detail\\",
          \\"viewId\\": \\"detail\\",
          \\"viewLevel\\": 1,
          \\"controlAggregation\\": \\"midColumnPages\\"
        },
        \\"detailObjectNotFound\\": {
          \\"viewName\\": \\"DetailObjectNotFound\\",
          \\"viewId\\": \\"detailObjectNotFound\\",
          \\"controlAggregation\\": \\"midColumnPages\\"
        },
        \\"notFound\\": {
          \\"viewName\\": \\"NotFound\\",
          \\"viewId\\": \\"notFound\\"
        }
      }
    },
    \\"rootView\\": {
      \\"viewName\\": \\"test.me.view.App\\",
      \\"type\\": \\"XML\\",
      \\"async\\": true,
      \\"id\\": \\"app\\"
    }
  }
}
",
    "state": "modified",
  },
  "webapp/model/formatter.js": Object {
    "contents": "sap.ui.define([], function () {
    \\"use strict\\";

    return {
        /**
         * Rounds the currency value to 2 digits
         *
         * @public
         * @param {string} sValue value to be formatted
         * @returns {string} formatted currency value with 2 digits
         */
        currencyValue : function (sValue) {
            if (!sValue) {
                return \\"\\";
            }

            return parseFloat(sValue).toFixed(2);
        }
    };
});",
    "state": "modified",
  },
  "webapp/model/models.js": Object {
    "contents": "sap.ui.define([
    \\"sap/ui/model/json/JSONModel\\",
    \\"sap/ui/Device\\"
], 
    /**
     * provide app-view type models (as in the first \\"V\\" in MVVC)
     * 
     * @param {typeof sap.ui.model.json.JSONModel} JSONModel
     * @param {typeof sap.ui.Device} Device
     * 
     * @returns {Function} createDeviceModel() for providing runtime info for the device the UI5 app is running on
     */
    function (JSONModel, Device) {
        \\"use strict\\";

        return {
            createDeviceModel: function () {
                var oModel = new JSONModel(Device);
                oModel.setDefaultBindingMode(\\"OneWay\\");
                return oModel;
        }
    };
});",
    "state": "modified",
  },
  "webapp/test/flpSandbox.html": Object {
    "contents": "<!DOCTYPE HTML>
<html lang=\\"en\\">
<!-- Copyright (c) 2015 SAP AG, All Rights Reserved -->
<head>
    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
    <meta charset=\\"UTF-8\\">
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">
    <title>{{appTitle}}</title>

    <!-- Bootstrap the unified shell in sandbox mode for standalone usage.

         The renderer is specified in the global Unified Shell configuration object \\"sap-ushell-config\\".

         The fiori2 renderer will render the shell header allowing, for instance,
         testing of additional application setting buttons.

         The navigation target resolution service is configured in a way that the empty URL hash is
         resolved to our own application.

         This example uses relative path references for the SAPUI5 resources and test-resources;
         it might be necessary to adapt them depending on the target runtime platform.
         The sandbox platform is restricted to development or demo use cases and must NOT be used
         for productive scenarios.
    -->
    <script type=\\"text/javascript\\">
        window[\\"sap-ushell-config\\"] = {
            defaultRenderer: \\"fiori2\\",
            bootstrapPlugins: {
                \\"RuntimeAuthoringPlugin\\": {
                    component: \\"sap.ushell.plugins.rta\\",
                    config: {
                        validateAppVersion: false
                    }
                }
            },
            renderers: {
                fiori2: {
                    componentData: {
                        config: {
                            search: \\"hidden\\"
                        }
                    }
                }
            },
            applications: {
                \\"testme-app\\": {
                    title: \\"My Test App\\",
                    description: \\"Test App Description\\",
                    additionalInformation: \\"SAPUI5.Component=test.me\\",
                    applicationType: \\"URL\\",
                    url: \\"../\\"
                }
            }
        };
    </script>

    <script src=\\"../test-resources/sap/ushell/bootstrap/sandbox.js\\" id=\\"sap-ushell-bootstrap\\"></script>
    <!-- Bootstrap the UI5 core library. 'data-sap-ui-frameOptions=\\"allow\\"'' is a NON-SECURE setting for test environments -->
    <script id=\\"sap-ui-bootstrap\\"
        src=\\"../resources/sap-ui-core.js\\"
        data-sap-ui-libs=\\"sap.m,sap.ui.core,sap.ushell\\"
        data-sap-ui-async=\\"true\\"
        data-sap-ui-preload=\\"async\\"
        data-sap-ui-theme=\\"sap_fiori_3\\"
        data-sap-ui-compatVersion=\\"edge\\"
        data-sap-ui-language=\\"en\\"
        data-sap-ui-resourceroots='{\\"test.me\\": \\"../\\"}'
        data-sap-ui-frameOptions=\\"allow\\">
    </script>
    <script id=\\"locate-reuse-libs\\" src=\\"../utils/locate-reuse-libs.js\\" data-sap-ui-manifest-uri=\\"../manifest.json\\">
    </script>
</head>

<!-- UI Content -->

<body class=\\"sapUiBody\\" id=\\"content\\">
</body>

</html>
",
    "state": "modified",
  },
  "webapp/utils/locate-reuse-libs.js": Object {
    "contents": "/*eslint-disable semi, no-console*/
(function (sap) {
    var getKeys = function (libOrComp, libOrCompKeysString) {
        // SAPUI5 delivered namespaces from https://ui5.sap.com/#/api/sap
        var ui5Libs = [
            \\"sap.apf\\",
            \\"sap.base\\",
            \\"sap.chart\\",
            \\"sap.collaboration\\",
            \\"sap.f\\",
            \\"sap.fe\\",
            \\"sap.fileviewer\\",
            \\"sap.gantt\\",
            \\"sap.landvisz\\",
            \\"sap.m\\",
            \\"sap.ndc\\",
            \\"sap.ovp\\",
            \\"sap.rules\\",
            \\"sap.suite\\",
            \\"sap.tnt\\",
            \\"sap.ui\\",
            \\"sap.uiext\\",
            \\"sap.ushell\\",
            \\"sap.uxap\\",
            \\"sap.viz\\",
            \\"sap.webanalytics\\",
            \\"sap.zen\\"
        ];
        Object.keys(libOrComp).forEach(function (libOrCompKey) {
            // ignore libs or Components that start with SAPUI5 delivered namespaces
            if (
                !ui5Libs.some(function (substring) {
                    return libOrCompKey === substring || libOrCompKey.startsWith(substring + \\".\\");
                })
            ) {
                if (libOrCompKeysString.length > 0) {
                    libOrCompKeysString = libOrCompKeysString + \\",\\" + libOrCompKey;
                } else {
                    libOrCompKeysString = libOrCompKey;
                }
            }
        });
        return libOrCompKeysString;
    };

    var updateManifest = function (manifest) {
        var result = \\"\\";
        if (manifest) {
            if (manifest[\\"sap.ui5\\"] && manifest[\\"sap.ui5\\"].dependencies) {
                if (manifest[\\"sap.ui5\\"].dependencies.libs) {
                    result = getKeys(manifest[\\"sap.ui5\\"].dependencies.libs, result);
                }
                if (manifest[\\"sap.ui5\\"].dependencies.components) {
                    result = getKeys(manifest[\\"sap.ui5\\"].dependencies.components, result);
                }
            }
            if (manifest[\\"sap.ui5\\"] && manifest[\\"sap.ui5\\"].componentUsages) {
                result = getKeys(manifest[\\"sap.ui5\\"].componentUsages, result);
            }
        }
        return result;
    };

    var fioriToolsGetManifestLibs = function (manifestPath) {
        var url = manifestPath;
        return new Promise(function (resolve, reject) {
            $.ajax(url)
                .done(function (manifest) {
                    resolve(updateManifest(manifest));
                })
                .fail(function () {
                    reject(new Error(\\"Could not fetch manifest at '\\" + manifestPath));
                });
        });
    };

    var updateModuleDefinition = function (data) {
        if (data) {
            Object.keys(data).forEach(function (moduleDefinitionKey) {
                var moduleDefinition = data[moduleDefinitionKey];
                if (moduleDefinition && moduleDefinition.dependencies) {
                    moduleDefinition.dependencies.forEach(function (dependency) {
                        if (dependency.url && dependency.url.length > 0 && dependency.type === \\"UI5LIB\\") {
                            jQuery.sap.log.info(
                                \\"Registering Library \\" + dependency.componentId + \\" from server \\" + dependency.url
                            );
                            jQuery.sap.registerModulePath(dependency.componentId, dependency.url);
                        }
                    });
                }
            });
        }
    };

    /**
     * Registers the module paths for dependencies of the given component.
     * @param {string} manifestPath The the path to the app manifest path
     * for which the dependencies should be registered.
     * @returns {Promise} A promise which is resolved when the ajax request for
     * the app-index was successful and the module paths were registered.
     */
    sap.registerComponentDependencyPaths = function (manifestPath) {
        /*eslint-disable semi, consistent-return*/
        return fioriToolsGetManifestLibs(manifestPath).then(function (libs) {
            if (libs && libs.length > 0) {
                var url = \\"/sap/bc/ui2/app_index/ui5_app_info?id=\\" + libs;
                var sapClient = jQuery.sap.getUriParameters().get(\\"sap-client\\");
                if (sapClient && sapClient.length === 3) {
                    url = url + \\"&sap-client=\\" + sapClient;
                }
                return $.ajax(url).done(updateModuleDefinition);
            }
        });
    };
})(sap);

/*eslint-disable sap-browser-api-warning, sap-no-dom-access*/
var scripts = document.getElementsByTagName(\\"script\\");
var currentScript = document.getElementById(\\"locate-reuse-libs\\");
if (!currentScript) {
    currentScript = document.currentScript;
}
var manifestUri = currentScript.getAttribute(\\"data-sap-ui-manifest-uri\\");
var componentName = currentScript.getAttribute(\\"data-sap-ui-componentName\\");
var useMockserver = currentScript.getAttribute(\\"data-sap-ui-use-mockserver\\");
var bundleResources = function () {
    jQuery.sap.require(\\"jquery.sap.resources\\");
    var sLocale = sap.ui.getCore().getConfiguration().getLanguage();
    var oBundle = jQuery.sap.resources({
        url: \\"i18n/i18n.properties\\",
        locale: sLocale
    });
    document.title = oBundle.getText(\\"appTitle\\");
};
sap.registerComponentDependencyPaths(manifestUri)
    .catch(function (error) {
        jQuery.sap.log.error(error);
    })
    .finally(function () {
        // setting the app title with internationalization
        sap.ui.getCore().attachInit(bundleResources);

        if (componentName && componentName.length > 0) {
            if (useMockserver && useMockserver === \\"true\\") {
                sap.ui.getCore().attachInit(function () {
                    sap.ui.require([componentName.replace(/\\\\./g, \\"/\\") + \\"/localService/mockserver\\"], function (server) {
                        // set up test service for local testing
                        server.init();
                        // initialize the ushell sandbox component
                        sap.ushell.Container.createRenderer().placeAt(\\"content\\");
                    });
                });
            } else {
                // Requiring the ComponentSupport module automatically executes the component initialisation for all declaratively defined components
                sap.ui.require([\\"sap/ui/core/ComponentSupport\\"]);

                // setting the app title with the i18n text
                sap.ui.getCore().attachInit(bundleResources);
            }
        } else {
            sap.ui.getCore().attachInit(function () {
                // initialize the ushell sandbox component
                sap.ushell.Container.createRenderer().placeAt(\\"content\\");
            });
        }
    });

sap.registerComponentDependencyPaths(manifestUri);
",
    "state": "modified",
  },
  "webapp/view/App.view.xml": Object {
    "contents": "<mvc:View
    controllerName=\\"test.me.controller.App\\"
    displayBlock=\\"true\\"
    height=\\"100%\\"
    xmlns=\\"sap.m\\"
    xmlns:f=\\"sap.f\\"
    xmlns:mvc=\\"sap.ui.core.mvc\\">
    <App
        id=\\"app\\"
        busy=\\"{appView>/busy}\\"
        busyIndicatorDelay=\\"{appView>/delay}\\">
        <f:FlexibleColumnLayout
            id=\\"layout\\"
            layout=\\"{appView>/layout}\\"
            backgroundDesign=\\"Translucent\\">
        </f:FlexibleColumnLayout>
    </App>
</mvc:View>",
    "state": "modified",
  },
  "webapp/view/Detail.view.xml": Object {
    "contents": "<mvc:View
    controllerName=\\"test.me.controller.Detail\\"
    xmlns=\\"sap.m\\"
    xmlns:semantic=\\"sap.f.semantic\\"
    xmlns:mvc=\\"sap.ui.core.mvc\\">

    <semantic:SemanticPage
        id=\\"detailPage\\"
        busy=\\"{detailView>/busy}\\"
        busyIndicatorDelay=\\"{detailView>/delay}\\">
        <semantic:titleHeading>
            <Title
                text=\\"{ProductName}\\"
                level=\\"H2\\"/>
        </semantic:titleHeading>
        <semantic:headerContent>
            <ObjectAttribute title=\\"{i18n>priceTitle}\\"/>
            <ObjectNumber
                number=\\"{
                    path: 'UnitsInStock',
                    formatter: '.formatter.numberUnit'
                }\\"
                unit=\\"{QuantityPerUnit}\\" />
        </semantic:headerContent>
        <semantic:content>

            <Table
                id=\\"lineItemsList\\"
                width=\\"auto\\"
                items=\\"{Products}\\"
                updateFinished=\\".onListUpdateFinished\\"
                noDataText=\\"{i18n>detailLineItemTableNoDataText}\\"
                busyIndicatorDelay=\\"{detailView>/lineItemTableDelay}\\">
                <headerToolbar>
                    <Toolbar>
                        <Title
                            id=\\"lineItemsTitle\\"
                            text=\\"{detailView>/lineItemListTitle}\\"
                            titleStyle=\\"H3\\"
                            level=\\"H3\\"/>
                    </Toolbar>
                </headerToolbar>
                <columns>
                    <Column>
                        <Text text=\\"{i18n>detailLineItemTableIDColumn}\\"/>
                    </Column>
                    <Column
                        minScreenWidth=\\"Tablet\\"
                        demandPopin=\\"true\\"
                        hAlign=\\"End\\">
                        <Text text=\\"{i18n>detailLineItemTableUnitNumberColumn}\\"/>
                    </Column>
                </columns>
                <items>
                    <ColumnListItem>
                        <cells>
                            <ObjectIdentifier
                                title=\\"{}\\"
                                text=\\"{}\\"/>
                            <ObjectNumber />
                        </cells>
                    </ColumnListItem>
                </items>
            </Table>
        </semantic:content>
        <!--Semantic ShareMenu Buttons-->
        <semantic:sendEmailAction>
            <semantic:SendEmailAction
                id=\\"shareEmail\\"
                press=\\".onSendEmailPress\\"/>
        </semantic:sendEmailAction>

        <semantic:closeAction>
            <semantic:CloseAction
                    id=\\"closeColumn\\"
                    press=\\".onCloseDetailPress\\"/>
        </semantic:closeAction>

        <semantic:fullScreenAction>
            <semantic:FullScreenAction
                    id=\\"enterFullScreen\\"
                    visible=\\"{= !\${device>/system/phone} &amp;&amp; !\${appView>/actionButtonsInfo/midColumn/fullScreen}}\\"
                    press=\\".toggleFullScreen\\"/>
        </semantic:fullScreenAction>
        <semantic:exitFullScreenAction>
            <semantic:ExitFullScreenAction
                    id=\\"exitFullScreen\\"
                    visible=\\"{= !\${device>/system/phone} &amp;&amp; \${appView>/actionButtonsInfo/midColumn/fullScreen}}\\"
                    press=\\".toggleFullScreen\\"/>
        </semantic:exitFullScreenAction>

    </semantic:SemanticPage>

</mvc:View>",
    "state": "modified",
  },
  "webapp/view/DetailObjectNotFound.view.xml": Object {
    "contents": "<mvc:View
    controllerName=\\"test.me.controller.DetailObjectNotFound\\"
    xmlns=\\"sap.m\\"
    xmlns:mvc=\\"sap.ui.core.mvc\\">

    <MessagePage
        id=\\"page\\"
        title=\\"{i18n>detailTitle}\\"
        text=\\"{i18n>noObjectFoundText}\\"
        icon=\\"sap-icon://product\\"
        description=\\"\\">
    </MessagePage>

</mvc:View>",
    "state": "modified",
  },
  "webapp/view/List.view.xml": Object {
    "contents": "<mvc:View
    controllerName=\\"test.me.controller.List\\"
    xmlns=\\"sap.m\\"
    xmlns:semantic=\\"sap.f.semantic\\"
    xmlns:mvc=\\"sap.ui.core.mvc\\">

    <semantic:SemanticPage
        id=\\"listPage\\"
        preserveHeaderStateOnScroll=\\"true\\"
        toggleHeaderOnTitleClick=\\"false\\">
        <semantic:titleHeading>
            <Title
                id=\\"listPageTitle\\"
                text=\\"{listView>/title}\\"
                level=\\"H2\\"/>
        </semantic:titleHeading>
        <semantic:content>
            <!-- For client side filtering add this to the items attribute: parameters: {operationMode: 'Client'}}\\" -->
            <List
                id=\\"list\\"
                width=\\"auto\\"
                class=\\"sapFDynamicPageAlignContent\\"
                items=\\"{
                    path: '/Products',
                    sorter: {
                        path: 'ProductName',
                        descending: false
                    },
                    groupHeaderFactory: '.createGroupHeader'
                }\\"
                busyIndicatorDelay=\\"{listView>/delay}\\"
                noDataText=\\"{listView>/noDataText}\\"
                mode=\\"{= \${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\\"
                growing=\\"true\\"
                growingScrollToLoad=\\"true\\"
                updateFinished=\\".onUpdateFinished\\"
                selectionChange=\\".onSelectionChange\\">

                <infoToolbar>
                    <Toolbar
                        active=\\"true\\"
                        id=\\"filterBar\\"
                        visible=\\"{listView>/isFilterBarVisible}\\"
                        press=\\".onOpenViewSettings\\">
                        <Title
                            id=\\"filterBarLabel\\"
                            text=\\"{listView>/filterBarLabel}\\"
                            level=\\"H3\\"/>
                    </Toolbar>
                </infoToolbar>

                <headerToolbar>
                    <OverflowToolbar>
                        <SearchField
                            id=\\"searchField\\"
                            showRefreshButton=\\"true\\"
                            tooltip=\\"{i18n>listSearchTooltip}\\"
                            search=\\".onSearch\\"
                            width=\\"auto\\">
                            <layoutData>
                                <OverflowToolbarLayoutData
                                    minWidth=\\"150px\\"
                                    maxWidth=\\"240px\\"
                                    shrinkable=\\"true\\"
                                    priority=\\"NeverOverflow\\"/>
                            </layoutData>
                        </SearchField>
                        <ToolbarSpacer/>
                        <Button
                            id=\\"sortButton\\"
                            press=\\".onOpenViewSettings\\"
                            icon=\\"sap-icon://sort\\"
                            type=\\"Transparent\\"/>

                        <Button
                            id=\\"filterButton\\"
                            press=\\".onOpenViewSettings\\"
                            icon=\\"sap-icon://filter\\"
                            type=\\"Transparent\\"/>
                        <Button
                            id=\\"groupButton\\"
                            press=\\".onOpenViewSettings\\"
                            icon=\\"sap-icon://group-2\\"
                            type=\\"Transparent\\"/>

                    </OverflowToolbar>
                </headerToolbar>
                <items>
                    <ObjectListItem
                        type=\\"Navigation\\"
                        press=\\".onSelectionChange\\"
                        title=\\"{ProductName}\\"
                        number=\\"{
                            path: 'UnitsInStock',
                            formatter: '.formatter.numberUnit'
                        }\\"
                        unit=\\"{QuantityPerUnit}\\" />
                </items>
            </List>
        </semantic:content>
    </semantic:SemanticPage>
</mvc:View>",
    "state": "modified",
  },
  "webapp/view/NotFound.view.xml": Object {
    "contents": "<mvc:View
    controllerName=\\"test.me.controller.NotFound\\"
    xmlns=\\"sap.m\\"
    xmlns:mvc=\\"sap.ui.core.mvc\\">

    <MessagePage
        id=\\"page\\"
        title=\\"{i18n>notFoundTitle}\\"
        text=\\"{i18n>notFoundText}\\"
        icon=\\"sap-icon://document\\">
    </MessagePage>

</mvc:View>",
    "state": "modified",
  },
  "webapp/view/ViewSettingsDialog.fragment.xml": Object {
    "contents": "<core:FragmentDefinition
    xmlns=\\"sap.m\\"
    xmlns:core=\\"sap.ui.core\\">

    <ViewSettingsDialog
        id=\\"viewSettingsDialog\\"
        confirm=\\".onConfirmViewSettingsDialog\\">
        <sortItems>
            <ViewSettingsItem
                text=\\"{i18n>listSort1}\\"
                key=\\"ProductName\\"
                selected=\\"true\\"/>

            <ViewSettingsItem
                text=\\"{i18n>listSort2}\\"
                key=\\"UnitsInStock\\"/>
        </sortItems>

        <filterItems>
            <ViewSettingsFilterItem
                id=\\"filterItems\\"
                text=\\"{i18n>listFilterName}\\"
                multiSelect=\\"false\\">
                <items>
                    <ViewSettingsItem
                        id=\\"viewFilter1\\"
                        text=\\"{i18n>listFilter1}\\"
                        key=\\"Filter1\\"/>
                    <ViewSettingsItem
                        id=\\"viewFilter2\\"
                        text=\\"{i18n>listFilter2}\\"
                        key=\\"Filter2\\"/>
                </items>
            </ViewSettingsFilterItem>
        </filterItems>
        <groupItems>
            <ViewSettingsItem
                text=\\"{i18n>listGroup1}\\"
                key=\\"UnitsInStock\\"/>
        </groupItems>
    </ViewSettingsDialog>
</core:FragmentDefinition>",
    "state": "modified",
  },
}
`;

exports[`Fiori freestyle templates: allTemplate Generate files for template: worklist 1`] = `
Object {
  ".gitignore": Object {
    "contents": "node_modules/
dist/
.scp/
.env
Makefile*.mta
mta_archives
mta-*
resources
archive.zip
.*_mta_build_tmp",
    "state": "modified",
  },
  "package.json": Object {
    "contents": "{
  \\"name\\": \\"test.me\\",
  \\"version\\": \\"0.0.1\\",
  \\"private\\": true,
  \\"description\\": \\"Test App Description\\",
  \\"keywords\\": [
    \\"ui5\\",
    \\"openui5\\",
    \\"sapui5\\"
  ],
  \\"main\\": \\"webapp/index.html\\",
  \\"dependencies\\": {},
  \\"devDependencies\\": {
    \\"@ui5/cli\\": \\"^2.14.1\\",
    \\"@sap/ux-ui5-tooling\\": \\"1\\",
    \\"@sap-ux/ui5-middleware-fe-mockserver\\": \\"2\\"
  },
  \\"scripts\\": {
    \\"start\\": \\"fiori run --open \\\\\\"test/flpSandbox.html?sap-ui-xx-viewCache=false#testme-app\\\\\\"\\",
    \\"start-local\\": \\"fiori run --config ./ui5-local.yaml --open \\\\\\"test/flpSandbox.html?sap-ui-xx-viewCache=false#testme-app\\\\\\"\\",
    \\"build\\": \\"ui5 build --config=ui5.yaml --clean-dest --dest dist\\",
    \\"deploy\\": \\"fiori verify\\",
    \\"deploy-config\\": \\"fiori add deploy-config\\",
    \\"start-noflp\\": \\"fiori run --open \\\\\\"index.html?sap-ui-xx-viewCache=false\\\\\\"\\",
    \\"start-mock\\": \\"fiori run --config ./ui5-mock.yaml --open \\\\\\"test/flpSandbox.html?sap-ui-xx-viewCache=false#testme-app\\\\\\"\\"
  },
  \\"ui5\\": {
    \\"dependencies\\": [
      \\"@sap/ux-ui5-tooling\\",
      \\"@sap-ux/ui5-middleware-fe-mockserver\\"
    ]
  }
}
",
    "state": "modified",
  },
  "ui5-local.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.5\\"
metadata:
  name: test.me
type: application
framework:
  name: SAPUI5
  version: 1.90.0
  libraries:
    - name: sap.m
    - name: sap.ui.core
    - name: sap.ushell
    - name: themelib_sap_fiori_3
server:
  customMiddleware:
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        backend:
          - path: /V2
            url: https://services.odata.org
    - name: sap-fe-mockserver
      beforeMiddleware: csp
      configuration:
        mountPath: /
        services:
          - urlPath: /V2/Northwind/Northwind.svc
            metadataPath: ./webapp/localService/metadata.xml
            mockdataPath: ./webapp/localService/data
            generateMockData: true
        annotations: []
",
    "state": "modified",
  },
  "ui5-mock.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.5\\"
metadata:
  name: test.me
type: application
server:
  customMiddleware:
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        ui5:
          path:
            - /resources
            - /test-resources
          url: https://ui5.sap.com
        backend:
          - path: /V2
            url: https://services.odata.org
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
    - name: sap-fe-mockserver
      beforeMiddleware: csp
      configuration:
        mountPath: /
        services:
          - urlPath: /V2/Northwind/Northwind.svc
            metadataPath: ./webapp/localService/metadata.xml
            mockdataPath: ./webapp/localService/data
            generateMockData: true
        annotations: []
",
    "state": "modified",
  },
  "ui5.yaml": Object {
    "contents": "# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: \\"2.5\\"
metadata:
  name: test.me
type: application
server:
  customMiddleware:
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        ui5:
          path:
            - /resources
            - /test-resources
          url: https://ui5.sap.com
        backend:
          - path: /V2
            url: https://services.odata.org
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
",
    "state": "modified",
  },
  "webapp/Component.js": Object {
    "contents": "sap.ui.define([
    \\"sap/ui/core/UIComponent\\",
    \\"sap/ui/Device\\",
    \\"./model/models\\",
    \\"./controller/ErrorHandler\\"
], function (UIComponent, Device, models, ErrorHandler) {
    \\"use strict\\";

    return UIComponent.extend(\\"test.me.Component\\", {

        metadata : {
            manifest: \\"json\\"
        },

        /**
         * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.
         * In this function, the device models are set and the router is initialized.
         * @public
         * @override
         */
        init : function () {
            // call the base component's init function
            UIComponent.prototype.init.apply(this, arguments);

            // initialize the error handler with the component
            this._oErrorHandler = new ErrorHandler(this);

            // set the device model
            this.setModel(models.createDeviceModel(), \\"device\\");

            // create the views based on the url/hash
            this.getRouter().initialize();
        },

        /**
         * The component is destroyed by UI5 automatically.
         * In this method, the ErrorHandler is destroyed.
         * @public
         * @override
         */
        destroy : function () {
            this._oErrorHandler.destroy();
            // call the base component's destroy function
            UIComponent.prototype.destroy.apply(this, arguments);
        },

        /**
         * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy
         * design mode class should be set, which influences the size appearance of some controls.
         * @public
         * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set
         */
        getContentDensityClass : function() {
            if (this._sContentDensityClass === undefined) {
                // check whether FLP has already set the content density class; do nothing in this case
                // eslint-disable-next-line sap-no-proprietary-browser-api
                if (document.body.classList.contains(\\"sapUiSizeCozy\\") || document.body.classList.contains(\\"sapUiSizeCompact\\")) {
                    this._sContentDensityClass = \\"\\";
                } else if (!Device.support.touch) { // apply \\"compact\\" mode if touch is not supported
                    this._sContentDensityClass = \\"sapUiSizeCompact\\";
                } else {
                    // \\"cozy\\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table
                    this._sContentDensityClass = \\"sapUiSizeCozy\\";
                }
            }
            return this._sContentDensityClass;
        }

    });

});",
    "state": "modified",
  },
  "webapp/controller/App.controller.js": Object {
    "contents": "sap.ui.define([
    \\"./BaseController\\"
], function (BaseController) {
    \\"use strict\\";

    return BaseController.extend(\\"test.me.controller.App\\", {

        onInit : function () {
            // apply content density mode to root view
            this.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());
        }
    });

});",
    "state": "modified",
  },
  "webapp/controller/BaseController.js": Object {
    "contents": "sap.ui.define([
    \\"sap/ui/core/mvc/Controller\\",
    \\"sap/ui/core/UIComponent\\",
    \\"sap/m/library\\"
], function (Controller, UIComponent, mobileLibrary) {
    \\"use strict\\";

    // shortcut for sap.m.URLHelper
    var URLHelper = mobileLibrary.URLHelper;

    return Controller.extend(\\"test.me.controller.BaseController\\", {
        /**
         * Convenience method for accessing the router.
         * @public
         * @returns {sap.ui.core.routing.Router} the router for this component
         */
        getRouter : function () {
            return UIComponent.getRouterFor(this);
        },

        /**
         * Convenience method for getting the view model by name.
         * @public
         * @param {string} [sName] the model name
         * @returns {sap.ui.model.Model} the model instance
         */
        getModel : function (sName) {
            return this.getView().getModel(sName);
        },

        /**
         * Convenience method for setting the view model.
         * @public
         * @param {sap.ui.model.Model} oModel the model instance
         * @param {string} sName the model name
         * @returns {sap.ui.mvc.View} the view instance
         */
        setModel : function (oModel, sName) {
            return this.getView().setModel(oModel, sName);
        },

        /**
         * Getter for the resource bundle.
         * @public
         * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component
         */
        getResourceBundle : function () {
            return this.getOwnerComponent().getModel(\\"i18n\\").getResourceBundle();
        },

        /**
         * Event handler when the share by E-Mail button has been clicked
         * @public
         */
        onShareEmailPress : function () {
            var oViewModel = (this.getModel(\\"objectView\\") || this.getModel(\\"worklistView\\"));
            URLHelper.triggerEmail(
                null,
                oViewModel.getProperty(\\"/shareSendEmailSubject\\"),
                oViewModel.getProperty(\\"/shareSendEmailMessage\\")
            );
        }
    });

});",
    "state": "modified",
  },
  "webapp/controller/ErrorHandler.js": Object {
    "contents": "sap.ui.define([
    \\"sap/ui/base/Object\\",
    \\"sap/m/MessageBox\\",
    \\"sap/ui/model/Filter\\",
    \\"sap/ui/model/FilterOperator\\"
], function (UI5Object, MessageBox, Filter, FilterOperator) {
    \\"use strict\\";

    return UI5Object.extend(\\"test.me.controller.ErrorHandler\\", {

        /**
         * Handles application errors by automatically attaching to the model events and displaying errors when needed.
         * @class
         * @param {sap.ui.core.UIComponent} oComponent reference to the app's component
         * @public
         * @alias test.me.controller.ErrorHandler
         */
        constructor : function (oComponent) {
            var oMessageManager = sap.ui.getCore().getMessageManager(),
                oMessageModel = oMessageManager.getMessageModel(),
                oResourceBundle = oComponent.getModel(\\"i18n\\").getResourceBundle(),
                sErrorText = oResourceBundle.getText(\\"errorText\\"),
                sMultipleErrors = oResourceBundle.getText(\\"multipleErrorsText\\");

            this._oComponent = oComponent;
            this._bMessageOpen = false;

            this.oMessageModelBinding = oMessageModel.bindList(\\"/\\", undefined,
                [], new Filter(\\"technical\\", FilterOperator.EQ, true));

            this.oMessageModelBinding.attachChange(function (oEvent) {
                var aContexts = oEvent.getSource().getContexts(),
                    aMessages = [],
                    sErrorTitle;

                if (this._bMessageOpen || !aContexts.length) {
                    return;
                }

                // Extract and remove the technical messages
                aContexts.forEach(function (oContext) {
                    aMessages.push(oContext.getObject());
                });
                oMessageManager.removeMessages(aMessages);

                // Due to batching there can be more than one technical message. However the UX
                // guidelines say \\"display a single message in a message box\\" assuming that there
                // will be only one at a time.
                sErrorTitle = aMessages.length === 1 ? sErrorText : sMultipleErrors;
                this._showServiceError(sErrorTitle, aMessages[0].message);
            }, this);
        },

        /**
         * Shows a {@link sap.m.MessageBox} when a service call has failed.
         * Only the first error message will be displayed.
         * @param {string} sErrorTitle A title for the error message
         * @param {string} sDetails A technical error to be displayed on request
         * @private
         */
        _showServiceError : function (sErrorTitle, sDetails) {
            this._bMessageOpen = true;
            MessageBox.error(
                sErrorTitle,
                {
                    id : \\"serviceErrorMessageBox\\",
                    details: sDetails,
                    styleClass: this._oComponent.getContentDensityClass(),
                    actions: [MessageBox.Action.CLOSE],
                    onClose: function () {
                        this._bMessageOpen = false;
                    }.bind(this)
                }
            );
        }
    });
});",
    "state": "modified",
  },
  "webapp/controller/NotFound.controller.js": Object {
    "contents": "sap.ui.define([
    \\"./BaseController\\"
], function (BaseController) {
    \\"use strict\\";

    return BaseController.extend(\\"test.me.controller.NotFound\\", {

        /**
         * Navigates to the worklist when the link is pressed
         * @public
         */
        onLinkPressed : function () {
            this.getRouter().navTo(\\"worklist\\");
        }

    });

});",
    "state": "modified",
  },
  "webapp/controller/Object.controller.js": Object {
    "contents": "sap.ui.define([
    \\"./BaseController\\",
    \\"sap/ui/model/json/JSONModel\\",
    \\"sap/ui/core/routing/History\\",
    \\"../model/formatter\\"
], function (BaseController, JSONModel, History, formatter) {
    \\"use strict\\";

    return BaseController.extend(\\"test.me.controller.Object\\", {

        formatter: formatter,

        /* =========================================================== */
        /* lifecycle methods                                           */
        /* =========================================================== */

        /**
         * Called when the worklist controller is instantiated.
         * @public
         */
        onInit : function () {
            // Model used to manipulate control states. The chosen values make sure,
            // detail page shows busy indication immediately so there is no break in
            // between the busy indication for loading the view's meta data
            var oViewModel = new JSONModel({
                    busy : true,
                    delay : 0
                });
            this.getRouter().getRoute(\\"object\\").attachPatternMatched(this._onObjectMatched, this);
            this.setModel(oViewModel, \\"objectView\\");
        },
        /* =========================================================== */
        /* event handlers                                              */
        /* =========================================================== */


        /**
         * Event handler  for navigating back.
         * It there is a history entry we go one step back in the browser history
         * If not, it will replace the current entry of the browser history with the worklist route.
         * @public
         */
        onNavBack : function() {
            var sPreviousHash = History.getInstance().getPreviousHash();
            if (sPreviousHash !== undefined) {
                // eslint-disable-next-line sap-no-history-manipulation
                history.go(-1);
            } else {
                this.getRouter().navTo(\\"worklist\\", {}, true);
            }
        },

        /* =========================================================== */
        /* internal methods                                            */
        /* =========================================================== */

        /**
         * Binds the view to the object path.
         * @function
         * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'
         * @private
         */
        _onObjectMatched : function (oEvent) {
            var sObjectId =  oEvent.getParameter(\\"arguments\\").objectId;
            this._bindView(\\"/Products\\" + sObjectId);
        },

        /**
         * Binds the view to the object path.
         * @function
         * @param {string} sObjectPath path to the object to be bound
         * @private
         */
        _bindView : function (sObjectPath) {
            var oViewModel = this.getModel(\\"objectView\\");

            this.getView().bindElement({
                path: sObjectPath,
                events: {
                    change: this._onBindingChange.bind(this),
                    dataRequested: function () {
                        oViewModel.setProperty(\\"/busy\\", true);
                    },
                    dataReceived: function () {
                        oViewModel.setProperty(\\"/busy\\", false);
                    }
                }
            });
        },

        _onBindingChange : function () {
            var oView = this.getView(),
                oViewModel = this.getModel(\\"objectView\\"),
                oElementBinding = oView.getElementBinding();

            // No data for the binding
            if (!oElementBinding.getBoundContext()) {
                this.getRouter().getTargets().display(\\"objectNotFound\\");
                return;
            }

            var oResourceBundle = this.getResourceBundle(),
                oObject = oView.getBindingContext().getObject(),
                sObjectId = oObject.ProductName,
                sObjectName = oObject.Products;

                oViewModel.setProperty(\\"/busy\\", false);
                oViewModel.setProperty(\\"/shareSendEmailSubject\\",
                    oResourceBundle.getText(\\"shareSendEmailObjectSubject\\", [sObjectId]));
                oViewModel.setProperty(\\"/shareSendEmailMessage\\",
                    oResourceBundle.getText(\\"shareSendEmailObjectMessage\\", [sObjectName, sObjectId, location.href]));
        }
    });

});
",
    "state": "modified",
  },
  "webapp/controller/Worklist.controller.js": Object {
    "contents": "sap.ui.define([
    \\"./BaseController\\",
    \\"sap/ui/model/json/JSONModel\\",
    \\"../model/formatter\\",
    \\"sap/ui/model/Filter\\",
    \\"sap/ui/model/FilterOperator\\"
], function (BaseController, JSONModel, formatter, Filter, FilterOperator) {
    \\"use strict\\";

    return BaseController.extend(\\"test.me.controller.Worklist\\", {

        formatter: formatter,

        /* =========================================================== */
        /* lifecycle methods                                           */
        /* =========================================================== */

        /**
         * Called when the worklist controller is instantiated.
         * @public
         */
        onInit : function () {
            var oViewModel;

            // keeps the search state
            this._aTableSearchState = [];

            // Model used to manipulate control states
            oViewModel = new JSONModel({
                worklistTableTitle : this.getResourceBundle().getText(\\"worklistTableTitle\\"),
                shareSendEmailSubject: this.getResourceBundle().getText(\\"shareSendEmailWorklistSubject\\"),
                shareSendEmailMessage: this.getResourceBundle().getText(\\"shareSendEmailWorklistMessage\\", [location.href]),
                tableNoDataText : this.getResourceBundle().getText(\\"tableNoDataText\\")
            });
            this.setModel(oViewModel, \\"worklistView\\");

        },

        /* =========================================================== */
        /* event handlers                                              */
        /* =========================================================== */

        /**
         * Triggered by the table's 'updateFinished' event: after new table
         * data is available, this handler method updates the table counter.
         * This should only happen if the update was successful, which is
         * why this handler is attached to 'updateFinished' and not to the
         * table's list binding's 'dataReceived' method.
         * @param {sap.ui.base.Event} oEvent the update finished event
         * @public
         */
        onUpdateFinished : function (oEvent) {
            // update the worklist's object counter after the table update
            var sTitle,
                oTable = oEvent.getSource(),
                iTotalItems = oEvent.getParameter(\\"total\\");
            // only update the counter if the length is final and
            // the table is not empty
            if (iTotalItems && oTable.getBinding(\\"items\\").isLengthFinal()) {
                sTitle = this.getResourceBundle().getText(\\"worklistTableTitleCount\\", [iTotalItems]);
            } else {
                sTitle = this.getResourceBundle().getText(\\"worklistTableTitle\\");
            }
            this.getModel(\\"worklistView\\").setProperty(\\"/worklistTableTitle\\", sTitle);
        },

        /**
         * Event handler when a table item gets pressed
         * @param {sap.ui.base.Event} oEvent the table selectionChange event
         * @public
         */
        onPress : function (oEvent) {
            // The source is the list item that got pressed
            this._showObject(oEvent.getSource());
        },

        /**
         * Event handler for navigating back.
         * Navigate back in the browser history
         * @public
         */
        onNavBack : function() {
            // eslint-disable-next-line sap-no-history-manipulation
            history.go(-1);
        },


        onSearch : function (oEvent) {
            if (oEvent.getParameters().refreshButtonPressed) {
                // Search field's 'refresh' button has been pressed.
                // This is visible if you select any main list item.
                // In this case no new search is triggered, we only
                // refresh the list binding.
                this.onRefresh();
            } else {
                var aTableSearchState = [];
                var sQuery = oEvent.getParameter(\\"query\\");

                if (sQuery && sQuery.length > 0) {
                    aTableSearchState = [new Filter(\\"ProductName\\", FilterOperator.Contains, sQuery)];
                }
                this._applySearch(aTableSearchState);
            }

        },

        /**
         * Event handler for refresh event. Keeps filter, sort
         * and group settings and refreshes the list binding.
         * @public
         */
        onRefresh : function () {
            var oTable = this.byId(\\"table\\");
            oTable.getBinding(\\"items\\").refresh();
        },

        /* =========================================================== */
        /* internal methods                                            */
        /* =========================================================== */

        /**
         * Shows the selected item on the object page
         * @param {sap.m.ObjectListItem} oItem selected Item
         * @private
         */
        _showObject : function (oItem) {
            this.getRouter().navTo(\\"object\\", {
                objectId: oItem.getBindingContext().getPath().substring(\\"/Products\\".length)
            });
        },

        /**
         * Internal helper method to apply both filter and search state together on the list binding
         * @param {sap.ui.model.Filter[]} aTableSearchState An array of filters for the search
         * @private
         */
        _applySearch: function(aTableSearchState) {
            var oTable = this.byId(\\"table\\"),
                oViewModel = this.getModel(\\"worklistView\\");
            oTable.getBinding(\\"items\\").filter(aTableSearchState, \\"Application\\");
            // changes the noDataText of the list in case there are no filter results
            if (aTableSearchState.length !== 0) {
                oViewModel.setProperty(\\"/tableNoDataText\\", this.getResourceBundle().getText(\\"worklistNoDataWithSearchText\\"));
            }
        }

    });
});
",
    "state": "modified",
  },
  "webapp/i18n/i18n.properties": Object {
    "contents": "# This is the resource bundle for test.me

#Texts for manifest.json

#XTIT: Application name
appTitle=My Test App

#YDES: Application description
appDescription=Test App Description
#~~~ Worklist View ~~~~~~~~~~~~~~~~~~~~~~~~~~
#XTIT: Worklist view title
worklistViewTitle=Manage Products

#XTIT: Worklist page title
worklistTitle=My Test App

#XTIT: Table view title
worklistTableTitle=Products

#XTOL: Tooltip for the search field
worklistSearchTooltip=Enter an Products name or a part of it.

#XBLI: text for a table with no data with filter or search
worklistNoDataWithSearchText=No matching Products found

#XTIT: Table view title with placeholder for the number of items
worklistTableTitleCount=Products ({0})

#XTIT: The title of the column containing the ProductName of Products
tableNameColumnTitle=ProductName


#XTIT: The title of the column containing the UnitsInStock and the unit of measure
tableUnitNumberColumnTitle=UnitsInStock


#XBLI: text for a table with no data
tableNoDataText=No Products are currently available

#XLNK: text for link in 'not found' pages
backToWorklist=Show My Test App

#~~~ Object View ~~~~~~~~~~~~~~~~~~~~~~~~~~
#XTIT: Object view title
objectViewTitle=Products Details

#XTIT: Object page title
objectTitle=Products

#XTIT: Label for the ProductName
ProductNameLabel=ProductName


#XTIT: Label for the UnitsInStock
UnitsInStockLabel=UnitsInStock


#~~~ Share Menu Options ~~~~~~~~~~~~~~~~~~~~~~~

#XTIT: Send E-Mail subject
shareSendEmailWorklistSubject=<Email subject PLEASE REPLACE ACCORDING TO YOUR USE CASE>

#YMSG: Send E-Mail message
shareSendEmailWorklistMessage=<Email body PLEASE REPLACE ACCORDING TO YOUR USE CASE>\\\\r\\\\n{0}

#XTIT: Send E-Mail subject
shareSendEmailObjectSubject=<Email subject including object identifier PLEASE REPLACE ACCORDING TO YOUR USE CASE> {0}

#YMSG: Send E-Mail message
shareSendEmailObjectMessage=<Email body PLEASE REPLACE ACCORDING TO YOUR USE CASE> {0} (id: {1})\\\\r\\\\n{2}

#~~~ Not Found View ~~~~~~~~~~~~~~~~~~~~~~~

#XTIT: Not found view title
notFoundTitle=Not Found

#YMSG: The Products not found text is displayed when there is no Products with this id
noObjectFoundText=This Products is not available

#YMSG: The Products not available text is displayed when there is no data when starting the app
noObjectsAvailableText=No Products are currently available

#YMSG: The not found text is displayed when there was an error loading the resource (404 error)
notFoundText=The requested resource was not found

#~~~ Error Handling ~~~~~~~~~~~~~~~~~~~~~~~

#YMSG: Error dialog description
errorText=Sorry, a technical error occurred! Please try again later.",
    "state": "modified",
  },
  "webapp/index.html": Object {
    "contents": "<!DOCTYPE html>
<html lang=\\"en\\">
<head>
    <meta charset=\\"UTF-8\\">
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">
    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
    <title>My Test App</title>
    <style>
        html, body, body > div, #container, #container-uiarea {
            height: 100%;
        }
    </style>
    <script
        id=\\"sap-ui-bootstrap\\"
        src=\\"resources/sap-ui-core.js\\"
        data-sap-ui-theme=\\"sap_fiori_3\\"
        data-sap-ui-resourceroots='{
            \\"test.me\\": \\"./\\"
        }'
        data-sap-ui-compatVersion=\\"edge\\"
        data-sap-ui-async=\\"true\\"
        data-sap-ui-frameOptions=\\"trusted\\"
    ></script>
    <script id=\\"locate-reuse-libs\\" src=\\"./utils/locate-reuse-libs.js\\"
        data-sap-ui-manifest-uri=\\"./manifest.json\\"
        data-sap-ui-componentName=\\"test.me\\">
    </script> 
</head>
<body class=\\"sapUiBody sapUiSizeCompact\\" id=\\"content\\">
    <div
        data-sap-ui-component
        data-name=\\"test.me\\"
        data-id=\\"container\\"
        data-settings='{\\"id\\" : \\"test.me\\"}'
        data-handle-validation=\\"true\\"
    ></div>
</body>
</html>",
    "state": "modified",
  },
  "webapp/localService/metadata.xml": Object {
    "contents": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\" standalone=\\"yes\\"?>
<edmx:Edmx Version=\\"1.0\\" xmlns:edmx=\\"http://schemas.microsoft.com/ado/2007/06/edmx\\">
    <edmx:DataServices xmlns:m=\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\" m:DataServiceVersion=\\"1.0\\">
        <Schema Namespace=\\"NorthwindModel\\" xmlns:d=\\"http://schemas.microsoft.com/ado/2007/08/dataservices\\" xmlns:m=\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\" xmlns=\\"http://schemas.microsoft.com/ado/2008/09/edm\\">
            <EntityType Name=\\"Category\\">
                <Key>
                    <PropertyRef Name=\\"CategoryID\\" />
                </Key>
                <Property Name=\\"CategoryID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Description\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"Max\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Picture\\" Type=\\"Edm.Binary\\" Nullable=\\"true\\" MaxLength=\\"Max\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Products\\" Relationship=\\"NorthwindModel.FK_Products_Categories\\" FromRole=\\"Categories\\" ToRole=\\"Products\\" />
            </EntityType>
            <EntityType Name=\\"CustomerDemographic\\">
                <Key>
                    <PropertyRef Name=\\"CustomerTypeID\\" />
                </Key>
                <Property Name=\\"CustomerTypeID\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"CustomerDesc\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"Max\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Customers\\" Relationship=\\"NorthwindModel.CustomerCustomerDemo\\" FromRole=\\"CustomerDemographics\\" ToRole=\\"Customers\\" />
            </EntityType>
            <EntityType Name=\\"Customer\\">
                <Key>
                    <PropertyRef Name=\\"CustomerID\\" />
                </Key>
                <Property Name=\\"CustomerID\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"5\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactTitle\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Phone\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Fax\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Orders\\" Relationship=\\"NorthwindModel.FK_Orders_Customers\\" FromRole=\\"Customers\\" ToRole=\\"Orders\\" />
                <NavigationProperty Name=\\"CustomerDemographics\\" Relationship=\\"NorthwindModel.CustomerCustomerDemo\\" FromRole=\\"Customers\\" ToRole=\\"CustomerDemographics\\" />
            </EntityType>
            <EntityType Name=\\"Employee\\">
                <Key>
                    <PropertyRef Name=\\"EmployeeID\\" />
                </Key>
                <Property Name=\\"EmployeeID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"LastName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"FirstName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Title\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"TitleOfCourtesy\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"25\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"BirthDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"HireDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"HomePhone\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Extension\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"4\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Photo\\" Type=\\"Edm.Binary\\" Nullable=\\"true\\" MaxLength=\\"Max\\" FixedLength=\\"false\\" />
                <Property Name=\\"Notes\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"Max\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ReportsTo\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"PhotoPath\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"255\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Employees1\\" Relationship=\\"NorthwindModel.FK_Employees_Employees\\" FromRole=\\"Employees\\" ToRole=\\"Employees1\\" />
                <NavigationProperty Name=\\"Employee1\\" Relationship=\\"NorthwindModel.FK_Employees_Employees\\" FromRole=\\"Employees1\\" ToRole=\\"Employees\\" />
                <NavigationProperty Name=\\"Orders\\" Relationship=\\"NorthwindModel.FK_Orders_Employees\\" FromRole=\\"Employees\\" ToRole=\\"Orders\\" />
                <NavigationProperty Name=\\"Territories\\" Relationship=\\"NorthwindModel.EmployeeTerritories\\" FromRole=\\"Employees\\" ToRole=\\"Territories\\" />
            </EntityType>
            <EntityType Name=\\"Order_Detail\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"ProductID\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"false\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"Quantity\\" Type=\\"Edm.Int16\\" Nullable=\\"false\\" />
                <Property Name=\\"Discount\\" Type=\\"Edm.Single\\" Nullable=\\"false\\" />
                <NavigationProperty Name=\\"Order\\" Relationship=\\"NorthwindModel.FK_Order_Details_Orders\\" FromRole=\\"Order_Details\\" ToRole=\\"Orders\\" />
                <NavigationProperty Name=\\"Product\\" Relationship=\\"NorthwindModel.FK_Order_Details_Products\\" FromRole=\\"Order_Details\\" ToRole=\\"Products\\" />
            </EntityType>
            <EntityType Name=\\"Order\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"CustomerID\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"5\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"EmployeeID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"OrderDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"RequiredDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShipVia\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"Freight\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"ShipName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipAddress\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCity\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipRegion\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipPostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCountry\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Customer\\" Relationship=\\"NorthwindModel.FK_Orders_Customers\\" FromRole=\\"Orders\\" ToRole=\\"Customers\\" />
                <NavigationProperty Name=\\"Employee\\" Relationship=\\"NorthwindModel.FK_Orders_Employees\\" FromRole=\\"Orders\\" ToRole=\\"Employees\\" />
                <NavigationProperty Name=\\"Order_Details\\" Relationship=\\"NorthwindModel.FK_Order_Details_Orders\\" FromRole=\\"Orders\\" ToRole=\\"Order_Details\\" />
                <NavigationProperty Name=\\"Shipper\\" Relationship=\\"NorthwindModel.FK_Orders_Shippers\\" FromRole=\\"Orders\\" ToRole=\\"Shippers\\" />
            </EntityType>
            <EntityType Name=\\"Product\\">
                <Key>
                    <PropertyRef Name=\\"ProductID\\" />
                </Key>
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"SupplierID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"CategoryID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"QuantityPerUnit\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"UnitsInStock\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"UnitsOnOrder\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"ReorderLevel\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"Discontinued\\" Type=\\"Edm.Boolean\\" Nullable=\\"false\\" />
                <NavigationProperty Name=\\"Category\\" Relationship=\\"NorthwindModel.FK_Products_Categories\\" FromRole=\\"Products\\" ToRole=\\"Categories\\" />
                <NavigationProperty Name=\\"Order_Details\\" Relationship=\\"NorthwindModel.FK_Order_Details_Products\\" FromRole=\\"Products\\" ToRole=\\"Order_Details\\" />
                <NavigationProperty Name=\\"Supplier\\" Relationship=\\"NorthwindModel.FK_Products_Suppliers\\" FromRole=\\"Products\\" ToRole=\\"Suppliers\\" />
            </EntityType>
            <EntityType Name=\\"Region\\">
                <Key>
                    <PropertyRef Name=\\"RegionID\\" />
                </Key>
                <Property Name=\\"RegionID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"RegionDescription\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"50\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <NavigationProperty Name=\\"Territories\\" Relationship=\\"NorthwindModel.FK_Territories_Region\\" FromRole=\\"Region\\" ToRole=\\"Territories\\" />
            </EntityType>
            <EntityType Name=\\"Shipper\\">
                <Key>
                    <PropertyRef Name=\\"ShipperID\\" />
                </Key>
                <Property Name=\\"ShipperID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Phone\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Orders\\" Relationship=\\"NorthwindModel.FK_Orders_Shippers\\" FromRole=\\"Shippers\\" ToRole=\\"Orders\\" />
            </EntityType>
            <EntityType Name=\\"Supplier\\">
                <Key>
                    <PropertyRef Name=\\"SupplierID\\" />
                </Key>
                <Property Name=\\"SupplierID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactTitle\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Phone\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Fax\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"24\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"HomePage\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"Max\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <NavigationProperty Name=\\"Products\\" Relationship=\\"NorthwindModel.FK_Products_Suppliers\\" FromRole=\\"Suppliers\\" ToRole=\\"Products\\" />
            </EntityType>
            <EntityType Name=\\"Territory\\">
                <Key>
                    <PropertyRef Name=\\"TerritoryID\\" />
                </Key>
                <Property Name=\\"TerritoryID\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"TerritoryDescription\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"50\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"RegionID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <NavigationProperty Name=\\"Region\\" Relationship=\\"NorthwindModel.FK_Territories_Region\\" FromRole=\\"Territories\\" ToRole=\\"Region\\" />
                <NavigationProperty Name=\\"Employees\\" Relationship=\\"NorthwindModel.EmployeeTerritories\\" FromRole=\\"Territories\\" ToRole=\\"Employees\\" />
            </EntityType>
            <EntityType Name=\\"Alphabetical_list_of_product\\">
                <Key>
                    <PropertyRef Name=\\"ProductID\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                    <PropertyRef Name=\\"Discontinued\\" />
                    <PropertyRef Name=\\"CategoryName\\" />
                </Key>
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"SupplierID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"CategoryID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"QuantityPerUnit\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"UnitsInStock\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"UnitsOnOrder\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"ReorderLevel\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"Discontinued\\" Type=\\"Edm.Boolean\\" Nullable=\\"false\\" />
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Category_Sales_for_1997\\">
                <Key>
                    <PropertyRef Name=\\"CategoryName\\" />
                </Key>
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"CategorySales\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Current_Product_List\\">
                <Key>
                    <PropertyRef Name=\\"ProductID\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                </Key>
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" p8:StoreGeneratedPattern=\\"Identity\\" xmlns:p8=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Customer_and_Suppliers_by_City\\">
                <Key>
                    <PropertyRef Name=\\"CompanyName\\" />
                    <PropertyRef Name=\\"Relationship\\" />
                </Key>
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ContactName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"30\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Relationship\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"9\\" Unicode=\\"false\\" FixedLength=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Invoice\\">
                <Key>
                    <PropertyRef Name=\\"CustomerName\\" />
                    <PropertyRef Name=\\"Salesperson\\" />
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"ShipperName\\" />
                    <PropertyRef Name=\\"ProductID\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                    <PropertyRef Name=\\"UnitPrice\\" />
                    <PropertyRef Name=\\"Quantity\\" />
                    <PropertyRef Name=\\"Discount\\" />
                </Key>
                <Property Name=\\"ShipName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipAddress\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCity\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipRegion\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipPostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCountry\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"CustomerID\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"5\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"CustomerName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Salesperson\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"31\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"OrderDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"RequiredDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShipperName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"false\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"Quantity\\" Type=\\"Edm.Int16\\" Nullable=\\"false\\" />
                <Property Name=\\"Discount\\" Type=\\"Edm.Single\\" Nullable=\\"false\\" />
                <Property Name=\\"ExtendedPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"Freight\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Order_Details_Extended\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"ProductID\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                    <PropertyRef Name=\\"UnitPrice\\" />
                    <PropertyRef Name=\\"Quantity\\" />
                    <PropertyRef Name=\\"Discount\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"false\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"Quantity\\" Type=\\"Edm.Int16\\" Nullable=\\"false\\" />
                <Property Name=\\"Discount\\" Type=\\"Edm.Single\\" Nullable=\\"false\\" />
                <Property Name=\\"ExtendedPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Order_Subtotal\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"Subtotal\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Orders_Qry\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"CompanyName\\" />
                </Key>
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"CustomerID\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"5\\" Unicode=\\"true\\" FixedLength=\\"true\\" />
                <Property Name=\\"EmployeeID\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"OrderDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"RequiredDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"ShipVia\\" Type=\\"Edm.Int32\\" Nullable=\\"true\\" />
                <Property Name=\\"Freight\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"ShipName\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipAddress\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCity\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipRegion\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipPostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShipCountry\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Address\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"60\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"City\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Region\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"PostalCode\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"10\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"Country\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Product_Sales_for_1997\\">
                <Key>
                    <PropertyRef Name=\\"CategoryName\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                </Key>
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductSales\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Products_Above_Average_Price\\">
                <Key>
                    <PropertyRef Name=\\"ProductName\\" />
                </Key>
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitPrice\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Products_by_Category\\">
                <Key>
                    <PropertyRef Name=\\"CategoryName\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                    <PropertyRef Name=\\"Discontinued\\" />
                </Key>
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"QuantityPerUnit\\" Type=\\"Edm.String\\" Nullable=\\"true\\" MaxLength=\\"20\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"UnitsInStock\\" Type=\\"Edm.Int16\\" Nullable=\\"true\\" />
                <Property Name=\\"Discontinued\\" Type=\\"Edm.Boolean\\" Nullable=\\"false\\" />
            </EntityType>
            <EntityType Name=\\"Sales_by_Category\\">
                <Key>
                    <PropertyRef Name=\\"CategoryID\\" />
                    <PropertyRef Name=\\"CategoryName\\" />
                    <PropertyRef Name=\\"ProductName\\" />
                </Key>
                <Property Name=\\"CategoryID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"CategoryName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"15\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ProductSales\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Sales_Totals_by_Amount\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                    <PropertyRef Name=\\"CompanyName\\" />
                </Key>
                <Property Name=\\"SaleAmount\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"CompanyName\\" Type=\\"Edm.String\\" Nullable=\\"false\\" MaxLength=\\"40\\" Unicode=\\"true\\" FixedLength=\\"false\\" />
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
            </EntityType>
            <EntityType Name=\\"Summary_of_Sales_by_Quarter\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                </Key>
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"Subtotal\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <EntityType Name=\\"Summary_of_Sales_by_Year\\">
                <Key>
                    <PropertyRef Name=\\"OrderID\\" />
                </Key>
                <Property Name=\\"ShippedDate\\" Type=\\"Edm.DateTime\\" Nullable=\\"true\\" />
                <Property Name=\\"OrderID\\" Type=\\"Edm.Int32\\" Nullable=\\"false\\" />
                <Property Name=\\"Subtotal\\" Type=\\"Edm.Decimal\\" Nullable=\\"true\\" Precision=\\"19\\" Scale=\\"4\\" />
            </EntityType>
            <Association Name=\\"FK_Products_Categories\\">
                <End Role=\\"Categories\\" Type=\\"NorthwindModel.Category\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Products\\" Type=\\"NorthwindModel.Product\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Categories\\">
                        <PropertyRef Name=\\"CategoryID\\" />
                    </Principal>
                    <Dependent Role=\\"Products\\">
                        <PropertyRef Name=\\"CategoryID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Orders_Customers\\">
                <End Role=\\"Customers\\" Type=\\"NorthwindModel.Customer\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Orders\\" Type=\\"NorthwindModel.Order\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Customers\\">
                        <PropertyRef Name=\\"CustomerID\\" />
                    </Principal>
                    <Dependent Role=\\"Orders\\">
                        <PropertyRef Name=\\"CustomerID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Employees_Employees\\">
                <End Role=\\"Employees\\" Type=\\"NorthwindModel.Employee\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Employees1\\" Type=\\"NorthwindModel.Employee\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Employees\\">
                        <PropertyRef Name=\\"EmployeeID\\" />
                    </Principal>
                    <Dependent Role=\\"Employees1\\">
                        <PropertyRef Name=\\"ReportsTo\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Orders_Employees\\">
                <End Role=\\"Employees\\" Type=\\"NorthwindModel.Employee\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Orders\\" Type=\\"NorthwindModel.Order\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Employees\\">
                        <PropertyRef Name=\\"EmployeeID\\" />
                    </Principal>
                    <Dependent Role=\\"Orders\\">
                        <PropertyRef Name=\\"EmployeeID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Order_Details_Orders\\">
                <End Role=\\"Orders\\" Type=\\"NorthwindModel.Order\\" Multiplicity=\\"1\\" />
                <End Role=\\"Order_Details\\" Type=\\"NorthwindModel.Order_Detail\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Orders\\">
                        <PropertyRef Name=\\"OrderID\\" />
                    </Principal>
                    <Dependent Role=\\"Order_Details\\">
                        <PropertyRef Name=\\"OrderID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Order_Details_Products\\">
                <End Role=\\"Products\\" Type=\\"NorthwindModel.Product\\" Multiplicity=\\"1\\" />
                <End Role=\\"Order_Details\\" Type=\\"NorthwindModel.Order_Detail\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Products\\">
                        <PropertyRef Name=\\"ProductID\\" />
                    </Principal>
                    <Dependent Role=\\"Order_Details\\">
                        <PropertyRef Name=\\"ProductID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Orders_Shippers\\">
                <End Role=\\"Shippers\\" Type=\\"NorthwindModel.Shipper\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Orders\\" Type=\\"NorthwindModel.Order\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Shippers\\">
                        <PropertyRef Name=\\"ShipperID\\" />
                    </Principal>
                    <Dependent Role=\\"Orders\\">
                        <PropertyRef Name=\\"ShipVia\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Products_Suppliers\\">
                <End Role=\\"Suppliers\\" Type=\\"NorthwindModel.Supplier\\" Multiplicity=\\"0..1\\" />
                <End Role=\\"Products\\" Type=\\"NorthwindModel.Product\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Suppliers\\">
                        <PropertyRef Name=\\"SupplierID\\" />
                    </Principal>
                    <Dependent Role=\\"Products\\">
                        <PropertyRef Name=\\"SupplierID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"FK_Territories_Region\\">
                <End Role=\\"Region\\" Type=\\"NorthwindModel.Region\\" Multiplicity=\\"1\\" />
                <End Role=\\"Territories\\" Type=\\"NorthwindModel.Territory\\" Multiplicity=\\"*\\" />
                <ReferentialConstraint>
                    <Principal Role=\\"Region\\">
                        <PropertyRef Name=\\"RegionID\\" />
                    </Principal>
                    <Dependent Role=\\"Territories\\">
                        <PropertyRef Name=\\"RegionID\\" />
                    </Dependent>
                </ReferentialConstraint>
            </Association>
            <Association Name=\\"CustomerCustomerDemo\\">
                <End Role=\\"CustomerDemographics\\" Type=\\"NorthwindModel.CustomerDemographic\\" Multiplicity=\\"*\\" />
                <End Role=\\"Customers\\" Type=\\"NorthwindModel.Customer\\" Multiplicity=\\"*\\" />
            </Association>
            <Association Name=\\"EmployeeTerritories\\">
                <End Role=\\"Employees\\" Type=\\"NorthwindModel.Employee\\" Multiplicity=\\"*\\" />
                <End Role=\\"Territories\\" Type=\\"NorthwindModel.Territory\\" Multiplicity=\\"*\\" />
            </Association>
        </Schema>
        <Schema Namespace=\\"ODataWeb.Northwind.Model\\" xmlns:d=\\"http://schemas.microsoft.com/ado/2007/08/dataservices\\" xmlns:m=\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\" xmlns=\\"http://schemas.microsoft.com/ado/2008/09/edm\\">
            <EntityContainer Name=\\"NorthwindEntities\\" p7:LazyLoadingEnabled=\\"true\\" m:IsDefaultEntityContainer=\\"true\\" xmlns:p7=\\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\\">
                <EntitySet Name=\\"Categories\\" EntityType=\\"NorthwindModel.Category\\" />
                <EntitySet Name=\\"CustomerDemographics\\" EntityType=\\"NorthwindModel.CustomerDemographic\\" />
                <EntitySet Name=\\"Customers\\" EntityType=\\"NorthwindModel.Customer\\" />
                <EntitySet Name=\\"Employees\\" EntityType=\\"NorthwindModel.Employee\\" />
                <EntitySet Name=\\"Order_Details\\" EntityType=\\"NorthwindModel.Order_Detail\\" />
                <EntitySet Name=\\"Orders\\" EntityType=\\"NorthwindModel.Order\\" />
                <EntitySet Name=\\"Products\\" EntityType=\\"NorthwindModel.Product\\" />
                <EntitySet Name=\\"Regions\\" EntityType=\\"NorthwindModel.Region\\" />
                <EntitySet Name=\\"Shippers\\" EntityType=\\"NorthwindModel.Shipper\\" />
                <EntitySet Name=\\"Suppliers\\" EntityType=\\"NorthwindModel.Supplier\\" />
                <EntitySet Name=\\"Territories\\" EntityType=\\"NorthwindModel.Territory\\" />
                <EntitySet Name=\\"Alphabetical_list_of_products\\" EntityType=\\"NorthwindModel.Alphabetical_list_of_product\\" />
                <EntitySet Name=\\"Category_Sales_for_1997\\" EntityType=\\"NorthwindModel.Category_Sales_for_1997\\" />
                <EntitySet Name=\\"Current_Product_Lists\\" EntityType=\\"NorthwindModel.Current_Product_List\\" />
                <EntitySet Name=\\"Customer_and_Suppliers_by_Cities\\" EntityType=\\"NorthwindModel.Customer_and_Suppliers_by_City\\" />
                <EntitySet Name=\\"Invoices\\" EntityType=\\"NorthwindModel.Invoice\\" />
                <EntitySet Name=\\"Order_Details_Extendeds\\" EntityType=\\"NorthwindModel.Order_Details_Extended\\" />
                <EntitySet Name=\\"Order_Subtotals\\" EntityType=\\"NorthwindModel.Order_Subtotal\\" />
                <EntitySet Name=\\"Orders_Qries\\" EntityType=\\"NorthwindModel.Orders_Qry\\" />
                <EntitySet Name=\\"Product_Sales_for_1997\\" EntityType=\\"NorthwindModel.Product_Sales_for_1997\\" />
                <EntitySet Name=\\"Products_Above_Average_Prices\\" EntityType=\\"NorthwindModel.Products_Above_Average_Price\\" />
                <EntitySet Name=\\"Products_by_Categories\\" EntityType=\\"NorthwindModel.Products_by_Category\\" />
                <EntitySet Name=\\"Sales_by_Categories\\" EntityType=\\"NorthwindModel.Sales_by_Category\\" />
                <EntitySet Name=\\"Sales_Totals_by_Amounts\\" EntityType=\\"NorthwindModel.Sales_Totals_by_Amount\\" />
                <EntitySet Name=\\"Summary_of_Sales_by_Quarters\\" EntityType=\\"NorthwindModel.Summary_of_Sales_by_Quarter\\" />
                <EntitySet Name=\\"Summary_of_Sales_by_Years\\" EntityType=\\"NorthwindModel.Summary_of_Sales_by_Year\\" />
                <AssociationSet Name=\\"FK_Products_Categories\\" Association=\\"NorthwindModel.FK_Products_Categories\\">
                    <End Role=\\"Categories\\" EntitySet=\\"Categories\\" />
                    <End Role=\\"Products\\" EntitySet=\\"Products\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Orders_Customers\\" Association=\\"NorthwindModel.FK_Orders_Customers\\">
                    <End Role=\\"Customers\\" EntitySet=\\"Customers\\" />
                    <End Role=\\"Orders\\" EntitySet=\\"Orders\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Employees_Employees\\" Association=\\"NorthwindModel.FK_Employees_Employees\\">
                    <End Role=\\"Employees\\" EntitySet=\\"Employees\\" />
                    <End Role=\\"Employees1\\" EntitySet=\\"Employees\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Orders_Employees\\" Association=\\"NorthwindModel.FK_Orders_Employees\\">
                    <End Role=\\"Employees\\" EntitySet=\\"Employees\\" />
                    <End Role=\\"Orders\\" EntitySet=\\"Orders\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Order_Details_Orders\\" Association=\\"NorthwindModel.FK_Order_Details_Orders\\">
                    <End Role=\\"Orders\\" EntitySet=\\"Orders\\" />
                    <End Role=\\"Order_Details\\" EntitySet=\\"Order_Details\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Order_Details_Products\\" Association=\\"NorthwindModel.FK_Order_Details_Products\\">
                    <End Role=\\"Products\\" EntitySet=\\"Products\\" />
                    <End Role=\\"Order_Details\\" EntitySet=\\"Order_Details\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Orders_Shippers\\" Association=\\"NorthwindModel.FK_Orders_Shippers\\">
                    <End Role=\\"Shippers\\" EntitySet=\\"Shippers\\" />
                    <End Role=\\"Orders\\" EntitySet=\\"Orders\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Products_Suppliers\\" Association=\\"NorthwindModel.FK_Products_Suppliers\\">
                    <End Role=\\"Suppliers\\" EntitySet=\\"Suppliers\\" />
                    <End Role=\\"Products\\" EntitySet=\\"Products\\" />
                </AssociationSet>
                <AssociationSet Name=\\"FK_Territories_Region\\" Association=\\"NorthwindModel.FK_Territories_Region\\">
                    <End Role=\\"Region\\" EntitySet=\\"Regions\\" />
                    <End Role=\\"Territories\\" EntitySet=\\"Territories\\" />
                </AssociationSet>
                <AssociationSet Name=\\"CustomerCustomerDemo\\" Association=\\"NorthwindModel.CustomerCustomerDemo\\">
                    <End Role=\\"CustomerDemographics\\" EntitySet=\\"CustomerDemographics\\" />
                    <End Role=\\"Customers\\" EntitySet=\\"Customers\\" />
                </AssociationSet>
                <AssociationSet Name=\\"EmployeeTerritories\\" Association=\\"NorthwindModel.EmployeeTerritories\\">
                    <End Role=\\"Employees\\" EntitySet=\\"Employees\\" />
                    <End Role=\\"Territories\\" EntitySet=\\"Territories\\" />
                </AssociationSet>
            </EntityContainer>
        </Schema>
    </edmx:DataServices>
</edmx:Edmx>",
    "state": "modified",
  },
  "webapp/manifest.json": Object {
    "contents": "{
  \\"_version\\": \\"1.12.0\\",
  \\"sap.app\\": {
    \\"id\\": \\"test.me\\",
    \\"type\\": \\"application\\",
    \\"i18n\\": \\"i18n/i18n.properties\\",
    \\"applicationVersion\\": {
      \\"version\\": \\"0.0.1\\"
    },
    \\"title\\": \\"{{appTitle}}\\",
    \\"description\\": \\"{{appDescription}}\\",
    \\"resources\\": \\"resources.json\\",
    \\"sourceTemplate\\": {
      \\"id\\": \\"test-template\\",
      \\"version\\": \\"1.2.3-test\\"
    },
    \\"dataSources\\": {
      \\"mainService\\": {
        \\"uri\\": \\"/V2/Northwind/Northwind.svc/\\",
        \\"type\\": \\"OData\\",
        \\"settings\\": {
          \\"annotations\\": [],
          \\"localUri\\": \\"localService/metadata.xml\\",
          \\"odataVersion\\": \\"2.0\\"
        }
      }
    }
  },
  \\"sap.ui\\": {
    \\"technology\\": \\"UI5\\",
    \\"icons\\": {
      \\"icon\\": \\"\\",
      \\"favIcon\\": \\"\\",
      \\"phone\\": \\"\\",
      \\"phone@2\\": \\"\\",
      \\"tablet\\": \\"\\",
      \\"tablet@2\\": \\"\\"
    },
    \\"deviceTypes\\": {
      \\"desktop\\": true,
      \\"tablet\\": true,
      \\"phone\\": true
    }
  },
  \\"sap.ui5\\": {
    \\"flexEnabled\\": true,
    \\"dependencies\\": {
      \\"minUI5Version\\": \\"1.60.0\\",
      \\"libs\\": {
        \\"sap.m\\": {},
        \\"sap.ui.core\\": {},
        \\"sap.ushell\\": {},
        \\"sap.f\\": {}
      }
    },
    \\"contentDensities\\": {
      \\"compact\\": true,
      \\"cozy\\": true
    },
    \\"models\\": {
      \\"i18n\\": {
        \\"type\\": \\"sap.ui.model.resource.ResourceModel\\",
        \\"settings\\": {
          \\"bundleName\\": \\"test.me.i18n.i18n\\"
        }
      },
      \\"\\": {
        \\"dataSource\\": \\"mainService\\",
        \\"preload\\": true,
        \\"settings\\": {}
      }
    },
    \\"resources\\": {
      \\"css\\": []
    },
    \\"routing\\": {
      \\"config\\": {
        \\"routerClass\\": \\"sap.m.routing.Router\\",
        \\"viewType\\": \\"XML\\",
        \\"viewPath\\": \\"test.me.view\\",
        \\"controlId\\": \\"app\\",
        \\"controlAggregation\\": \\"pages\\",
        \\"bypassed\\": {
          \\"target\\": [
            \\"notFound\\"
          ]
        },
        \\"async\\": true
      },
      \\"routes\\": [
        {
          \\"pattern\\": \\"\\",
          \\"name\\": \\"worklist\\",
          \\"target\\": [
            \\"worklist\\"
          ]
        },
        {
          \\"pattern\\": \\"Products/{objectId}\\",
          \\"name\\": \\"object\\",
          \\"target\\": [
            \\"object\\"
          ]
        }
      ],
      \\"targets\\": {
        \\"worklist\\": {
          \\"viewName\\": \\"Worklist\\",
          \\"viewId\\": \\"worklist\\",
          \\"viewLevel\\": 1,
          \\"title\\": \\"{i18n>worklistViewTitle}\\"
        },
        \\"object\\": {
          \\"viewName\\": \\"Object\\",
          \\"viewId\\": \\"object\\",
          \\"viewLevel\\": 2,
          \\"title\\": \\"{i18n>objectViewTitle}\\"
        },
        \\"objectNotFound\\": {
          \\"viewName\\": \\"ObjectNotFound\\",
          \\"viewId\\": \\"objectNotFound\\"
        },
        \\"notFound\\": {
          \\"viewName\\": \\"NotFound\\",
          \\"viewId\\": \\"notFound\\"
        }
      }
    },
    \\"rootView\\": {
      \\"viewName\\": \\"test.me.view.App\\",
      \\"type\\": \\"XML\\",
      \\"async\\": true,
      \\"id\\": \\"app\\"
    }
  }
}
",
    "state": "modified",
  },
  "webapp/model/formatter.js": Object {
    "contents": "sap.ui.define([], function () {
    \\"use strict\\";

    return {

        /**
         * Rounds the number unit value to 2 digits
         * @public
         * @param {string} sValue the number string to be rounded
         * @returns {string} sValue with 2 digits rounded
         */
        numberUnit : function (sValue) {
            if (!sValue) {
                return \\"\\";
            }
            return parseFloat(sValue).toFixed(2);
        }

    };

});",
    "state": "modified",
  },
  "webapp/model/models.js": Object {
    "contents": "sap.ui.define([
    \\"sap/ui/model/json/JSONModel\\",
    \\"sap/ui/Device\\"
], 
    /**
     * provide app-view type models (as in the first \\"V\\" in MVVC)
     * 
     * @param {typeof sap.ui.model.json.JSONModel} JSONModel
     * @param {typeof sap.ui.Device} Device
     * 
     * @returns {Function} createDeviceModel() for providing runtime info for the device the UI5 app is running on
     */
    function (JSONModel, Device) {
        \\"use strict\\";

        return {
            createDeviceModel: function () {
                var oModel = new JSONModel(Device);
                oModel.setDefaultBindingMode(\\"OneWay\\");
                return oModel;
        }
    };
});",
    "state": "modified",
  },
  "webapp/test/flpSandbox.html": Object {
    "contents": "<!DOCTYPE HTML>
<html lang=\\"en\\">
<!-- Copyright (c) 2015 SAP AG, All Rights Reserved -->
<head>
    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
    <meta charset=\\"UTF-8\\">
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">
    <title>{{appTitle}}</title>

    <!-- Bootstrap the unified shell in sandbox mode for standalone usage.

         The renderer is specified in the global Unified Shell configuration object \\"sap-ushell-config\\".

         The fiori2 renderer will render the shell header allowing, for instance,
         testing of additional application setting buttons.

         The navigation target resolution service is configured in a way that the empty URL hash is
         resolved to our own application.

         This example uses relative path references for the SAPUI5 resources and test-resources;
         it might be necessary to adapt them depending on the target runtime platform.
         The sandbox platform is restricted to development or demo use cases and must NOT be used
         for productive scenarios.
    -->
    <script type=\\"text/javascript\\">
        window[\\"sap-ushell-config\\"] = {
            defaultRenderer: \\"fiori2\\",
            bootstrapPlugins: {
                \\"RuntimeAuthoringPlugin\\": {
                    component: \\"sap.ushell.plugins.rta\\",
                    config: {
                        validateAppVersion: false
                    }
                }
            },
            renderers: {
                fiori2: {
                    componentData: {
                        config: {
                            search: \\"hidden\\"
                        }
                    }
                }
            },
            applications: {
                \\"testme-app\\": {
                    title: \\"My Test App\\",
                    description: \\"Test App Description\\",
                    additionalInformation: \\"SAPUI5.Component=test.me\\",
                    applicationType: \\"URL\\",
                    url: \\"../\\"
                }
            }
        };
    </script>

    <script src=\\"../test-resources/sap/ushell/bootstrap/sandbox.js\\" id=\\"sap-ushell-bootstrap\\"></script>
    <!-- Bootstrap the UI5 core library. 'data-sap-ui-frameOptions=\\"allow\\"'' is a NON-SECURE setting for test environments -->
    <script id=\\"sap-ui-bootstrap\\"
        src=\\"../resources/sap-ui-core.js\\"
        data-sap-ui-libs=\\"sap.m,sap.ui.core,sap.ushell\\"
        data-sap-ui-async=\\"true\\"
        data-sap-ui-preload=\\"async\\"
        data-sap-ui-theme=\\"sap_fiori_3\\"
        data-sap-ui-compatVersion=\\"edge\\"
        data-sap-ui-language=\\"en\\"
        data-sap-ui-resourceroots='{\\"test.me\\": \\"../\\"}'
        data-sap-ui-frameOptions=\\"allow\\">
    </script>
    <script id=\\"locate-reuse-libs\\" src=\\"../utils/locate-reuse-libs.js\\" data-sap-ui-manifest-uri=\\"../manifest.json\\">
    </script>
</head>

<!-- UI Content -->

<body class=\\"sapUiBody\\" id=\\"content\\">
</body>

</html>
",
    "state": "modified",
  },
  "webapp/utils/locate-reuse-libs.js": Object {
    "contents": "/*eslint-disable semi, no-console*/
(function (sap) {
    var getKeys = function (libOrComp, libOrCompKeysString) {
        // SAPUI5 delivered namespaces from https://ui5.sap.com/#/api/sap
        var ui5Libs = [
            \\"sap.apf\\",
            \\"sap.base\\",
            \\"sap.chart\\",
            \\"sap.collaboration\\",
            \\"sap.f\\",
            \\"sap.fe\\",
            \\"sap.fileviewer\\",
            \\"sap.gantt\\",
            \\"sap.landvisz\\",
            \\"sap.m\\",
            \\"sap.ndc\\",
            \\"sap.ovp\\",
            \\"sap.rules\\",
            \\"sap.suite\\",
            \\"sap.tnt\\",
            \\"sap.ui\\",
            \\"sap.uiext\\",
            \\"sap.ushell\\",
            \\"sap.uxap\\",
            \\"sap.viz\\",
            \\"sap.webanalytics\\",
            \\"sap.zen\\"
        ];
        Object.keys(libOrComp).forEach(function (libOrCompKey) {
            // ignore libs or Components that start with SAPUI5 delivered namespaces
            if (
                !ui5Libs.some(function (substring) {
                    return libOrCompKey === substring || libOrCompKey.startsWith(substring + \\".\\");
                })
            ) {
                if (libOrCompKeysString.length > 0) {
                    libOrCompKeysString = libOrCompKeysString + \\",\\" + libOrCompKey;
                } else {
                    libOrCompKeysString = libOrCompKey;
                }
            }
        });
        return libOrCompKeysString;
    };

    var updateManifest = function (manifest) {
        var result = \\"\\";
        if (manifest) {
            if (manifest[\\"sap.ui5\\"] && manifest[\\"sap.ui5\\"].dependencies) {
                if (manifest[\\"sap.ui5\\"].dependencies.libs) {
                    result = getKeys(manifest[\\"sap.ui5\\"].dependencies.libs, result);
                }
                if (manifest[\\"sap.ui5\\"].dependencies.components) {
                    result = getKeys(manifest[\\"sap.ui5\\"].dependencies.components, result);
                }
            }
            if (manifest[\\"sap.ui5\\"] && manifest[\\"sap.ui5\\"].componentUsages) {
                result = getKeys(manifest[\\"sap.ui5\\"].componentUsages, result);
            }
        }
        return result;
    };

    var fioriToolsGetManifestLibs = function (manifestPath) {
        var url = manifestPath;
        return new Promise(function (resolve, reject) {
            $.ajax(url)
                .done(function (manifest) {
                    resolve(updateManifest(manifest));
                })
                .fail(function () {
                    reject(new Error(\\"Could not fetch manifest at '\\" + manifestPath));
                });
        });
    };

    var updateModuleDefinition = function (data) {
        if (data) {
            Object.keys(data).forEach(function (moduleDefinitionKey) {
                var moduleDefinition = data[moduleDefinitionKey];
                if (moduleDefinition && moduleDefinition.dependencies) {
                    moduleDefinition.dependencies.forEach(function (dependency) {
                        if (dependency.url && dependency.url.length > 0 && dependency.type === \\"UI5LIB\\") {
                            jQuery.sap.log.info(
                                \\"Registering Library \\" + dependency.componentId + \\" from server \\" + dependency.url
                            );
                            jQuery.sap.registerModulePath(dependency.componentId, dependency.url);
                        }
                    });
                }
            });
        }
    };

    /**
     * Registers the module paths for dependencies of the given component.
     * @param {string} manifestPath The the path to the app manifest path
     * for which the dependencies should be registered.
     * @returns {Promise} A promise which is resolved when the ajax request for
     * the app-index was successful and the module paths were registered.
     */
    sap.registerComponentDependencyPaths = function (manifestPath) {
        /*eslint-disable semi, consistent-return*/
        return fioriToolsGetManifestLibs(manifestPath).then(function (libs) {
            if (libs && libs.length > 0) {
                var url = \\"/sap/bc/ui2/app_index/ui5_app_info?id=\\" + libs;
                var sapClient = jQuery.sap.getUriParameters().get(\\"sap-client\\");
                if (sapClient && sapClient.length === 3) {
                    url = url + \\"&sap-client=\\" + sapClient;
                }
                return $.ajax(url).done(updateModuleDefinition);
            }
        });
    };
})(sap);

/*eslint-disable sap-browser-api-warning, sap-no-dom-access*/
var scripts = document.getElementsByTagName(\\"script\\");
var currentScript = document.getElementById(\\"locate-reuse-libs\\");
if (!currentScript) {
    currentScript = document.currentScript;
}
var manifestUri = currentScript.getAttribute(\\"data-sap-ui-manifest-uri\\");
var componentName = currentScript.getAttribute(\\"data-sap-ui-componentName\\");
var useMockserver = currentScript.getAttribute(\\"data-sap-ui-use-mockserver\\");
var bundleResources = function () {
    jQuery.sap.require(\\"jquery.sap.resources\\");
    var sLocale = sap.ui.getCore().getConfiguration().getLanguage();
    var oBundle = jQuery.sap.resources({
        url: \\"i18n/i18n.properties\\",
        locale: sLocale
    });
    document.title = oBundle.getText(\\"appTitle\\");
};
sap.registerComponentDependencyPaths(manifestUri)
    .catch(function (error) {
        jQuery.sap.log.error(error);
    })
    .finally(function () {
        // setting the app title with internationalization
        sap.ui.getCore().attachInit(bundleResources);

        if (componentName && componentName.length > 0) {
            if (useMockserver && useMockserver === \\"true\\") {
                sap.ui.getCore().attachInit(function () {
                    sap.ui.require([componentName.replace(/\\\\./g, \\"/\\") + \\"/localService/mockserver\\"], function (server) {
                        // set up test service for local testing
                        server.init();
                        // initialize the ushell sandbox component
                        sap.ushell.Container.createRenderer().placeAt(\\"content\\");
                    });
                });
            } else {
                // Requiring the ComponentSupport module automatically executes the component initialisation for all declaratively defined components
                sap.ui.require([\\"sap/ui/core/ComponentSupport\\"]);

                // setting the app title with the i18n text
                sap.ui.getCore().attachInit(bundleResources);
            }
        } else {
            sap.ui.getCore().attachInit(function () {
                // initialize the ushell sandbox component
                sap.ushell.Container.createRenderer().placeAt(\\"content\\");
            });
        }
    });

sap.registerComponentDependencyPaths(manifestUri);
",
    "state": "modified",
  },
  "webapp/view/App.view.xml": Object {
    "contents": "<mvc:View
    controllerName=\\"test.me.controller.App\\"
    displayBlock=\\"true\\"
    xmlns=\\"sap.m\\"
    xmlns:mvc=\\"sap.ui.core.mvc\\">

    <Shell>
        <App
            id=\\"app\\"
            busy=\\"{appView>/busy}\\"
            busyIndicatorDelay=\\"{appView>/delay}\\"/>
    </Shell>

</mvc:View>",
    "state": "modified",
  },
  "webapp/view/NotFound.view.xml": Object {
    "contents": "<mvc:View
    controllerName=\\"test.me.controller.NotFound\\"
    xmlns=\\"sap.m\\"
    xmlns:mvc=\\"sap.ui.core.mvc\\">

    <MessagePage
        title=\\"{i18n>notFoundTitle}\\"
        text=\\"{i18n>notFoundText}\\"
        icon=\\"sap-icon://document\\"
        id=\\"page\\"
        description=\\"\\">
        <customDescription>
            <Link id=\\"link\\" text=\\"{i18n>backToWorklist}\\" press=\\".onLinkPressed\\"/>
        </customDescription>
    </MessagePage>

</mvc:View>",
    "state": "modified",
  },
  "webapp/view/Object.view.xml": Object {
    "contents": "<mvc:View
    controllerName=\\"test.me.controller.Object\\"
    xmlns=\\"sap.m\\"
    xmlns:mvc=\\"sap.ui.core.mvc\\"
    xmlns:semantic=\\"sap.f.semantic\\">

    <semantic:SemanticPage
        id=\\"page\\"
        headerPinnable=\\"false\\"
        toggleHeaderOnTitleClick=\\"false\\"
        busy=\\"{objectView>/busy}\\"
        busyIndicatorDelay=\\"{objectView>/delay}\\">

        <semantic:titleHeading>
            <Title
                text=\\"{ProductName}\\"
                level=\\"H2\\"/>
        </semantic:titleHeading>

        <semantic:headerContent>
            <ObjectNumber
                number=\\"{
                    path: 'UnitsInStock',
                    formatter: '.formatter.numberUnit'
                }\\"
                unit=\\"{QuantityPerUnit}\\" />
        </semantic:headerContent>

        <semantic:sendEmailAction>
            <semantic:SendEmailAction id=\\"shareEmail\\" press=\\".onShareEmailPress\\"/>
        </semantic:sendEmailAction>

    </semantic:SemanticPage>

</mvc:View>",
    "state": "modified",
  },
  "webapp/view/ObjectNotFound.view.xml": Object {
    "contents": "<mvc:View
    controllerName=\\"test.me.controller.NotFound\\"
    xmlns=\\"sap.m\\"
    xmlns:mvc=\\"sap.ui.core.mvc\\">

    <MessagePage
        title=\\"{i18n>objectTitle}\\"
        text=\\"{i18n>noObjectFoundText}\\"
        icon=\\"sap-icon://product\\"
        description=\\"\\"
        id=\\"page\\">
        <customDescription>
            <Link id=\\"link\\" text=\\"{i18n>backToWorklist}\\" press=\\".onLinkPressed\\" />
        </customDescription>
    </MessagePage>

</mvc:View>",
    "state": "modified",
  },
  "webapp/view/Worklist.view.xml": Object {
    "contents": "<mvc:View
    controllerName=\\"test.me.controller.Worklist\\"
    xmlns=\\"sap.m\\"
    xmlns:mvc=\\"sap.ui.core.mvc\\"
    xmlns:semantic=\\"sap.f.semantic\\">

    <semantic:SemanticPage
        id=\\"page\\"
        headerPinnable=\\"false\\"
        toggleHeaderOnTitleClick=\\"false\\">

        <semantic:titleHeading>
            <Title
                text=\\"{i18n>worklistTitle}\\"
                level=\\"H2\\"/>
        </semantic:titleHeading>

        <semantic:content>
            <Table
                id=\\"table\\"
                width=\\"auto\\"
                items=\\"{
                    path: '/Products',
                    sorter: {
                        path: 'ProductName',
                        descending: false
                    }
                }\\"
                noDataText=\\"{worklistView>/tableNoDataText}\\"
                busyIndicatorDelay=\\"{worklistView>/tableBusyDelay}\\"
                growing=\\"true\\"
                growingScrollToLoad=\\"true\\"
                updateFinished=\\".onUpdateFinished\\">

                <headerToolbar>
                    <OverflowToolbar>
                        <Title
                            id=\\"tableHeader\\"
                            text=\\"{worklistView>/worklistTableTitle}\\"
                            level=\\"H3\\"/>
                        <ToolbarSpacer />
                        <SearchField
                            id=\\"searchField\\"
                            tooltip=\\"{i18n>worklistSearchTooltip}\\"
                            search=\\".onSearch\\">
                            <layoutData>
                                <OverflowToolbarLayoutData
                                    maxWidth=\\"200px\\"
                                    priority=\\"NeverOverflow\\"/>
                            </layoutData>
                        </SearchField>
                    </OverflowToolbar>
                </headerToolbar>

                <columns>
                    <Column id=\\"nameColumn\\">
                        <Text text=\\"{i18n>tableNameColumnTitle}\\" id=\\"nameColumnTitle\\"/>
                    </Column>
                    <Column id=\\"unitNumberColumn\\" hAlign=\\"End\\">
                        <Text text=\\"{i18n>tableUnitNumberColumnTitle}\\" id=\\"unitNumberColumnTitle\\"/>
                    </Column>
                </columns>

                <items>
                    <ColumnListItem
                        type=\\"Navigation\\"
                        press=\\".onPress\\">
                        <cells>
                            <ObjectIdentifier
                                title=\\"{ProductName}\\"/>
                            <ObjectNumber
                                number=\\"{
                                    path: 'UnitsInStock',
                                    formatter: '.formatter.numberUnit'
                                }\\"
                                unit=\\"{QuantityPerUnit}\\" />
                        </cells>
                    </ColumnListItem>
                </items>
            </Table>
        </semantic:content>

        <semantic:sendEmailAction>
            <semantic:SendEmailAction id=\\"shareEmail\\" press=\\".onShareEmailPress\\"/>
        </semantic:sendEmailAction>

    </semantic:SemanticPage>

</mvc:View>",
    "state": "modified",
  },
}
`;
